{"nodes":[{"pos":[1585,1632],"content":"ReadOnlyDictionary<TKey,TValue>+ValueCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyDictionary&lt;TKey,TValue&gt;+ValueCollection","pos":[0,47],"source":"ReadOnlyDictionary<TKey,TValue>+ValueCollection"}]},{"pos":[2317,2351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2388,2422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3248,3270],"content":"CopyTo(TValue[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TValue[],Int32)","pos":[0,22]}]},{"pos":[3706,3740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3806,3840],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4089,4094],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[4455,4489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4754,4769],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[5247,5281],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5642,5688],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[6160,6194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6551,6591],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[7362,7408],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[7885,7919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7978,8012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8379,8417],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[8892,8926],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9293,9339],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[9814,9848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9907,9941],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10322,10372],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[10865,10899],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10960,10994],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11337,11382],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[11859,11893],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12224,12263],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[12723,12757],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13098,13144],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[13657,13691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13802,13815],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[14023,14045],"content":"CopyTo(TValue[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TValue[],Int32)","pos":[0,22]}]},{"pos":[14301,14307],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[14417,14422],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14657,14662],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[14895,14900],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15143,15158],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[15465,15484],"content":"IEnumerator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<TValue>"},{"pos":[15816,15862],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[16166,16172],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[16449,16489],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[16968,17014],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[17331,17338],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17444,17450],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[17732,17770],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[18071,18078],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18369,18415],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[18732,18739],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18845,18851],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[19140,19190],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[19513,19518],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[19631,19636],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19911,19956],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[20271,20278],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20551,20590],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[20892,20898],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21174,21220],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[21565,21576],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  id: ReadOnlyDictionary`2.ValueCollection\n  children:\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.Count\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: ReadOnlyDictionary<TKey,TValue>+ValueCollection\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Count = {Count}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))]\n\n      public sealed class ReadOnlyDictionary<TKey,TValue>.ValueCollection : System.Collections.Generic.ICollection<TValue>, System.Collections.Generic.IEnumerable<TValue>, System.Collections.Generic.IReadOnlyCollection<TValue>, System.Collections.ICollection\n    typeParameters:\n    - id: TKey\n      description: Parameter description to be filled\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<TValue>\n  - System.Collections.Generic.IEnumerable<TValue>\n  - System.Collections.Generic.IReadOnlyCollection<TValue>\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)\n  id: CopyTo(`1[],System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: CopyTo(TValue[],Int32)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public void CopyTo (TValue[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: TValue[]\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.Count\n  id: Count\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.Count\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<TValue> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{TValue}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)\n  id: System#Collections#Generic#ICollection{TValue}#Add(`1)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<TValue>.Add (TValue item);\n    parameters:\n    - id: item\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear\n  id: System#Collections#Generic#ICollection{TValue}#Clear\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<TValue>.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  id: System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool ICollection<TValue>.Contains (TValue item);\n    parameters:\n    - id: item\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  id: System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.Generic.ICollection<TValue>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  id: System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool ICollection<TValue>.Remove (TValue item);\n    parameters:\n    - id: item\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: CopyTo(TValue[],Int32)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.Count\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: Count\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.Count\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<TValue>\n  nameWithType: IEnumerator<TValue>\n  fullName: System.Collections.Generic.IEnumerator<TValue>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n"}