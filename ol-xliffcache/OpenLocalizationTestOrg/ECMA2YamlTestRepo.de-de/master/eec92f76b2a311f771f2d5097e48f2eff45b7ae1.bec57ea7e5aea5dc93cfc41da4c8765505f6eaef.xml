{"nodes":[{"pos":[13155,13166],"content":"TaskFactory","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory","pos":[0,11]}]},{"pos":[13832,13845],"content":"TaskFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory()","pos":[0,13]}]},{"pos":[14353,14383],"content":"TaskFactory(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(CancellationToken)","pos":[0,30]}]},{"pos":[14812,14846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15107,15133],"content":"TaskFactory(TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(TaskScheduler)","pos":[0,26]}]},{"pos":[15542,15576],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15943,15999],"content":"TaskFactory(TaskCreationOptions,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(TaskCreationOptions,TaskContinuationOptions)","pos":[0,56]}]},{"pos":[16560,16594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16703,16737],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17248,17336],"content":"TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)","pos":[0,88]}]},{"pos":[18057,18091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18192,18226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18335,18369],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18458,18492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18699,18716],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[19078,19112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19323,19342],"content":"ContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinuationOptions","pos":[0,19]}]},{"pos":[19734,19768],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20123,20159],"content":"ContinueWhenAll(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task[],Action<Task>)"},{"pos":[20651,20685],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20789,20823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20895,20929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21418,21472],"content":"ContinueWhenAll(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task[],Action<Task>,CancellationToken)"},{"pos":[22054,22088],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22192,22226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22321,22355],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22427,22461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22974,23034],"content":"ContinueWhenAll(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task[],Action<Task>,TaskContinuationOptions)"},{"pos":[23642,23676],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23780,23814],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23923,23957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24029,24063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24720,24812],"content":"ContinueWhenAll(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[25586,25620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25724,25758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25853,25887],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25996,26030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26119,26153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26225,26259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26704,26776],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)"},{"pos":[27414,27448],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27571,27605],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27677,27711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28245,28335],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)"},{"pos":[29063,29097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29220,29254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29349,29383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29455,29489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30047,30143],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)"},{"pos":[30897,30931],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31054,31088],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31197,31231],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31303,31337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32039,32167],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[33087,33121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33244,33278],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33373,33407],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33516,33550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33639,33673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33745,33779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34227,34269],"content":"ContinueWhenAll(Task[],Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;)","pos":[0,42],"source":"ContinueWhenAll(Task[],Func<Task,TResult>)"}]},{"pos":[34799,34833],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34945,34979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35053,35087],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35595,35655],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,60],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)"}]},{"pos":[36275,36309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36421,36455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36550,36584],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36658,36692],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37224,37290],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,66],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[37936,37970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38082,38116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38225,38259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38333,38367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39043,39141],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,98],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[39953,39987],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40099,40133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40228,40262],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40371,40405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40494,40528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40602,40636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41094,41172],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)"},{"pos":[41847,41881],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42012,42046],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42120,42154],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42700,42796],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)"},{"pos":[43561,43595],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43726,43760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43855,43889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43963,43997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44567,44669],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)"},{"pos":[45460,45494],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45625,45659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45768,45802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45876,45910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46624,46758],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[47715,47749],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47880,47914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48009,48043],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48152,48186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48275,48309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48383,48417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48859,48895],"content":"ContinueWhenAny(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task[],Action<Task>)"},{"pos":[49385,49419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49523,49557],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49629,49663],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50148,50202],"content":"ContinueWhenAny(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task[],Action<Task>,CancellationToken)"},{"pos":[50782,50816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50920,50954],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51049,51083],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51155,51189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51698,51758],"content":"ContinueWhenAny(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task[],Action<Task>,TaskContinuationOptions)"},{"pos":[52364,52398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52502,52536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52645,52679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52751,52785],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53438,53530],"content":"ContinueWhenAny(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[54302,54336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54440,54474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54569,54603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54712,54746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54835,54869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54941,54975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55416,55488],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)"},{"pos":[56124,56158],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56281,56315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56387,56421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56951,57041],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)"},{"pos":[57767,57801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57924,57958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58053,58087],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58159,58193],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58747,58843],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)"},{"pos":[59595,59629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59752,59786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59895,59929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60001,60035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60733,60861],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[61779,61813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61936,61970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62065,62099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62208,62242],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62331,62365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62437,62471],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62915,62957],"content":"ContinueWhenAny(Task[],Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;)","pos":[0,42],"source":"ContinueWhenAny(Task[],Func<Task,TResult>)"}]},{"pos":[63485,63519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63631,63665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63739,63773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64277,64337],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,60],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)"}]},{"pos":[64955,64989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65101,65135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65230,65264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65338,65372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65900,65966],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,66],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[66610,66644],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66756,66790],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66899,66933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67007,67041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67713,67811],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,98],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[68621,68655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68767,68801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68896,68930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69039,69073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69162,69196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69270,69304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69758,69836],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)"},{"pos":[70509,70543],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70674,70708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70782,70816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71358,71454],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)"},{"pos":[72217,72251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72382,72416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72511,72545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72619,72653],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73219,73321],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)"},{"pos":[74110,74144],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74275,74309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74418,74452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74526,74560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75270,75404],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[76359,76393],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76524,76558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76653,76687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76796,76830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76919,76953],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77027,77061],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77355,77370],"content":"CreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"CreationOptions","pos":[0,15]}]},{"pos":[77742,77776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78079,78123],"content":"FromAsync(IAsyncResult,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FromAsync(IAsyncResult,Action<IAsyncResult>)"},{"pos":[78584,78618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78705,78739],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78811,78845],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79330,79408],"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,Object)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object)"},{"pos":[80026,80060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80147,80181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80243,80277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80349,80383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80830,80894],"content":"FromAsync(IAsyncResult,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions)"},{"pos":[81455,81489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81576,81610],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81711,81745],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81817,81851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82422,82520],"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object,TaskCreationOptions)"},{"pos":[83238,83272],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83359,83393],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83455,83489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83590,83624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83696,83730],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84251,84329],"content":"FromAsync(IAsyncResult,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions,TaskScheduler)"},{"pos":[84966,85000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85087,85121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85222,85256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85345,85379],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85451,85485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85992,86082],"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,Object)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object)"},{"pos":[86755,86789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86876,86910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86963,86997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87059,87093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87165,87199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87799,87909],"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object,TaskCreationOptions)"},{"pos":[88682,88716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88803,88837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88890,88924],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88986,89020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89121,89155],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89227,89261],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89639,89689],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;)","pos":[0,50],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)"}]},{"pos":[90186,90220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90313,90347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90421,90455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90959,91043],"content":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object)","pos":[0,84],"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)"}]},{"pos":[91697,91731],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91824,91858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91920,91954],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92028,92062],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92528,92598],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions)","pos":[0,70],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)"}]},{"pos":[93195,93229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93322,93356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93457,93491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93565,93599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94189,94293],"content":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object,TaskCreationOptions)","pos":[0,104],"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)"}]},{"pos":[95047,95081],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95174,95208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95270,95304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95405,95439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95513,95547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96087,96171],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions,TaskScheduler)","pos":[0,84],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)"}]},{"pos":[96844,96878],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96971,97005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97106,97140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97229,97263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97337,97371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97903,98005],"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,TArg2,Object)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object)"},{"pos":[98732,98766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98853,98887],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98940,98974],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99027,99061],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99123,99157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99229,99263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99885,100007],"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,TArg2,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object,TaskCreationOptions)"},{"pos":[100834,100868],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[100955,100989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101042,101076],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101129,101163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101225,101259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101360,101394],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101466,101500],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[102024,102120],"content":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object)","pos":[0,96],"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)"}]},{"pos":[102828,102862],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[102955,102989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103042,103076],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103138,103172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103246,103280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103892,104008],"content":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object,TaskCreationOptions)","pos":[0,116],"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)"}]},{"pos":[104816,104850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[104943,104977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105030,105064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105126,105160],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105261,105295],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105369,105403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105957,106071],"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,TArg2,TArg3,Object)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object)"},{"pos":[106852,106886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[106973,107007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107060,107094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107147,107181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107234,107268],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107330,107364],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107436,107470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[108114,108248],"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)"},{"pos":[109129,109163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109250,109284],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109337,109371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109424,109458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109511,109545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109607,109641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109742,109776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109848,109882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[110428,110536],"content":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object)","pos":[0,108],"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)"}]},{"pos":[111298,111332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111425,111459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111512,111546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111599,111633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111695,111729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111803,111837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[112471,112599],"content":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object,TaskCreationOptions)","pos":[0,128],"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)"}]},{"pos":[113461,113495],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[113588,113622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[113675,113709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[113762,113796],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[113858,113892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[113993,114027],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114101,114135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114699,114819],"content":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object)","pos":[0,120],"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)"}]},{"pos":[115635,115669],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[115762,115796],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[115849,115883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[115936,115970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[116023,116057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[116119,116153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[116227,116261],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[116917,117057],"content":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","pos":[0,140],"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)"}]},{"pos":[117973,118007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118100,118134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118187,118221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118274,118308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118361,118395],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118457,118491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118592,118626],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118700,118734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119010,119019],"content":"Scheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"Scheduler","pos":[0,9]}]},{"pos":[119361,119395],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119614,119630],"content":"StartNew(Action)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Action)","pos":[0,16]}]},{"pos":[119980,120014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[120086,120120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[120466,120500],"content":"StartNew(Action,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Action,CancellationToken)","pos":[0,34]}]},{"pos":[120940,120974],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[121069,121103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[121175,121209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[121571,121607],"content":"StartNew(Action,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Action,TaskCreationOptions)","pos":[0,36]}]},{"pos":[122057,122091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[122192,122226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[122298,122332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[122666,122697],"content":"StartNew(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object)","needQuote":true,"needEscape":true,"source":"StartNew(Action<Object>,Object)"},{"pos":[123114,123148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[123210,123244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[123316,123350],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[123754,123803],"content":"StartNew(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,CancellationToken)","needQuote":true,"needEscape":true,"source":"StartNew(Action<Object>,Object,CancellationToken)"},{"pos":[124310,124344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124406,124440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124535,124569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124641,124675],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[125095,125146],"content":"StartNew(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"StartNew(Action<Object>,Object,TaskCreationOptions)"},{"pos":[125663,125697],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[125759,125793],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[125894,125928],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126000,126034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126540,126608],"content":"StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)","pos":[0,68]}]},{"pos":[127224,127258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127353,127387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127488,127522],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127611,127645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127717,127751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128315,128398],"content":"StartNew(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"StartNew(Action<Object>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)"},{"pos":[129081,129115],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129177,129211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129306,129340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129441,129475],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129564,129598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129670,129704],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129992,130015],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>)"},{"pos":[130415,130449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[130523,130557],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[130910,130947],"content":"StartNew(Func<Object,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object)","pos":[0,37],"source":"StartNew(Func<Object,TResult>,Object)"}]},{"pos":[131410,131444],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[131506,131540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[131614,131648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[132015,132056],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,CancellationToken)"},{"pos":[132546,132580],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[132675,132709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[132783,132817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[133200,133243],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,TaskCreationOptions)"},{"pos":[133743,133777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[133878,133912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[133986,134020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[134443,134498],"content":"StartNew(Func<Object,TResult>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,CancellationToken)","pos":[0,55],"source":"StartNew(Func<Object,TResult>,Object,CancellationToken)"}]},{"pos":[135051,135085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[135147,135181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[135276,135310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[135384,135418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[135857,135914],"content":"StartNew(Func<Object,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,TaskCreationOptions)","pos":[0,57],"source":"StartNew(Func<Object,TResult>,Object,TaskCreationOptions)"}]},{"pos":[136477,136511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[136573,136607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[136708,136742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[136816,136850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[137377,137452],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)"},{"pos":[138118,138152],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[138247,138281],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[138382,138416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[138505,138539],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[138613,138647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[139230,139319],"content":"StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","pos":[0,89],"source":"StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)"}]},{"pos":[140048,140082],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140144,140178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140273,140307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140408,140442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140531,140565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140639,140673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140850,140863],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[140985,140998],"content":"TaskFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory()","pos":[0,13]}]},{"pos":[141259,141289],"content":"TaskFactory(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(CancellationToken)","pos":[0,30]}]},{"pos":[141524,141541],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[141782,141808],"content":"TaskFactory(TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(TaskScheduler)","pos":[0,26]}]},{"pos":[142043,142056],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[142348,142404],"content":"TaskFactory(TaskCreationOptions,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(TaskCreationOptions,TaskContinuationOptions)","pos":[0,56]}]},{"pos":[142705,142724],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[142931,142954],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[143338,143426],"content":"TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)","pos":[0,88]}]},{"pos":[143777,143794],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[143987,144006],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[144213,144236],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[144441,144454],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[144667,144684],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[144893,144910],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[145127,145146],"content":"ContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinuationOptions","pos":[0,19]}]},{"pos":[145377,145400],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[145707,145743],"content":"ContinueWhenAll(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task[],Action<Task>)"},{"pos":[145989,145993],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[146151,146155],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[146314,146326],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[146655,146709],"content":"ContinueWhenAll(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task[],Action<Task>,CancellationToken)"},{"pos":[146991,146995],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[147153,147157],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[147316,147328],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[147512,147529],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[147865,147925],"content":"ContinueWhenAll(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task[],Action<Task>,TaskContinuationOptions)"},{"pos":[148219,148223],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[148381,148385],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[148544,148556],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[148758,148781],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[149207,149299],"content":"ContinueWhenAll(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[149657,149661],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[149819,149823],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[149982,149994],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[150178,150195],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[150392,150415],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[150620,150633],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[150933,151005],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)"},{"pos":[151323,151327],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[151504,151527],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[151743,151774],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TAntecedentResult>>"},{"pos":[152154,152244],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)"},{"pos":[152598,152602],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[152779,152802],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[153018,153049],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TAntecedentResult>>"},{"pos":[153271,153288],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[153637,153733],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)"},{"pos":[154099,154103],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[154280,154303],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[154519,154550],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TAntecedentResult>>"},{"pos":[154790,154813],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[155252,155380],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[155810,155814],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[155991,156014],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[156230,156261],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TAntecedentResult>>"},{"pos":[156483,156500],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[156697,156720],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[156925,156938],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[157230,157272],"content":"ContinueWhenAll(Task[],Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;)","pos":[0,42],"source":"ContinueWhenAll(Task[],Func<Task,TResult>)"}]},{"pos":[157532,157545],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[157721,157725],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[157889,157907],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[158253,158313],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,60],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)"}]},{"pos":[158609,158622],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[158798,158802],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[158966,158984],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[159180,159197],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[159538,159604],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,66],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[159912,159925],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[160101,160105],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[160269,160287],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[160501,160524],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[160955,161053],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,98],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[161425,161438],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[161614,161618],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[161782,161800],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[161996,162013],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[162210,162233],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[162438,162451],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[162753,162831],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)"},{"pos":[163163,163176],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[163371,163394],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[163615,163652],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[164046,164142],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)"},{"pos":[164510,164523],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[164718,164741],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[164962,164999],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[165233,165250],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[165601,165703],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)"},{"pos":[166083,166096],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[166291,166314],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[166535,166572],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[166824,166847],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[167288,167422],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[167866,167879],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[168074,168097],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[168318,168355],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[168589,168606],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[168803,168826],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[169031,169044],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[169329,169365],"content":"ContinueWhenAny(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task[],Action<Task>)"},{"pos":[169611,169615],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[169773,169777],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[169936,169948],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[170273,170327],"content":"ContinueWhenAny(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task[],Action<Task>,CancellationToken)"},{"pos":[170609,170613],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[170771,170775],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[170934,170946],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[171128,171145],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[171479,171539],"content":"ContinueWhenAny(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task[],Action<Task>,TaskContinuationOptions)"},{"pos":[171833,171837],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[171995,171999],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[172158,172170],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[172370,172393],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[172817,172909],"content":"ContinueWhenAny(Task[],Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[173267,173271],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[173429,173433],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[173592,173604],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[173786,173803],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[174000,174023],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[174228,174241],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[174539,174611],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)"},{"pos":[174929,174933],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[175110,175133],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[175349,175380],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TAntecedentResult>>"},{"pos":[175756,175846],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)"},{"pos":[176200,176204],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[176381,176404],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[176620,176651],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TAntecedentResult>>"},{"pos":[176871,176888],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[177235,177331],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)"},{"pos":[177697,177701],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[177878,177901],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[178117,178148],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TAntecedentResult>>"},{"pos":[178386,178409],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[178846,178974],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Action&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[179404,179408],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[179585,179608],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[179824,179855],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TAntecedentResult>>"},{"pos":[180075,180092],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[180289,180312],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[180517,180530],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[180820,180862],"content":"ContinueWhenAny(Task[],Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;)","pos":[0,42],"source":"ContinueWhenAny(Task[],Func<Task,TResult>)"}]},{"pos":[181122,181135],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[181311,181315],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[181479,181497],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[181839,181899],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,60],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)"}]},{"pos":[182195,182208],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[182384,182388],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[182552,182570],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[182764,182781],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[183120,183186],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,66],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[183494,183507],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[183683,183687],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[183851,183869],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[184081,184104],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[184533,184631],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,98],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[185003,185016],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[185192,185196],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[185360,185378],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[185572,185589],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[185786,185809],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[186014,186027],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[186327,186405],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)"},{"pos":[186737,186750],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[186945,186968],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[187189,187226],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[187616,187712],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)"},{"pos":[188080,188093],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[188288,188311],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[188532,188569],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[188801,188818],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[189167,189269],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)"},{"pos":[189649,189662],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[189857,189880],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[190101,190138],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[190388,190411],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[190850,190984],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[191428,191441],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[191636,191659],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[191880,191917],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[192149,192166],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[192363,192386],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[192591,192604],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[192815,192830],"content":"CreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"CreationOptions","pos":[0,15]}]},{"pos":[193049,193068],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[193341,193385],"content":"FromAsync(IAsyncResult,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FromAsync(IAsyncResult,Action<IAsyncResult>)"},{"pos":[193647,193651],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[193785,193797],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[193946,193966],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[194294,194372],"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,Object)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object)"},{"pos":[194702,194706],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[194887,194926],"content":"Func<AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;AsyncCallback,Object,IAsyncResult&gt;","pos":[0,39],"source":"Func<AsyncCallback,Object,IAsyncResult>"}]},{"pos":[195150,195170],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[195321,195327],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[195601,195665],"content":"FromAsync(IAsyncResult,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions)"},{"pos":[195967,195971],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[196105,196117],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[196266,196286],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[196482,196501],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[196879,196977],"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object,TaskCreationOptions)"},{"pos":[197347,197351],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[197532,197571],"content":"Func<AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;AsyncCallback,Object,IAsyncResult&gt;","pos":[0,39],"source":"Func<AsyncCallback,Object,IAsyncResult>"}]},{"pos":[197795,197815],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[197966,197972],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[198133,198152],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[198505,198583],"content":"FromAsync(IAsyncResult,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions,TaskScheduler)"},{"pos":[198913,198917],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[199051,199063],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[199212,199232],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[199428,199447],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[199644,199657],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[199991,200081],"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,Object)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object)"},{"pos":[200435,200439],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[200626,200671],"content":"Func<TArg1,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,45],"source":"Func<TArg1,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[200907,200927],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[201065,201070],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[201177,201183],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[201530,201640],"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object,TaskCreationOptions)"},{"pos":[202034,202038],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[202225,202270],"content":"Func<TArg1,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,45],"source":"Func<TArg1,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[202506,202526],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[202664,202669],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[202776,202782],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[202943,202962],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[203240,203290],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;)","pos":[0,50],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)"}]},{"pos":[203566,203579],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[203731,203743],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[203897,203923],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[204268,204352],"content":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object)","pos":[0,84],"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)"}]},{"pos":[204696,204709],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[204908,204947],"content":"Func<AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;AsyncCallback,Object,IAsyncResult&gt;","pos":[0,39],"source":"Func<AsyncCallback,Object,IAsyncResult>"}]},{"pos":[205176,205202],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[205365,205371],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[205650,205720],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions)","pos":[0,70],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)"}]},{"pos":[206036,206049],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[206201,206213],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[206367,206393],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[206601,206620],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[207003,207107],"content":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object,TaskCreationOptions)","pos":[0,104],"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)"}]},{"pos":[207491,207504],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[207703,207742],"content":"Func<AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;AsyncCallback,Object,IAsyncResult&gt;","pos":[0,39],"source":"Func<AsyncCallback,Object,IAsyncResult>"}]},{"pos":[207971,207997],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[208160,208166],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[208327,208346],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[208704,208788],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions,TaskScheduler)","pos":[0,84],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)"}]},{"pos":[209132,209145],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[209297,209309],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[209463,209489],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[209697,209716],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[209913,209926],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[210268,210370],"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,TArg2,Object)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object)"},{"pos":[210748,210752],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[210945,210996],"content":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,51],"source":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[211244,211264],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[211402,211407],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[211501,211506],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[211613,211619],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[211974,212096],"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,TArg2,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object,TaskCreationOptions)"},{"pos":[212514,212518],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[212711,212762],"content":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,51],"source":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[213010,213030],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[213168,213173],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[213267,213272],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[213379,213385],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[213546,213565],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[213913,214009],"content":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object)","pos":[0,96],"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)"}]},{"pos":[214377,214390],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[214595,214640],"content":"Func<TArg1,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,45],"source":"Func<TArg1,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[214881,214907],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[215057,215062],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[215169,215175],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[215524,215640],"content":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object,TaskCreationOptions)","pos":[0,116],"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)"}]},{"pos":[216048,216061],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[216266,216311],"content":"Func<TArg1,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,45],"source":"Func<TArg1,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[216552,216578],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[216728,216733],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[216840,216846],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[217007,217026],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[217388,217502],"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,TArg2,TArg3,Object)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object)"},{"pos":[217904,217908],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[218108,218165],"content":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,57],"source":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[218425,218445],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[218583,218588],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[218682,218687],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[218781,218786],"content":"TArg3","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg3","pos":[0,5]}]},{"pos":[218893,218899],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[219262,219396],"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)"},{"pos":[219838,219842],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[220042,220099],"content":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,57],"source":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[220359,220379],"content":"Action<ph id=\"ph1\">&lt;IAsyncResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<IAsyncResult>"},{"pos":[220517,220522],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[220616,220621],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[220715,220720],"content":"TArg3","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg3","pos":[0,5]}]},{"pos":[220827,220833],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[220994,221013],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[221369,221477],"content":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object)","pos":[0,108],"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)"}]},{"pos":[221869,221882],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[222093,222144],"content":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,51],"source":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[222397,222423],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[222573,222578],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[222672,222677],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[222784,222790],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[223147,223275],"content":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object,TaskCreationOptions)","pos":[0,128],"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)"}]},{"pos":[223707,223720],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[223931,223982],"content":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,51],"source":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[224235,224261],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[224411,224416],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[224510,224515],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[224622,224628],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[224789,224808],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[225172,225292],"content":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object)","pos":[0,120],"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)"}]},{"pos":[225708,225721],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[225939,225996],"content":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,57],"source":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[226261,226287],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[226437,226442],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[226536,226541],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[226635,226640],"content":"TArg3","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg3","pos":[0,5]}]},{"pos":[226747,226753],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[227118,227258],"content":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","pos":[0,140],"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)"}]},{"pos":[227714,227727],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[227945,228002],"content":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,57],"source":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[228267,228293],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[228443,228448],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[228542,228547],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[228641,228646],"content":"TArg3","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg3","pos":[0,5]}]},{"pos":[228753,228759],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[228920,228939],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[229156,229165],"content":"Scheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"Scheduler","pos":[0,9]}]},{"pos":[229366,229379],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[229598,229614],"content":"StartNew(Action)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Action)","pos":[0,16]}]},{"pos":[229820,229824],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[229951,229957],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[230181,230215],"content":"StartNew(Action,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Action,CancellationToken)","pos":[0,34]}]},{"pos":[230457,230461],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[230588,230594],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[230741,230758],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[231022,231058],"content":"StartNew(Action,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Action,TaskCreationOptions)","pos":[0,36]}]},{"pos":[231304,231308],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[231435,231441],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[231602,231621],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[231881,231912],"content":"StartNew(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object)","needQuote":true,"needEscape":true,"source":"StartNew(Action<Object>,Object)"},{"pos":[232148,232152],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[232295,232309],"content":"Action<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Object>"},{"pos":[232448,232454],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[232707,232756],"content":"StartNew(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,CancellationToken)","needQuote":true,"needEscape":true,"source":"StartNew(Action<Object>,Object,CancellationToken)"},{"pos":[233028,233032],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[233175,233189],"content":"Action<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Object>"},{"pos":[233328,233334],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[233481,233498],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[233791,233842],"content":"StartNew(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"StartNew(Action<Object>,Object,TaskCreationOptions)"},{"pos":[234118,234122],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[234265,234279],"content":"Action<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Object>"},{"pos":[234418,234424],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[234585,234604],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[234950,235018],"content":"StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)","pos":[0,68]}]},{"pos":[235328,235332],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[235459,235465],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[235612,235629],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[235822,235841],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[236038,236051],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[236414,236497],"content":"StartNew(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"StartNew(Action<Object>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)"},{"pos":[236837,236841],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[236984,236998],"content":"Action<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Object>"},{"pos":[237137,237143],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[237290,237307],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[237500,237519],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[237716,237729],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[237954,237977],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>)"},{"pos":[238199,238212],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[238364,238377],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[238614,238651],"content":"StartNew(Func<Object,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object)","pos":[0,37],"source":"StartNew(Func<Object,TResult>,Object)"}]},{"pos":[238901,238914],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[239080,239100],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[239251,239257],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[239487,239528],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,CancellationToken)"},{"pos":[239786,239799],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[239951,239964],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[240125,240142],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[240412,240455],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,TaskCreationOptions)"},{"pos":[240717,240730],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[240882,240895],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[241070,241089],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[241389,241444],"content":"StartNew(Func<Object,TResult>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,CancellationToken)","pos":[0,55],"source":"StartNew(Func<Object,TResult>,Object,CancellationToken)"}]},{"pos":[241730,241743],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[241909,241929],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[242080,242086],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[242233,242250],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[242548,242605],"content":"StartNew(Func<Object,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,TaskCreationOptions)","pos":[0,57],"source":"StartNew(Func<Object,TResult>,Object,TaskCreationOptions)"}]},{"pos":[242895,242908],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[243074,243094],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[243245,243251],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[243412,243431],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[243783,243858],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)"},{"pos":[244184,244197],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[244349,244362],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[244523,244540],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[244733,244752],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[244949,244962],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[245330,245419],"content":"StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","pos":[0,89],"source":"StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)"}]},{"pos":[245773,245786],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[245952,245972],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[246123,246129],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[246276,246293],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[246486,246505],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[246702,246715],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.TaskFactory\n  id: TaskFactory\n  children:\n  - System.Threading.Tasks.TaskFactory.#ctor\n  - System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.CancellationToken\n  - System.Threading.Tasks.TaskFactory.ContinuationOptions\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.CreationOptions\n  - System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})\n  - System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)\n  - System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)\n  - System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})\n  - System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)\n  - System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)\n  - System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)\n  - System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)\n  - System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)\n  - System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)\n  - System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.Scheduler\n  - System.Threading.Tasks.TaskFactory.StartNew(System.Action)\n  - System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)\n  - System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})\n  - System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)\n  - System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  langs:\n  - csharp\n  name: TaskFactory\n  nameWithType: TaskFactory\n  fullName: System.Threading.Tasks.TaskFactory\n  type: Class\n  syntax:\n    content: public class TaskFactory\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.#ctor\n  id: '#ctor'\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: TaskFactory()\n  nameWithType: TaskFactory.TaskFactory()\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken)\n  id: '#ctor(System.Threading.CancellationToken)'\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: TaskFactory(CancellationToken)\n  nameWithType: TaskFactory.TaskFactory(CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory(CancellationToken)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskScheduler)\n  id: '#ctor(System.Threading.Tasks.TaskScheduler)'\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: TaskFactory(TaskScheduler)\n  nameWithType: TaskFactory.TaskFactory(TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory(TaskScheduler)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)\n  id: '#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)'\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  nameWithType: TaskFactory.TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: '#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)'\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.CancellationToken\n  id: CancellationToken\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: CancellationToken\n  nameWithType: TaskFactory.CancellationToken\n  fullName: System.Threading.Tasks.TaskFactory.CancellationToken\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.CancellationToken CancellationToken { get; }\n    return:\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinuationOptions\n  id: ContinuationOptions\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinuationOptions\n  nameWithType: TaskFactory.ContinuationOptions\n  fullName: System.Threading.Tasks.TaskFactory.ContinuationOptions\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }\n    return:\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})\n  id: ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Action<Task>)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Action<Task>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Action<Task>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action<System.Threading.Tasks.Task[]> continuationAction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)\n  id: ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Action<Task>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Action<Task>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Action<Task>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action<System.Threading.Tasks.Task[]> continuationAction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Action<Task>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Action<Task>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Action<Task>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action<System.Threading.Tasks.Task[]> continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Action<System.Threading.Tasks.Task[]> continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Action<System.Threading.Tasks.Task<TAntecedentResult>[]> continuationAction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Action<System.Threading.Tasks.Task<TAntecedentResult>[]> continuationAction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Action<System.Threading.Tasks.Task<TAntecedentResult>[]> continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Action<System.Threading.Tasks.Task<TAntecedentResult>[]> continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Func<Task,TResult>)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TResult> (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TResult> (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TResult> (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TResult> (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})\n  id: ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult,TResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)\n  id: ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult,TResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult,TResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult,TResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})\n  id: ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Action<Task>)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Action<Task>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Action<Task>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action<System.Threading.Tasks.Task> continuationAction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  id: ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Action<Task>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Action<Task>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Action<Task>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action<System.Threading.Tasks.Task> continuationAction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Action<Task>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Action<Task>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Action<Task>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action<System.Threading.Tasks.Task> continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Action<System.Threading.Tasks.Task> continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Action<System.Threading.Tasks.Task<TAntecedentResult>> continuationAction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Action<System.Threading.Tasks.Task<TAntecedentResult>> continuationAction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Action<System.Threading.Tasks.Task<TAntecedentResult>> continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Action<System.Threading.Tasks.Task<TAntecedentResult>> continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Func<Task,TResult>)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TResult> (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TResult> (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TResult> (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TResult> (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})\n  id: ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult,TResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)\n  id: ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult,TResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult,TResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult,TResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.CreationOptions\n  id: CreationOptions\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: CreationOptions\n  nameWithType: TaskFactory.CreationOptions\n  fullName: System.Threading.Tasks.TaskFactory.CreationOptions\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }\n    return:\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})\n  id: FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(IAsyncResult,Action<IAsyncResult>)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action<IAsyncResult> endMethod);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)\n  id: FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object)\n  nameWithType: TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync (Func<AsyncCallback,object,IAsyncResult> beginMethod, Action<IAsyncResult> endMethod, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action<IAsyncResult> endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync (Func<AsyncCallback,object,IAsyncResult> beginMethod, Action<IAsyncResult> endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  id: FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync (IAsyncResult asyncResult, Action<IAsyncResult> endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)\n  id: FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync<TArg1> (Func<TArg1,AsyncCallback,object,IAsyncResult> beginMethod, Action<IAsyncResult> endMethod, TArg1 arg1, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync<TArg1> (Func<TArg1,AsyncCallback,object,IAsyncResult> beginMethod, Action<IAsyncResult> endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})\n  id: FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TResult> (IAsyncResult asyncResult, Func<IAsyncResult,TResult> endMethod);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)\n  id: FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  nameWithType: TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TResult> (Func<AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TResult> (IAsyncResult asyncResult, Func<IAsyncResult,TResult> endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TResult> (Func<AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  id: FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TResult> (IAsyncResult asyncResult, Func<IAsyncResult,TResult> endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)\n  id: FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync<TArg1,TArg2> (Func<TArg1,TArg2,AsyncCallback,object,IAsyncResult> beginMethod, Action<IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync<TArg1,TArg2> (Func<TArg1,TArg2,AsyncCallback,object,IAsyncResult> beginMethod, Action<IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)\n  id: FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TResult> (Func<TArg1,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TResult> (Func<TArg1,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)\n  id: FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync<TArg1,TArg2,TArg3> (Func<TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult> beginMethod, Action<IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: arg3\n      type: TArg3\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TArg3>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task FromAsync<TArg1,TArg2,TArg3> (Func<TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult> beginMethod, Action<IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Action{System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: arg3\n      type: TArg3\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TArg3>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)\n  id: FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2,TResult> (Func<TArg1,TArg2,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2,TResult> (Func<TArg1,TArg2,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)\n  id: FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2,TArg3,TResult> (Func<TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: arg3\n      type: TArg3\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TArg3,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2,TArg3,TResult> (Func<TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: arg3\n      type: TArg3\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TArg3,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.Scheduler\n  id: Scheduler\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: Scheduler\n  nameWithType: TaskFactory.Scheduler\n  fullName: System.Threading.Tasks.TaskFactory.Scheduler\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.TaskScheduler Scheduler { get; }\n    return:\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action)\n  id: StartNew(System.Action)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Action)\n  nameWithType: TaskFactory.StartNew(Action)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task StartNew (Action action);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)\n  id: StartNew(System.Action,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Action,CancellationToken)\n  nameWithType: TaskFactory.StartNew(Action,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task StartNew (Action action, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)\n  id: StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Action,TaskCreationOptions)\n  nameWithType: TaskFactory.StartNew(Action,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task StartNew (Action action, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)\n  id: StartNew(System.Action{System.Object},System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Action<Object>,Object)\n  nameWithType: TaskFactory.StartNew(Action<Object>,Object)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action<Object>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task StartNew (Action<object> action, object state);\n    parameters:\n    - id: action\n      type: System.Action{System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)\n  id: StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Action<Object>,Object,CancellationToken)\n  nameWithType: TaskFactory.StartNew(Action<Object>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action<Object>,Object,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task StartNew (Action<object> action, object state, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: action\n      type: System.Action{System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Action<Object>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.StartNew(Action<Object>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action<Object>,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task StartNew (Action<object> action, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: action\n      type: System.Action{System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  id: StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task StartNew (Action action, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  id: StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Action<Object>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.StartNew(Action<Object>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action<Object>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task StartNew (Action<object> action, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: action\n      type: System.Action{System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})\n  id: StartNew``1(System.Func{``0})\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Func<TResult>)\n  nameWithType: TaskFactory.StartNew(Func<TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew<TResult> (Func<TResult> function);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)\n  id: StartNew``1(System.Func{System.Object,``0},System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Func<Object,TResult>,Object)\n  nameWithType: TaskFactory.StartNew(Func<Object,TResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<Object,TResult>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew<TResult> (Func<object,TResult> function, object state);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)\n  id: StartNew``1(System.Func{``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Func<TResult>,CancellationToken)\n  nameWithType: TaskFactory.StartNew(Func<TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew<TResult> (Func<TResult> function, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)\n  id: StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Func<TResult>,TaskCreationOptions)\n  nameWithType: TaskFactory.StartNew(Func<TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<TResult>,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew<TResult> (Func<TResult> function, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)\n  id: StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Func<Object,TResult>,Object,CancellationToken)\n  nameWithType: TaskFactory.StartNew(Func<Object,TResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<Object,TResult>,Object,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew<TResult> (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew<TResult> (Func<object,TResult> function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  id: StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew<TResult> (Func<TResult> function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  id: StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  langs:\n  - csharp\n  name: StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew<TResult> (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory.StartNew<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Threading.Tasks.TaskFactory.#ctor\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: TaskFactory()\n  nameWithType: TaskFactory.TaskFactory()\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory()\n- uid: System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: TaskFactory(CancellationToken)\n  nameWithType: TaskFactory.TaskFactory(CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory(CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: TaskFactory(TaskScheduler)\n  nameWithType: TaskFactory.TaskFactory(TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory(TaskScheduler)\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  nameWithType: TaskFactory.TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.CancellationToken\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: CancellationToken\n  nameWithType: TaskFactory.CancellationToken\n  fullName: System.Threading.Tasks.TaskFactory.CancellationToken\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.ContinuationOptions\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinuationOptions\n  nameWithType: TaskFactory.ContinuationOptions\n  fullName: System.Threading.Tasks.TaskFactory.ContinuationOptions\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task[],Action<Task>)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Action<Task>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Action<Task>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task[]>\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task[],Action<Task>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Action<Task>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Action<Task>,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task[]>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task[],Action<Task>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Action<Task>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Action<Task>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task[]>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task[]>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TAntecedentResult>>\n  nameWithType: Action<Task<TAntecedentResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TAntecedentResult>[]>\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TAntecedentResult>>\n  nameWithType: Action<Task<TAntecedentResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TAntecedentResult>[]>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TAntecedentResult>>\n  nameWithType: Action<Task<TAntecedentResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TAntecedentResult>[]>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TAntecedentResult>>\n  nameWithType: Action<Task<TAntecedentResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TAntecedentResult>[]>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task[],Func<Task,TResult>)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task[],TResult>\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task[],TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task[],TResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task[],TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task[],Action<Task>)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Action<Task>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Action<Task>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task[],Action<Task>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Action<Task>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Action<Task>,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task[],Action<Task>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Action<Task>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Action<Task>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TAntecedentResult>>\n  nameWithType: Action<Task<TAntecedentResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TAntecedentResult>>\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TAntecedentResult>>\n  nameWithType: Action<Task<TAntecedentResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TAntecedentResult>>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TAntecedentResult>>\n  nameWithType: Action<Task<TAntecedentResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TAntecedentResult>>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Action<Task<TAntecedentResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Action{System.Threading.Tasks.Task{TAntecedentResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TAntecedentResult>>\n  nameWithType: Action<Task<TAntecedentResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TAntecedentResult>>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task[],Func<Task,TResult>)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.CreationOptions\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: CreationOptions\n  nameWithType: TaskFactory.CreationOptions\n  fullName: System.Threading.Tasks.TaskFactory.CreationOptions\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(IAsyncResult,Action<IAsyncResult>)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object)\n  nameWithType: TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Action<IAsyncResult>,TaskCreationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  nameWithType: TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: TArg3\n  parent: ''\n  isExternal: true\n  name: TArg3\n  nameWithType: TArg3\n  fullName: TArg3\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Action<IAsyncResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Action{System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Action<IAsyncResult>\n  nameWithType: Action<IAsyncResult>\n  fullName: System.Action<System.IAsyncResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: TArg3\n  parent: ''\n  isExternal: true\n  name: TArg3\n  nameWithType: TArg3\n  fullName: TArg3\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: TArg3\n  parent: ''\n  isExternal: true\n  name: TArg3\n  nameWithType: TArg3\n  fullName: TArg3\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: TArg3\n  parent: ''\n  isExternal: true\n  name: TArg3\n  nameWithType: TArg3\n  fullName: TArg3\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.Scheduler\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: Scheduler\n  nameWithType: TaskFactory.Scheduler\n  fullName: System.Threading.Tasks.TaskFactory.Scheduler\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Action)\n  nameWithType: TaskFactory.StartNew(Action)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Action,CancellationToken)\n  nameWithType: TaskFactory.StartNew(Action,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Action,TaskCreationOptions)\n  nameWithType: TaskFactory.StartNew(Action,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Action<Object>,Object)\n  nameWithType: TaskFactory.StartNew(Action<Object>,Object)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action<Object>,Object)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Object}\n  parent: System\n  isExternal: false\n  name: Action<Object>\n  nameWithType: Action<Object>\n  fullName: System.Action<System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Action<Object>,Object,CancellationToken)\n  nameWithType: TaskFactory.StartNew(Action<Object>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action<Object>,Object,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Object}\n  parent: System\n  isExternal: false\n  name: Action<Object>\n  nameWithType: Action<Object>\n  fullName: System.Action<System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Action<Object>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.StartNew(Action<Object>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action<Object>,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Object}\n  parent: System\n  isExternal: false\n  name: Action<Object>\n  nameWithType: Action<Object>\n  fullName: System.Action<System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Action<Object>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.StartNew(Action<Object>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Action<Object>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Object}\n  parent: System\n  isExternal: false\n  name: Action<Object>\n  nameWithType: Action<Object>\n  fullName: System.Action<System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Func<TResult>)\n  nameWithType: TaskFactory.StartNew(Func<TResult>)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Func<Object,TResult>,Object)\n  nameWithType: TaskFactory.StartNew(Func<Object,TResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<Object,TResult>,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Func<TResult>,CancellationToken)\n  nameWithType: TaskFactory.StartNew(Func<TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Func<TResult>,TaskCreationOptions)\n  nameWithType: TaskFactory.StartNew(Func<TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<TResult>,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Func<Object,TResult>,Object,CancellationToken)\n  nameWithType: TaskFactory.StartNew(Func<Object,TResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<Object,TResult>,Object,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory.StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  name: StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory.StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory.StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult,TResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult,TResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.FromAsync*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.FromAsync<TArg1>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.FromAsync<TResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TArg3>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.FromAsync<TArg1,TArg2,TArg3,TResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.StartNew*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n- uid: System.Threading.Tasks.TaskFactory.StartNew<TResult>*\n  parent: System.Threading.Tasks.TaskFactory\n  isExternal: false\n  nameWithType: TaskFactory.\n"}