{"nodes":[{"pos":[928,941],"content":"AccessRule<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"AccessRule<T>"},{"pos":[1205,1239],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2473,2522],"content":"AccessRule(IdentityReference,T,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRule(IdentityReference,T,AccessControlType)","pos":[0,49]}]},{"pos":[3070,3104],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3155,3189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3284,3318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3653,3691],"content":"AccessRule(String,T,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRule(String,T,AccessControlType)","pos":[0,38]}]},{"pos":[4150,4184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4235,4269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4364,4398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4981,5064],"content":"AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)","pos":[0,83]}]},{"pos":[5810,5844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5895,5929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6035,6069],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6175,6209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6304,6338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6861,6933],"content":"AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)","pos":[0,72]}]},{"pos":[7590,7624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7675,7709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7815,7849],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7955,7989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8084,8118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8319,8325],"content":"Rights","needQuote":true,"needEscape":true,"nodes":[{"content":"Rights","pos":[0,6]}]},{"pos":[8606,8640],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8778,8818],"content":"System.Security.AccessControl.AccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.AccessRule","pos":[0,40]}]},{"pos":[9053,9102],"content":"AccessRule(IdentityReference,T,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRule(IdentityReference,T,AccessControlType)","pos":[0,49]}]},{"pos":[9404,9421],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[9561,9562],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[9718,9735],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[10034,10072],"content":"AccessRule(String,T,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRule(String,T,AccessControlType)","pos":[0,38]}]},{"pos":[10303,10309],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10408,10409],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[10565,10582],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[11005,11088],"content":"AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)","pos":[0,83]}]},{"pos":[11458,11475],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[11615,11616],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[11771,11787],"content":"InheritanceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[12002,12018],"content":"PropagationFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[12234,12251],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[12644,12716],"content":"AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)","pos":[0,72]}]},{"pos":[13015,13021],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13120,13121],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13276,13292],"content":"InheritanceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[13507,13523],"content":"PropagationFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[13739,13756],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[13989,13995],"content":"Rights","needQuote":true,"needEscape":true,"nodes":[{"content":"Rights","pos":[0,6]}]},{"pos":[14145,14146],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.AccessRule`1\n  id: AccessRule`1\n  children:\n  - System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControl`0ype)\n  - System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControl`0ype)\n  - System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  - System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  - System.Security.AccessControl.AccessRule`1.Rights\n  langs:\n  - csharp\n  name: AccessRule<T>\n  nameWithType: AccessRule<T>\n  fullName: System.Security.AccessControl.AccessRule<T>\n  type: Class\n  syntax:\n    content: 'public class AccessRule<T> : System.Security.AccessControl.AccessRule where T : struct'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AccessRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AccessRule.AccessControlType\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControl`0ype)\n  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControl`0ype)'\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: AccessRule(IdentityReference,T,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(IdentityReference,T,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(IdentityReference,T,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AccessRule (System.Security.Principal.IdentityReference identity, T rights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: rights\n      type: T\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControl`0ype)\n  id: '#ctor(System.String,`0,System.Security.AccessControl.AccessControl`0ype)'\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: AccessRule(String,T,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(String,T,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(String,T,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AccessRule (string identity, T rights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: Parameter description to be filled\n    - id: rights\n      type: T\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)'\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AccessRule (System.Security.Principal.IdentityReference identity, T rights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: rights\n      type: T\n      description: Parameter description to be filled\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Parameter description to be filled\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  id: '#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)'\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AccessRule (string identity, T rights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: Parameter description to be filled\n    - id: rights\n      type: T\n      description: Parameter description to be filled\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Parameter description to be filled\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AccessRule`1.Rights\n  id: Rights\n  parent: System.Security.AccessControl.AccessRule`1\n  langs:\n  - csharp\n  name: Rights\n  nameWithType: AccessRule<T>.Rights\n  fullName: System.Security.AccessControl.AccessRule<T>.Rights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public T Rights { get; }\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.AccessRule\n  isExternal: false\n  name: System.Security.AccessControl.AccessRule\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControl`0ype)\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule(IdentityReference,T,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(IdentityReference,T,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(IdentityReference,T,AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControl`0ype)\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule(String,T,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(String,T,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(String,T,AccessControlType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControl`0ype)\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: AccessRule<T>.AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.AccessRule<T>.AccessRule(String,T,InheritanceFlags,PropagationFlags,AccessControlType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.AccessRule`1.Rights\n  parent: System.Security.AccessControl.AccessRule`1\n  isExternal: false\n  name: Rights\n  nameWithType: AccessRule<T>.Rights\n  fullName: System.Security.AccessControl.AccessRule<T>.Rights\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n"}