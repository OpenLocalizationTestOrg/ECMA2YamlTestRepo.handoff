{"nodes":[{"pos":[1481,1489],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[2278,2288],"content":"Evidence()","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence()","pos":[0,10]}]},{"pos":[2769,2787],"content":"Evidence(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence(Evidence)","pos":[0,18]}]},{"pos":[3159,3193],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3438,3465],"content":"Evidence(Object[],Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence(Object[],Object[])","pos":[0,27]}]},{"pos":[3851,3885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3960,3994],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4327,4366],"content":"Evidence(EvidenceBase[],EvidenceBase[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence(EvidenceBase[],EvidenceBase[])","pos":[0,39]}]},{"pos":[4856,4890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4987,5021],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5240,5259],"content":"AddAssembly(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddAssembly(Object)","pos":[0,19]}]},{"pos":[5581,5615],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5836,5858],"content":"AddAssemblyEvidence(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddAssemblyEvidence(T)","pos":[0,22]}]},{"pos":[6240,6274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6485,6500],"content":"AddHost(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddHost(Object)","pos":[0,15]}]},{"pos":[6810,6844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7057,7075],"content":"AddHostEvidence(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddHostEvidence(T)","pos":[0,18]}]},{"pos":[7445,7479],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7656,7663],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[8067,8074],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[8404,8438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8671,8690],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[9022,9056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9117,9151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9328,9333],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[9600,9634],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9843,9866],"content":"GetAssemblyEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblyEnumerator()","pos":[0,23]}]},{"pos":[10242,10276],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10487,10508],"content":"GetAssemblyEvidence()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblyEvidence()","pos":[0,21]}]},{"pos":[10871,10905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11098,11113],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[11465,11499],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11700,11719],"content":"GetHostEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHostEnumerator()","pos":[0,19]}]},{"pos":[12083,12117],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12320,12337],"content":"GetHostEvidence()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHostEvidence()","pos":[0,17]}]},{"pos":[12688,12722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12909,12919],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[13204,13238],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13433,13447],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[13744,13778],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13957,13963],"content":"Locked","needQuote":true,"needEscape":true,"nodes":[{"content":"Locked","pos":[0,6]}]},{"pos":[14241,14275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14518,14533],"content":"Merge(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Merge(Evidence)","pos":[0,15]}]},{"pos":[14896,14930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15143,15159],"content":"RemoveType(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveType(Type)","pos":[0,16]}]},{"pos":[15468,15502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15685,15693],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[15973,16007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16118,16131],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[16247,16257],"content":"Evidence()","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence()","pos":[0,10]}]},{"pos":[16497,16515],"content":"Evidence(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence(Evidence)","pos":[0,18]}]},{"pos":[16723,16731],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[16949,16976],"content":"Evidence(Object[],Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence(Object[],Object[])","pos":[0,27]}]},{"pos":[17168,17174],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17292,17298],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17542,17581],"content":"Evidence(EvidenceBase[],EvidenceBase[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence(EvidenceBase[],EvidenceBase[])","pos":[0,39]}]},{"pos":[17835,17847],"content":"EvidenceBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EvidenceBase","pos":[0,12]}]},{"pos":[18031,18043],"content":"EvidenceBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EvidenceBase","pos":[0,12]}]},{"pos":[18259,18278],"content":"AddAssembly(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddAssembly(Object)","pos":[0,19]}]},{"pos":[18454,18460],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18647,18669],"content":"AddAssemblyEvidence(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddAssemblyEvidence(T)","pos":[0,22]}]},{"pos":[18834,18835],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[19000,19015],"content":"AddHost(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddHost(Object)","pos":[0,15]}]},{"pos":[19183,19189],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19372,19390],"content":"AddHostEvidence(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddHostEvidence(T)","pos":[0,18]}]},{"pos":[19547,19548],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[19696,19703],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[19904,19911],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[20097,20105],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[20318,20337],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[20512,20517],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[20630,20635],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20798,20803],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[20950,20955],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21134,21157],"content":"GetAssemblyEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblyEnumerator()","pos":[0,23]}]},{"pos":[21370,21381],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[21585,21606],"content":"GetAssemblyEvidence()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblyEvidence()","pos":[0,21]}]},{"pos":[21769,21770],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21926,21941],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[22138,22149],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[22348,22367],"content":"GetHostEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHostEnumerator()","pos":[0,19]}]},{"pos":[22572,22583],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[22783,22800],"content":"GetHostEvidence()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHostEvidence()","pos":[0,17]}]},{"pos":[22955,22956],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23109,23119],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[23278,23285],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23461,23475],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[23642,23649],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23817,23823],"content":"Locked","needQuote":true,"needEscape":true,"nodes":[{"content":"Locked","pos":[0,6]}]},{"pos":[23974,23981],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24181,24196],"content":"Merge(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Merge(Evidence)","pos":[0,15]}]},{"pos":[24398,24406],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[24609,24625],"content":"RemoveType(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveType(Type)","pos":[0,16]}]},{"pos":[24793,24797],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[24961,24969],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[25123,25129],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.Evidence\n  id: Evidence\n  children:\n  - System.Security.Policy.Evidence.#ctor\n  - System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)\n  - System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])\n  - System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])\n  - System.Security.Policy.Evidence.AddAssembly(System.Object)\n  - System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)\n  - System.Security.Policy.Evidence.AddHost(System.Object)\n  - System.Security.Policy.Evidence.AddHostEvidence``1(``0)\n  - System.Security.Policy.Evidence.Clear\n  - System.Security.Policy.Evidence.Clone\n  - System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)\n  - System.Security.Policy.Evidence.Count\n  - System.Security.Policy.Evidence.GetAssemblyEnumerator\n  - System.Security.Policy.Evidence.GetAssemblyEvidence``1\n  - System.Security.Policy.Evidence.GetEnumerator\n  - System.Security.Policy.Evidence.GetHostEnumerator\n  - System.Security.Policy.Evidence.GetHostEvidence``1\n  - System.Security.Policy.Evidence.IsReadOnly\n  - System.Security.Policy.Evidence.IsSynchronized\n  - System.Security.Policy.Evidence.Locked\n  - System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)\n  - System.Security.Policy.Evidence.RemoveType(System.Type)\n  - System.Security.Policy.Evidence.SyncRoot\n  langs:\n  - csharp\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class Evidence : System.Collections.ICollection\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.#ctor\n  id: '#ctor'\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: Evidence()\n  nameWithType: Evidence.Evidence()\n  fullName: System.Security.Policy.Evidence.Evidence()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public Evidence ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)\n  id: '#ctor(System.Security.Policy.Evidence)'\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: Evidence(Evidence)\n  nameWithType: Evidence.Evidence(Evidence)\n  fullName: System.Security.Policy.Evidence.Evidence(Evidence)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public Evidence (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])\n  id: '#ctor(System.Object[],System.Object[])'\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: Evidence(Object[],Object[])\n  nameWithType: Evidence.Evidence(Object[],Object[])\n  fullName: System.Security.Policy.Evidence.Evidence(Object[],Object[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public Evidence (object[] hostEvidence, object[] assemblyEvidence);\n    parameters:\n    - id: hostEvidence\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: assemblyEvidence\n      type: System.Object[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])\n  id: '#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])'\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: Evidence(EvidenceBase[],EvidenceBase[])\n  nameWithType: Evidence.Evidence(EvidenceBase[],EvidenceBase[])\n  fullName: System.Security.Policy.Evidence.Evidence(EvidenceBase[],EvidenceBase[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public Evidence (System.Security.Policy.EvidenceBase[] hostEvidence, System.Security.Policy.EvidenceBase[] assemblyEvidence);\n    parameters:\n    - id: hostEvidence\n      type: System.Security.Policy.EvidenceBase[]\n      description: Parameter description to be filled\n    - id: assemblyEvidence\n      type: System.Security.Policy.EvidenceBase[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.AddAssembly(System.Object)\n  id: AddAssembly(System.Object)\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: AddAssembly(Object)\n  nameWithType: Evidence.AddAssembly(Object)\n  fullName: System.Security.Policy.Evidence.AddAssembly(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void AddAssembly (object id);\n    parameters:\n    - id: id\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)\n  id: AddAssemblyEvidence``1(``0)\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: AddAssemblyEvidence(T)\n  nameWithType: Evidence.AddAssemblyEvidence(T)\n  fullName: System.Security.Policy.Evidence.AddAssemblyEvidence(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: 'public void AddAssemblyEvidence<T> (T evidence) where T : System.Security.Policy.EvidenceBase;'\n    parameters:\n    - id: evidence\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.AddHost(System.Object)\n  id: AddHost(System.Object)\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: AddHost(Object)\n  nameWithType: Evidence.AddHost(Object)\n  fullName: System.Security.Policy.Evidence.AddHost(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void AddHost (object id);\n    parameters:\n    - id: id\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.AddHostEvidence``1(``0)\n  id: AddHostEvidence``1(``0)\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: AddHostEvidence(T)\n  nameWithType: Evidence.AddHostEvidence(T)\n  fullName: System.Security.Policy.Evidence.AddHostEvidence(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: 'public void AddHostEvidence<T> (T evidence) where T : System.Security.Policy.EvidenceBase;'\n    parameters:\n    - id: evidence\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.Clear\n  id: Clear\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: Evidence.Clear()\n  fullName: System.Security.Policy.Evidence.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.Clone\n  id: Clone\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Evidence.Clone()\n  fullName: System.Security.Policy.Evidence.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.Policy.Evidence Clone ();\n    parameters: []\n    return:\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: Evidence.CopyTo(Array,Int32)\n  fullName: System.Security.Policy.Evidence.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.Count\n  id: Count\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: Count\n  nameWithType: Evidence.Count\n  fullName: System.Security.Policy.Evidence.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator\n  id: GetAssemblyEnumerator\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: GetAssemblyEnumerator()\n  nameWithType: Evidence.GetAssemblyEnumerator()\n  fullName: System.Security.Policy.Evidence.GetAssemblyEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Collections.IEnumerator GetAssemblyEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.GetAssemblyEvidence``1\n  id: GetAssemblyEvidence``1\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: GetAssemblyEvidence()\n  nameWithType: Evidence.GetAssemblyEvidence()\n  fullName: System.Security.Policy.Evidence.GetAssemblyEvidence()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: 'public T GetAssemblyEvidence<T> () where T : System.Security.Policy.EvidenceBase;'\n    parameters: []\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.GetEnumerator\n  id: GetEnumerator\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: Evidence.GetEnumerator()\n  fullName: System.Security.Policy.Evidence.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.GetHostEnumerator\n  id: GetHostEnumerator\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: GetHostEnumerator()\n  nameWithType: Evidence.GetHostEnumerator()\n  fullName: System.Security.Policy.Evidence.GetHostEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Collections.IEnumerator GetHostEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.GetHostEvidence``1\n  id: GetHostEvidence``1\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: GetHostEvidence()\n  nameWithType: Evidence.GetHostEvidence()\n  fullName: System.Security.Policy.Evidence.GetHostEvidence()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: 'public T GetHostEvidence<T> () where T : System.Security.Policy.EvidenceBase;'\n    parameters: []\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.IsReadOnly\n  id: IsReadOnly\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: Evidence.IsReadOnly\n  fullName: System.Security.Policy.Evidence.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.IsSynchronized\n  id: IsSynchronized\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: Evidence.IsSynchronized\n  fullName: System.Security.Policy.Evidence.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.Locked\n  id: Locked\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: Locked\n  nameWithType: Evidence.Locked\n  fullName: System.Security.Policy.Evidence.Locked\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public bool Locked { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)\n  id: Merge(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: Merge(Evidence)\n  nameWithType: Evidence.Merge(Evidence)\n  fullName: System.Security.Policy.Evidence.Merge(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void Merge (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.RemoveType(System.Type)\n  id: RemoveType(System.Type)\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: RemoveType(Type)\n  nameWithType: Evidence.RemoveType(Type)\n  fullName: System.Security.Policy.Evidence.RemoveType(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void RemoveType (Type t);\n    parameters:\n    - id: t\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.Evidence.SyncRoot\n  id: SyncRoot\n  parent: System.Security.Policy.Evidence\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: Evidence.SyncRoot\n  fullName: System.Security.Policy.Evidence.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Policy.Evidence.#ctor\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: Evidence()\n  nameWithType: Evidence.Evidence()\n  fullName: System.Security.Policy.Evidence.Evidence()\n- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: Evidence(Evidence)\n  nameWithType: Evidence.Evidence(Evidence)\n  fullName: System.Security.Policy.Evidence.Evidence(Evidence)\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: Evidence(Object[],Object[])\n  nameWithType: Evidence.Evidence(Object[],Object[])\n  fullName: System.Security.Policy.Evidence.Evidence(Object[],Object[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: Evidence(EvidenceBase[],EvidenceBase[])\n  nameWithType: Evidence.Evidence(EvidenceBase[],EvidenceBase[])\n  fullName: System.Security.Policy.Evidence.Evidence(EvidenceBase[],EvidenceBase[])\n- uid: System.Security.Policy.EvidenceBase\n  parent: System.Security.Policy\n  isExternal: false\n  name: EvidenceBase\n  nameWithType: EvidenceBase\n  fullName: System.Security.Policy.EvidenceBase[]\n- uid: System.Security.Policy.EvidenceBase\n  parent: System.Security.Policy\n  isExternal: false\n  name: EvidenceBase\n  nameWithType: EvidenceBase\n  fullName: System.Security.Policy.EvidenceBase[]\n- uid: System.Security.Policy.Evidence.AddAssembly(System.Object)\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: AddAssembly(Object)\n  nameWithType: Evidence.AddAssembly(Object)\n  fullName: System.Security.Policy.Evidence.AddAssembly(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: AddAssemblyEvidence(T)\n  nameWithType: Evidence.AddAssemblyEvidence(T)\n  fullName: System.Security.Policy.Evidence.AddAssemblyEvidence(T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.Policy.Evidence.AddHost(System.Object)\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: AddHost(Object)\n  nameWithType: Evidence.AddHost(Object)\n  fullName: System.Security.Policy.Evidence.AddHost(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.Evidence.AddHostEvidence``1(``0)\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: AddHostEvidence(T)\n  nameWithType: Evidence.AddHostEvidence(T)\n  fullName: System.Security.Policy.Evidence.AddHostEvidence(T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.Policy.Evidence.Clear\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: Clear()\n  nameWithType: Evidence.Clear()\n  fullName: System.Security.Policy.Evidence.Clear()\n- uid: System.Security.Policy.Evidence.Clone\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: Clone()\n  nameWithType: Evidence.Clone()\n  fullName: System.Security.Policy.Evidence.Clone()\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: Evidence.CopyTo(Array,Int32)\n  fullName: System.Security.Policy.Evidence.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.Evidence.Count\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: Count\n  nameWithType: Evidence.Count\n  fullName: System.Security.Policy.Evidence.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: GetAssemblyEnumerator()\n  nameWithType: Evidence.GetAssemblyEnumerator()\n  fullName: System.Security.Policy.Evidence.GetAssemblyEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Security.Policy.Evidence.GetAssemblyEvidence``1\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: GetAssemblyEvidence()\n  nameWithType: Evidence.GetAssemblyEvidence()\n  fullName: System.Security.Policy.Evidence.GetAssemblyEvidence()\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.Policy.Evidence.GetEnumerator\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Evidence.GetEnumerator()\n  fullName: System.Security.Policy.Evidence.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Security.Policy.Evidence.GetHostEnumerator\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: GetHostEnumerator()\n  nameWithType: Evidence.GetHostEnumerator()\n  fullName: System.Security.Policy.Evidence.GetHostEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Security.Policy.Evidence.GetHostEvidence``1\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: GetHostEvidence()\n  nameWithType: Evidence.GetHostEvidence()\n  fullName: System.Security.Policy.Evidence.GetHostEvidence()\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.Policy.Evidence.IsReadOnly\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: Evidence.IsReadOnly\n  fullName: System.Security.Policy.Evidence.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.Evidence.IsSynchronized\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: Evidence.IsSynchronized\n  fullName: System.Security.Policy.Evidence.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.Evidence.Locked\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: Locked\n  nameWithType: Evidence.Locked\n  fullName: System.Security.Policy.Evidence.Locked\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: Merge(Evidence)\n  nameWithType: Evidence.Merge(Evidence)\n  fullName: System.Security.Policy.Evidence.Merge(Evidence)\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.Evidence.RemoveType(System.Type)\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: RemoveType(Type)\n  nameWithType: Evidence.RemoveType(Type)\n  fullName: System.Security.Policy.Evidence.RemoveType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Policy.Evidence.SyncRoot\n  parent: System.Security.Policy.Evidence\n  isExternal: false\n  name: SyncRoot\n  nameWithType: Evidence.SyncRoot\n  fullName: System.Security.Policy.Evidence.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}