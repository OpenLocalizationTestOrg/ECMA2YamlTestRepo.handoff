{"nodes":[{"pos":[663,669],"content":"Binary","needQuote":true,"needEscape":true,"nodes":[{"content":"Binary","pos":[0,6]}]},{"pos":[1374,1388],"content":"Binary(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Binary(Byte[])","pos":[0,14]}]},{"pos":[1693,1727],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1940,1954],"content":"Equals(Binary)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Binary)","pos":[0,14]}]},{"pos":[2286,2320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2379,2413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2650,2664],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2974,3008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3067,3101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3318,3331],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3633,3667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3830,3836],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[4098,4132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4403,4429],"content":"op_Equality(Binary,Binary)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Binary,Binary)","pos":[0,26]}]},{"pos":[4836,4870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4944,4978],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5037,5071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5274,5293],"content":"op_Implicit(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit(Byte[])","pos":[0,19]}]},{"pos":[5641,5675],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5743,5777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6052,6080],"content":"op_Inequality(Binary,Binary)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Binary,Binary)","pos":[0,28]}]},{"pos":[6493,6527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6601,6635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6694,6728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6893,6902],"content":"ToArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[7187,7221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7388,7398],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7695,7729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7840,7853],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[7968,7982],"content":"Binary(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Binary(Byte[])","pos":[0,14]}]},{"pos":[8136,8140],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8313,8327],"content":"Equals(Binary)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Binary)","pos":[0,14]}]},{"pos":[8484,8491],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8629,8635],"content":"Binary","needQuote":true,"needEscape":true,"nodes":[{"content":"Binary","pos":[0,6]}]},{"pos":[8810,8824],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8981,8988],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9106,9112],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9267,9280],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9433,9438],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9586,9592],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[9731,9736],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9938,9964],"content":"op_Equality(Binary,Binary)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Binary,Binary)","pos":[0,26]}]},{"pos":[10145,10152],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10290,10296],"content":"Binary","needQuote":true,"needEscape":true,"nodes":[{"content":"Binary","pos":[0,6]}]},{"pos":[10442,10448],"content":"Binary","needQuote":true,"needEscape":true,"nodes":[{"content":"Binary","pos":[0,6]}]},{"pos":[10628,10647],"content":"op_Implicit(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit(Byte[])","pos":[0,19]}]},{"pos":[10833,10839],"content":"Binary","needQuote":true,"needEscape":true,"nodes":[{"content":"Binary","pos":[0,6]}]},{"pos":[10963,10967],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[11171,11199],"content":"op_Inequality(Binary,Binary)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Binary,Binary)","pos":[0,28]}]},{"pos":[11384,11391],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11529,11535],"content":"Binary","needQuote":true,"needEscape":true,"nodes":[{"content":"Binary","pos":[0,6]}]},{"pos":[11681,11687],"content":"Binary","needQuote":true,"needEscape":true,"nodes":[{"content":"Binary","pos":[0,6]}]},{"pos":[11848,11857],"content":"ToArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[12001,12005],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[12155,12165],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12313,12319],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Binary\n  id: Binary\n  children:\n  - System.Data.Linq.Binary.#ctor(System.Byte[])\n  - System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)\n  - System.Data.Linq.Binary.Equals(System.Object)\n  - System.Data.Linq.Binary.GetHashCode\n  - System.Data.Linq.Binary.Length\n  - System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  - System.Data.Linq.Binary.op_Implicit(System.Byte[])\n  - System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  - System.Data.Linq.Binary.ToArray\n  - System.Data.Linq.Binary.ToString\n  langs:\n  - csharp\n  name: Binary\n  nameWithType: Binary\n  fullName: System.Data.Linq.Binary\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataContract]\n\n      public sealed class Binary : IEquatable<System.Data.Linq.Binary>\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable<System.Data.Linq.Binary>\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: Binary(Byte[])\n  nameWithType: Binary.Binary(Byte[])\n  fullName: System.Data.Linq.Binary.Binary(Byte[])\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public Binary (byte[] value);\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)\n  id: Equals(System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: Equals(Binary)\n  nameWithType: Binary.Equals(Binary)\n  fullName: System.Data.Linq.Binary.Equals(Binary)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public bool Equals (System.Data.Linq.Binary other);\n    parameters:\n    - id: other\n      type: System.Data.Linq.Binary\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Data.Linq.Binary.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Binary.Equals(Object)\n  fullName: System.Data.Linq.Binary.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Data.Linq.Binary.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.GetHashCode\n  id: GetHashCode\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Binary.GetHashCode()\n  fullName: System.Data.Linq.Binary.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.Length\n  id: Length\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: Length\n  nameWithType: Binary.Length\n  fullName: System.Data.Linq.Binary.Length\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public int Length { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  id: op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: op_Equality(Binary,Binary)\n  nameWithType: Binary.op_Equality(Binary,Binary)\n  fullName: System.Data.Linq.Binary.op_Equality(Binary,Binary)\n  type: Operator\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public static bool op_Equality (System.Data.Linq.Binary binary1, System.Data.Linq.Binary binary2);\n    parameters:\n    - id: binary1\n      type: System.Data.Linq.Binary\n      description: Parameter description to be filled\n    - id: binary2\n      type: System.Data.Linq.Binary\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.op_Implicit(System.Byte[])\n  id: op_Implicit(System.Byte[])\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: op_Implicit(Byte[])\n  nameWithType: Binary.op_Implicit(Byte[])\n  fullName: System.Data.Linq.Binary.op_Implicit(Byte[])\n  type: Operator\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public static System.Data.Linq.Binary op_Implicit (byte[] value);\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Linq.Binary\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  id: op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: op_Inequality(Binary,Binary)\n  nameWithType: Binary.op_Inequality(Binary,Binary)\n  fullName: System.Data.Linq.Binary.op_Inequality(Binary,Binary)\n  type: Operator\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public static bool op_Inequality (System.Data.Linq.Binary binary1, System.Data.Linq.Binary binary2);\n    parameters:\n    - id: binary1\n      type: System.Data.Linq.Binary\n      description: Parameter description to be filled\n    - id: binary2\n      type: System.Data.Linq.Binary\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.ToArray\n  id: ToArray\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: ToArray()\n  nameWithType: Binary.ToArray()\n  fullName: System.Data.Linq.Binary.ToArray()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public byte[] ToArray ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.Binary.ToString\n  id: ToString\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Binary.ToString()\n  fullName: System.Data.Linq.Binary.ToString()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.Binary.#ctor(System.Byte[])\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Binary(Byte[])\n  nameWithType: Binary.Binary(Byte[])\n  fullName: System.Data.Linq.Binary.Binary(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Equals(Binary)\n  nameWithType: Binary.Equals(Binary)\n  fullName: System.Data.Linq.Binary.Equals(Binary)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Binary\n  parent: System.Data.Linq\n  isExternal: false\n  name: Binary\n  nameWithType: Binary\n  fullName: System.Data.Linq.Binary\n- uid: System.Data.Linq.Binary.Equals(System.Object)\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Binary.Equals(Object)\n  fullName: System.Data.Linq.Binary.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.Binary.GetHashCode\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Binary.GetHashCode()\n  fullName: System.Data.Linq.Binary.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.Binary.Length\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Length\n  nameWithType: Binary.Length\n  fullName: System.Data.Linq.Binary.Length\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: op_Equality(Binary,Binary)\n  nameWithType: Binary.op_Equality(Binary,Binary)\n  fullName: System.Data.Linq.Binary.op_Equality(Binary,Binary)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Binary\n  parent: System.Data.Linq\n  isExternal: false\n  name: Binary\n  nameWithType: Binary\n  fullName: System.Data.Linq.Binary\n- uid: System.Data.Linq.Binary\n  parent: System.Data.Linq\n  isExternal: false\n  name: Binary\n  nameWithType: Binary\n  fullName: System.Data.Linq.Binary\n- uid: System.Data.Linq.Binary.op_Implicit(System.Byte[])\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: op_Implicit(Byte[])\n  nameWithType: Binary.op_Implicit(Byte[])\n  fullName: System.Data.Linq.Binary.op_Implicit(Byte[])\n- uid: System.Data.Linq.Binary\n  parent: System.Data.Linq\n  isExternal: false\n  name: Binary\n  nameWithType: Binary\n  fullName: System.Data.Linq.Binary\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: op_Inequality(Binary,Binary)\n  nameWithType: Binary.op_Inequality(Binary,Binary)\n  fullName: System.Data.Linq.Binary.op_Inequality(Binary,Binary)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Binary\n  parent: System.Data.Linq\n  isExternal: false\n  name: Binary\n  nameWithType: Binary\n  fullName: System.Data.Linq.Binary\n- uid: System.Data.Linq.Binary\n  parent: System.Data.Linq\n  isExternal: false\n  name: Binary\n  nameWithType: Binary\n  fullName: System.Data.Linq.Binary\n- uid: System.Data.Linq.Binary.ToArray\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: ToArray()\n  nameWithType: Binary.ToArray()\n  fullName: System.Data.Linq.Binary.ToArray()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Data.Linq.Binary.ToString\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: ToString()\n  nameWithType: Binary.ToString()\n  fullName: System.Data.Linq.Binary.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Binary.Equals*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  nameWithType: Binary.\n"}