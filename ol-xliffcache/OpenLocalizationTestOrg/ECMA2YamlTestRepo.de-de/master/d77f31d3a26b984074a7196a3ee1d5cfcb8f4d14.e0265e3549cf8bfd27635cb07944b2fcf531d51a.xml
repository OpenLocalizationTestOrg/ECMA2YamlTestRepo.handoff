{"nodes":[{"pos":[675,697],"content":"ICollectionContract<ph id=\"ph1\">&lt;C&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollectionContract<C>"},{"pos":[1019,1053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1357,1363],"content":"Add(C)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(C)","pos":[0,6]}]},{"pos":[1701,1735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1960,1967],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[2496,2507],"content":"Contains(C)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(C)","pos":[0,11]}]},{"pos":[2860,2894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2953,2987],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3252,3269],"content":"CopyTo(C[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(C[],Int32)","pos":[0,17]}]},{"pos":[3654,3688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3754,3788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4019,4029],"content":"GetCount()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCount()","pos":[0,10]}]},{"pos":[4384,4418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4659,4674],"content":"GetIsReadOnly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIsReadOnly()","pos":[0,15]}]},{"pos":[5047,5081],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5316,5325],"content":"Remove(C)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(C)","pos":[0,9]}]},{"pos":[5672,5706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5765,5799],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6026,6032],"content":"Add(C)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(C)","pos":[0,6]}]},{"pos":[6204,6205],"content":"C","needQuote":true,"needEscape":true,"nodes":[{"content":"C","pos":[0,1]}]},{"pos":[6401,6408],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[6703,6714],"content":"Contains(C)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(C)","pos":[0,11]}]},{"pos":[6914,6921],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7022,7023],"content":"C","needQuote":true,"needEscape":true,"nodes":[{"content":"C","pos":[0,1]}]},{"pos":[7239,7256],"content":"CopyTo(C[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(C[],Int32)","pos":[0,17]}]},{"pos":[7450,7451],"content":"C","needQuote":true,"needEscape":true,"nodes":[{"content":"C","pos":[0,1]}]},{"pos":[7551,7556],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7770,7780],"content":"GetCount()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCount()","pos":[0,10]}]},{"pos":[7976,7981],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8200,8215],"content":"GetIsReadOnly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIsReadOnly()","pos":[0,15]}]},{"pos":[8423,8430],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8650,8659],"content":"Remove(C)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(C)","pos":[0,9]}]},{"pos":[8855,8862],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8963,8964],"content":"C","needQuote":true,"needEscape":true,"nodes":[{"content":"C","pos":[0,1]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1\n  id: ICollectionContract`1\n  children:\n  - System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)\n  - System.AddIn.Contract.Collections.ICollectionContract`1.Clear\n  - System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)\n  - System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)\n  - System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\n  - System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly\n  - System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)\n  langs:\n  - csharp\n  name: ICollectionContract<C>\n  nameWithType: ICollectionContract<C>\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>\n  type: Interface\n  syntax:\n    content: 'public interface ICollectionContract<C> : System.AddIn.Contract.Collections.IEnumerableContract<C> where C : IContract'\n    typeParameters:\n    - id: C\n      description: Parameter description to be filled\n  implements:\n  - System.AddIn.Contract.Collections.IEnumerableContract<C>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)\n  id: Add(`0)\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  langs:\n  - csharp\n  name: Add(C)\n  nameWithType: ICollectionContract<C>.Add(C)\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Add(C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void Add (C item);\n    parameters:\n    - id: item\n      type: C\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Clear\n  id: Clear\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ICollectionContract<C>.Clear()\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Clear()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  langs:\n  - csharp\n  name: Contains(C)\n  nameWithType: ICollectionContract<C>.Contains(C)\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Contains(C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public bool Contains (C item);\n    parameters:\n    - id: item\n      type: C\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  langs:\n  - csharp\n  name: CopyTo(C[],Int32)\n  nameWithType: ICollectionContract<C>.CopyTo(C[],Int32)\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.CopyTo(C[],Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void CopyTo (C[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: C[]\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\n  id: GetCount\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  langs:\n  - csharp\n  name: GetCount()\n  nameWithType: ICollectionContract<C>.GetCount()\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetCount()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public int GetCount ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly\n  id: GetIsReadOnly\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  langs:\n  - csharp\n  name: GetIsReadOnly()\n  nameWithType: ICollectionContract<C>.GetIsReadOnly()\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetIsReadOnly()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public bool GetIsReadOnly ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  langs:\n  - csharp\n  name: Remove(C)\n  nameWithType: ICollectionContract<C>.Remove(C)\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Remove(C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public bool Remove (C item);\n    parameters:\n    - id: item\n      type: C\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  isExternal: false\n  name: Add(C)\n  nameWithType: ICollectionContract<C>.Add(C)\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Add(C)\n- uid: C\n  parent: ''\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Clear\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  isExternal: false\n  name: Clear()\n  nameWithType: ICollectionContract<C>.Clear()\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Clear()\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  isExternal: false\n  name: Contains(C)\n  nameWithType: ICollectionContract<C>.Contains(C)\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Contains(C)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: C\n  parent: ''\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  isExternal: false\n  name: CopyTo(C[],Int32)\n  nameWithType: ICollectionContract<C>.CopyTo(C[],Int32)\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.CopyTo(C[],Int32)\n- uid: C\n  parent: ''\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  isExternal: false\n  name: GetCount()\n  nameWithType: ICollectionContract<C>.GetCount()\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetCount()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  isExternal: false\n  name: GetIsReadOnly()\n  nameWithType: ICollectionContract<C>.GetIsReadOnly()\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetIsReadOnly()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)\n  parent: System.AddIn.Contract.Collections.ICollectionContract`1\n  isExternal: false\n  name: Remove(C)\n  nameWithType: ICollectionContract<C>.Remove(C)\n  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Remove(C)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: C\n  parent: ''\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n"}