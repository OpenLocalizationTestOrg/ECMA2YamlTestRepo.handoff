{"nodes":[{"pos":[678,690],"content":"LogConverter","needQuote":true,"needEscape":true,"nodes":[{"content":"LogConverter","pos":[0,12]}]},{"pos":[1161,1175],"content":"LogConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"LogConverter()","pos":[0,14]}]},{"pos":[1767,1810],"content":"CanConvertFrom(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext,Type)","pos":[0,43]}]},{"pos":[2307,2341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2406,2440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2499,2533],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2922,2976],"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","pos":[0,54]}]},{"pos":[3533,3567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3650,3684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3746,3780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3838,3872],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4179,4220],"content":"GetStandardValues(ITypeDescriptorContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetStandardValues(ITypeDescriptorContext)","pos":[0,41]}]},{"pos":[4755,4789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4894,4928],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5253,5303],"content":"GetStandardValuesSupported(ITypeDescriptorContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetStandardValuesSupported(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[5809,5843],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5902,5936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6069,6104],"content":"System.ComponentModel.TypeConverter","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ComponentModel.TypeConverter","pos":[0,35]}]},{"pos":[6234,6248],"content":"LogConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"LogConverter()","pos":[0,14]}]},{"pos":[6555,6598],"content":"CanConvertFrom(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext,Type)","pos":[0,43]}]},{"pos":[6834,6841],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7004,7026],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[7187,7191],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7465,7519],"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","pos":[0,54]}]},{"pos":[7776,7782],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7943,7965],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[8161,8172],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[8312,8318],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8555,8596],"content":"GetStandardValues(ITypeDescriptorContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetStandardValues(ITypeDescriptorContext)","pos":[0,41]}]},{"pos":[8863,8876],"content":"TypeConverter","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeConverter","pos":[0,13]}]},{"pos":[9091,9113],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[9406,9456],"content":"GetStandardValuesSupported(ITypeDescriptorContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetStandardValuesSupported(ITypeDescriptorContext)","pos":[0,50]}]},{"pos":[9706,9713],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9876,9898],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Design.LogConverter\n  id: LogConverter\n  children:\n  - System.Diagnostics.Design.LogConverter.#ctor\n  - System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: LogConverter\n  nameWithType: LogConverter\n  fullName: System.Diagnostics.Design.LogConverter\n  type: Class\n  syntax:\n    content: 'public class LogConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Design.LogConverter.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Design.LogConverter\n  langs:\n  - csharp\n  name: LogConverter()\n  nameWithType: LogConverter.LogConverter()\n  fullName: System.Diagnostics.Design.LogConverter.LogConverter()\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.Diagnostics.Design\n  syntax:\n    content: public LogConverter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Diagnostics.Design.LogConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: LogConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Diagnostics.Design.LogConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Diagnostics.Design\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: sourceType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Diagnostics.Design.LogConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: LogConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Diagnostics.Design.LogConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Diagnostics.Design\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Diagnostics.Design.LogConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: LogConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Diagnostics.Design.LogConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Diagnostics.Design\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    return:\n      type: System.ComponentModel.TypeConverter+StandardValuesCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Diagnostics.Design.LogConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: LogConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Diagnostics.Design\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.Diagnostics.Design.LogConverter.#ctor\n  parent: System.Diagnostics.Design.LogConverter\n  isExternal: false\n  name: LogConverter()\n  nameWithType: LogConverter.LogConverter()\n  fullName: System.Diagnostics.Design.LogConverter.LogConverter()\n- uid: System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Diagnostics.Design.LogConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: LogConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Diagnostics.Design.LogConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Diagnostics.Design.LogConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: LogConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Diagnostics.Design.LogConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Diagnostics.Design.LogConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: LogConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.Diagnostics.Design.LogConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: true\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Diagnostics.Design.LogConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: LogConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n"}