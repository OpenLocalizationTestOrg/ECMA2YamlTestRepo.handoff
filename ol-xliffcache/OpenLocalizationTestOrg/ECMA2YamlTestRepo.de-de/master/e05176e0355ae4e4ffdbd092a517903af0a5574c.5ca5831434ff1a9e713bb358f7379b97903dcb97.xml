{"nodes":[{"pos":[579,588],"content":"CommonAce","needQuote":true,"needEscape":true,"nodes":[{"content":"CommonAce","pos":[0,9]}]},{"pos":[3041,3113],"content":"CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])","pos":[0,72]}]},{"pos":[3770,3804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3899,3933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3999,4033],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4124,4158],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4226,4260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4323,4357],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4564,4576],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[4889,4923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5188,5215],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[5608,5642],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5704,5738],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5983,6007],"content":"MaxOpaqueLength(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxOpaqueLength(Boolean)","pos":[0,24]}]},{"pos":[6380,6414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6471,6505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6645,6687],"content":"System.Security.AccessControl.QualifiedAce","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.QualifiedAce","pos":[0,42]}]},{"pos":[6989,7061],"content":"CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])","pos":[0,72]}]},{"pos":[7400,7408],"content":"AceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AceFlags","pos":[0,8]}]},{"pos":[7603,7615],"content":"AceQualifier","needQuote":true,"needEscape":true,"nodes":[{"content":"AceQualifier","pos":[0,12]}]},{"pos":[7765,7770],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7934,7952],"content":"SecurityIdentifier","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityIdentifier","pos":[0,18]}]},{"pos":[8112,8119],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8235,8239],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8425,8437],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[8607,8612],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8827,8854],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[9053,9057],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9170,9175],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9380,9404],"content":"MaxOpaqueLength(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxOpaqueLength(Boolean)","pos":[0,24]}]},{"pos":[9598,9603],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9718,9725],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CommonAce\n  id: CommonAce\n  children:\n  - System.Security.AccessControl.CommonAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])\n  - System.Security.AccessControl.CommonAce.BinaryLength\n  - System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)\n  langs:\n  - csharp\n  name: CommonAce\n  nameWithType: CommonAce\n  fullName: System.Security.AccessControl.CommonAce\n  type: Class\n  syntax:\n    content: 'public sealed class CommonAce : System.Security.AccessControl.QualifiedAce'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAce\n  - System.Security.AccessControl.KnownAce\n  - System.Security.AccessControl.QualifiedAce\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  - System.Security.AccessControl.KnownAce.AccessMask\n  - System.Security.AccessControl.KnownAce.SecurityIdentifier\n  - System.Security.AccessControl.QualifiedAce.AceQualifier\n  - System.Security.AccessControl.QualifiedAce.GetOpaque\n  - System.Security.AccessControl.QualifiedAce.IsCallback\n  - System.Security.AccessControl.QualifiedAce.OpaqueLength\n  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CommonAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])\n  id: '#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])'\n  parent: System.Security.AccessControl.CommonAce\n  langs:\n  - csharp\n  name: CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])\n  nameWithType: CommonAce.CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])\n  fullName: System.Security.AccessControl.CommonAce.CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public CommonAce (System.Security.AccessControl.AceFlags flags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, bool isCallback, byte[] opaque);\n    parameters:\n    - id: flags\n      type: System.Security.AccessControl.AceFlags\n      description: Parameter description to be filled\n    - id: qualifier\n      type: System.Security.AccessControl.AceQualifier\n      description: Parameter description to be filled\n    - id: accessMask\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: Parameter description to be filled\n    - id: isCallback\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: opaque\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CommonAce.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.CommonAce\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: CommonAce.BinaryLength\n  fullName: System.Security.AccessControl.CommonAce.BinaryLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CommonAce\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: CommonAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.CommonAce.GetBinaryForm(Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)\n  id: MaxOpaqueLength(System.Boolean)\n  parent: System.Security.AccessControl.CommonAce\n  langs:\n  - csharp\n  name: MaxOpaqueLength(Boolean)\n  nameWithType: CommonAce.MaxOpaqueLength(Boolean)\n  fullName: System.Security.AccessControl.CommonAce.MaxOpaqueLength(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public static int MaxOpaqueLength (bool isCallback);\n    parameters:\n    - id: isCallback\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: System.Security.AccessControl.QualifiedAce\n- uid: System.Security.AccessControl.CommonAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])\n  parent: System.Security.AccessControl.CommonAce\n  isExternal: false\n  name: CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])\n  nameWithType: CommonAce.CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])\n  fullName: System.Security.AccessControl.CommonAce.CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])\n- uid: System.Security.AccessControl.AceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceFlags\n  nameWithType: AceFlags\n  fullName: System.Security.AccessControl.AceFlags\n- uid: System.Security.AccessControl.AceQualifier\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceQualifier\n  nameWithType: AceQualifier\n  fullName: System.Security.AccessControl.AceQualifier\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.AccessControl.CommonAce.BinaryLength\n  parent: System.Security.AccessControl.CommonAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: CommonAce.BinaryLength\n  fullName: System.Security.AccessControl.CommonAce.BinaryLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CommonAce\n  isExternal: false\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: CommonAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.CommonAce.GetBinaryForm(Byte[],Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)\n  parent: System.Security.AccessControl.CommonAce\n  isExternal: false\n  name: MaxOpaqueLength(Boolean)\n  nameWithType: CommonAce.MaxOpaqueLength(Boolean)\n  fullName: System.Security.AccessControl.CommonAce.MaxOpaqueLength(Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}