{"nodes":[{"pos":[3217,3233],"content":"VectorCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"VectorCollection","pos":[0,16]}]},{"pos":[4387,4405],"content":"VectorCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"VectorCollection()","pos":[0,18]}]},{"pos":[5002,5039],"content":"VectorCollection(IEnumerable<ph id=\"ph1\">&lt;Vector&gt;</ph>)","needQuote":true,"needEscape":true,"source":"VectorCollection(IEnumerable<Vector>)"},{"pos":[5541,5575],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5794,5817],"content":"VectorCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"VectorCollection(Int32)","pos":[0,23]}]},{"pos":[6180,6214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6445,6456],"content":"Add(Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Vector)","pos":[0,11]}]},{"pos":[6803,6837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7026,7033],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[7469,7476],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[7838,7872],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8121,8141],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[8532,8566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8779,8798],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[9196,9230],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9503,9535],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[9962,9996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10237,10253],"content":"Contains(Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Vector)","pos":[0,16]}]},{"pos":[10615,10649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10708,10742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11009,11031],"content":"CopyTo(Vector[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Vector[],Int32)","pos":[0,22]}]},{"pos":[11418,11452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11513,11547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11736,11741],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[12028,12062],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12277,12297],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[12684,12718],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12979,13005],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[13414,13448],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13733,13771],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[14216,14250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14455,14470],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[14878,14912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15151,15166],"content":"IndexOf(Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Vector)","pos":[0,15]}]},{"pos":[15524,15558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15615,15649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15912,15932],"content":"Insert(Int32,Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Vector)","pos":[0,20]}]},{"pos":[16302,16336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16406,16440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16655,16666],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[17018,17052],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17118,17152],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17371,17384],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[17756,17790],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17872,17906],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18143,18157],"content":"Remove(Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Vector)","pos":[0,14]}]},{"pos":[18513,18547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18606,18640],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18863,18878],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[19211,19245],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19582,19620],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[20036,20070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20413,20453],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[20950,20984],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21305,21355],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[21774,21808],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21869,21903],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22186,22231],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[22634,22668],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22939,22978],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[23364,23398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23679,23725],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[24164,24198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24477,24513],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[24885,24919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24976,25010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25299,25340],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[25728,25762],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25821,25855],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26142,26182],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[26566,26600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26657,26691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27002,27047],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[27451,27485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27547,27581],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27846,27882],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[28258,28292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28555,28590],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[28963,28997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29276,29312],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[29717,29751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29809,29843],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30128,30167],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[30549,30583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30908,30960],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[31407,31441],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31515,31549],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31607,31641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31836,31846],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[32171,32205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32508,32533],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[32916,32950],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33008,33042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33224,33248],"content":"System.Windows.Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Freezable","pos":[0,24]}]},{"pos":[33376,33394],"content":"VectorCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"VectorCollection()","pos":[0,18]}]},{"pos":[33706,33743],"content":"VectorCollection(IEnumerable<ph id=\"ph1\">&lt;Vector&gt;</ph>)","needQuote":true,"needEscape":true,"source":"VectorCollection(IEnumerable<Vector>)"},{"pos":[34037,34056],"content":"IEnumerable<ph id=\"ph1\">&lt;Vector&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Vector>"},{"pos":[34308,34331],"content":"VectorCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"VectorCollection(Int32)","pos":[0,23]}]},{"pos":[34528,34533],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34729,34740],"content":"Add(Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Vector)","pos":[0,11]}]},{"pos":[34929,34935],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[35120,35127],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[35354,35361],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[35565,35581],"content":"VectorCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"VectorCollection","pos":[0,16]}]},{"pos":[35822,35842],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[36052,36061],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[36264,36283],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[36511,36527],"content":"VectorCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"VectorCollection","pos":[0,16]}]},{"pos":[36780,36812],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[37046,37055],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[37272,37288],"content":"Contains(Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Vector)","pos":[0,16]}]},{"pos":[37473,37480],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37613,37619],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[37843,37865],"content":"CopyTo(Vector[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Vector[],Int32)","pos":[0,22]}]},{"pos":[38076,38082],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[38207,38212],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38387,38392],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[38553,38558],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38746,38766],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[38976,38985],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39212,39238],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[39460,39469],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39708,39746],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[39992,40001],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[40200,40215],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[40446,40473],"content":"VectorCollection+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"VectorCollection+Enumerator","pos":[0,27]}]},{"pos":[40731,40746],"content":"IndexOf(Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Vector)","pos":[0,15]}]},{"pos":[40927,40932],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41061,41067],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[41289,41309],"content":"Insert(Int32,Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Vector)","pos":[0,20]}]},{"pos":[41500,41505],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41634,41640],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[41838,41849],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[42038,42044],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[42167,42172],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42362,42375],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[42591,42607],"content":"VectorCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"VectorCollection","pos":[0,16]}]},{"pos":[42757,42763],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42964,42978],"content":"Remove(Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Vector)","pos":[0,14]}]},{"pos":[43159,43166],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43299,43305],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[43507,43522],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[43703,43708],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43950,43988],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[44217,44224],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44473,44513],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[44813,44832],"content":"IEnumerator<ph id=\"ph1\">&lt;Vector&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<Vector>"},{"pos":[45129,45179],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[45430,45435],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[45548,45553],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45768,45813],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[46056,46063],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46276,46315],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[46545,46551],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46767,46813],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[47086,47097],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[47334,47370],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[47593,47598],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47712,47718],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47938,47979],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[48214,48221],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[48339,48345],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48564,48604],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[48835,48840],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48954,48960],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49191,49236],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[49477,49482],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49596,49602],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49810,49846],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[50071,50078],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50287,50322],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[50545,50552],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50769,50805],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[51029,51035],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51150,51155],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[51371,51410],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[51640,51646],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51884,51936],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[52192,52198],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52314,52320],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52445,52460],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[52658,52668],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[52840,52846],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53050,53075],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[53277,53283],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53408,53423],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.VectorCollection\n  id: VectorCollection\n  children:\n  - System.Windows.Media.VectorCollection.#ctor\n  - System.Windows.Media.VectorCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Vector})\n  - System.Windows.Media.VectorCollection.#ctor(System.Int32)\n  - System.Windows.Media.VectorCollection.Add(System.Windows.Vector)\n  - System.Windows.Media.VectorCollection.Clear\n  - System.Windows.Media.VectorCollection.Clone\n  - System.Windows.Media.VectorCollection.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.VectorCollection.CloneCurrentValue\n  - System.Windows.Media.VectorCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.VectorCollection.Contains(System.Windows.Vector)\n  - System.Windows.Media.VectorCollection.CopyTo(System.Windows.Vector[],System.Int32)\n  - System.Windows.Media.VectorCollection.Count\n  - System.Windows.Media.VectorCollection.CreateInstanceCore\n  - System.Windows.Media.VectorCollection.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.VectorCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.VectorCollection.GetEnumerator\n  - System.Windows.Media.VectorCollection.IndexOf(System.Windows.Vector)\n  - System.Windows.Media.VectorCollection.Insert(System.Int32,System.Windows.Vector)\n  - System.Windows.Media.VectorCollection.Item(System.Int32)\n  - System.Windows.Media.VectorCollection.Parse(System.String)\n  - System.Windows.Media.VectorCollection.Remove(System.Windows.Vector)\n  - System.Windows.Media.VectorCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.VectorCollection.System#Collections#Generic#ICollection{System#Windows#Vector}#IsReadOnly\n  - System.Windows.Media.VectorCollection.System#Collections#Generic#IEnumerable{System#Windows#Vector}#GetEnumerator\n  - System.Windows.Media.VectorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.VectorCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Media.VectorCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.Media.VectorCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.VectorCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.VectorCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.VectorCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.VectorCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.VectorCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Media.VectorCollection.System#Collections#IList#IsReadOnly\n  - System.Windows.Media.VectorCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.VectorCollection.System#Collections#IList#Remove(System.Object)\n  - System.Windows.Media.VectorCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.VectorCollection.ToString\n  - System.Windows.Media.VectorCollection.ToString(System.IFormatProvider)\n  langs:\n  - csharp\n  name: VectorCollection\n  nameWithType: VectorCollection\n  fullName: System.Windows.Media.VectorCollection\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.VectorCollectionConverter))]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.VectorCollectionValueSerializer))]\n\n      public sealed class VectorCollection : System.Windows.Freezable, IFormattable, System.Collections.Generic.ICollection<System.Windows.Vector>, System.Collections.Generic.IEnumerable<System.Windows.Vector>, System.Collections.Generic.IList<System.Windows.Vector>, System.Collections.IList\n  inheritance:\n  - System.Windows.Freezable\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.Vector>\n  - System.Collections.Generic.IEnumerable<System.Windows.Vector>\n  - System.Collections.Generic.IList<System.Windows.Vector>\n  - System.Collections.IList\n  - System.IFormattable\n  inheritedMembers: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: VectorCollection()\n  nameWithType: VectorCollection.VectorCollection()\n  fullName: System.Windows.Media.VectorCollection.VectorCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public VectorCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Vector})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Vector})'\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: VectorCollection(IEnumerable<Vector>)\n  nameWithType: VectorCollection.VectorCollection(IEnumerable<Vector>)\n  fullName: System.Windows.Media.VectorCollection.VectorCollection(IEnumerable<Vector>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public VectorCollection (System.Collections.Generic.IEnumerable<System.Windows.Vector> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{System.Windows.Vector}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: VectorCollection(Int32)\n  nameWithType: VectorCollection.VectorCollection(Int32)\n  fullName: System.Windows.Media.VectorCollection.VectorCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public VectorCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.Add(System.Windows.Vector)\n  id: Add(System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: Add(Vector)\n  nameWithType: VectorCollection.Add(Vector)\n  fullName: System.Windows.Media.VectorCollection.Add(Vector)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Add (System.Windows.Vector value);\n    parameters:\n    - id: value\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: VectorCollection.Clear()\n  fullName: System.Windows.Media.VectorCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.Clone\n  id: Clone\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: VectorCollection.Clone()\n  fullName: System.Windows.Media.VectorCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.VectorCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.VectorCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: VectorCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.VectorCollection.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: VectorCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.VectorCollection.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.VectorCollection CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.VectorCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: VectorCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.VectorCollection.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.Contains(System.Windows.Vector)\n  id: Contains(System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: Contains(Vector)\n  nameWithType: VectorCollection.Contains(Vector)\n  fullName: System.Windows.Media.VectorCollection.Contains(Vector)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Contains (System.Windows.Vector value);\n    parameters:\n    - id: value\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.CopyTo(System.Windows.Vector[],System.Int32)\n  id: CopyTo(System.Windows.Vector[],System.Int32)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: CopyTo(Vector[],Int32)\n  nameWithType: VectorCollection.CopyTo(Vector[],Int32)\n  fullName: System.Windows.Media.VectorCollection.CopyTo(Vector[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void CopyTo (System.Windows.Vector[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Vector[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.Count\n  id: Count\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: VectorCollection.Count\n  fullName: System.Windows.Media.VectorCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: VectorCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.VectorCollection.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: VectorCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.VectorCollection.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: VectorCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.VectorCollection.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: VectorCollection.GetEnumerator()\n  fullName: System.Windows.Media.VectorCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.VectorCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.Media.VectorCollection.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.IndexOf(System.Windows.Vector)\n  id: IndexOf(System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: IndexOf(Vector)\n  nameWithType: VectorCollection.IndexOf(Vector)\n  fullName: System.Windows.Media.VectorCollection.IndexOf(Vector)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int IndexOf (System.Windows.Vector value);\n    parameters:\n    - id: value\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.Insert(System.Int32,System.Windows.Vector)\n  id: Insert(System.Int32,System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: Insert(Int32,Vector)\n  nameWithType: VectorCollection.Insert(Int32,Vector)\n  fullName: System.Windows.Media.VectorCollection.Insert(Int32,Vector)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Insert (int index, System.Windows.Vector value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: VectorCollection.Item(Int32)\n  fullName: System.Windows.Media.VectorCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Vector this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: VectorCollection.Parse(String)\n  fullName: System.Windows.Media.VectorCollection.Parse(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.VectorCollection Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.VectorCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.Remove(System.Windows.Vector)\n  id: Remove(System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: Remove(Vector)\n  nameWithType: VectorCollection.Remove(Vector)\n  fullName: System.Windows.Media.VectorCollection.Remove(Vector)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Remove (System.Windows.Vector value);\n    parameters:\n    - id: value\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: VectorCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.VectorCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#Generic#ICollection{System#Windows#Vector}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Windows#Vector}#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: VectorCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.VectorCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Windows.Vector>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#Generic#IEnumerable{System#Windows#Vector}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Windows#Vector}#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: VectorCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.VectorCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Windows.Vector> IEnumerable<Vector>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.Vector}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: VectorCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: VectorCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.VectorCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: VectorCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.VectorCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: VectorCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: VectorCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: VectorCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: VectorCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: VectorCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: VectorCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: VectorCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: VectorCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: VectorCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: VectorCollection.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.VectorCollection.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.ToString\n  id: ToString\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: VectorCollection.ToString()\n  fullName: System.Windows.Media.VectorCollection.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.VectorCollection.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.VectorCollection.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Media.VectorCollection\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: VectorCollection.ToString(IFormatProvider)\n  fullName: System.Windows.Media.VectorCollection.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.VectorCollection.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Freezable\n  isExternal: false\n  name: System.Windows.Freezable\n- uid: System.Windows.Media.VectorCollection.#ctor\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: VectorCollection()\n  nameWithType: VectorCollection.VectorCollection()\n  fullName: System.Windows.Media.VectorCollection.VectorCollection()\n- uid: System.Windows.Media.VectorCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Vector})\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: VectorCollection(IEnumerable<Vector>)\n  nameWithType: VectorCollection.VectorCollection(IEnumerable<Vector>)\n  fullName: System.Windows.Media.VectorCollection.VectorCollection(IEnumerable<Vector>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Vector}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Vector>\n  nameWithType: IEnumerable<Vector>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Vector>\n- uid: System.Windows.Media.VectorCollection.#ctor(System.Int32)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: VectorCollection(Int32)\n  nameWithType: VectorCollection.VectorCollection(Int32)\n  fullName: System.Windows.Media.VectorCollection.VectorCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.VectorCollection.Add(System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: Add(Vector)\n  nameWithType: VectorCollection.Add(Vector)\n  fullName: System.Windows.Media.VectorCollection.Add(Vector)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Media.VectorCollection.Clear\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: VectorCollection.Clear()\n  fullName: System.Windows.Media.VectorCollection.Clear()\n- uid: System.Windows.Media.VectorCollection.Clone\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: VectorCollection.Clone()\n  fullName: System.Windows.Media.VectorCollection.Clone()\n- uid: System.Windows.Media.VectorCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: VectorCollection\n  nameWithType: VectorCollection\n  fullName: System.Windows.Media.VectorCollection\n- uid: System.Windows.Media.VectorCollection.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: VectorCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.VectorCollection.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.VectorCollection.CloneCurrentValue\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: VectorCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.VectorCollection.CloneCurrentValue()\n- uid: System.Windows.Media.VectorCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: VectorCollection\n  nameWithType: VectorCollection\n  fullName: System.Windows.Media.VectorCollection\n- uid: System.Windows.Media.VectorCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: VectorCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.VectorCollection.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.VectorCollection.Contains(System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: Contains(Vector)\n  nameWithType: VectorCollection.Contains(Vector)\n  fullName: System.Windows.Media.VectorCollection.Contains(Vector)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Media.VectorCollection.CopyTo(System.Windows.Vector[],System.Int32)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: CopyTo(Vector[],Int32)\n  nameWithType: VectorCollection.CopyTo(Vector[],Int32)\n  fullName: System.Windows.Media.VectorCollection.CopyTo(Vector[],Int32)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.VectorCollection.Count\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: Count\n  nameWithType: VectorCollection.Count\n  fullName: System.Windows.Media.VectorCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.VectorCollection.CreateInstanceCore\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: VectorCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.VectorCollection.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.VectorCollection.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: VectorCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.VectorCollection.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.VectorCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: VectorCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.VectorCollection.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.VectorCollection.GetEnumerator\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: VectorCollection.GetEnumerator()\n  fullName: System.Windows.Media.VectorCollection.GetEnumerator()\n- uid: System.Windows.Media.VectorCollection.Enumerator\n  parent: System.Windows.Media\n  isExternal: false\n  name: VectorCollection+Enumerator\n  nameWithType: VectorCollection+Enumerator\n  fullName: System.Windows.Media.VectorCollection+Enumerator\n- uid: System.Windows.Media.VectorCollection.IndexOf(System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: IndexOf(Vector)\n  nameWithType: VectorCollection.IndexOf(Vector)\n  fullName: System.Windows.Media.VectorCollection.IndexOf(Vector)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Media.VectorCollection.Insert(System.Int32,System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: Insert(Int32,Vector)\n  nameWithType: VectorCollection.Insert(Int32,Vector)\n  fullName: System.Windows.Media.VectorCollection.Insert(Int32,Vector)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Media.VectorCollection.Item(System.Int32)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: VectorCollection.Item(Int32)\n  fullName: System.Windows.Media.VectorCollection.Item(Int32)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.VectorCollection.Parse(System.String)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: Parse(String)\n  nameWithType: VectorCollection.Parse(String)\n  fullName: System.Windows.Media.VectorCollection.Parse(String)\n- uid: System.Windows.Media.VectorCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: VectorCollection\n  nameWithType: VectorCollection\n  fullName: System.Windows.Media.VectorCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.VectorCollection.Remove(System.Windows.Vector)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: Remove(Vector)\n  nameWithType: VectorCollection.Remove(Vector)\n  fullName: System.Windows.Media.VectorCollection.Remove(Vector)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Media.VectorCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: VectorCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.VectorCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.VectorCollection.System#Collections#Generic#ICollection{System#Windows#Vector}#IsReadOnly\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: VectorCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.VectorCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.VectorCollection.System#Collections#Generic#IEnumerable{System#Windows#Vector}#GetEnumerator\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: VectorCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.VectorCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.Vector}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<Vector>\n  nameWithType: IEnumerator<Vector>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.Vector>\n- uid: System.Windows.Media.VectorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: VectorCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.VectorCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: VectorCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.VectorCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.VectorCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: VectorCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.VectorCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.VectorCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: VectorCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: VectorCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: VectorCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: VectorCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: VectorCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: VectorCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: VectorCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: VectorCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.VectorCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: VectorCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.VectorCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.VectorCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: VectorCollection.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.VectorCollection.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.VectorCollection.ToString\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: ToString()\n  nameWithType: VectorCollection.ToString()\n  fullName: System.Windows.Media.VectorCollection.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.VectorCollection.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: VectorCollection.ToString(IFormatProvider)\n  fullName: System.Windows.Media.VectorCollection.ToString(IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.VectorCollection.ToString*\n  parent: System.Windows.Media.VectorCollection\n  isExternal: false\n  nameWithType: VectorCollection.\n"}