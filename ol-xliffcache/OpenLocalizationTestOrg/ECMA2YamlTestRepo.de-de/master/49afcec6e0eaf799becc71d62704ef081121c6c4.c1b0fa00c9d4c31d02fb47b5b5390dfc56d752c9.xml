{"nodes":[{"pos":[833,847],"content":"ValueTuple<ph id=\"ph1\">&lt;T1&gt;</ph>","needQuote":true,"needEscape":true,"source":"ValueTuple<T1>"},{"pos":[1188,1222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1656,1670],"content":"ValueTuple(T1)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1)","pos":[0,14]}]},{"pos":[1952,1986],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2189,2214],"content":"CompareTo(ValueTuple<ph id=\"ph1\">&lt;T1&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CompareTo(ValueTuple<T1>)"},{"pos":[2545,2579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2636,2670],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2855,2869],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3167,3201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3260,3294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3531,3553],"content":"Equals(ValueTuple<ph id=\"ph1\">&lt;T1&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Equals(ValueTuple<T1>)"},{"pos":[3876,3910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3969,4003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4208,4221],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[4511,4545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4698,4703],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[4928,4962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5307,5375],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[5832,5866],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5946,5980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6037,6071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6424,6496],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[6966,7000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7088,7122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7181,7215],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7550,7620],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[8102,8136],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8193,8227],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8470,8506],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[8850,8884],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8941,8975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9134,9144],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9429,9463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9577,9593],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[9689,9703],"content":"ValueTuple(T1)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1)","pos":[0,14]}]},{"pos":[9849,9851],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[10002,10027],"content":"CompareTo(ValueTuple<ph id=\"ph1\">&lt;T1&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CompareTo(ValueTuple<T1>)"},{"pos":[10210,10215],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10335,10349],"content":"ValueTuple<ph id=\"ph1\">&lt;T1&gt;</ph>","needQuote":true,"needEscape":true,"source":"ValueTuple<T1>"},{"pos":[10522,10536],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[10699,10706],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10824,10830],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10993,11015],"content":"Equals(ValueTuple<ph id=\"ph1\">&lt;T1&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Equals(ValueTuple<T1>)"},{"pos":[11194,11201],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11325,11339],"content":"ValueTuple<ph id=\"ph1\">&lt;T1&gt;</ph>","needQuote":true,"needEscape":true,"source":"ValueTuple<T1>"},{"pos":[11502,11515],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11674,11679],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11818,11823],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[11951,11953],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[12168,12236],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[12505,12510],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12624,12630],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12773,12782],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[13034,13106],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[13385,13392],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13510,13516],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13667,13684],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[13943,14013],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[14286,14291],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14440,14457],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[14670,14706],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[14911,14916],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15030,15036],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15180,15190],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15344,15350],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple`1\n  id: ValueTuple`1\n  children:\n  - System.ValueTuple`1.#ctor(`0)\n  - System.ValueTuple`1.CompareTo(System.ValueTuple`1)\n  - System.ValueTuple`1.Equals(System.Object)\n  - System.ValueTuple`1.Equals(System.ValueTuple`1)\n  - System.ValueTuple`1.GetHashCode\n  - System.ValueTuple`1.Item1\n  - System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple`1.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple`1.ToString\n  langs:\n  - csharp\n  name: ValueTuple<T1>\n  nameWithType: ValueTuple<T1>\n  fullName: System.ValueTuple<T1>\n  type: Struct\n  syntax:\n    content: 'public struct ValueTuple<T1> : IComparable, IComparable<ValueTuple<T1>>, IEquatable<ValueTuple<T1>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable<System.ValueTuple<T1>>\n  - System.IEquatable<System.ValueTuple<T1>>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: ValueTuple(T1)\n  nameWithType: ValueTuple<T1>.ValueTuple(T1)\n  fullName: System.ValueTuple<T1>.ValueTuple(T1)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ValueTuple (T1 item1);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.CompareTo(System.ValueTuple`1)\n  id: CompareTo(System.ValueTuple`1)\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple<T1>)\n  nameWithType: ValueTuple<T1>.CompareTo(ValueTuple<T1>)\n  fullName: System.ValueTuple<T1>.CompareTo(ValueTuple<T1>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int CompareTo (ValueTuple<T1> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1>.Equals(Object)\n  fullName: System.ValueTuple<T1>.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`1.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.Equals(System.ValueTuple`1)\n  id: Equals(System.ValueTuple`1)\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: Equals(ValueTuple<T1>)\n  nameWithType: ValueTuple<T1>.Equals(ValueTuple<T1>)\n  fullName: System.ValueTuple<T1>.Equals(ValueTuple<T1>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ValueTuple<T1> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`1.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1>.GetHashCode()\n  fullName: System.ValueTuple<T1>.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.Item1\n  id: Item1\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: ValueTuple<T1>.Item1\n  fullName: System.ValueTuple<T1>.Item1\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T1 Item1;\n    return:\n      type: T1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1>.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`1.ToString\n  id: ToString\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple<T1>.ToString()\n  fullName: System.ValueTuple<T1>.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ValueTuple`1.#ctor(`0)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: ValueTuple(T1)\n  nameWithType: ValueTuple<T1>.ValueTuple(T1)\n  fullName: System.ValueTuple<T1>.ValueTuple(T1)\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple`1.CompareTo(System.ValueTuple`1)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: CompareTo(ValueTuple<T1>)\n  nameWithType: ValueTuple<T1>.CompareTo(ValueTuple<T1>)\n  fullName: System.ValueTuple<T1>.CompareTo(ValueTuple<T1>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`1\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1>\n  nameWithType: ValueTuple<T1>\n  fullName: System.ValueTuple<T1>\n- uid: System.ValueTuple`1.Equals(System.Object)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1>.Equals(Object)\n  fullName: System.ValueTuple<T1>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`1.Equals(System.ValueTuple`1)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: Equals(ValueTuple<T1>)\n  nameWithType: ValueTuple<T1>.Equals(ValueTuple<T1>)\n  fullName: System.ValueTuple<T1>.Equals(ValueTuple<T1>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueTuple`1\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1>\n  nameWithType: ValueTuple<T1>\n  fullName: System.ValueTuple<T1>\n- uid: System.ValueTuple`1.GetHashCode\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1>.GetHashCode()\n  fullName: System.ValueTuple<T1>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`1.Item1\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: Item1\n  nameWithType: ValueTuple<T1>.Item1\n  fullName: System.ValueTuple<T1>.Item1\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`1.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1>.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`1.ToString\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple<T1>.ToString()\n  fullName: System.ValueTuple<T1>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple`1.Equals*\n  parent: System.ValueTuple`1\n  isExternal: false\n  nameWithType: ValueTuple<T1>.\n"}