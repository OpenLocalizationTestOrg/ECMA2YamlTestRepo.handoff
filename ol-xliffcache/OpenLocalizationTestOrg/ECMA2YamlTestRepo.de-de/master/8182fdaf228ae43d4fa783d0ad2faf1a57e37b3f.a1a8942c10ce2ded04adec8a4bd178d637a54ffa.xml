{"nodes":[{"pos":[980,991],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[1733,1752],"content":"CngProvider(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider(String)","pos":[0,19]}]},{"pos":[2107,2141],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2368,2382],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2721,2755],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2814,2848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3190,3209],"content":"Equals(CngProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CngProvider)","pos":[0,19]}]},{"pos":[3614,3648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3707,3741],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4009,4022],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[4353,4387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4644,4680],"content":"MicrosoftSmartCardKeyStorageProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"MicrosoftSmartCardKeyStorageProvider","pos":[0,36]}]},{"pos":[5133,5167],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5422,5457],"content":"MicrosoftSoftwareKeyStorageProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"MicrosoftSoftwareKeyStorageProvider","pos":[0,35]}]},{"pos":[5907,5941],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6314,6350],"content":"op_Equality(CngProvider,CngProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CngProvider,CngProvider)","pos":[0,36]}]},{"pos":[6849,6883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6972,7006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7065,7099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7476,7514],"content":"op_Inequality(CngProvider,CngProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CngProvider,CngProvider)","pos":[0,38]}]},{"pos":[8019,8053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8142,8176],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8235,8269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8470,8478],"content":"Provider","needQuote":true,"needEscape":true,"nodes":[{"content":"Provider","pos":[0,8]}]},{"pos":[8779,8813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9014,9024],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9350,9384],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9495,9508],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[9657,9676],"content":"CngProvider(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider(String)","pos":[0,19]}]},{"pos":[9864,9870],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10069,10083],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[10262,10269],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10387,10393],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10619,10638],"content":"Equals(CngProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CngProvider)","pos":[0,19]}]},{"pos":[10827,10834],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11001,11012],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[11233,11246],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11421,11426],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11638,11674],"content":"MicrosoftSmartCardKeyStorageProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"MicrosoftSmartCardKeyStorageProvider","pos":[0,36]}]},{"pos":[11945,11956],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[12201,12236],"content":"MicrosoftSoftwareKeyStorageProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"MicrosoftSoftwareKeyStorageProvider","pos":[0,35]}]},{"pos":[12505,12516],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[12820,12856],"content":"op_Equality(CngProvider,CngProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CngProvider,CngProvider)","pos":[0,36]}]},{"pos":[13079,13086],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13253,13264],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[13461,13472],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[13778,13816],"content":"op_Inequality(CngProvider,CngProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CngProvider,CngProvider)","pos":[0,38]}]},{"pos":[14043,14050],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14217,14228],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[14425,14436],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[14654,14662],"content":"Provider","needQuote":true,"needEscape":true,"nodes":[{"content":"Provider","pos":[0,8]}]},{"pos":[14828,14834],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15020,15030],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15200,15206],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CngProvider\n  id: CngProvider\n  children:\n  - System.Security.Cryptography.CngProvider.#ctor(System.String)\n  - System.Security.Cryptography.CngProvider.Equals(System.Object)\n  - System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)\n  - System.Security.Cryptography.CngProvider.GetHashCode\n  - System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider\n  - System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider\n  - System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)\n  - System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)\n  - System.Security.Cryptography.CngProvider.Provider\n  - System.Security.Cryptography.CngProvider.ToString\n  langs:\n  - csharp\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n  type: Class\n  syntax:\n    content: 'public sealed class CngProvider : IEquatable<System.Security.Cryptography.CngProvider>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable<System.Security.Cryptography.CngProvider>\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: CngProvider(String)\n  nameWithType: CngProvider.CngProvider(String)\n  fullName: System.Security.Cryptography.CngProvider.CngProvider(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public CngProvider (string provider);\n    parameters:\n    - id: provider\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CngProvider.Equals(Object)\n  fullName: System.Security.Cryptography.CngProvider.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.CngProvider.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)\n  id: Equals(System.Security.Cryptography.CngProvider)\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: Equals(CngProvider)\n  nameWithType: CngProvider.Equals(CngProvider)\n  fullName: System.Security.Cryptography.CngProvider.Equals(CngProvider)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.CngProvider other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.CngProvider\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.CngProvider.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CngProvider.GetHashCode()\n  fullName: System.Security.Cryptography.CngProvider.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider\n  id: MicrosoftSmartCardKeyStorageProvider\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: MicrosoftSmartCardKeyStorageProvider\n  nameWithType: CngProvider.MicrosoftSmartCardKeyStorageProvider\n  fullName: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngProvider MicrosoftSmartCardKeyStorageProvider { get; }\n    return:\n      type: System.Security.Cryptography.CngProvider\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider\n  id: MicrosoftSoftwareKeyStorageProvider\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: MicrosoftSoftwareKeyStorageProvider\n  nameWithType: CngProvider.MicrosoftSoftwareKeyStorageProvider\n  fullName: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngProvider MicrosoftSoftwareKeyStorageProvider { get; }\n    return:\n      type: System.Security.Cryptography.CngProvider\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)\n  id: op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: op_Equality(CngProvider,CngProvider)\n  nameWithType: CngProvider.op_Equality(CngProvider,CngProvider)\n  fullName: System.Security.Cryptography.CngProvider.op_Equality(CngProvider,CngProvider)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.CngProvider left, System.Security.Cryptography.CngProvider right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngProvider\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Cryptography.CngProvider\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)\n  id: op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: op_Inequality(CngProvider,CngProvider)\n  nameWithType: CngProvider.op_Inequality(CngProvider,CngProvider)\n  fullName: System.Security.Cryptography.CngProvider.op_Inequality(CngProvider,CngProvider)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.CngProvider left, System.Security.Cryptography.CngProvider right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngProvider\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Cryptography.CngProvider\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.Provider\n  id: Provider\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: Provider\n  nameWithType: CngProvider.Provider\n  fullName: System.Security.Cryptography.CngProvider.Provider\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public string Provider { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProvider.ToString\n  id: ToString\n  parent: System.Security.Cryptography.CngProvider\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CngProvider.ToString()\n  fullName: System.Security.Cryptography.CngProvider.ToString()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.CngProvider.#ctor(System.String)\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: CngProvider(String)\n  nameWithType: CngProvider.CngProvider(String)\n  fullName: System.Security.Cryptography.CngProvider.CngProvider(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngProvider.Equals(System.Object)\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CngProvider.Equals(Object)\n  fullName: System.Security.Cryptography.CngProvider.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: Equals(CngProvider)\n  nameWithType: CngProvider.Equals(CngProvider)\n  fullName: System.Security.Cryptography.CngProvider.Equals(CngProvider)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.CngProvider.GetHashCode\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CngProvider.GetHashCode()\n  fullName: System.Security.Cryptography.CngProvider.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: MicrosoftSmartCardKeyStorageProvider\n  nameWithType: CngProvider.MicrosoftSmartCardKeyStorageProvider\n  fullName: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: MicrosoftSoftwareKeyStorageProvider\n  nameWithType: CngProvider.MicrosoftSoftwareKeyStorageProvider\n  fullName: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: op_Equality(CngProvider,CngProvider)\n  nameWithType: CngProvider.op_Equality(CngProvider,CngProvider)\n  fullName: System.Security.Cryptography.CngProvider.op_Equality(CngProvider,CngProvider)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: op_Inequality(CngProvider,CngProvider)\n  nameWithType: CngProvider.op_Inequality(CngProvider,CngProvider)\n  fullName: System.Security.Cryptography.CngProvider.op_Inequality(CngProvider,CngProvider)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.CngProvider.Provider\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: Provider\n  nameWithType: CngProvider.Provider\n  fullName: System.Security.Cryptography.CngProvider.Provider\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngProvider.ToString\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  name: ToString()\n  nameWithType: CngProvider.ToString()\n  fullName: System.Security.Cryptography.CngProvider.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngProvider.Equals*\n  parent: System.Security.Cryptography.CngProvider\n  isExternal: false\n  nameWithType: CngProvider.\n"}