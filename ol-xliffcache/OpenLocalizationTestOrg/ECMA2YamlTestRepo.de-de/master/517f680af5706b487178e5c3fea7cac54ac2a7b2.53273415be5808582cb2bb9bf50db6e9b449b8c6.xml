{"nodes":[{"pos":[285,302],"content":"Catch<ph id=\"ph1\">&lt;TException&gt;</ph>","needQuote":true,"needEscape":true,"source":"Catch<TException>"},{"pos":[663,697],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1269,1276],"content":"Catch()","needQuote":true,"needEscape":true,"nodes":[{"content":"Catch()","pos":[0,7]}]},{"pos":[1731,1737],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[2124,2158],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2361,2374],"content":"ExceptionType","needQuote":true,"needEscape":true,"nodes":[{"content":"ExceptionType","pos":[0,13]}]},{"pos":[2713,2747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2879,2913],"content":"System.Activities.Statements.Catch","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.Statements.Catch","pos":[0,34]}]},{"pos":[3039,3046],"content":"Catch()","needQuote":true,"needEscape":true,"nodes":[{"content":"Catch()","pos":[0,7]}]},{"pos":[3282,3288],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[3504,3530],"content":"ActivityAction<ph id=\"ph1\">&lt;TException&gt;</ph>","needQuote":true,"needEscape":true,"source":"ActivityAction<TException>"},{"pos":[3764,3777],"content":"ExceptionType","needQuote":true,"needEscape":true,"nodes":[{"content":"ExceptionType","pos":[0,13]}]},{"pos":[3963,3967],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Catch`1\n  id: Catch`1\n  children:\n  - System.Activities.Statements.Catch`1.#ctor\n  - System.Activities.Statements.Catch`1.Action\n  - System.Activities.Statements.Catch`1.ExceptionType\n  langs:\n  - csharp\n  name: Catch<TException>\n  nameWithType: Catch<TException>\n  fullName: System.Activities.Statements.Catch<TException>\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Action\")]\n\n      public sealed class Catch<TException> : System.Activities.Statements.Catch where TException : Exception\n    typeParameters:\n    - id: TException\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.Activities.Statements.Catch\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Catch`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Catch`1\n  langs:\n  - csharp\n  name: Catch()\n  nameWithType: Catch<TException>.Catch()\n  fullName: System.Activities.Statements.Catch<TException>.Catch()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public Catch ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Catch`1.Action\n  id: Action\n  parent: System.Activities.Statements.Catch`1\n  langs:\n  - csharp\n  name: Action\n  nameWithType: Catch<TException>.Action\n  fullName: System.Activities.Statements.Catch<TException>.Action\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.ActivityAction<TException> Action { get; set; }\n    return:\n      type: System.Activities.ActivityAction{TException}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Catch`1.ExceptionType\n  id: ExceptionType\n  parent: System.Activities.Statements.Catch`1\n  langs:\n  - csharp\n  name: ExceptionType\n  nameWithType: Catch<TException>.ExceptionType\n  fullName: System.Activities.Statements.Catch<TException>.ExceptionType\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public override Type ExceptionType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.Statements.Catch\n  isExternal: false\n  name: System.Activities.Statements.Catch\n- uid: System.Activities.Statements.Catch`1.#ctor\n  parent: System.Activities.Statements.Catch`1\n  isExternal: false\n  name: Catch()\n  nameWithType: Catch<TException>.Catch()\n  fullName: System.Activities.Statements.Catch<TException>.Catch()\n- uid: System.Activities.Statements.Catch`1.Action\n  parent: System.Activities.Statements.Catch`1\n  isExternal: false\n  name: Action\n  nameWithType: Catch<TException>.Action\n  fullName: System.Activities.Statements.Catch<TException>.Action\n- uid: System.Activities.ActivityAction{TException}\n  parent: System.Activities\n  isExternal: false\n  name: ActivityAction<TException>\n  nameWithType: ActivityAction<TException>\n  fullName: System.Activities.ActivityAction<TException>\n- uid: System.Activities.Statements.Catch`1.ExceptionType\n  parent: System.Activities.Statements.Catch`1\n  isExternal: false\n  name: ExceptionType\n  nameWithType: Catch<TException>.ExceptionType\n  fullName: System.Activities.Statements.Catch<TException>.ExceptionType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n"}