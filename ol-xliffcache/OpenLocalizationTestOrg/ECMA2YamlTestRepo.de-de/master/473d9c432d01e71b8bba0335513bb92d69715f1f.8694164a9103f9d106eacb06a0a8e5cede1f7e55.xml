{"nodes":[{"pos":[5066,5088],"content":"AuthenticablePrincipal","needQuote":true,"needEscape":true,"nodes":[{"content":"AuthenticablePrincipal","pos":[0,22]}]},{"pos":[9221,9261],"content":"AuthenticablePrincipal(PrincipalContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuthenticablePrincipal(PrincipalContext)","pos":[0,40]}]},{"pos":[9850,9884],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10339,10401],"content":"AuthenticablePrincipal(PrincipalContext,String,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuthenticablePrincipal(PrincipalContext,String,String,Boolean)","pos":[0,62]}]},{"pos":[11088,11122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11193,11227],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11292,11326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11391,11425],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11702,11723],"content":"AccountExpirationDate","needQuote":true,"needEscape":true,"nodes":[{"content":"AccountExpirationDate","pos":[0,21]}]},{"pos":[12180,12214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12485,12503],"content":"AccountLockoutTime","needQuote":true,"needEscape":true,"nodes":[{"content":"AccountLockoutTime","pos":[0,18]}]},{"pos":[12946,12980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13255,13275],"content":"AdvancedSearchFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"AdvancedSearchFilter","pos":[0,20]}]},{"pos":[13798,13832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14133,14166],"content":"AllowReversiblePasswordEncryption","needQuote":true,"needEscape":true,"nodes":[{"content":"AllowReversiblePasswordEncryption","pos":[0,33]}]},{"pos":[14627,14661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14922,14935],"content":"BadLogonCount","needQuote":true,"needEscape":true,"nodes":[{"content":"BadLogonCount","pos":[0,13]}]},{"pos":[15328,15362],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15621,15633],"content":"Certificates","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificates","pos":[0,12]}]},{"pos":[16152,16186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16507,16536],"content":"ChangePassword(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ChangePassword(String,String)","pos":[0,29]}]},{"pos":[17021,17055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17123,17157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17430,17449],"content":"DelegationPermitted","needQuote":true,"needEscape":true,"nodes":[{"content":"DelegationPermitted","pos":[0,19]}]},{"pos":[17868,17902],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18151,18158],"content":"Enabled","needQuote":true,"needEscape":true,"nodes":[{"content":"Enabled","pos":[0,7]}]},{"pos":[18568,18602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18871,18890],"content":"ExpirePasswordNow()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpirePasswordNow()","pos":[0,19]}]},{"pos":[19798,19859],"content":"FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)","pos":[0,61]}]},{"pos":[20697,20731],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20794,20828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20928,20962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21138,21172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21729,21790],"content":"FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)","pos":[0,61]}]},{"pos":[22570,22604],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22667,22701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22801,22835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22946,22980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23515,23572],"content":"FindByExpirationTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByExpirationTime(PrincipalContext,DateTime,MatchType)","pos":[0,57]}]},{"pos":[24398,24432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24495,24529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24629,24663],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24839,24873],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25422,25479],"content":"FindByExpirationTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByExpirationTime(PrincipalContext,DateTime,MatchType)","pos":[0,57]}]},{"pos":[26247,26281],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26344,26378],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26478,26512],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26623,26657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27186,27240],"content":"FindByLockoutTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByLockoutTime(PrincipalContext,DateTime,MatchType)","pos":[0,54]}]},{"pos":[28057,28091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28154,28188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28288,28322],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28498,28532],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29075,29129],"content":"FindByLockoutTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByLockoutTime(PrincipalContext,DateTime,MatchType)","pos":[0,54]}]},{"pos":[29888,29922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29985,30019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30119,30153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30264,30298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30823,30875],"content":"FindByLogonTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByLogonTime(PrincipalContext,DateTime,MatchType)","pos":[0,52]}]},{"pos":[31686,31720],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31783,31817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31917,31951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32127,32161],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32700,32752],"content":"FindByLogonTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByLogonTime(PrincipalContext,DateTime,MatchType)","pos":[0,52]}]},{"pos":[33505,33539],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33602,33636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33736,33770],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33881,33915],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34452,34510],"content":"FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)","pos":[0,58]}]},{"pos":[35339,35373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35436,35470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35570,35604],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35780,35814],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36365,36423],"content":"FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)","pos":[0,58]}]},{"pos":[37194,37228],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37291,37325],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37425,37459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37570,37604],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37865,37878],"content":"HomeDirectory","needQuote":true,"needEscape":true,"nodes":[{"content":"HomeDirectory","pos":[0,13]}]},{"pos":[38280,38314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38567,38576],"content":"HomeDrive","needQuote":true,"needEscape":true,"nodes":[{"content":"HomeDrive","pos":[0,9]}]},{"pos":[38966,39000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39271,39291],"content":"IsAccountLockedOut()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAccountLockedOut()","pos":[0,20]}]},{"pos":[39718,39752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40031,40053],"content":"LastBadPasswordAttempt","needQuote":true,"needEscape":true,"nodes":[{"content":"LastBadPasswordAttempt","pos":[0,22]}]},{"pos":[40508,40542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40795,40804],"content":"LastLogon","needQuote":true,"needEscape":true,"nodes":[{"content":"LastLogon","pos":[0,9]}]},{"pos":[41220,41254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41519,41534],"content":"LastPasswordSet","needQuote":true,"needEscape":true,"nodes":[{"content":"LastPasswordSet","pos":[0,15]}]},{"pos":[41968,42002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42277,42297],"content":"PasswordNeverExpires","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordNeverExpires","pos":[0,20]}]},{"pos":[42719,42753],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43026,43045],"content":"PasswordNotRequired","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordNotRequired","pos":[0,19]}]},{"pos":[43464,43498],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43771,43790],"content":"PermittedLogonTimes","needQuote":true,"needEscape":true,"nodes":[{"content":"PermittedLogonTimes","pos":[0,19]}]},{"pos":[44210,44244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44521,44542],"content":"PermittedWorkstations","needQuote":true,"needEscape":true,"nodes":[{"content":"PermittedWorkstations","pos":[0,21]}]},{"pos":[45101,45135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45414,45438],"content":"RefreshExpiredPassword()","needQuote":true,"needEscape":true,"nodes":[{"content":"RefreshExpiredPassword()","pos":[0,24]}]},{"pos":[46073,46083],"content":"ScriptPath","needQuote":true,"needEscape":true,"nodes":[{"content":"ScriptPath","pos":[0,10]}]},{"pos":[46476,46510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46797,46816],"content":"SetPassword(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPassword(String)","pos":[0,19]}]},{"pos":[47258,47292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47571,47593],"content":"SmartcardLogonRequired","needQuote":true,"needEscape":true,"nodes":[{"content":"SmartcardLogonRequired","pos":[0,22]}]},{"pos":[48021,48055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48316,48331],"content":"UnlockAccount()","needQuote":true,"needEscape":true,"nodes":[{"content":"UnlockAccount()","pos":[0,15]}]},{"pos":[48967,48991],"content":"UserCannotChangePassword","needQuote":true,"needEscape":true,"nodes":[{"content":"UserCannotChangePassword","pos":[0,24]}]},{"pos":[49425,49459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49609,49661],"content":"System.DirectoryServices.AccountManagement.Principal","needQuote":true,"needEscape":true,"nodes":[{"content":"System.DirectoryServices.AccountManagement.Principal","pos":[0,52]}]},{"pos":[49906,49946],"content":"AuthenticablePrincipal(PrincipalContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuthenticablePrincipal(PrincipalContext)","pos":[0,40]}]},{"pos":[50294,50310],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[50703,50765],"content":"AuthenticablePrincipal(PrincipalContext,String,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuthenticablePrincipal(PrincipalContext,String,String,Boolean)","pos":[0,62]}]},{"pos":[51157,51173],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[51345,51351],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[51467,51473],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[51590,51597],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[51848,51869],"content":"AccountExpirationDate","needQuote":true,"needEscape":true,"nodes":[{"content":"AccountExpirationDate","pos":[0,21]}]},{"pos":[52116,52134],"content":"Nullable<ph id=\"ph1\">&lt;DateTime&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<DateTime>"},{"pos":[52411,52429],"content":"AccountLockoutTime","needQuote":true,"needEscape":true,"nodes":[{"content":"AccountLockoutTime","pos":[0,18]}]},{"pos":[52670,52688],"content":"Nullable<ph id=\"ph1\">&lt;DateTime&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<DateTime>"},{"pos":[52967,52987],"content":"AdvancedSearchFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"AdvancedSearchFilter","pos":[0,20]}]},{"pos":[53294,53309],"content":"AdvancedFilters","needQuote":true,"needEscape":true,"nodes":[{"content":"AdvancedFilters","pos":[0,15]}]},{"pos":[53624,53657],"content":"AllowReversiblePasswordEncryption","needQuote":true,"needEscape":true,"nodes":[{"content":"AllowReversiblePasswordEncryption","pos":[0,33]}]},{"pos":[53910,53917],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54160,54173],"content":"BadLogonCount","needQuote":true,"needEscape":true,"nodes":[{"content":"BadLogonCount","pos":[0,13]}]},{"pos":[54384,54389],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54627,54639],"content":"Certificates","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificates","pos":[0,12]}]},{"pos":[54946,54972],"content":"X509Certificate2Collection","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate2Collection","pos":[0,26]}]},{"pos":[55322,55351],"content":"ChangePassword(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ChangePassword(String,String)","pos":[0,29]}]},{"pos":[55595,55601],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[55717,55723],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[55970,55989],"content":"DelegationPermitted","needQuote":true,"needEscape":true,"nodes":[{"content":"DelegationPermitted","pos":[0,19]}]},{"pos":[56214,56221],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56458,56465],"content":"Enabled","needQuote":true,"needEscape":true,"nodes":[{"content":"Enabled","pos":[0,7]}]},{"pos":[56683,56700],"content":"Nullable<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Boolean>"},{"pos":[56974,56993],"content":"ExpirePasswordNow()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpirePasswordNow()","pos":[0,19]}]},{"pos":[57483,57544],"content":"FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)","pos":[0,61]}]},{"pos":[58006,58051],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;AuthenticablePrincipal&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<AuthenticablePrincipal>"},{"pos":[58406,58422],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[58596,58604],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[58799,58808],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[59239,59300],"content":"FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)","pos":[0,61]}]},{"pos":[59697,59721],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<T>"},{"pos":[59991,60007],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[60181,60189],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[60384,60393],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[60813,60870],"content":"FindByExpirationTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByExpirationTime(PrincipalContext,DateTime,MatchType)","pos":[0,57]}]},{"pos":[61324,61369],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;AuthenticablePrincipal&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<AuthenticablePrincipal>"},{"pos":[61724,61740],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[61914,61922],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[62117,62126],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[62553,62610],"content":"FindByExpirationTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByExpirationTime(PrincipalContext,DateTime,MatchType)","pos":[0,57]}]},{"pos":[62999,63023],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<T>"},{"pos":[63293,63309],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[63483,63491],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[63686,63695],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[64112,64166],"content":"FindByLockoutTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByLockoutTime(PrincipalContext,DateTime,MatchType)","pos":[0,54]}]},{"pos":[64614,64659],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;AuthenticablePrincipal&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<AuthenticablePrincipal>"},{"pos":[65014,65030],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[65204,65212],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[65407,65416],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[65840,65894],"content":"FindByLockoutTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByLockoutTime(PrincipalContext,DateTime,MatchType)","pos":[0,54]}]},{"pos":[66277,66301],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<T>"},{"pos":[66571,66587],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[66761,66769],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[66964,66973],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[67388,67440],"content":"FindByLogonTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByLogonTime(PrincipalContext,DateTime,MatchType)","pos":[0,52]}]},{"pos":[67884,67929],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;AuthenticablePrincipal&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<AuthenticablePrincipal>"},{"pos":[68284,68300],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[68474,68482],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[68677,68686],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[69108,69160],"content":"FindByLogonTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByLogonTime(PrincipalContext,DateTime,MatchType)","pos":[0,52]}]},{"pos":[69539,69563],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<T>"},{"pos":[69833,69849],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[70023,70031],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[70226,70235],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[70656,70714],"content":"FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)","pos":[0,58]}]},{"pos":[71170,71215],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;AuthenticablePrincipal&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<AuthenticablePrincipal>"},{"pos":[71570,71586],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[71760,71768],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[71963,71972],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[72400,72458],"content":"FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)","pos":[0,58]}]},{"pos":[72849,72873],"content":"PrincipalSearchResult<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalSearchResult<T>"},{"pos":[73143,73159],"content":"PrincipalContext","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalContext","pos":[0,16]}]},{"pos":[73333,73341],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[73536,73545],"content":"MatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"MatchType","pos":[0,9]}]},{"pos":[73828,73841],"content":"HomeDirectory","needQuote":true,"needEscape":true,"nodes":[{"content":"HomeDirectory","pos":[0,13]}]},{"pos":[74053,74059],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[74296,74305],"content":"HomeDrive","needQuote":true,"needEscape":true,"nodes":[{"content":"HomeDrive","pos":[0,9]}]},{"pos":[74509,74515],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[74761,74781],"content":"IsAccountLockedOut()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAccountLockedOut()","pos":[0,20]}]},{"pos":[75008,75015],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75267,75289],"content":"LastBadPasswordAttempt","needQuote":true,"needEscape":true,"nodes":[{"content":"LastBadPasswordAttempt","pos":[0,22]}]},{"pos":[75538,75556],"content":"Nullable<ph id=\"ph1\">&lt;DateTime&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<DateTime>"},{"pos":[75824,75833],"content":"LastLogon","needQuote":true,"needEscape":true,"nodes":[{"content":"LastLogon","pos":[0,9]}]},{"pos":[76056,76074],"content":"Nullable<ph id=\"ph1\">&lt;DateTime&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<DateTime>"},{"pos":[76348,76363],"content":"LastPasswordSet","needQuote":true,"needEscape":true,"nodes":[{"content":"LastPasswordSet","pos":[0,15]}]},{"pos":[76598,76616],"content":"Nullable<ph id=\"ph1\">&lt;DateTime&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<DateTime>"},{"pos":[76895,76915],"content":"PasswordNeverExpires","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordNeverExpires","pos":[0,20]}]},{"pos":[77142,77149],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[77398,77417],"content":"PasswordNotRequired","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordNotRequired","pos":[0,19]}]},{"pos":[77642,77649],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[77898,77917],"content":"PermittedLogonTimes","needQuote":true,"needEscape":true,"nodes":[{"content":"PermittedLogonTimes","pos":[0,19]}]},{"pos":[78139,78143],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[78390,78411],"content":"PermittedWorkstations","needQuote":true,"needEscape":true,"nodes":[{"content":"PermittedWorkstations","pos":[0,21]}]},{"pos":[78744,78776],"content":"PrincipalValueCollection<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"PrincipalValueCollection<String>"},{"pos":[79121,79145],"content":"RefreshExpiredPassword()","needQuote":true,"needEscape":true,"nodes":[{"content":"RefreshExpiredPassword()","pos":[0,24]}]},{"pos":[79501,79511],"content":"ScriptPath","needQuote":true,"needEscape":true,"nodes":[{"content":"ScriptPath","pos":[0,10]}]},{"pos":[79717,79723],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[79977,79996],"content":"SetPassword(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPassword(String)","pos":[0,19]}]},{"pos":[80220,80226],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[80476,80498],"content":"SmartcardLogonRequired","needQuote":true,"needEscape":true,"nodes":[{"content":"SmartcardLogonRequired","pos":[0,22]}]},{"pos":[80729,80736],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80979,80994],"content":"UnlockAccount()","needQuote":true,"needEscape":true,"nodes":[{"content":"UnlockAccount()","pos":[0,15]}]},{"pos":[81346,81370],"content":"UserCannotChangePassword","needQuote":true,"needEscape":true,"nodes":[{"content":"UserCannotChangePassword","pos":[0,24]}]},{"pos":[81605,81612],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  id: AuthenticablePrincipal\n  children:\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount\n  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword\n  langs:\n  - csharp\n  name: AuthenticablePrincipal\n  nameWithType: AuthenticablePrincipal\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  type: Class\n  syntax:\n    content: >-\n      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix(\"CN\")]\n\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class AuthenticablePrincipal : System.DirectoryServices.AccountManagement.Principal\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.AccountManagement.Principal\n  implements: []\n  inheritedMembers:\n  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted\n  - System.DirectoryServices.AccountManagement.Principal.Context\n  - System.DirectoryServices.AccountManagement.Principal.ContextRaw\n  - System.DirectoryServices.AccountManagement.Principal.ContextType\n  - System.DirectoryServices.AccountManagement.Principal.Delete\n  - System.DirectoryServices.AccountManagement.Principal.Description\n  - System.DirectoryServices.AccountManagement.Principal.DisplayName\n  - System.DirectoryServices.AccountManagement.Principal.Dispose\n  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName\n  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)\n  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)\n  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)\n  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)\n  - System.DirectoryServices.AccountManagement.Principal.GetGroups\n  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)\n  - System.DirectoryServices.AccountManagement.Principal.GetHashCode\n  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject\n  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType\n  - System.DirectoryServices.AccountManagement.Principal.Guid\n  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)\n  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  - System.DirectoryServices.AccountManagement.Principal.Name\n  - System.DirectoryServices.AccountManagement.Principal.SamAccountName\n  - System.DirectoryServices.AccountManagement.Principal.Save\n  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)\n  - System.DirectoryServices.AccountManagement.Principal.Sid\n  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass\n  - System.DirectoryServices.AccountManagement.Principal.ToString\n  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)\n  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: AuthenticablePrincipal(PrincipalContext)\n  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)\n  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)'\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)\n  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: samAccountName\n      type: System.String\n      description: Parameter description to be filled\n    - id: password\n      type: System.String\n      description: Parameter description to be filled\n    - id: enabled\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate\n  id: AccountExpirationDate\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: AccountExpirationDate\n  nameWithType: AuthenticablePrincipal.AccountExpirationDate\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public Nullable<DateTime> AccountExpirationDate { get; set; }\n    return:\n      type: System.Nullable{System.DateTime}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime\n  id: AccountLockoutTime\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: AccountLockoutTime\n  nameWithType: AuthenticablePrincipal.AccountLockoutTime\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public Nullable<DateTime> AccountLockoutTime { get; }\n    return:\n      type: System.Nullable{System.DateTime}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter\n  id: AdvancedSearchFilter\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: AdvancedSearchFilter\n  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public virtual System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }\n    return:\n      type: System.DirectoryServices.AccountManagement.AdvancedFilters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption\n  id: AllowReversiblePasswordEncryption\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: AllowReversiblePasswordEncryption\n  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool AllowReversiblePasswordEncryption { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount\n  id: BadLogonCount\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: BadLogonCount\n  nameWithType: AuthenticablePrincipal.BadLogonCount\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public int BadLogonCount { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates\n  id: Certificates\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: Certificates\n  nameWithType: AuthenticablePrincipal.Certificates\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)\n  id: ChangePassword(System.String,System.String)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: ChangePassword(String,String)\n  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void ChangePassword (string oldPassword, string newPassword);\n    parameters:\n    - id: oldPassword\n      type: System.String\n      description: Parameter description to be filled\n    - id: newPassword\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted\n  id: DelegationPermitted\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: DelegationPermitted\n  nameWithType: AuthenticablePrincipal.DelegationPermitted\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool DelegationPermitted { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled\n  id: Enabled\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: AuthenticablePrincipal.Enabled\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public Nullable<bool> Enabled { get; set; }\n    return:\n      type: System.Nullable{System.Boolean}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow\n  id: ExpirePasswordNow\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: ExpirePasswordNow()\n  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void ExpirePasswordNow ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  id: FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  id: FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByBadPasswordAttempt<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  id: FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  id: FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByExpirationTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  id: FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  id: FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLockoutTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  id: FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  id: FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLogonTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  id: FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  id: FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByPasswordSetTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: Parameter description to be filled\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: type\n      type: System.DirectoryServices.AccountManagement.MatchType\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory\n  id: HomeDirectory\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: HomeDirectory\n  nameWithType: AuthenticablePrincipal.HomeDirectory\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public string HomeDirectory { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive\n  id: HomeDrive\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: HomeDrive\n  nameWithType: AuthenticablePrincipal.HomeDrive\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public string HomeDrive { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut\n  id: IsAccountLockedOut\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: IsAccountLockedOut()\n  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool IsAccountLockedOut ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt\n  id: LastBadPasswordAttempt\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: LastBadPasswordAttempt\n  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public Nullable<DateTime> LastBadPasswordAttempt { get; }\n    return:\n      type: System.Nullable{System.DateTime}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon\n  id: LastLogon\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: LastLogon\n  nameWithType: AuthenticablePrincipal.LastLogon\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public Nullable<DateTime> LastLogon { get; }\n    return:\n      type: System.Nullable{System.DateTime}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet\n  id: LastPasswordSet\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: LastPasswordSet\n  nameWithType: AuthenticablePrincipal.LastPasswordSet\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public Nullable<DateTime> LastPasswordSet { get; }\n    return:\n      type: System.Nullable{System.DateTime}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires\n  id: PasswordNeverExpires\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: PasswordNeverExpires\n  nameWithType: AuthenticablePrincipal.PasswordNeverExpires\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool PasswordNeverExpires { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired\n  id: PasswordNotRequired\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: PasswordNotRequired\n  nameWithType: AuthenticablePrincipal.PasswordNotRequired\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool PasswordNotRequired { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes\n  id: PermittedLogonTimes\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: PermittedLogonTimes\n  nameWithType: AuthenticablePrincipal.PermittedLogonTimes\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public byte[] PermittedLogonTimes { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations\n  id: PermittedWorkstations\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: PermittedWorkstations\n  nameWithType: AuthenticablePrincipal.PermittedWorkstations\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public System.DirectoryServices.AccountManagement.PrincipalValueCollection<string> PermittedWorkstations { get; }\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword\n  id: RefreshExpiredPassword\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: RefreshExpiredPassword()\n  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void RefreshExpiredPassword ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath\n  id: ScriptPath\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: ScriptPath\n  nameWithType: AuthenticablePrincipal.ScriptPath\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public string ScriptPath { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)\n  id: SetPassword(System.String)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: SetPassword(String)\n  nameWithType: AuthenticablePrincipal.SetPassword(String)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void SetPassword (string newPassword);\n    parameters:\n    - id: newPassword\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired\n  id: SmartcardLogonRequired\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: SmartcardLogonRequired\n  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool SmartcardLogonRequired { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount\n  id: UnlockAccount\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: UnlockAccount()\n  nameWithType: AuthenticablePrincipal.UnlockAccount()\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public void UnlockAccount ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword\n  id: UserCannotChangePassword\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  langs:\n  - csharp\n  name: UserCannotChangePassword\n  nameWithType: AuthenticablePrincipal.UserCannotChangePassword\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  syntax:\n    content: public bool UserCannotChangePassword { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: System.DirectoryServices.AccountManagement.Principal\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: AuthenticablePrincipal(PrincipalContext)\n  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)\n  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: AccountExpirationDate\n  nameWithType: AuthenticablePrincipal.AccountExpirationDate\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate\n- uid: System.Nullable{System.DateTime}\n  parent: System\n  isExternal: false\n  name: Nullable<DateTime>\n  nameWithType: Nullable<DateTime>\n  fullName: System.Nullable<System.DateTime>\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: AccountLockoutTime\n  nameWithType: AuthenticablePrincipal.AccountLockoutTime\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime\n- uid: System.Nullable{System.DateTime}\n  parent: System\n  isExternal: false\n  name: Nullable<DateTime>\n  nameWithType: Nullable<DateTime>\n  fullName: System.Nullable<System.DateTime>\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: AdvancedSearchFilter\n  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter\n- uid: System.DirectoryServices.AccountManagement.AdvancedFilters\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: AdvancedFilters\n  nameWithType: AdvancedFilters\n  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: AllowReversiblePasswordEncryption\n  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: BadLogonCount\n  nameWithType: AuthenticablePrincipal.BadLogonCount\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: Certificates\n  nameWithType: AuthenticablePrincipal.Certificates\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: true\n  name: X509Certificate2Collection\n  nameWithType: X509Certificate2Collection\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: ChangePassword(String,String)\n  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: DelegationPermitted\n  nameWithType: AuthenticablePrincipal.DelegationPermitted\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: Enabled\n  nameWithType: AuthenticablePrincipal.Enabled\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: false\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: ExpirePasswordNow()\n  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<AuthenticablePrincipal>\n  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<T>\n  nameWithType: PrincipalSearchResult<T>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<AuthenticablePrincipal>\n  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<T>\n  nameWithType: PrincipalSearchResult<T>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<AuthenticablePrincipal>\n  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<T>\n  nameWithType: PrincipalSearchResult<T>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<AuthenticablePrincipal>\n  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<T>\n  nameWithType: PrincipalSearchResult<T>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<AuthenticablePrincipal>\n  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<T>\n  nameWithType: PrincipalSearchResult<T>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.AccountManagement.MatchType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: MatchType\n  nameWithType: MatchType\n  fullName: System.DirectoryServices.AccountManagement.MatchType\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: HomeDirectory\n  nameWithType: AuthenticablePrincipal.HomeDirectory\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: HomeDrive\n  nameWithType: AuthenticablePrincipal.HomeDrive\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: IsAccountLockedOut()\n  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: LastBadPasswordAttempt\n  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt\n- uid: System.Nullable{System.DateTime}\n  parent: System\n  isExternal: false\n  name: Nullable<DateTime>\n  nameWithType: Nullable<DateTime>\n  fullName: System.Nullable<System.DateTime>\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: LastLogon\n  nameWithType: AuthenticablePrincipal.LastLogon\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon\n- uid: System.Nullable{System.DateTime}\n  parent: System\n  isExternal: false\n  name: Nullable<DateTime>\n  nameWithType: Nullable<DateTime>\n  fullName: System.Nullable<System.DateTime>\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: LastPasswordSet\n  nameWithType: AuthenticablePrincipal.LastPasswordSet\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet\n- uid: System.Nullable{System.DateTime}\n  parent: System\n  isExternal: false\n  name: Nullable<DateTime>\n  nameWithType: Nullable<DateTime>\n  fullName: System.Nullable<System.DateTime>\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: PasswordNeverExpires\n  nameWithType: AuthenticablePrincipal.PasswordNeverExpires\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: PasswordNotRequired\n  nameWithType: AuthenticablePrincipal.PasswordNotRequired\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: PermittedLogonTimes\n  nameWithType: AuthenticablePrincipal.PermittedLogonTimes\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: PermittedWorkstations\n  nameWithType: AuthenticablePrincipal.PermittedWorkstations\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations\n- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalValueCollection<String>\n  nameWithType: PrincipalValueCollection<String>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<System.String>\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: RefreshExpiredPassword()\n  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: ScriptPath\n  nameWithType: AuthenticablePrincipal.ScriptPath\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: SetPassword(String)\n  nameWithType: AuthenticablePrincipal.SetPassword(String)\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: SmartcardLogonRequired\n  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: UnlockAccount()\n  nameWithType: AuthenticablePrincipal.UnlockAccount()\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()\n- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword\n  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal\n  isExternal: false\n  name: UserCannotChangePassword\n  nameWithType: AuthenticablePrincipal.UserCannotChangePassword\n  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}