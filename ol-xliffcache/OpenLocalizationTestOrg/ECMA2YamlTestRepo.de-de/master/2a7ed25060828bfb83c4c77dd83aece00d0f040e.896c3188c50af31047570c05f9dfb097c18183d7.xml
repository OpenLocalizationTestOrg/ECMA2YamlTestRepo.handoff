{"nodes":[{"pos":[2932,2968],"content":"ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReverseBidirectionalIterator<TValue>"},{"pos":[3315,3349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4001,4031],"content":"ReverseBidirectionalIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator()","pos":[0,30]}]},{"pos":[4780,4840],"content":"ReverseBidirectionalIterator(IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)"},{"pos":[5460,5494],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5863,5921],"content":"ReverseBidirectionalIterator(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator(ReverseBidirectionalIterator)","pos":[0,58]}]},{"pos":[6541,6575],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6814,6820],"content":"base()","needQuote":true,"needEscape":true,"nodes":[{"content":"base()","pos":[0,6]}]},{"pos":[7297,7331],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7572,7579],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[7966,8000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8249,8260],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[8659,8693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9042,9074],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[9612,9646],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9705,9739],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10198,10236],"content":"equal_to(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ReverseBidirectionalIterator)","pos":[0,38]}]},{"pos":[10796,10830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10889,10923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11248,11254],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[11953,11992],"content":"op_Assign(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ReverseBidirectionalIterator)","pos":[0,39]}]},{"pos":[12614,12648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12754,12788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13175,13225],"content":"op_Decrement(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ReverseBidirectionalIterator<TValue>)"},{"pos":[13871,13905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14013,14047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14460,14516],"content":"op_Decrement(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)"},{"pos":[15183,15217],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15276,15310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15418,15452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15807,15842],"content":"op_Equality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Equality(IInputIterator<TValue>)"},{"pos":[16383,16417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16476,16510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16889,16930],"content":"op_Equality(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ReverseBidirectionalIterator)","pos":[0,41]}]},{"pos":[17501,17535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17594,17628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17881,17892],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[18388,18422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18809,18859],"content":"op_Increment(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ReverseBidirectionalIterator<TValue>)"},{"pos":[19505,19539],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19647,19681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20094,20150],"content":"op_Increment(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ReverseBidirectionalIterator<TValue>,Int32)"},{"pos":[20817,20851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20910,20944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21052,21086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21445,21482],"content":"op_Inequality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Inequality(IInputIterator<TValue>)"},{"pos":[22029,22063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22122,22156],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22539,22582],"content":"op_Inequality(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ReverseBidirectionalIterator)","pos":[0,43]}]},{"pos":[23159,23193],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23252,23286],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23679,23727],"content":"op_MemberSelection(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ReverseBidirectionalIterator)","pos":[0,48]}]},{"pos":[24326,24360],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24412,24446],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24845,24896],"content":"op_PointerDereference(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ReverseBidirectionalIterator)","pos":[0,51]}]},{"pos":[25504,25538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25590,25624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25863,25869],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[26434,26441],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[26827,26861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26972,26985],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[27165,27195],"content":"ReverseBidirectionalIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator()","pos":[0,30]}]},{"pos":[27631,27691],"content":"ReverseBidirectionalIterator(IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)"},{"pos":[28085,28115],"content":"IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IBidirectionalIterator<TValue>"},{"pos":[28481,28539],"content":"ReverseBidirectionalIterator(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator(ReverseBidirectionalIterator)","pos":[0,58]}]},{"pos":[28932,28960],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[29258,29264],"content":"base()","needQuote":true,"needEscape":true,"nodes":[{"content":"base()","pos":[0,6]}]},{"pos":[29550,29580],"content":"IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IBidirectionalIterator<TValue>"},{"pos":[29883,29890],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[30108,30114],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30347,30358],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[30584,30590],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30873,30905],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[31174,31181],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31361,31383],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[31736,31774],"content":"equal_to(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ReverseBidirectionalIterator)","pos":[0,38]}]},{"pos":[32055,32062],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32253,32281],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[32579,32585],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[32981,33020],"content":"op_Assign(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ReverseBidirectionalIterator)","pos":[0,39]}]},{"pos":[33375,33403],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[33662,33690],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[34062,34112],"content":"op_Decrement(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ReverseBidirectionalIterator<TValue>)"},{"pos":[34492,34528],"content":"ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReverseBidirectionalIterator<TValue>"},{"pos":[34929,34985],"content":"op_Decrement(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)"},{"pos":[35377,35413],"content":"ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReverseBidirectionalIterator<TValue>"},{"pos":[35614,35619],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35903,35938],"content":"op_Equality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Equality(IInputIterator<TValue>)"},{"pos":[36213,36220],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36400,36422],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[36778,36819],"content":"op_Equality(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ReverseBidirectionalIterator)","pos":[0,41]}]},{"pos":[37106,37113],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37304,37332],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[37637,37648],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[37944,37974],"content":"IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IBidirectionalIterator<TValue>"},{"pos":[38350,38400],"content":"op_Increment(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ReverseBidirectionalIterator<TValue>)"},{"pos":[38780,38816],"content":"ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReverseBidirectionalIterator<TValue>"},{"pos":[39217,39273],"content":"op_Increment(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ReverseBidirectionalIterator<TValue>,Int32)"},{"pos":[39665,39701],"content":"ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReverseBidirectionalIterator<TValue>"},{"pos":[39902,39907],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40193,40230],"content":"op_Inequality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Inequality(IInputIterator<TValue>)"},{"pos":[40509,40516],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40696,40718],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[41076,41119],"content":"op_Inequality(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ReverseBidirectionalIterator)","pos":[0,43]}]},{"pos":[41410,41417],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41608,41636],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[42011,42059],"content":"op_MemberSelection(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ReverseBidirectionalIterator)","pos":[0,48]}]},{"pos":[42432,42460],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[42838,42889],"content":"op_PointerDereference(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ReverseBidirectionalIterator)","pos":[0,51]}]},{"pos":[43268,43296],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[43594,43600],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[43929,43936],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[44155,44162],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  id: ReverseBidirectionalIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid\n  langs:\n  - csharp\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ReverseBidirectionalIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ReverseBidirectionalIterator()\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ReverseBidirectionalIterator ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)'\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> _Iter);\n    parameters:\n    - id: _Iter\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base\n  id: base\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: base()\n  nameWithType: ReverseBidirectionalIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.base()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> base ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ReverseBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ReverseBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ReverseBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ReverseBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ReverseBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ReverseBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ReverseBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: ReverseBidirectionalIterator()\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.ReverseBidirectionalIterator(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: base()\n  nameWithType: ReverseBidirectionalIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.base()\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ReverseBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ReverseBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.container()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.equal_to(ReverseBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ReverseBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ReverseBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Decrement(ReverseBidirectionalIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Equality(ReverseBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ReverseBidirectionalIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Increment(ReverseBidirectionalIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Inequality(ReverseBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_MemberSelection(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_MemberSelection(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_PointerDereference(ReverseBidirectionalIterator)\n  nameWithType: ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_PointerDereference(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ReverseBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ReverseBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.valid()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  isExternal: false\n  nameWithType: ReverseBidirectionalIterator<TValue>.\n"}