{"nodes":[{"pos":[461,474],"content":"DragEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"DragEventArgs","pos":[0,13]}]},{"pos":[1511,1525],"content":"AllowedEffects","needQuote":true,"needEscape":true,"nodes":[{"content":"AllowedEffects","pos":[0,14]}]},{"pos":[1866,1900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2069,2073],"content":"Data","needQuote":true,"needEscape":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[2376,2410],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2585,2592],"content":"Effects","needQuote":true,"needEscape":true,"nodes":[{"content":"Effects","pos":[0,7]}]},{"pos":[2917,2951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3194,3220],"content":"GetPosition(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPosition(IInputElement)","pos":[0,26]}]},{"pos":[3627,3661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3726,3760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4019,4054],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[4479,4513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4583,4617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4796,4805],"content":"KeyStates","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyStates","pos":[0,9]}]},{"pos":[5135,5169],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5297,5327],"content":"System.Windows.RoutedEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.RoutedEventArgs","pos":[0,30]}]},{"pos":[5446,5460],"content":"AllowedEffects","needQuote":true,"needEscape":true,"nodes":[{"content":"AllowedEffects","pos":[0,14]}]},{"pos":[5653,5668],"content":"DragDropEffects","needQuote":true,"needEscape":true,"nodes":[{"content":"DragDropEffects","pos":[0,15]}]},{"pos":[5852,5856],"content":"Data","needQuote":true,"needEscape":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[6025,6036],"content":"IDataObject","needQuote":true,"needEscape":true,"nodes":[{"content":"IDataObject","pos":[0,11]}]},{"pos":[6215,6222],"content":"Effects","needQuote":true,"needEscape":true,"nodes":[{"content":"Effects","pos":[0,7]}]},{"pos":[6401,6416],"content":"DragDropEffects","needQuote":true,"needEscape":true,"nodes":[{"content":"DragDropEffects","pos":[0,15]}]},{"pos":[6637,6663],"content":"GetPosition(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPosition(IInputElement)","pos":[0,26]}]},{"pos":[6869,6874],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[7019,7032],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[7257,7292],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[7504,7512],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[7632,7638],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7801,7810],"content":"KeyStates","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyStates","pos":[0,9]}]},{"pos":[7995,8012],"content":"DragDropKeyStates","needQuote":true,"needEscape":true,"nodes":[{"content":"DragDropKeyStates","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.DragEventArgs\n  id: DragEventArgs\n  children:\n  - System.Windows.DragEventArgs.AllowedEffects\n  - System.Windows.DragEventArgs.Data\n  - System.Windows.DragEventArgs.Effects\n  - System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)\n  - System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.DragEventArgs.KeyStates\n  langs:\n  - csharp\n  name: DragEventArgs\n  nameWithType: DragEventArgs\n  fullName: System.Windows.DragEventArgs\n  type: Class\n  syntax:\n    content: 'public sealed class DragEventArgs : System.Windows.RoutedEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.DragEventArgs.AllowedEffects\n  id: AllowedEffects\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: AllowedEffects\n  nameWithType: DragEventArgs.AllowedEffects\n  fullName: System.Windows.DragEventArgs.AllowedEffects\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.DragDropEffects AllowedEffects { get; }\n    return:\n      type: System.Windows.DragDropEffects\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.DragEventArgs.Data\n  id: Data\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: Data\n  nameWithType: DragEventArgs.Data\n  fullName: System.Windows.DragEventArgs.Data\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.IDataObject Data { get; }\n    return:\n      type: System.Windows.IDataObject\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.DragEventArgs.Effects\n  id: Effects\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: Effects\n  nameWithType: DragEventArgs.Effects\n  fullName: System.Windows.DragEventArgs.Effects\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.DragDropEffects Effects { get; set; }\n    return:\n      type: System.Windows.DragDropEffects\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)\n  id: GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: GetPosition(IInputElement)\n  nameWithType: DragEventArgs.GetPosition(IInputElement)\n  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Point\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: genericTarget\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.DragEventArgs.KeyStates\n  id: KeyStates\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: KeyStates\n  nameWithType: DragEventArgs.KeyStates\n  fullName: System.Windows.DragEventArgs.KeyStates\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.DragDropKeyStates KeyStates { get; }\n    return:\n      type: System.Windows.DragDropKeyStates\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: System.Windows.RoutedEventArgs\n- uid: System.Windows.DragEventArgs.AllowedEffects\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: AllowedEffects\n  nameWithType: DragEventArgs.AllowedEffects\n  fullName: System.Windows.DragEventArgs.AllowedEffects\n- uid: System.Windows.DragDropEffects\n  parent: System.Windows\n  isExternal: false\n  name: DragDropEffects\n  nameWithType: DragDropEffects\n  fullName: System.Windows.DragDropEffects\n- uid: System.Windows.DragEventArgs.Data\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: Data\n  nameWithType: DragEventArgs.Data\n  fullName: System.Windows.DragEventArgs.Data\n- uid: System.Windows.IDataObject\n  parent: System.Windows\n  isExternal: false\n  name: IDataObject\n  nameWithType: IDataObject\n  fullName: System.Windows.IDataObject\n- uid: System.Windows.DragEventArgs.Effects\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: Effects\n  nameWithType: DragEventArgs.Effects\n  fullName: System.Windows.DragEventArgs.Effects\n- uid: System.Windows.DragDropEffects\n  parent: System.Windows\n  isExternal: false\n  name: DragDropEffects\n  nameWithType: DragDropEffects\n  fullName: System.Windows.DragDropEffects\n- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: GetPosition(IInputElement)\n  nameWithType: DragEventArgs.GetPosition(IInputElement)\n  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.DragEventArgs.KeyStates\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: KeyStates\n  nameWithType: DragEventArgs.KeyStates\n  fullName: System.Windows.DragEventArgs.KeyStates\n- uid: System.Windows.DragDropKeyStates\n  parent: System.Windows\n  isExternal: false\n  name: DragDropKeyStates\n  nameWithType: DragDropKeyStates\n  fullName: System.Windows.DragDropKeyStates\n"}