{"nodes":[{"pos":[919,934],"content":"ArrayWithOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayWithOffset","pos":[0,15]}]},{"pos":[1495,1524],"content":"ArrayWithOffset(Object,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayWithOffset(Object,Int32)","pos":[0,29]}]},{"pos":[1918,1952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2014,2048],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2287,2301],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2649,2683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2742,2776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3148,3171],"content":"Equals(ArrayWithOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ArrayWithOffset)","pos":[0,23]}]},{"pos":[3601,3635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3694,3728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4008,4018],"content":"GetArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArray()","pos":[0,10]}]},{"pos":[4344,4378],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4597,4610],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[4950,4984],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5199,5210],"content":"GetOffset()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOffset()","pos":[0,11]}]},{"pos":[5535,5569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5978,6022],"content":"op_Equality(ArrayWithOffset,ArrayWithOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ArrayWithOffset,ArrayWithOffset)","pos":[0,44]}]},{"pos":[6554,6588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6679,6713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6772,6806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7219,7265],"content":"op_Inequality(ArrayWithOffset,ArrayWithOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ArrayWithOffset,ArrayWithOffset)","pos":[0,46]}]},{"pos":[7803,7837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7928,7962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8021,8055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8169,8185],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[8359,8388],"content":"ArrayWithOffset(Object,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayWithOffset(Object,Int32)","pos":[0,29]}]},{"pos":[8606,8612],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8727,8732],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8941,8955],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9144,9151],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9269,9275],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9519,9542],"content":"Equals(ArrayWithOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ArrayWithOffset)","pos":[0,23]}]},{"pos":[9749,9756],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9931,9946],"content":"ArrayWithOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayWithOffset","pos":[0,15]}]},{"pos":[10186,10196],"content":"GetArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArray()","pos":[0,10]}]},{"pos":[10376,10382],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10583,10596],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10781,10786],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10983,10994],"content":"GetOffset()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOffset()","pos":[0,11]}]},{"pos":[11175,11180],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11474,11518],"content":"op_Equality(ArrayWithOffset,ArrayWithOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ArrayWithOffset,ArrayWithOffset)","pos":[0,44]}]},{"pos":[11767,11774],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11949,11964],"content":"ArrayWithOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayWithOffset","pos":[0,15]}]},{"pos":[12179,12194],"content":"ArrayWithOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayWithOffset","pos":[0,15]}]},{"pos":[12534,12580],"content":"op_Inequality(ArrayWithOffset,ArrayWithOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ArrayWithOffset,ArrayWithOffset)","pos":[0,46]}]},{"pos":[12833,12840],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13015,13030],"content":"ArrayWithOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayWithOffset","pos":[0,15]}]},{"pos":[13245,13260],"content":"ArrayWithOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayWithOffset","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.ArrayWithOffset\n  id: ArrayWithOffset\n  children:\n  - System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)\n  - System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)\n  - System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)\n  - System.Runtime.InteropServices.ArrayWithOffset.GetArray\n  - System.Runtime.InteropServices.ArrayWithOffset.GetHashCode\n  - System.Runtime.InteropServices.ArrayWithOffset.GetOffset\n  - System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)\n  - System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)\n  langs:\n  - csharp\n  name: ArrayWithOffset\n  nameWithType: ArrayWithOffset\n  fullName: System.Runtime.InteropServices.ArrayWithOffset\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct ArrayWithOffset\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)\n  id: '#ctor(System.Object,System.Int32)'\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  langs:\n  - csharp\n  name: ArrayWithOffset(Object,Int32)\n  nameWithType: ArrayWithOffset.ArrayWithOffset(Object,Int32)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.ArrayWithOffset(Object,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public ArrayWithOffset (object array, int offset);\n    parameters:\n    - id: array\n      type: System.Object\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ArrayWithOffset.Equals(Object)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Runtime.InteropServices.ArrayWithOffset.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)\n  id: Equals(System.Runtime.InteropServices.ArrayWithOffset)\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  langs:\n  - csharp\n  name: Equals(ArrayWithOffset)\n  nameWithType: ArrayWithOffset.Equals(ArrayWithOffset)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.Equals(ArrayWithOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public bool Equals (System.Runtime.InteropServices.ArrayWithOffset obj);\n    parameters:\n    - id: obj\n      type: System.Runtime.InteropServices.ArrayWithOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Runtime.InteropServices.ArrayWithOffset.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.ArrayWithOffset.GetArray\n  id: GetArray\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  langs:\n  - csharp\n  name: GetArray()\n  nameWithType: ArrayWithOffset.GetArray()\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.GetArray()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public object GetArray ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.ArrayWithOffset.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ArrayWithOffset.GetHashCode()\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.ArrayWithOffset.GetOffset\n  id: GetOffset\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  langs:\n  - csharp\n  name: GetOffset()\n  nameWithType: ArrayWithOffset.GetOffset()\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.GetOffset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public int GetOffset ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)\n  id: op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  langs:\n  - csharp\n  name: op_Equality(ArrayWithOffset,ArrayWithOffset)\n  nameWithType: ArrayWithOffset.op_Equality(ArrayWithOffset,ArrayWithOffset)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.op_Equality(ArrayWithOffset,ArrayWithOffset)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static bool op_Equality (System.Runtime.InteropServices.ArrayWithOffset a, System.Runtime.InteropServices.ArrayWithOffset b);\n    parameters:\n    - id: a\n      type: System.Runtime.InteropServices.ArrayWithOffset\n      description: Parameter description to be filled\n    - id: b\n      type: System.Runtime.InteropServices.ArrayWithOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)\n  id: op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  langs:\n  - csharp\n  name: op_Inequality(ArrayWithOffset,ArrayWithOffset)\n  nameWithType: ArrayWithOffset.op_Inequality(ArrayWithOffset,ArrayWithOffset)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(ArrayWithOffset,ArrayWithOffset)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static bool op_Inequality (System.Runtime.InteropServices.ArrayWithOffset a, System.Runtime.InteropServices.ArrayWithOffset b);\n    parameters:\n    - id: a\n      type: System.Runtime.InteropServices.ArrayWithOffset\n      description: Parameter description to be filled\n    - id: b\n      type: System.Runtime.InteropServices.ArrayWithOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  isExternal: false\n  name: ArrayWithOffset(Object,Int32)\n  nameWithType: ArrayWithOffset.ArrayWithOffset(Object,Int32)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.ArrayWithOffset(Object,Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ArrayWithOffset.Equals(Object)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  isExternal: false\n  name: Equals(ArrayWithOffset)\n  nameWithType: ArrayWithOffset.Equals(ArrayWithOffset)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.Equals(ArrayWithOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.ArrayWithOffset\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ArrayWithOffset\n  nameWithType: ArrayWithOffset\n  fullName: System.Runtime.InteropServices.ArrayWithOffset\n- uid: System.Runtime.InteropServices.ArrayWithOffset.GetArray\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  isExternal: false\n  name: GetArray()\n  nameWithType: ArrayWithOffset.GetArray()\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.GetArray()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.ArrayWithOffset.GetHashCode\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ArrayWithOffset.GetHashCode()\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.ArrayWithOffset.GetOffset\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  isExternal: false\n  name: GetOffset()\n  nameWithType: ArrayWithOffset.GetOffset()\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.GetOffset()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  isExternal: false\n  name: op_Equality(ArrayWithOffset,ArrayWithOffset)\n  nameWithType: ArrayWithOffset.op_Equality(ArrayWithOffset,ArrayWithOffset)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.op_Equality(ArrayWithOffset,ArrayWithOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.ArrayWithOffset\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ArrayWithOffset\n  nameWithType: ArrayWithOffset\n  fullName: System.Runtime.InteropServices.ArrayWithOffset\n- uid: System.Runtime.InteropServices.ArrayWithOffset\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ArrayWithOffset\n  nameWithType: ArrayWithOffset\n  fullName: System.Runtime.InteropServices.ArrayWithOffset\n- uid: System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  isExternal: false\n  name: op_Inequality(ArrayWithOffset,ArrayWithOffset)\n  nameWithType: ArrayWithOffset.op_Inequality(ArrayWithOffset,ArrayWithOffset)\n  fullName: System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(ArrayWithOffset,ArrayWithOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.ArrayWithOffset\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ArrayWithOffset\n  nameWithType: ArrayWithOffset\n  fullName: System.Runtime.InteropServices.ArrayWithOffset\n- uid: System.Runtime.InteropServices.ArrayWithOffset\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: ArrayWithOffset\n  nameWithType: ArrayWithOffset\n  fullName: System.Runtime.InteropServices.ArrayWithOffset\n- uid: System.Runtime.InteropServices.ArrayWithOffset.Equals*\n  parent: System.Runtime.InteropServices.ArrayWithOffset\n  isExternal: false\n  nameWithType: ArrayWithOffset.\n"}