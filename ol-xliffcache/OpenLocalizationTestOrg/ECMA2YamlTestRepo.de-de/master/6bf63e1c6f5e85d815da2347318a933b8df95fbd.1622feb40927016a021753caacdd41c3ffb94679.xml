{"nodes":[{"pos":[2393,2431],"content":"TextElementCollection<ph id=\"ph1\">&lt;TextElementType&gt;</ph>","needQuote":true,"needEscape":true,"source":"TextElementCollection<TextElementType>"},{"pos":[2896,2930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3635,3655],"content":"Add(TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TextElementType)","pos":[0,20]}]},{"pos":[4063,4097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4378,4399],"content":"AddRange(IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddRange(IEnumerable)","pos":[0,21]}]},{"pos":[4846,4880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5091,5098],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[5627,5652],"content":"Contains(TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TextElementType)","pos":[0,25]}]},{"pos":[6075,6109],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6168,6202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6453,6484],"content":"CopyTo(TextElementType[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TextElementType[],Int32)","pos":[0,31]}]},{"pos":[6939,6973],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7039,7073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7284,7289],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[7633,7667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7894,7909],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[8388,8422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8659,8703],"content":"InsertAfter(TextElementType,TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertAfter(TextElementType,TextElementType)","pos":[0,44]}]},{"pos":[9214,9248],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9314,9348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9587,9632],"content":"InsertBefore(TextElementType,TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertBefore(TextElementType,TextElementType)","pos":[0,45]}]},{"pos":[10138,10172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10238,10272],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10493,10503],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[10865,10899],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11120,11143],"content":"Remove(TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TextElementType)","pos":[0,23]}]},{"pos":[11560,11594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11653,11687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12030,12080],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[12561,12595],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12661,12695],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12982,13018],"content":"System.Collections.ICollection.Count","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.Count","pos":[0,36]}]},{"pos":[13448,13482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13787,13832],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[14292,14326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14619,14658],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[15101,15135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15438,15484],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[15980,16014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16315,16351],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[16780,16814],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16871,16905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17180,17212],"content":"System.Collections.IList.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Clear()","pos":[0,32]}]},{"pos":[17876,17917],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[18362,18396],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18455,18489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18798,18838],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[19279,19313],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19370,19404],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19737,19782],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[20243,20277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20339,20373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20660,20696],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[21129,21163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21448,21483],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[21913,21947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22248,22284],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[22746,22780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22838,22872],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23179,23218],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[23657,23691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24000,24040],"content":"System.Collections.IList.RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.RemoveAt(Int32)","pos":[0,40]}]},{"pos":[24479,24513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24624,24637],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[24789,24809],"content":"Add(TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TextElementType)","pos":[0,20]}]},{"pos":[25046,25061],"content":"TextElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"TextElementType","pos":[0,15]}]},{"pos":[25306,25327],"content":"AddRange(IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddRange(IEnumerable)","pos":[0,21]}]},{"pos":[25598,25609],"content":"IEnumerable","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[25830,25837],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[26141,26166],"content":"Contains(TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TextElementType)","pos":[0,25]}]},{"pos":[26417,26424],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26539,26554],"content":"TextElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"TextElementType","pos":[0,15]}]},{"pos":[26784,26815],"content":"CopyTo(TextElementType[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TextElementType[],Int32)","pos":[0,31]}]},{"pos":[27074,27089],"content":"TextElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"TextElementType","pos":[0,15]}]},{"pos":[27217,27222],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27419,27424],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[27633,27638],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27843,27858],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[28150,28178],"content":"IEnumerator<ph id=\"ph1\">&lt;TextElementType&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<TextElementType>"},{"pos":[28454,28498],"content":"InsertAfter(TextElementType,TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertAfter(TextElementType,TextElementType)","pos":[0,44]}]},{"pos":[28783,28798],"content":"TextElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"TextElementType","pos":[0,15]}]},{"pos":[28922,28937],"content":"TextElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"TextElementType","pos":[0,15]}]},{"pos":[29161,29206],"content":"InsertBefore(TextElementType,TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertBefore(TextElementType,TextElementType)","pos":[0,45]}]},{"pos":[29493,29508],"content":"TextElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"TextElementType","pos":[0,15]}]},{"pos":[29632,29647],"content":"TextElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"TextElementType","pos":[0,15]}]},{"pos":[29862,29872],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[30093,30100],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30306,30329],"content":"Remove(TextElementType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TextElementType)","pos":[0,23]}]},{"pos":[30576,30583],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30698,30713],"content":"TextElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"TextElementType","pos":[0,15]}]},{"pos":[30982,31032],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[31331,31336],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[31449,31454],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31682,31718],"content":"System.Collections.ICollection.Count","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.Count","pos":[0,36]}]},{"pos":[31989,31994],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32231,32276],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[32567,32574],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32809,32848],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[33126,33132],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33370,33416],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[33737,33748],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[34007,34043],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[34314,34319],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34433,34439],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34663,34695],"content":"System.Collections.IList.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Clear()","pos":[0,32]}]},{"pos":[35085,35126],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[35409,35416],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35534,35540],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35781,35821],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[36100,36105],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36219,36225],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36478,36523],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[36812,36817],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36931,36937],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37167,37203],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[37476,37483],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37714,37749],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[38020,38027],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38266,38302],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[38574,38580],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38695,38700],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38938,38977],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[39255,39261],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39502,39542],"content":"System.Collections.IList.RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.RemoveAt(Int32)","pos":[0,40]}]},{"pos":[39821,39826],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Documents.TextElementCollection`1\n  id: TextElementCollection`1\n  children:\n  - System.Windows.Documents.TextElementCollection`1.Add(`0)\n  - System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)\n  - System.Windows.Documents.TextElementCollection`1.Clear\n  - System.Windows.Documents.TextElementCollection`1.Contains(`0)\n  - System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)\n  - System.Windows.Documents.TextElementCollection`1.Count\n  - System.Windows.Documents.TextElementCollection`1.GetEnumerator\n  - System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)\n  - System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)\n  - System.Windows.Documents.TextElementCollection`1.IsReadOnly\n  - System.Windows.Documents.TextElementCollection`1.Remove(`0)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)\n  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: TextElementCollection<TextElementType>\n  nameWithType: TextElementCollection<TextElementType>\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>\n  type: Class\n  syntax:\n    content: 'public class TextElementCollection<TextElementType> : System.Collections.Generic.ICollection<TextElementType>, System.Collections.Generic.IEnumerable<TextElementType>, System.Collections.IList where TextElementType : TextElement'\n    typeParameters:\n    - id: TextElementType\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<TextElementType>\n  - System.Collections.Generic.IEnumerable<TextElementType>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.Add(`0)\n  id: Add(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Add(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Add(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Add(TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void Add (TextElementType item);\n    parameters:\n    - id: item\n      type: TextElementType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)\n  id: AddRange(System.Collections.IEnumerable)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: AddRange(IEnumerable)\n  nameWithType: TextElementCollection<TextElementType>.AddRange(IEnumerable)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.AddRange(IEnumerable)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void AddRange (System.Collections.IEnumerable range);\n    parameters:\n    - id: range\n      type: System.Collections.IEnumerable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.Clear\n  id: Clear\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TextElementCollection<TextElementType>.Clear()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Clear()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Contains(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Contains(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Contains(TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool Contains (TextElementType item);\n    parameters:\n    - id: item\n      type: TextElementType\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: CopyTo(TextElementType[],Int32)\n  nameWithType: TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void CopyTo (TextElementType[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: TextElementType[]\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.Count\n  id: Count\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TextElementCollection<TextElementType>.Count\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Count\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TextElementCollection<TextElementType>.GetEnumerator()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<TextElementType> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{TextElementType}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)\n  id: InsertAfter(`0,`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: InsertAfter(TextElementType,TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void InsertAfter (TextElementType previousSibling, TextElementType newItem);\n    parameters:\n    - id: previousSibling\n      type: TextElementType\n      description: Parameter description to be filled\n    - id: newItem\n      type: TextElementType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)\n  id: InsertBefore(`0,`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: InsertBefore(TextElementType,TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void InsertBefore (TextElementType nextSibling, TextElementType newItem);\n    parameters:\n    - id: nextSibling\n      type: TextElementType\n      description: Parameter description to be filled\n    - id: newItem\n      type: TextElementType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.IsReadOnly\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: Remove(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Remove(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Remove(TextElementType)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool Remove (TextElementType item);\n    parameters:\n    - id: item\n      type: TextElementType\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void ICollection.CopyTo (Array array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.Count\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Clear()\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Clear()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Windows.Documents.TextElementCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Documents.TextElementCollection`1.Add(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Add(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Add(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Add(TextElementType)\n- uid: TextElementType\n  parent: ''\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType\n- uid: System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: AddRange(IEnumerable)\n  nameWithType: TextElementCollection<TextElementType>.AddRange(IEnumerable)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.AddRange(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Windows.Documents.TextElementCollection`1.Clear\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Clear()\n  nameWithType: TextElementCollection<TextElementType>.Clear()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Clear()\n- uid: System.Windows.Documents.TextElementCollection`1.Contains(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Contains(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Contains(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Contains(TextElementType)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TextElementType\n  parent: ''\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType\n- uid: System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: CopyTo(TextElementType[],Int32)\n  nameWithType: TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)\n- uid: TextElementType\n  parent: ''\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextElementCollection`1.Count\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: TextElementCollection<TextElementType>.Count\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TextElementCollection<TextElementType>.GetEnumerator()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{TextElementType}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<TextElementType>\n  nameWithType: IEnumerator<TextElementType>\n  fullName: System.Collections.Generic.IEnumerator<TextElementType>\n- uid: System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: InsertAfter(TextElementType,TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)\n- uid: TextElementType\n  parent: ''\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType\n- uid: TextElementType\n  parent: ''\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType\n- uid: System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: InsertBefore(TextElementType,TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)\n- uid: TextElementType\n  parent: ''\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType\n- uid: TextElementType\n  parent: ''\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType\n- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.IsReadOnly\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextElementCollection`1.Remove(`0)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: Remove(TextElementType)\n  nameWithType: TextElementCollection<TextElementType>.Remove(TextElementType)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Remove(TextElementType)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TextElementType\n  parent: ''\n  isExternal: true\n  name: TextElementType\n  nameWithType: TextElementType\n  fullName: TextElementType\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.Count\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Clear()\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Clear()\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Clear()\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Windows.Documents.TextElementCollection`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}