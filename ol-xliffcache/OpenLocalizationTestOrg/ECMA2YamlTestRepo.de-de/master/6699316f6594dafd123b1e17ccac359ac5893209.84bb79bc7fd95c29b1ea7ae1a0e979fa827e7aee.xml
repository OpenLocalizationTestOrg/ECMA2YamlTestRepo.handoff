{"nodes":[{"pos":[1121,1160],"content":"ApplicationDirectoryMembershipCondition","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationDirectoryMembershipCondition","pos":[0,39]}]},{"pos":[1942,1983],"content":"ApplicationDirectoryMembershipCondition()","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationDirectoryMembershipCondition()","pos":[0,41]}]},{"pos":[2679,2694],"content":"Check(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Check(Evidence)","pos":[0,15]}]},{"pos":[3119,3153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3212,3246],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3483,3489],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[3902,3936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4207,4221],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4597,4631],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4690,4724],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5033,5057],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[5488,5522],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5985,6021],"content":"FromXml(SecurityElement,PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement,PolicyLevel)","pos":[0,36]}]},{"pos":[6518,6552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6635,6669],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7004,7017],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7389,7423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7668,7678],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8045,8079],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8318,8325],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[8717,8751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9144,9162],"content":"ToXml(PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml(PolicyLevel)","pos":[0,18]}]},{"pos":[9620,9654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9730,9764],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9957,9970],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[10148,10189],"content":"ApplicationDirectoryMembershipCondition()","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationDirectoryMembershipCondition()","pos":[0,41]}]},{"pos":[10615,10630],"content":"Check(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Check(Evidence)","pos":[0,15]}]},{"pos":[10861,10868],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11020,11028],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[11274,11280],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[11538,11558],"content":"IMembershipCondition","needQuote":true,"needEscape":true,"nodes":[{"content":"IMembershipCondition","pos":[0,20]}]},{"pos":[11845,11859],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12088,12095],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12213,12219],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12481,12505],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[12780,12795],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[13119,13155],"content":"FromXml(SecurityElement,PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement,PolicyLevel)","pos":[0,36]}]},{"pos":[13454,13469],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[13649,13660],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]},{"pos":[13919,13932],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14157,14162],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14390,14400],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14620,14626],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14853,14860],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[15101,15116],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[15406,15424],"content":"ToXml(PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml(PolicyLevel)","pos":[0,18]}]},{"pos":[15687,15702],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[15882,15893],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  id: ApplicationDirectoryMembershipCondition\n  children:\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml\n  - System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  langs:\n  - csharp\n  name: ApplicationDirectoryMembershipCondition\n  nameWithType: ApplicationDirectoryMembershipCondition\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ApplicationDirectoryMembershipCondition\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor\n  id: '#ctor'\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: ApplicationDirectoryMembershipCondition()\n  nameWithType: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public ApplicationDirectoryMembershipCondition ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)\n  id: Check(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: Check(Evidence)\n  nameWithType: ApplicationDirectoryMembershipCondition.Check(Evidence)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public bool Check (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy\n  id: Copy\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ApplicationDirectoryMembershipCondition.Copy()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.Policy.IMembershipCondition Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.IMembershipCondition\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ApplicationDirectoryMembershipCondition.Equals(Object)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement e);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: FromXml(SecurityElement,PolicyLevel)\n  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(SecurityElement,PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ApplicationDirectoryMembershipCondition.GetHashCode()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString\n  id: ToString\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ApplicationDirectoryMembershipCondition.ToString()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml\n  id: ToXml\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ApplicationDirectoryMembershipCondition.ToXml()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  id: ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  langs:\n  - csharp\n  name: ToXml(PolicyLevel)\n  nameWithType: ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  overload: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ApplicationDirectoryMembershipCondition()\n  nameWithType: ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition()\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: Check(Evidence)\n  nameWithType: ApplicationDirectoryMembershipCondition.Check(Evidence)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(Evidence)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: Copy()\n  nameWithType: ApplicationDirectoryMembershipCondition.Copy()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy()\n- uid: System.Security.Policy.IMembershipCondition\n  parent: System.Security.Policy\n  isExternal: false\n  name: IMembershipCondition\n  nameWithType: IMembershipCondition\n  fullName: System.Security.Policy.IMembershipCondition\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ApplicationDirectoryMembershipCondition.Equals(Object)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: FromXml(SecurityElement,PolicyLevel)\n  nameWithType: ApplicationDirectoryMembershipCondition.FromXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(SecurityElement,PolicyLevel)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ApplicationDirectoryMembershipCondition.GetHashCode()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ToString()\n  nameWithType: ApplicationDirectoryMembershipCondition.ToString()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ToXml()\n  nameWithType: ApplicationDirectoryMembershipCondition.ToXml()\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  name: ToXml(PolicyLevel)\n  nameWithType: ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)\n  fullName: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(PolicyLevel)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  nameWithType: ApplicationDirectoryMembershipCondition.\n- uid: System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml*\n  parent: System.Security.Policy.ApplicationDirectoryMembershipCondition\n  isExternal: false\n  nameWithType: ApplicationDirectoryMembershipCondition.\n"}