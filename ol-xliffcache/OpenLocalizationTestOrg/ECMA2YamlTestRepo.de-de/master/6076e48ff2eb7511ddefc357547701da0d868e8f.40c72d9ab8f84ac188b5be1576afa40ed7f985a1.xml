{"nodes":[{"pos":[667,671],"content":"HMAC","needQuote":true,"needEscape":true,"nodes":[{"content":"HMAC","pos":[0,4]}]},{"pos":[2745,2751],"content":"HMAC()","needQuote":true,"needEscape":true,"nodes":[{"content":"HMAC()","pos":[0,6]}]},{"pos":[3181,3195],"content":"BlockSizeValue","needQuote":true,"needEscape":true,"nodes":[{"content":"BlockSizeValue","pos":[0,14]}]},{"pos":[3501,3535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3718,3726],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[4074,4108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4375,4389],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[4758,4792],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4870,4904],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5175,5191],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[5532,5566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5835,5863],"content":"HashCore(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashCore(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[6234,6268],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6326,6360],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6418,6452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6641,6652],"content":"HashFinal()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashFinal()","pos":[0,11]}]},{"pos":[6967,7001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7188,7196],"content":"HashName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashName","pos":[0,8]}]},{"pos":[7485,7519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7710,7722],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]},{"pos":[8154,8157],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[8440,8474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8619,8666],"content":"System.Security.Cryptography.KeyedHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.KeyedHashAlgorithm","pos":[0,47]}]},{"pos":[8786,8792],"content":"HMAC()","needQuote":true,"needEscape":true,"nodes":[{"content":"HMAC()","pos":[0,6]}]},{"pos":[9002,9016],"content":"BlockSizeValue","needQuote":true,"needEscape":true,"nodes":[{"content":"BlockSizeValue","pos":[0,14]}]},{"pos":[9179,9184],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9352,9360],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[9554,9558],"content":"HMAC","needQuote":true,"needEscape":true,"nodes":[{"content":"HMAC","pos":[0,4]}]},{"pos":[9761,9775],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[9981,9985],"content":"HMAC","needQuote":true,"needEscape":true,"nodes":[{"content":"HMAC","pos":[0,4]}]},{"pos":[10119,10125],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10312,10328],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[10497,10504],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10719,10747],"content":"HashCore(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashCore(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[10937,10941],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[11054,11059],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11172,11177],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11348,11359],"content":"HashFinal()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashFinal()","pos":[0,11]}]},{"pos":[11515,11519],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[11689,11697],"content":"HashName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashName","pos":[0,8]}]},{"pos":[11849,11855],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12029,12041],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]},{"pos":[12252,12255],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[12395,12399],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.HMAC\n  id: HMAC\n  children:\n  - System.Security.Cryptography.HMAC.#ctor\n  - System.Security.Cryptography.HMAC.BlockSizeValue\n  - System.Security.Cryptography.HMAC.Create\n  - System.Security.Cryptography.HMAC.Create(System.String)\n  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)\n  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HMAC.HashFinal\n  - System.Security.Cryptography.HMAC.HashName\n  - System.Security.Cryptography.HMAC.Initialize\n  - System.Security.Cryptography.HMAC.Key\n  langs:\n  - csharp\n  name: HMAC\n  nameWithType: HMAC\n  fullName: System.Security.Cryptography.HMAC\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  - System.Security.Cryptography.KeyedHashAlgorithm\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: HMAC()\n  nameWithType: HMAC.HMAC()\n  fullName: System.Security.Cryptography.HMAC.HMAC()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected HMAC ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.BlockSizeValue\n  id: BlockSizeValue\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: BlockSizeValue\n  nameWithType: HMAC.BlockSizeValue\n  fullName: System.Security.Cryptography.HMAC.BlockSizeValue\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected int BlockSizeValue { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.Create\n  id: Create\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: HMAC.Create()\n  fullName: System.Security.Cryptography.HMAC.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.HMAC Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.HMAC\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.HMAC.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: HMAC.Create(String)\n  fullName: System.Security.Cryptography.HMAC.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.HMAC Create (string algorithmName);\n    parameters:\n    - id: algorithmName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.HMAC\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.HMAC.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: HMAC.Dispose(Boolean)\n  fullName: System.Security.Cryptography.HMAC.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)\n  id: HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: HMAC.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.HMAC.HashCore(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void HashCore (byte[] rgb, int ib, int cb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: ib\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cb\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.HashFinal\n  id: HashFinal\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: HashFinal()\n  nameWithType: HMAC.HashFinal()\n  fullName: System.Security.Cryptography.HMAC.HashFinal()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashFinal ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.HashName\n  id: HashName\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: HashName\n  nameWithType: HMAC.HashName\n  fullName: System.Security.Cryptography.HMAC.HashName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public string HashName { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.Initialize\n  id: Initialize\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: HMAC.Initialize()\n  fullName: System.Security.Cryptography.HMAC.Initialize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void Initialize ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.HMAC.Key\n  id: Key\n  parent: System.Security.Cryptography.HMAC\n  langs:\n  - csharp\n  name: Key\n  nameWithType: HMAC.Key\n  fullName: System.Security.Cryptography.HMAC.Key\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.KeyedHashAlgorithm\n  isExternal: false\n  name: System.Security.Cryptography.KeyedHashAlgorithm\n- uid: System.Security.Cryptography.HMAC.#ctor\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: HMAC()\n  nameWithType: HMAC.HMAC()\n  fullName: System.Security.Cryptography.HMAC.HMAC()\n- uid: System.Security.Cryptography.HMAC.BlockSizeValue\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: HMAC.BlockSizeValue\n  fullName: System.Security.Cryptography.HMAC.BlockSizeValue\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.HMAC.Create\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: Create()\n  nameWithType: HMAC.Create()\n  fullName: System.Security.Cryptography.HMAC.Create()\n- uid: System.Security.Cryptography.HMAC\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HMAC\n  nameWithType: HMAC\n  fullName: System.Security.Cryptography.HMAC\n- uid: System.Security.Cryptography.HMAC.Create(System.String)\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: Create(String)\n  nameWithType: HMAC.Create(String)\n  fullName: System.Security.Cryptography.HMAC.Create(String)\n- uid: System.Security.Cryptography.HMAC\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HMAC\n  nameWithType: HMAC\n  fullName: System.Security.Cryptography.HMAC\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.HMAC.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: HMAC.Dispose(Boolean)\n  fullName: System.Security.Cryptography.HMAC.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: HMAC.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.HMAC.HashCore(Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.HMAC.HashFinal\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: HashFinal()\n  nameWithType: HMAC.HashFinal()\n  fullName: System.Security.Cryptography.HMAC.HashFinal()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.HMAC.HashName\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: HashName\n  nameWithType: HMAC.HashName\n  fullName: System.Security.Cryptography.HMAC.HashName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.HMAC.Initialize\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: Initialize()\n  nameWithType: HMAC.Initialize()\n  fullName: System.Security.Cryptography.HMAC.Initialize()\n- uid: System.Security.Cryptography.HMAC.Key\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  name: Key\n  nameWithType: HMAC.Key\n  fullName: System.Security.Cryptography.HMAC.Key\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.HMAC.Create*\n  parent: System.Security.Cryptography.HMAC\n  isExternal: false\n  nameWithType: HMAC.\n"}