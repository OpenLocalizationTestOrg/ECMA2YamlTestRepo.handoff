{"nodes":[{"pos":[505,510],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[971,985],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[1297,1331],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1390,1424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1706,1719],"content":"Equals(Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Label)","pos":[0,13]}]},{"pos":[2057,2091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2150,2184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2416,2429],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[2733,2767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3068,3092],"content":"op_Equality(Label,Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Label,Label)","pos":[0,24]}]},{"pos":[3494,3528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3601,3635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3694,3728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4033,4059],"content":"op_Inequality(Label,Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Label,Label)","pos":[0,26]}]},{"pos":[4467,4501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4574,4608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4667,4701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4815,4831],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[4957,4971],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5132,5139],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5257,5263],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5453,5466],"content":"Equals(Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Label)","pos":[0,13]}]},{"pos":[5625,5632],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5781,5786],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[5965,5978],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[6135,6140],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6362,6386],"content":"op_Equality(Label,Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Label,Label)","pos":[0,24]}]},{"pos":[6567,6574],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6723,6728],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[6889,6894],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[7134,7160],"content":"op_Inequality(Label,Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Label,Label)","pos":[0,26]}]},{"pos":[7345,7352],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7501,7506],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[7667,7672],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.Label\n  id: Label\n  children:\n  - System.Reflection.Emit.Label.Equals(System.Object)\n  - System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)\n  - System.Reflection.Emit.Label.GetHashCode\n  - System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)\n  - System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)\n  langs:\n  - csharp\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct Label\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.Label.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.Label\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Label.Equals(Object)\n  fullName: System.Reflection.Emit.Label.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.Label.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)\n  id: Equals(System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.Label\n  langs:\n  - csharp\n  name: Equals(Label)\n  nameWithType: Label.Equals(Label)\n  fullName: System.Reflection.Emit.Label.Equals(Label)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.Label obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.Label\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.Label.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.Label.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.Label\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Label.GetHashCode()\n  fullName: System.Reflection.Emit.Label.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)\n  id: op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.Label\n  langs:\n  - csharp\n  name: op_Equality(Label,Label)\n  nameWithType: Label.op_Equality(Label,Label)\n  fullName: System.Reflection.Emit.Label.op_Equality(Label,Label)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.Label a, System.Reflection.Emit.Label b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.Label\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.Label\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)\n  id: op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.Label\n  langs:\n  - csharp\n  name: op_Inequality(Label,Label)\n  nameWithType: Label.op_Inequality(Label,Label)\n  fullName: System.Reflection.Emit.Label.op_Inequality(Label,Label)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.Label a, System.Reflection.Emit.Label b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.Label\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.Label\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Reflection.Emit.Label.Equals(System.Object)\n  parent: System.Reflection.Emit.Label\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Label.Equals(Object)\n  fullName: System.Reflection.Emit.Label.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.Label\n  isExternal: false\n  name: Equals(Label)\n  nameWithType: Label.Equals(Label)\n  fullName: System.Reflection.Emit.Label.Equals(Label)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n- uid: System.Reflection.Emit.Label.GetHashCode\n  parent: System.Reflection.Emit.Label\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Label.GetHashCode()\n  fullName: System.Reflection.Emit.Label.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.Label\n  isExternal: false\n  name: op_Equality(Label,Label)\n  nameWithType: Label.op_Equality(Label,Label)\n  fullName: System.Reflection.Emit.Label.op_Equality(Label,Label)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n- uid: System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.Label\n  isExternal: false\n  name: op_Inequality(Label,Label)\n  nameWithType: Label.op_Inequality(Label,Label)\n  fullName: System.Reflection.Emit.Label.op_Inequality(Label,Label)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n- uid: System.Reflection.Emit.Label.Equals*\n  parent: System.Reflection.Emit.Label\n  isExternal: false\n  nameWithType: Label.\n"}