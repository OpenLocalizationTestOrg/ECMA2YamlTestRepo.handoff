{"nodes":[{"pos":[989,1006],"content":"ToBase64Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"ToBase64Transform","pos":[0,17]}]},{"pos":[1881,1900],"content":"ToBase64Transform()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToBase64Transform()","pos":[0,19]}]},{"pos":[2424,2441],"content":"CanReuseTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"CanReuseTransform","pos":[0,17]}]},{"pos":[2785,2819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3068,3094],"content":"CanTransformMultipleBlocks","needQuote":true,"needEscape":true,"nodes":[{"content":"CanTransformMultipleBlocks","pos":[0,26]}]},{"pos":[3457,3491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3698,3705],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[4173,4182],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[4756,4772],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[5138,5172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5453,5463],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[5952,5966],"content":"InputBlockSize","needQuote":true,"needEscape":true,"nodes":[{"content":"InputBlockSize","pos":[0,14]}]},{"pos":[6290,6324],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6551,6566],"content":"OutputBlockSize","needQuote":true,"needEscape":true,"nodes":[{"content":"OutputBlockSize","pos":[0,15]}]},{"pos":[6893,6927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7288,7335],"content":"TransformBlock(Byte[],Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformBlock(Byte[],Int32,Int32,Byte[],Int32)","pos":[0,47]}]},{"pos":[7835,7869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7936,7970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8036,8070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8139,8173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8241,8275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8332,8366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8683,8722],"content":"TransformFinalBlock(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformFinalBlock(Byte[],Int32,Int32)","pos":[0,39]}]},{"pos":[9175,9209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9276,9310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9376,9410],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9468,9502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9613,9626],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[9772,9791],"content":"ToBase64Transform()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToBase64Transform()","pos":[0,19]}]},{"pos":[10082,10099],"content":"CanReuseTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"CanReuseTransform","pos":[0,17]}]},{"pos":[10296,10303],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10521,10547],"content":"CanTransformMultipleBlocks","needQuote":true,"needEscape":true,"nodes":[{"content":"CanTransformMultipleBlocks","pos":[0,26]}]},{"pos":[10762,10769],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10966,10973],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[11230,11239],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[11516,11532],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[11727,11734],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11934,11944],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[12214,12228],"content":"InputBlockSize","needQuote":true,"needEscape":true,"nodes":[{"content":"InputBlockSize","pos":[0,14]}]},{"pos":[12417,12422],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12625,12640],"content":"OutputBlockSize","needQuote":true,"needEscape":true,"nodes":[{"content":"OutputBlockSize","pos":[0,15]}]},{"pos":[12831,12836],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13106,13153],"content":"TransformBlock(Byte[],Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformBlock(Byte[],Int32,Int32,Byte[],Int32)","pos":[0,47]}]},{"pos":[13408,13413],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13525,13529],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[13642,13647],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13760,13765],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13877,13881],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[13994,13999],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14247,14286],"content":"TransformFinalBlock(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformFinalBlock(Byte[],Int32,Int32)","pos":[0,39]}]},{"pos":[14524,14528],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[14640,14644],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[14757,14762],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14875,14880],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ToBase64Transform\n  id: ToBase64Transform\n  children:\n  - System.Security.Cryptography.ToBase64Transform.#ctor\n  - System.Security.Cryptography.ToBase64Transform.CanReuseTransform\n  - System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks\n  - System.Security.Cryptography.ToBase64Transform.Clear\n  - System.Security.Cryptography.ToBase64Transform.Dispose\n  - System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)\n  - System.Security.Cryptography.ToBase64Transform.Finalize\n  - System.Security.Cryptography.ToBase64Transform.InputBlockSize\n  - System.Security.Cryptography.ToBase64Transform.OutputBlockSize\n  - System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: ToBase64Transform\n  nameWithType: ToBase64Transform\n  fullName: System.Security.Cryptography.ToBase64Transform\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ToBase64Transform : System.Security.Cryptography.ICryptoTransform\n  inheritance:\n  - System.Object\n  implements:\n  - System.Security.Cryptography.ICryptoTransform\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: ToBase64Transform()\n  nameWithType: ToBase64Transform.ToBase64Transform()\n  fullName: System.Security.Cryptography.ToBase64Transform.ToBase64Transform()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public ToBase64Transform ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.CanReuseTransform\n  id: CanReuseTransform\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: CanReuseTransform\n  nameWithType: ToBase64Transform.CanReuseTransform\n  fullName: System.Security.Cryptography.ToBase64Transform.CanReuseTransform\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual bool CanReuseTransform { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks\n  id: CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: CanTransformMultipleBlocks\n  nameWithType: ToBase64Transform.CanTransformMultipleBlocks\n  fullName: System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool CanTransformMultipleBlocks { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.Clear\n  id: Clear\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ToBase64Transform.Clear()\n  fullName: System.Security.Cryptography.ToBase64Transform.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ToBase64Transform.Dispose()\n  fullName: System.Security.Cryptography.ToBase64Transform.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.ToBase64Transform.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ToBase64Transform.Dispose(Boolean)\n  fullName: System.Security.Cryptography.ToBase64Transform.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ToBase64Transform.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.Finalize\n  id: Finalize\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: ToBase64Transform.Finalize()\n  fullName: System.Security.Cryptography.ToBase64Transform.Finalize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: ~ToBase64Transform ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.InputBlockSize\n  id: InputBlockSize\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: InputBlockSize\n  nameWithType: ToBase64Transform.InputBlockSize\n  fullName: System.Security.Cryptography.ToBase64Transform.InputBlockSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public int InputBlockSize { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.OutputBlockSize\n  id: OutputBlockSize\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: OutputBlockSize\n  nameWithType: ToBase64Transform.OutputBlockSize\n  fullName: System.Security.Cryptography.ToBase64Transform.OutputBlockSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public int OutputBlockSize { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)\n  nameWithType: ToBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)\n  fullName: System.Security.Cryptography.ToBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);\n    parameters:\n    - id: inputBuffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: inputOffset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: inputCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: outputBuffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: outputOffset\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.ToBase64Transform\n  langs:\n  - csharp\n  name: TransformFinalBlock(Byte[],Int32,Int32)\n  nameWithType: ToBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);\n    parameters:\n    - id: inputBuffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: inputOffset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: inputCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.ToBase64Transform.#ctor\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: ToBase64Transform()\n  nameWithType: ToBase64Transform.ToBase64Transform()\n  fullName: System.Security.Cryptography.ToBase64Transform.ToBase64Transform()\n- uid: System.Security.Cryptography.ToBase64Transform.CanReuseTransform\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: ToBase64Transform.CanReuseTransform\n  fullName: System.Security.Cryptography.ToBase64Transform.CanReuseTransform\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: ToBase64Transform.CanTransformMultipleBlocks\n  fullName: System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ToBase64Transform.Clear\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: Clear()\n  nameWithType: ToBase64Transform.Clear()\n  fullName: System.Security.Cryptography.ToBase64Transform.Clear()\n- uid: System.Security.Cryptography.ToBase64Transform.Dispose\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: Dispose()\n  nameWithType: ToBase64Transform.Dispose()\n  fullName: System.Security.Cryptography.ToBase64Transform.Dispose()\n- uid: System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ToBase64Transform.Dispose(Boolean)\n  fullName: System.Security.Cryptography.ToBase64Transform.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ToBase64Transform.Finalize\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: Finalize()\n  nameWithType: ToBase64Transform.Finalize()\n  fullName: System.Security.Cryptography.ToBase64Transform.Finalize()\n- uid: System.Security.Cryptography.ToBase64Transform.InputBlockSize\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: ToBase64Transform.InputBlockSize\n  fullName: System.Security.Cryptography.ToBase64Transform.InputBlockSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.ToBase64Transform.OutputBlockSize\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: ToBase64Transform.OutputBlockSize\n  fullName: System.Security.Cryptography.ToBase64Transform.OutputBlockSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)\n  nameWithType: ToBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)\n  fullName: System.Security.Cryptography.ToBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  name: TransformFinalBlock(Byte[],Int32,Int32)\n  nameWithType: ToBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.ToBase64Transform.Dispose*\n  parent: System.Security.Cryptography.ToBase64Transform\n  isExternal: false\n  nameWithType: ToBase64Transform.\n"}