{"nodes":[{"pos":[4421,4444],"content":"Dictionary<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary&lt;TKey,TValue&gt;","pos":[0,23],"source":"Dictionary<TKey,TValue>"}]},{"pos":[5455,5489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5526,5560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6655,6667],"content":"Dictionary()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary()","pos":[0,12]}]},{"pos":[7226,7262],"content":"Dictionary(IDictionary<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary(IDictionary&lt;TKey,TValue&gt;)","pos":[0,36],"source":"Dictionary(IDictionary<TKey,TValue>)"}]},{"pos":[7743,7777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8072,8107],"content":"Dictionary(IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Dictionary(IEqualityComparer<TKey>)"},{"pos":[8591,8625],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8848,8865],"content":"Dictionary(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary(Int32)","pos":[0,17]}]},{"pos":[9228,9262],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9639,9699],"content":"Dictionary(IDictionary&lt;TKey,TValue&gt;,IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Dictionary(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)"},{"pos":[10289,10323],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10425,10459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10780,10821],"content":"Dictionary(Int32,IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Dictionary(Int32,IEqualityComparer<TKey>)"},{"pos":[11293,11327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11429,11463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11846,11892],"content":"Dictionary(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary(SerializationInfo,StreamingContext)","pos":[0,46]}]},{"pos":[12440,12474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12570,12604],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12807,12823],"content":"Add(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TKey,TValue)","pos":[0,16]}]},{"pos":[13174,13208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13263,13297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13490,13497],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[13961,13969],"content":"Comparer","needQuote":true,"needEscape":true,"nodes":[{"content":"Comparer","pos":[0,8]}]},{"pos":[14368,14402],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14615,14632],"content":"ContainsKey(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[14979,15013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15072,15106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15323,15344],"content":"ContainsValue(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsValue(TValue)","pos":[0,21]}]},{"pos":[15709,15743],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15802,15836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16029,16034],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[16339,16373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16582,16597],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[17038,17072],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17469,17518],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[18080,18114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18210,18244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18443,18453],"content":"Item(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(TKey)","pos":[0,10]}]},{"pos":[18795,18829],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18880,18914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19105,19109],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[19513,19547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19794,19819],"content":"OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnDeserialization(Object)","pos":[0,25]}]},{"pos":[20213,20247],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20450,20462],"content":"Remove(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[20794,20828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20887,20921],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21396,21461],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[22031,22065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22550,22615],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[23190,23224],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23283,23317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23838,23909],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;,Int32)","pos":[0,71],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)"}]},{"pos":[24504,24538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24599,24633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25036,25074],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[25539,25573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26054,26119],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[26692,26726],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26785,26819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27128,27166],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[27654,27688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28001,28039],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[28533,28567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28976,29016],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[29612,29646],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29971,30017],"content":"System.Collections.Generic.IReadOnlyDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IReadOnlyDictionary","pos":[0,46]}]},{"pos":[30529,30563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30892,30938],"content":"System.Collections.Generic.IReadOnlyDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IReadOnlyDictionary","pos":[0,46]}]},{"pos":[31456,31490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31815,31865],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[32302,32336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32397,32431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32718,32763],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[33184,33218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33493,33532],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[33936,33970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34293,34342],"content":"System.Collections.IDictionary.Add(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Add(Object,Object)","pos":[0,49]}]},{"pos":[34775,34809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34871,34905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35210,35257],"content":"System.Collections.IDictionary.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Contains(Object)","pos":[0,47]}]},{"pos":[35677,35711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35770,35804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36089,36135],"content":"System.Collections.IDictionary.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.GetEnumerator()","pos":[0,46]}]},{"pos":[36612,36646],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36927,36969],"content":"System.Collections.IDictionary.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsFixedSize","pos":[0,42]}]},{"pos":[37381,37415],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37694,37735],"content":"System.Collections.IDictionary.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsReadOnly","pos":[0,41]}]},{"pos":[38144,38178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38475,38518],"content":"System.Collections.IDictionary.Item(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Item(Object)","pos":[0,43]}]},{"pos":[38961,38995],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39053,39087],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39354,39389],"content":"System.Collections.IDictionary.Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Keys","pos":[0,35]}]},{"pos":[39822,39856],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40157,40202],"content":"System.Collections.IDictionary.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Remove(Object)","pos":[0,45]}]},{"pos":[40616,40650],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40921,40958],"content":"System.Collections.IDictionary.Values","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Values","pos":[0,37]}]},{"pos":[41397,41431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41716,41762],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[42219,42253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42474,42498],"content":"TryGetValue(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(TKey,TValue)","pos":[0,24]}]},{"pos":[42877,42911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42966,43000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43059,43093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43288,43294],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[43708,43742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43853,43866],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[43998,44010],"content":"Dictionary()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary()","pos":[0,12]}]},{"pos":[44313,44349],"content":"Dictionary(IDictionary<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary(IDictionary&lt;TKey,TValue&gt;)","pos":[0,36],"source":"Dictionary(IDictionary<TKey,TValue>)"}]},{"pos":[44640,44664],"content":"IDictionary<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;TKey,TValue&gt;","pos":[0,24],"source":"IDictionary<TKey,TValue>"}]},{"pos":[44951,44986],"content":"Dictionary(IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Dictionary(IEqualityComparer<TKey>)"},{"pos":[45285,45308],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[45557,45574],"content":"Dictionary(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary(Int32)","pos":[0,17]}]},{"pos":[45779,45784],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46054,46114],"content":"Dictionary(IDictionary&lt;TKey,TValue&gt;,IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Dictionary(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)"},{"pos":[46453,46477],"content":"IDictionary<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;TKey,TValue&gt;","pos":[0,24],"source":"IDictionary<TKey,TValue>"}]},{"pos":[46706,46729],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[47027,47068],"content":"Dictionary(Int32,IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Dictionary(Int32,IEqualityComparer<TKey>)"},{"pos":[47321,47326],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47497,47520],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[47849,47895],"content":"Dictionary(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary(SerializationInfo,StreamingContext)","pos":[0,46]}]},{"pos":[48214,48231],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[48445,48461],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[48689,48705],"content":"Add(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TKey,TValue)","pos":[0,16]}]},{"pos":[48895,48899],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[48992,48998],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[49172,49179],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[49433,49441],"content":"Comparer","needQuote":true,"needEscape":true,"nodes":[{"content":"Comparer","pos":[0,8]}]},{"pos":[49686,49709],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[49954,49971],"content":"ContainsKey(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[50178,50185],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50289,50293],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[50475,50496],"content":"ContainsValue(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsValue(TValue)","pos":[0,21]}]},{"pos":[50711,50718],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50824,50830],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[51004,51009],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[51190,51195],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[51382,51397],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[51656,51690],"content":"Dictionary<TKey,TValue>+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary&lt;TKey,TValue&gt;+Enumerator","pos":[0,34],"source":"Dictionary<TKey,TValue>+Enumerator"}]},{"pos":[52049,52098],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[52423,52440],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[52654,52670],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[52896,52906],"content":"Item(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(TKey)","pos":[0,10]}]},{"pos":[53086,53092],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[53187,53191],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[53360,53364],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[53604,53641],"content":"Dictionary<TKey,TValue>+KeyCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary&lt;TKey,TValue&gt;+KeyCollection","pos":[0,37],"source":"Dictionary<TKey,TValue>+KeyCollection"}]},{"pos":[53931,53956],"content":"OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnDeserialization(Object)","pos":[0,25]}]},{"pos":[54178,54184],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54370,54382],"content":"Remove(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[54579,54586],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54690,54694],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[54998,55063],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[55413,55438],"content":"KeyValuePair<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;TKey,TValue&gt;","pos":[0,25],"source":"KeyValuePair<TKey,TValue>"}]},{"pos":[55816,55881],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[56184,56191],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56357,56382],"content":"KeyValuePair<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;TKey,TValue&gt;","pos":[0,25],"source":"KeyValuePair<TKey,TValue>"}]},{"pos":[56778,56849],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;,Int32)","pos":[0,71],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)"}]},{"pos":[57222,57247],"content":"KeyValuePair<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;TKey,TValue&gt;","pos":[0,25],"source":"KeyValuePair<TKey,TValue>"}]},{"pos":[57422,57427],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57704,57742],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[57991,57998],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58318,58383],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[58686,58693],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58859,58884],"content":"KeyValuePair<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;TKey,TValue&gt;","pos":[0,25],"source":"KeyValuePair<TKey,TValue>"}]},{"pos":[59174,59212],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[59511,59528],"content":"ICollection<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<TKey>"},{"pos":[59804,59842],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[60143,60162],"content":"ICollection<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<TValue>"},{"pos":[60490,60530],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[60881,60919],"content":"IEnumerator<KeyValuePair<TKey,TValue>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;","pos":[0,38],"source":"IEnumerator<KeyValuePair<TKey,TValue>>"}]},{"pos":[61270,61316],"content":"System.Collections.Generic.IReadOnlyDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IReadOnlyDictionary","pos":[0,46]}]},{"pos":[61631,61648],"content":"IEnumerable<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TKey>"},{"pos":[61932,61978],"content":"System.Collections.Generic.IReadOnlyDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IReadOnlyDictionary","pos":[0,46]}]},{"pos":[62295,62314],"content":"IEnumerable<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TValue>"},{"pos":[62600,62650],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[62921,62926],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[63039,63044],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63263,63308],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[63571,63578],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63795,63834],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[64084,64090],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64329,64378],"content":"System.Collections.IDictionary.Add(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Add(Object,Object)","pos":[0,49]}]},{"pos":[64648,64654],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64770,64776],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65006,65053],"content":"System.Collections.IDictionary.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Contains(Object)","pos":[0,47]}]},{"pos":[65320,65327],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[65445,65451],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65671,65717],"content":"System.Collections.IDictionary.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.GetEnumerator()","pos":[0,46]}]},{"pos":[66020,66041],"content":"IDictionaryEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionaryEnumerator","pos":[0,21]}]},{"pos":[66301,66343],"content":"System.Collections.IDictionary.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsFixedSize","pos":[0,42]}]},{"pos":[66600,66607],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[66826,66867],"content":"System.Collections.IDictionary.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsReadOnly","pos":[0,41]}]},{"pos":[67122,67129],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[67357,67400],"content":"System.Collections.IDictionary.Item(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Item(Object)","pos":[0,43]}]},{"pos":[67658,67664],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67780,67786],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67997,68032],"content":"System.Collections.IDictionary.Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Keys","pos":[0,35]}]},{"pos":[68303,68314],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[68564,68609],"content":"System.Collections.IDictionary.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Remove(Object)","pos":[0,45]}]},{"pos":[68871,68877],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69090,69127],"content":"System.Collections.IDictionary.Values","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Values","pos":[0,37]}]},{"pos":[69402,69413],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[69655,69701],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[69994,70005],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[70222,70246],"content":"TryGetValue(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(TKey,TValue)","pos":[0,24]}]},{"pos":[70467,70474],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[70578,70582],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[70675,70681],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[70856,70862],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[71108,71147],"content":"Dictionary<TKey,TValue>+ValueCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary&lt;TKey,TValue&gt;+ValueCollection","pos":[0,39],"source":"Dictionary<TKey,TValue>+ValueCollection"}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.Dictionary`2\n  id: Dictionary`2\n  children:\n  - System.Collections.Generic.Dictionary`2.#ctor\n  - System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary`2)\n  - System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})\n  - System.Collections.Generic.Dictionary`2.#ctor(System.Int32)\n  - System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary`2,System.Collections.Generic.IEqualityComparer{`0})\n  - System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})\n  - System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Generic.Dictionary`2.Add(`0,`1)\n  - System.Collections.Generic.Dictionary`2.Clear\n  - System.Collections.Generic.Dictionary`2.Comparer\n  - System.Collections.Generic.Dictionary`2.ContainsKey(`0)\n  - System.Collections.Generic.Dictionary`2.ContainsValue(`1)\n  - System.Collections.Generic.Dictionary`2.Count\n  - System.Collections.Generic.Dictionary`2.GetEnumerator\n  - System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Generic.Dictionary`2.Item(`0)\n  - System.Collections.Generic.Dictionary`2.Keys\n  - System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)\n  - System.Collections.Generic.Dictionary`2.Remove(`0)\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  - System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot\n  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator\n  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize\n  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly\n  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)\n  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys\n  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values\n  - System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)\n  - System.Collections.Generic.Dictionary`2.Values\n  langs:\n  - csharp\n  name: Dictionary<TKey,TValue>\n  nameWithType: Dictionary<TKey,TValue>\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Count = {Count}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))]\n\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class Dictionary<TKey,TValue> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IDictionary<TKey,TValue>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable\n    typeParameters:\n    - id: TKey\n      description: Parameter description to be filled\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  - System.Collections.Generic.IDictionary<TKey,TValue>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  - System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  - System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>\n  - System.Collections.IDictionary\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.#ctor\n  id: '#ctor'\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Dictionary()\n  nameWithType: Dictionary<TKey,TValue>.Dictionary()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public Dictionary ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary`2)\n  id: '#ctor(System.Collections.Generic.IDictionary`2)'\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Dictionary(IDictionary<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(IDictionary<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(IDictionary<TKey,TValue>)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public Dictionary (System.Collections.Generic.IDictionary<TKey,TValue> dictionary);\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.IDictionary`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})\n  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Dictionary(IEqualityComparer<TKey>)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(IEqualityComparer<TKey>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(IEqualityComparer<TKey>)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public Dictionary (System.Collections.Generic.IEqualityComparer<TKey> comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Dictionary(Int32)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public Dictionary (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary`2,System.Collections.Generic.IEqualityComparer{`0})\n  id: '#ctor(System.Collections.Generic.IDictionary`2,System.Collections.Generic.IEqualityComparer{`0})'\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Dictionary(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public Dictionary (System.Collections.Generic.IDictionary<TKey,TValue> dictionary, System.Collections.Generic.IEqualityComparer<TKey> comparer);\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.IDictionary`2\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})\n  id: '#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})'\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Dictionary(Int32,IEqualityComparer<TKey>)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(Int32,IEqualityComparer<TKey>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(Int32,IEqualityComparer<TKey>)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public Dictionary (int capacity, System.Collections.Generic.IEqualityComparer<TKey> comparer);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Dictionary(SerializationInfo,StreamingContext)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: protected Dictionary (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)\n  id: Add(`0,`1)\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Add(TKey,TValue)\n  nameWithType: Dictionary<TKey,TValue>.Add(TKey,TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Add(TKey,TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void Add (TKey key, TValue value);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    - id: value\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.Clear\n  id: Clear\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: Dictionary<TKey,TValue>.Clear()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.Comparer\n  id: Comparer\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Comparer\n  nameWithType: Dictionary<TKey,TValue>.Comparer\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Comparer\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.IEqualityComparer<TKey> Comparer { get; }\n    return:\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)\n  id: ContainsKey(`0)\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: ContainsKey(TKey)\n  nameWithType: Dictionary<TKey,TValue>.ContainsKey(TKey)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ContainsKey(TKey)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool ContainsKey (TKey key);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)\n  id: ContainsValue(`1)\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: ContainsValue(TValue)\n  nameWithType: Dictionary<TKey,TValue>.ContainsValue(TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ContainsValue(TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool ContainsValue (TValue value);\n    parameters:\n    - id: value\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.Count\n  id: Count\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Count\n  nameWithType: Dictionary<TKey,TValue>.Count\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.Dictionary<TKey,TValue>.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.Dictionary`2.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: Dictionary<TKey,TValue>.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.Item(`0)\n  id: Item(`0)\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Item(TKey)\n  nameWithType: Dictionary<TKey,TValue>.Item(TKey)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Item(TKey)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public TValue this[TKey key] { get; set; }\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.Keys\n  id: Keys\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: Dictionary<TKey,TValue>.Keys\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Keys\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.Dictionary<TKey,TValue>.KeyCollection Keys { get; }\n    return:\n      type: System.Collections.Generic.Dictionary`2.KeyCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)\n  id: OnDeserialization(System.Object)\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: OnDeserialization(Object)\n  nameWithType: Dictionary<TKey,TValue>.OnDeserialization(Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public virtual void OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.Remove(`0)\n  id: Remove(`0)\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Remove(TKey)\n  nameWithType: Dictionary<TKey,TValue>.Remove(TKey)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Remove(TKey)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool Remove (TKey key);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair<TKey,TValue> keyValuePair);\n    parameters:\n    - id: keyValuePair\n      type: System.Collections.Generic.KeyValuePair`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey,TValue>>.Contains (System.Collections.Generic.KeyValuePair<TKey,TValue> keyValuePair);\n    parameters:\n    - id: keyValuePair\n      type: System.Collections.Generic.KeyValuePair`2\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair<TKey,TValue>[] array, int index);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{TKey,TValue}\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair<TKey,TValue> keyValuePair);\n    parameters:\n    - id: keyValuePair\n      type: System.Collections.Generic.KeyValuePair`2\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.Generic.ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.Generic.ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TValue}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IEnumerable()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>> IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IReadOnlyDictionary\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.Generic.IEnumerable<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IReadOnlyDictionary\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.Generic.IEnumerable<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{TValue}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  id: System#Collections#IDictionary#Add(System.Object,System.Object)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void IDictionary.Add (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  id: System#Collections#IDictionary#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool IDictionary.Contains (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator\n  id: System#Collections#IDictionary#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize\n  id: System#Collections#IDictionary#IsFixedSize\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool System.Collections.IDictionary.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly\n  id: System#Collections#IDictionary#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool System.Collections.IDictionary.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)\n  id: System#Collections#IDictionary#Item(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: object System.Collections.IDictionary.Item[object key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys\n  id: System#Collections#IDictionary#Keys\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Keys\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Keys\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Keys\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }\n    return:\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  id: System#Collections#IDictionary#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void IDictionary.Remove (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values\n  id: System#Collections#IDictionary#Values\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Values\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Values\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Values\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)\n  id: TryGetValue(`0,`1@)\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: TryGetValue(TKey,TValue)\n  nameWithType: Dictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool TryGetValue (TKey key, out TValue value);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    - id: value\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2.Values\n  id: Values\n  parent: System.Collections.Generic.Dictionary`2\n  langs:\n  - csharp\n  name: Values\n  nameWithType: Dictionary<TKey,TValue>.Values\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Values\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.Dictionary<TKey,TValue>.ValueCollection Values { get; }\n    return:\n      type: System.Collections.Generic.Dictionary`2.ValueCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.Generic.Dictionary`2.#ctor\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Dictionary()\n  nameWithType: Dictionary<TKey,TValue>.Dictionary()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary()\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary`2)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Dictionary(IDictionary<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(IDictionary<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(IDictionary<TKey,TValue>)\n- uid: System.Collections.Generic.IDictionary`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Dictionary(IEqualityComparer<TKey>)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(IEqualityComparer<TKey>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(IEqualityComparer<TKey>)\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Dictionary(Int32)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary`2,System.Collections.Generic.IEqualityComparer{`0})\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Dictionary(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)\n- uid: System.Collections.Generic.IDictionary`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Dictionary(Int32,IEqualityComparer<TKey>)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(Int32,IEqualityComparer<TKey>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(Int32,IEqualityComparer<TKey>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Dictionary(SerializationInfo,StreamingContext)\n  nameWithType: Dictionary<TKey,TValue>.Dictionary(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Add(TKey,TValue)\n  nameWithType: Dictionary<TKey,TValue>.Add(TKey,TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Add(TKey,TValue)\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.Dictionary`2.Clear\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Clear()\n  nameWithType: Dictionary<TKey,TValue>.Clear()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Clear()\n- uid: System.Collections.Generic.Dictionary`2.Comparer\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Comparer\n  nameWithType: Dictionary<TKey,TValue>.Comparer\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Comparer\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: ContainsKey(TKey)\n  nameWithType: Dictionary<TKey,TValue>.ContainsKey(TKey)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ContainsKey(TKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: ContainsValue(TValue)\n  nameWithType: Dictionary<TKey,TValue>.ContainsValue(TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ContainsValue(TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.Dictionary`2.Count\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Count\n  nameWithType: Dictionary<TKey,TValue>.Count\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.Dictionary`2.GetEnumerator\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.GetEnumerator()\n- uid: System.Collections.Generic.Dictionary`2.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<TKey,TValue>+Enumerator\n  nameWithType: Dictionary<TKey,TValue>+Enumerator\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator\n- uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: Dictionary<TKey,TValue>.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Collections.Generic.Dictionary`2.Item(`0)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Item(TKey)\n  nameWithType: Dictionary<TKey,TValue>.Item(TKey)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Item(TKey)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.Generic.Dictionary`2.Keys\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Keys\n  nameWithType: Dictionary<TKey,TValue>.Keys\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Keys\n- uid: System.Collections.Generic.Dictionary`2.KeyCollection\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<TKey,TValue>+KeyCollection\n  nameWithType: Dictionary<TKey,TValue>+KeyCollection\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+KeyCollection\n- uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: Dictionary<TKey,TValue>.OnDeserialization(Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.OnDeserialization(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary`2.Remove(`0)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Remove(TKey)\n  nameWithType: Dictionary<TKey,TValue>.Remove(TKey)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Remove(TKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n- uid: System.Collections.Generic.KeyValuePair`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n- uid: System.Collections.Generic.KeyValuePair{TKey,TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IDictionary\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n- uid: System.Collections.Generic.ICollection{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<TKey>\n  nameWithType: ICollection<TKey>\n  fullName: System.Collections.Generic.ICollection<TKey>\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IDictionary\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n- uid: System.Collections.Generic.ICollection{TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<TValue>\n  nameWithType: ICollection<TValue>\n  fullName: System.Collections.Generic.ICollection<TValue>\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IEnumerable()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<KeyValuePair<TKey,TValue>>\n  nameWithType: IEnumerator<KeyValuePair<TKey,TValue>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IReadOnlyDictionary\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n- uid: System.Collections.Generic.IEnumerable{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TKey>\n  nameWithType: IEnumerable<TKey>\n  fullName: System.Collections.Generic.IEnumerable<TKey>\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IReadOnlyDictionary\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n- uid: System.Collections.Generic.IEnumerable{TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TValue>\n  nameWithType: IEnumerable<TValue>\n  fullName: System.Collections.Generic.IEnumerable<TValue>\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Keys\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Keys\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Keys\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Values\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Values\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IDictionary.Values\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: TryGetValue(TKey,TValue)\n  nameWithType: Dictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.Dictionary`2.Values\n  parent: System.Collections.Generic.Dictionary`2\n  isExternal: false\n  name: Values\n  nameWithType: Dictionary<TKey,TValue>.Values\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Values\n- uid: System.Collections.Generic.Dictionary`2.ValueCollection\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<TKey,TValue>+ValueCollection\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection\n"}