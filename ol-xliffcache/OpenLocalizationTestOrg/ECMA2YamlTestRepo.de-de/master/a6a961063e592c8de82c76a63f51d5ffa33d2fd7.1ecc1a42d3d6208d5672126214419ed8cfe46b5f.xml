{"nodes":[{"pos":[3692,3714],"content":"BitmapEffectCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffectCollection","pos":[0,22]}]},{"pos":[5799,5823],"content":"BitmapEffectCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffectCollection()","pos":[0,24]}]},{"pos":[6534,6583],"content":"BitmapEffectCollection(IEnumerable<ph id=\"ph1\">&lt;BitmapEffect&gt;</ph>)","needQuote":true,"needEscape":true,"source":"BitmapEffectCollection(IEnumerable<BitmapEffect>)"},{"pos":[7183,7217],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7464,7493],"content":"BitmapEffectCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffectCollection(Int32)","pos":[0,29]}]},{"pos":[7902,7936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8235,8252],"content":"Add(BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(BitmapEffect)","pos":[0,17]}]},{"pos":[8679,8713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8930,8937],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[9429,9436],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[9854,9888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10165,10185],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[10604,10638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10879,10898],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[11352,11386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11687,11719],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[12174,12208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12517,12539],"content":"Contains(BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(BitmapEffect)","pos":[0,22]}]},{"pos":[12981,13015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13074,13108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13443,13471],"content":"CopyTo(BitmapEffect[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(BitmapEffect[],Int32)","pos":[0,28]}]},{"pos":[13938,13972],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14033,14067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14284,14289],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[14604,14638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14881,14901],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[15316,15350],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15609,15628],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[16024,16058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16117,16151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16440,16466],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[16903,16937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17250,17288],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[17761,17795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18028,18043],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[18507,18541],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18848,18869],"content":"IndexOf(BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(BitmapEffect)","pos":[0,21]}]},{"pos":[19307,19341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19398,19432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19763,19789],"content":"Insert(Int32,BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,BitmapEffect)","pos":[0,26]}]},{"pos":[20219,20253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20343,20377],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20620,20631],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[21031,21065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21151,21185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21490,21510],"content":"Remove(BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(BitmapEffect)","pos":[0,20]}]},{"pos":[21946,21980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22039,22073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22324,22339],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[22700,22734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23139,23177],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[23641,23675],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24086,24126],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[24697,24731],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25080,25130],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[25577,25611],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25672,25706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26017,26062],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[26493,26527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26826,26865],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[27279,27313],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27622,27668],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[28135,28169],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28476,28512],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[28912,28946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29003,29037],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29354,29395],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[29811,29845],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29904,29938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30253,30293],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[30705,30739],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30796,30830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31169,31214],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[31646,31680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31742,31776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32069,32105],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[32509,32543],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32834,32869],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[33270,33304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33611,33647],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[34080,34114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34172,34206],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34519,34558],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[34968,35002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35141,35182],"content":"System.Windows.Media.Animation.Animatable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.Animatable","pos":[0,41]}]},{"pos":[35338,35362],"content":"BitmapEffectCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffectCollection()","pos":[0,24]}]},{"pos":[35754,35803],"content":"BitmapEffectCollection(IEnumerable<ph id=\"ph1\">&lt;BitmapEffect&gt;</ph>)","needQuote":true,"needEscape":true,"source":"BitmapEffectCollection(IEnumerable<BitmapEffect>)"},{"pos":[36161,36186],"content":"IEnumerable<ph id=\"ph1\">&lt;BitmapEffect&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<BitmapEffect>"},{"pos":[36492,36521],"content":"BitmapEffectCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffectCollection(Int32)","pos":[0,29]}]},{"pos":[36750,36755],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36999,37016],"content":"Add(BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(BitmapEffect)","pos":[0,17]}]},{"pos":[37272,37284],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[37523,37530],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[37805,37812],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[38058,38080],"content":"BitmapEffectCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffectCollection","pos":[0,22]}]},{"pos":[38369,38389],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[38619,38628],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[38859,38878],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[39148,39170],"content":"BitmapEffectCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffectCollection","pos":[0,22]}]},{"pos":[39471,39503],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[39757,39766],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[40031,40053],"content":"Contains(BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(BitmapEffect)","pos":[0,22]}]},{"pos":[40270,40277],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40445,40457],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[40755,40783],"content":"CopyTo(BitmapEffect[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(BitmapEffect[],Int32)","pos":[0,28]}]},{"pos":[41061,41073],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[41224,41229],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41432,41437],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[41618,41623],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41839,41859],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[42089,42098],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[42338,42357],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[42568,42575],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42694,42701],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42944,42970],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[43212,43221],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[43488,43526],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[43792,43801],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[44028,44043],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[44316,44349],"content":"BitmapEffectCollection+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffectCollection+Enumerator","pos":[0,33]}]},{"pos":[44675,44696],"content":"IndexOf(BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(BitmapEffect)","pos":[0,21]}]},{"pos":[44909,44914],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45078,45090],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[45386,45412],"content":"Insert(Int32,BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,BitmapEffect)","pos":[0,26]}]},{"pos":[45635,45640],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45804,45816],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[46068,46079],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[46323,46335],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[46484,46489],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46736,46756],"content":"Remove(BitmapEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(BitmapEffect)","pos":[0,20]}]},{"pos":[46969,46976],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47144,47156],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[47412,47427],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[47628,47633],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47923,47961],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[48210,48217],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[48514,48554],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[48894,48919],"content":"IEnumerator<ph id=\"ph1\">&lt;BitmapEffect&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<BitmapEffect>"},{"pos":[49270,49320],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[49591,49596],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[49709,49714],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49957,50002],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[50265,50272],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50513,50552],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[50802,50808],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51052,51098],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[51391,51402],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[51667,51703],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[51946,51951],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52065,52071],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52319,52360],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[52615,52622],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[52740,52746],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52993,53033],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[53284,53289],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53403,53409],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53668,53713],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[53974,53979],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54093,54099],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54335,54371],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[54616,54623],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54860,54895],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[55138,55145],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55390,55426],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[55670,55676],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55791,55796],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56040,56079],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[56329,56335],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Effects.BitmapEffectCollection\n  id: BitmapEffectCollection\n  children:\n  - System.Windows.Media.Effects.BitmapEffectCollection.#ctor\n  - System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect})\n  - System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Int32)\n  - System.Windows.Media.Effects.BitmapEffectCollection.Add(System.Windows.Media.Effects.BitmapEffect)\n  - System.Windows.Media.Effects.BitmapEffectCollection.Clear\n  - System.Windows.Media.Effects.BitmapEffectCollection.Clone\n  - System.Windows.Media.Effects.BitmapEffectCollection.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValue\n  - System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.Effects.BitmapEffectCollection.Contains(System.Windows.Media.Effects.BitmapEffect)\n  - System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(System.Windows.Media.Effects.BitmapEffect[],System.Int32)\n  - System.Windows.Media.Effects.BitmapEffectCollection.Count\n  - System.Windows.Media.Effects.BitmapEffectCollection.CreateInstanceCore\n  - System.Windows.Media.Effects.BitmapEffectCollection.FreezeCore(System.Boolean)\n  - System.Windows.Media.Effects.BitmapEffectCollection.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Effects.BitmapEffectCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Effects.BitmapEffectCollection.GetEnumerator\n  - System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(System.Windows.Media.Effects.BitmapEffect)\n  - System.Windows.Media.Effects.BitmapEffectCollection.Insert(System.Int32,System.Windows.Media.Effects.BitmapEffect)\n  - System.Windows.Media.Effects.BitmapEffectCollection.Item(System.Int32)\n  - System.Windows.Media.Effects.BitmapEffectCollection.Remove(System.Windows.Media.Effects.BitmapEffect)\n  - System.Windows.Media.Effects.BitmapEffectCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#ICollection{System#Windows#Media#Effects#BitmapEffect}#IsReadOnly\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Effects#BitmapEffect}#GetEnumerator\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsReadOnly\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: BitmapEffectCollection\n  nameWithType: BitmapEffectCollection\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection\n  type: Class\n  syntax:\n    content: 'public sealed class BitmapEffectCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection<System.Windows.Media.Effects.BitmapEffect>, System.Collections.Generic.IEnumerable<System.Windows.Media.Effects.BitmapEffect>, System.Collections.Generic.IList<System.Windows.Media.Effects.BitmapEffect>, System.Collections.IList'\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.Media.Effects.BitmapEffect>\n  - System.Collections.Generic.IEnumerable<System.Windows.Media.Effects.BitmapEffect>\n  - System.Collections.Generic.IList<System.Windows.Media.Effects.BitmapEffect>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: BitmapEffectCollection()\n  nameWithType: BitmapEffectCollection.BitmapEffectCollection()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.BitmapEffectCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public BitmapEffectCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect})'\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: BitmapEffectCollection(IEnumerable<BitmapEffect>)\n  nameWithType: BitmapEffectCollection.BitmapEffectCollection(IEnumerable<BitmapEffect>)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.BitmapEffectCollection(IEnumerable<BitmapEffect>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public BitmapEffectCollection (System.Collections.Generic.IEnumerable<System.Windows.Media.Effects.BitmapEffect> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: BitmapEffectCollection(Int32)\n  nameWithType: BitmapEffectCollection.BitmapEffectCollection(Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.BitmapEffectCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public BitmapEffectCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Add(System.Windows.Media.Effects.BitmapEffect)\n  id: Add(System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: Add(BitmapEffect)\n  nameWithType: BitmapEffectCollection.Add(BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Add(BitmapEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public void Add (System.Windows.Media.Effects.BitmapEffect value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Effects.BitmapEffect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: BitmapEffectCollection.Clear()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Clone\n  id: Clone\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: BitmapEffectCollection.Clone()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public System.Windows.Media.Effects.BitmapEffectCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.BitmapEffectCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: BitmapEffectCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: BitmapEffectCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public System.Windows.Media.Effects.BitmapEffectCollection CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.BitmapEffectCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: BitmapEffectCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Contains(System.Windows.Media.Effects.BitmapEffect)\n  id: Contains(System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: Contains(BitmapEffect)\n  nameWithType: BitmapEffectCollection.Contains(BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Contains(BitmapEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public bool Contains (System.Windows.Media.Effects.BitmapEffect value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Effects.BitmapEffect\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(System.Windows.Media.Effects.BitmapEffect[],System.Int32)\n  id: CopyTo(System.Windows.Media.Effects.BitmapEffect[],System.Int32)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: CopyTo(BitmapEffect[],Int32)\n  nameWithType: BitmapEffectCollection.CopyTo(BitmapEffect[],Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(BitmapEffect[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public void CopyTo (System.Windows.Media.Effects.BitmapEffect[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Media.Effects.BitmapEffect[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Count\n  id: Count\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: BitmapEffectCollection.Count\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: BitmapEffectCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: BitmapEffectCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: BitmapEffectCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: BitmapEffectCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: BitmapEffectCollection.GetEnumerator()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public System.Windows.Media.Effects.BitmapEffectCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.BitmapEffectCollection.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(System.Windows.Media.Effects.BitmapEffect)\n  id: IndexOf(System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: IndexOf(BitmapEffect)\n  nameWithType: BitmapEffectCollection.IndexOf(BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(BitmapEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public int IndexOf (System.Windows.Media.Effects.BitmapEffect value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Effects.BitmapEffect\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Insert(System.Int32,System.Windows.Media.Effects.BitmapEffect)\n  id: Insert(System.Int32,System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: Insert(Int32,BitmapEffect)\n  nameWithType: BitmapEffectCollection.Insert(Int32,BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Insert(Int32,BitmapEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public void Insert (int index, System.Windows.Media.Effects.BitmapEffect value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Windows.Media.Effects.BitmapEffect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: BitmapEffectCollection.Item(Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public System.Windows.Media.Effects.BitmapEffect this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Effects.BitmapEffect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Remove(System.Windows.Media.Effects.BitmapEffect)\n  id: Remove(System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: Remove(BitmapEffect)\n  nameWithType: BitmapEffectCollection.Remove(BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Remove(BitmapEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public bool Remove (System.Windows.Media.Effects.BitmapEffect value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Effects.BitmapEffect\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: BitmapEffectCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#ICollection{System#Windows#Media#Effects#BitmapEffect}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Windows#Media#Effects#BitmapEffect}#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: BitmapEffectCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Windows.Media.Effects.BitmapEffect>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Effects#BitmapEffect}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Windows#Media#Effects#BitmapEffect}#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: BitmapEffectCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Windows.Media.Effects.BitmapEffect> IEnumerable<BitmapEffect>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.Media.Effects.BitmapEffect}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: BitmapEffectCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: BitmapEffectCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: BitmapEffectCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: BitmapEffectCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: BitmapEffectCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: BitmapEffectCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.#ctor\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: BitmapEffectCollection()\n  nameWithType: BitmapEffectCollection.BitmapEffectCollection()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.BitmapEffectCollection()\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect})\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: BitmapEffectCollection(IEnumerable<BitmapEffect>)\n  nameWithType: BitmapEffectCollection.BitmapEffectCollection(IEnumerable<BitmapEffect>)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.BitmapEffectCollection(IEnumerable<BitmapEffect>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<BitmapEffect>\n  nameWithType: IEnumerable<BitmapEffect>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Media.Effects.BitmapEffect>\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Int32)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: BitmapEffectCollection(Int32)\n  nameWithType: BitmapEffectCollection.BitmapEffectCollection(Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.BitmapEffectCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Add(System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: Add(BitmapEffect)\n  nameWithType: BitmapEffectCollection.Add(BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Add(BitmapEffect)\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Clear\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: BitmapEffectCollection.Clear()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Clear()\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Clone\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: BitmapEffectCollection.Clone()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Clone()\n- uid: System.Windows.Media.Effects.BitmapEffectCollection\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffectCollection\n  nameWithType: BitmapEffectCollection\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: BitmapEffectCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValue\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: BitmapEffectCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValue()\n- uid: System.Windows.Media.Effects.BitmapEffectCollection\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffectCollection\n  nameWithType: BitmapEffectCollection\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: BitmapEffectCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Contains(System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: Contains(BitmapEffect)\n  nameWithType: BitmapEffectCollection.Contains(BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Contains(BitmapEffect)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(System.Windows.Media.Effects.BitmapEffect[],System.Int32)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: CopyTo(BitmapEffect[],Int32)\n  nameWithType: BitmapEffectCollection.CopyTo(BitmapEffect[],Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(BitmapEffect[],Int32)\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Count\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: Count\n  nameWithType: BitmapEffectCollection.Count\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.CreateInstanceCore\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: BitmapEffectCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: BitmapEffectCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: BitmapEffectCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: BitmapEffectCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.GetEnumerator\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: BitmapEffectCollection.GetEnumerator()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.GetEnumerator()\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Enumerator\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffectCollection+Enumerator\n  nameWithType: BitmapEffectCollection+Enumerator\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection+Enumerator\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: IndexOf(BitmapEffect)\n  nameWithType: BitmapEffectCollection.IndexOf(BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(BitmapEffect)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Insert(System.Int32,System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: Insert(Int32,BitmapEffect)\n  nameWithType: BitmapEffectCollection.Insert(Int32,BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Insert(Int32,BitmapEffect)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Item(System.Int32)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: BitmapEffectCollection.Item(Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Item(Int32)\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.Remove(System.Windows.Media.Effects.BitmapEffect)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: Remove(BitmapEffect)\n  nameWithType: BitmapEffectCollection.Remove(BitmapEffect)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.Remove(BitmapEffect)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: BitmapEffectCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#ICollection{System#Windows#Media#Effects#BitmapEffect}#IsReadOnly\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: BitmapEffectCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Effects#BitmapEffect}#GetEnumerator\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: BitmapEffectCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.Media.Effects.BitmapEffect}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<BitmapEffect>\n  nameWithType: IEnumerator<BitmapEffect>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.Media.Effects.BitmapEffect>\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: BitmapEffectCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: BitmapEffectCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: BitmapEffectCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: BitmapEffectCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: BitmapEffectCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: BitmapEffectCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.Effects.BitmapEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: BitmapEffectCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.Effects.BitmapEffectCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}