{"nodes":[{"pos":[866,883],"content":"ValueTuple<T1,T2>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2&gt;","pos":[0,17],"source":"ValueTuple<T1,T2>"}]},{"pos":[1239,1273],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1306,1340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1786,1803],"content":"ValueTuple(T1,T2)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2)","pos":[0,17]}]},{"pos":[2107,2141],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2192,2226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2429,2457],"content":"CompareTo(ValueTuple<T1,T2>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2&gt;)","pos":[0,28],"source":"CompareTo(ValueTuple<T1,T2>)"}]},{"pos":[2803,2837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2894,2928],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3113,3127],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3431,3465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3524,3558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3795,3820],"content":"Equals(ValueTuple<T1,T2>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2&gt;)","pos":[0,25],"source":"Equals(ValueTuple<T1,T2>)"}]},{"pos":[4158,4192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4251,4285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4490,4503],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[4799,4833],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4986,4991],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[5222,5256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5409,5414],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[5645,5679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6024,6092],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[6555,6589],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6669,6703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6760,6794],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7147,7219],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[7695,7729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7817,7851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7910,7944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8279,8349],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[8837,8871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8928,8962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9205,9241],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[9591,9625],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9682,9716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9875,9885],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10176,10210],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10324,10340],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[10439,10456],"content":"ValueTuple(T1,T2)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2)","pos":[0,17]}]},{"pos":[10614,10616],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[10701,10703],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[10854,10882],"content":"CompareTo(ValueTuple<T1,T2>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2&gt;)","pos":[0,28],"source":"CompareTo(ValueTuple<T1,T2>)"}]},{"pos":[11077,11082],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11202,11219],"content":"ValueTuple<T1,T2>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2&gt;","pos":[0,17],"source":"ValueTuple<T1,T2>"}]},{"pos":[11398,11412],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11581,11588],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11706,11712],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11875,11900],"content":"Equals(ValueTuple<T1,T2>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2&gt;)","pos":[0,25],"source":"Equals(ValueTuple<T1,T2>)"}]},{"pos":[12091,12098],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12222,12239],"content":"ValueTuple<T1,T2>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2&gt;","pos":[0,17],"source":"ValueTuple<T1,T2>"}]},{"pos":[12408,12421],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12586,12591],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12730,12735],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[12869,12871],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[12997,13002],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[13136,13138],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[13353,13421],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[13696,13701],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13815,13821],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13964,13973],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[14225,14297],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[14582,14589],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14707,14713],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14864,14881],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[15140,15210],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[15489,15494],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15643,15660],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[15873,15909],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[16120,16125],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16239,16245],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16389,16399],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16559,16565],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple`2\n  id: ValueTuple`2\n  children:\n  - System.ValueTuple`2.#ctor(`0,`1)\n  - System.ValueTuple`2.CompareTo(System.ValueTuple`2)\n  - System.ValueTuple`2.Equals(System.Object)\n  - System.ValueTuple`2.Equals(System.ValueTuple`2)\n  - System.ValueTuple`2.GetHashCode\n  - System.ValueTuple`2.Item1\n  - System.ValueTuple`2.Item2\n  - System.ValueTuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple`2.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple`2.ToString\n  langs:\n  - csharp\n  name: ValueTuple<T1,T2>\n  nameWithType: ValueTuple<T1,T2>\n  fullName: System.ValueTuple<T1,T2>\n  type: Struct\n  syntax:\n    content: 'public struct ValueTuple<T1,T2> : IComparable, IComparable<ValueTuple<T1,T2>>, IEquatable<ValueTuple<T1,T2>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: Parameter description to be filled\n    - id: T2\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable<System.ValueTuple<T1,T2>>\n  - System.IEquatable<System.ValueTuple<T1,T2>>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.#ctor(`0,`1)\n  id: '#ctor(`0,`1)'\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: ValueTuple(T1,T2)\n  nameWithType: ValueTuple<T1,T2>.ValueTuple(T1,T2)\n  fullName: System.ValueTuple<T1,T2>.ValueTuple(T1,T2)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ValueTuple (T1 item1, T2 item2);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.CompareTo(System.ValueTuple`2)\n  id: CompareTo(System.ValueTuple`2)\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple<T1,T2>)\n  nameWithType: ValueTuple<T1,T2>.CompareTo(ValueTuple<T1,T2>)\n  fullName: System.ValueTuple<T1,T2>.CompareTo(ValueTuple<T1,T2>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int CompareTo (ValueTuple<T1,T2> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`2\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2>.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`2.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.Equals(System.ValueTuple`2)\n  id: Equals(System.ValueTuple`2)\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: Equals(ValueTuple<T1,T2>)\n  nameWithType: ValueTuple<T1,T2>.Equals(ValueTuple<T1,T2>)\n  fullName: System.ValueTuple<T1,T2>.Equals(ValueTuple<T1,T2>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ValueTuple<T1,T2> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`2\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`2.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2>.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.Item1\n  id: Item1\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: ValueTuple<T1,T2>.Item1\n  fullName: System.ValueTuple<T1,T2>.Item1\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T1 Item1;\n    return:\n      type: T1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.Item2\n  id: Item2\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: ValueTuple<T1,T2>.Item2\n  fullName: System.ValueTuple<T1,T2>.Item2\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T2 Item2;\n    return:\n      type: T2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2>.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`2.ToString\n  id: ToString\n  parent: System.ValueTuple`2\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2>.ToString()\n  fullName: System.ValueTuple<T1,T2>.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ValueTuple`2.#ctor(`0,`1)\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: ValueTuple(T1,T2)\n  nameWithType: ValueTuple<T1,T2>.ValueTuple(T1,T2)\n  fullName: System.ValueTuple<T1,T2>.ValueTuple(T1,T2)\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: System.ValueTuple`2.CompareTo(System.ValueTuple`2)\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: CompareTo(ValueTuple<T1,T2>)\n  nameWithType: ValueTuple<T1,T2>.CompareTo(ValueTuple<T1,T2>)\n  fullName: System.ValueTuple<T1,T2>.CompareTo(ValueTuple<T1,T2>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`2\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2>\n  nameWithType: ValueTuple<T1,T2>\n  fullName: System.ValueTuple<T1,T2>\n- uid: System.ValueTuple`2.Equals(System.Object)\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`2.Equals(System.ValueTuple`2)\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: Equals(ValueTuple<T1,T2>)\n  nameWithType: ValueTuple<T1,T2>.Equals(ValueTuple<T1,T2>)\n  fullName: System.ValueTuple<T1,T2>.Equals(ValueTuple<T1,T2>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueTuple`2\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2>\n  nameWithType: ValueTuple<T1,T2>\n  fullName: System.ValueTuple<T1,T2>\n- uid: System.ValueTuple`2.GetHashCode\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`2.Item1\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: Item1\n  nameWithType: ValueTuple<T1,T2>.Item1\n  fullName: System.ValueTuple<T1,T2>.Item1\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple`2.Item2\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: Item2\n  nameWithType: ValueTuple<T1,T2>.Item2\n  fullName: System.ValueTuple<T1,T2>.Item2\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: System.ValueTuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`2.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2>.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`2.ToString\n  parent: System.ValueTuple`2\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2>.ToString()\n  fullName: System.ValueTuple<T1,T2>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple`2.Equals*\n  parent: System.ValueTuple`2\n  isExternal: false\n  nameWithType: ValueTuple<T1,T2>.\n"}