{"nodes":[{"pos":[1152,1160],"content":"TypeInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[12788,12796],"content":"AsType()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsType()","pos":[0,8]}]},{"pos":[13080,13114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13311,13331],"content":"DeclaredConstructors","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredConstructors","pos":[0,20]}]},{"pos":[13772,13806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13991,14005],"content":"DeclaredEvents","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredEvents","pos":[0,14]}]},{"pos":[14416,14450],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14635,14649],"content":"DeclaredFields","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredFields","pos":[0,14]}]},{"pos":[15060,15094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15281,15296],"content":"DeclaredMembers","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredMembers","pos":[0,15]}]},{"pos":[15712,15746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15933,15948],"content":"DeclaredMethods","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredMethods","pos":[0,15]}]},{"pos":[16364,16398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16593,16612],"content":"DeclaredNestedTypes","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredNestedTypes","pos":[0,19]}]},{"pos":[17036,17070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17263,17281],"content":"DeclaredProperties","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredProperties","pos":[0,18]}]},{"pos":[17710,17744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17943,17964],"content":"GenericTypeParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericTypeParameters","pos":[0,21]}]},{"pos":[18281,18315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18534,18558],"content":"GetDeclaredEvent(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredEvent(String)","pos":[0,24]}]},{"pos":[18920,18954],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19026,19060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19279,19303],"content":"GetDeclaredField(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredField(String)","pos":[0,24]}]},{"pos":[19665,19699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19771,19805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20026,20051],"content":"GetDeclaredMethod(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredMethod(String)","pos":[0,25]}]},{"pos":[20417,20451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20524,20558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20781,20807],"content":"GetDeclaredMethods(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredMethods(String)","pos":[0,26]}]},{"pos":[21216,21250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21363,21397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21626,21655],"content":"GetDeclaredNestedType(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredNestedType(String)","pos":[0,29]}]},{"pos":[22031,22065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22136,22170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22395,22422],"content":"GetDeclaredProperty(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredProperty(String)","pos":[0,27]}]},{"pos":[22796,22830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22905,22939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23138,23159],"content":"ImplementedInterfaces","needQuote":true,"needEscape":true,"nodes":[{"content":"ImplementedInterfaces","pos":[0,21]}]},{"pos":[23552,23586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23831,23857],"content":"IsAssignableFrom(TypeInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAssignableFrom(TypeInfo)","pos":[0,26]}]},{"pos":[24241,24275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24334,24368],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24631,24679],"content":"System.Reflection.IReflectableType.GetTypeInfo()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Reflection.IReflectableType.GetTypeInfo()","pos":[0,48]}]},{"pos":[25087,25121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25230,25241],"content":"System.Type","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Type","pos":[0,11]}]},{"pos":[25348,25356],"content":"AsType()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsType()","pos":[0,8]}]},{"pos":[25503,25507],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[25673,25693],"content":"DeclaredConstructors","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredConstructors","pos":[0,20]}]},{"pos":[25946,25974],"content":"IEnumerable<ph id=\"ph1\">&lt;ConstructorInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<ConstructorInfo>"},{"pos":[26220,26234],"content":"DeclaredEvents","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredEvents","pos":[0,14]}]},{"pos":[26469,26491],"content":"IEnumerable<ph id=\"ph1\">&lt;EventInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<EventInfo>"},{"pos":[26725,26739],"content":"DeclaredFields","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredFields","pos":[0,14]}]},{"pos":[26974,26996],"content":"IEnumerable<ph id=\"ph1\">&lt;FieldInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<FieldInfo>"},{"pos":[27231,27246],"content":"DeclaredMembers","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredMembers","pos":[0,15]}]},{"pos":[27484,27507],"content":"IEnumerable<ph id=\"ph1\">&lt;MemberInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<MemberInfo>"},{"pos":[27744,27759],"content":"DeclaredMethods","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredMethods","pos":[0,15]}]},{"pos":[27997,28020],"content":"IEnumerable<ph id=\"ph1\">&lt;MethodInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<MethodInfo>"},{"pos":[28261,28280],"content":"DeclaredNestedTypes","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredNestedTypes","pos":[0,19]}]},{"pos":[28524,28545],"content":"IEnumerable<ph id=\"ph1\">&lt;TypeInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TypeInfo>"},{"pos":[28781,28799],"content":"DeclaredProperties","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaredProperties","pos":[0,18]}]},{"pos":[29045,29070],"content":"IEnumerable<ph id=\"ph1\">&lt;PropertyInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<PropertyInfo>"},{"pos":[29317,29338],"content":"GenericTypeParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericTypeParameters","pos":[0,21]}]},{"pos":[29511,29515],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[29694,29718],"content":"GetDeclaredEvent(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredEvent(String)","pos":[0,24]}]},{"pos":[29924,29933],"content":"EventInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"EventInfo","pos":[0,9]}]},{"pos":[30066,30072],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30253,30277],"content":"GetDeclaredField(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredField(String)","pos":[0,24]}]},{"pos":[30483,30492],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[30625,30631],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30813,30838],"content":"GetDeclaredMethod(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredMethod(String)","pos":[0,25]}]},{"pos":[31047,31057],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[31192,31198],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31381,31407],"content":"GetDeclaredMethods(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredMethods(String)","pos":[0,26]}]},{"pos":[31667,31690],"content":"IEnumerable<ph id=\"ph1\">&lt;MethodInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<MethodInfo>"},{"pos":[31878,31884],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32070,32099],"content":"GetDeclaredNestedType(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredNestedType(String)","pos":[0,29]}]},{"pos":[32314,32322],"content":"TypeInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[32453,32459],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32643,32670],"content":"GetDeclaredProperty(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDeclaredProperty(String)","pos":[0,27]}]},{"pos":[32885,32897],"content":"PropertyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[33036,33042],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[33213,33234],"content":"ImplementedInterfaces","needQuote":true,"needEscape":true,"nodes":[{"content":"ImplementedInterfaces","pos":[0,21]}]},{"pos":[33467,33484],"content":"IEnumerable<ph id=\"ph1\">&lt;Type&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Type>"},{"pos":[33727,33753],"content":"IsAssignableFrom(TypeInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAssignableFrom(TypeInfo)","pos":[0,26]}]},{"pos":[33939,33946],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34088,34096],"content":"TypeInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[34307,34355],"content":"System.Reflection.IReflectableType.GetTypeInfo()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Reflection.IReflectableType.GetTypeInfo()","pos":[0,48]}]},{"pos":[34608,34616],"content":"TypeInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.TypeInfo\n  id: TypeInfo\n  children:\n  - System.Reflection.TypeInfo.AsType\n  - System.Reflection.TypeInfo.DeclaredConstructors\n  - System.Reflection.TypeInfo.DeclaredEvents\n  - System.Reflection.TypeInfo.DeclaredFields\n  - System.Reflection.TypeInfo.DeclaredMembers\n  - System.Reflection.TypeInfo.DeclaredMethods\n  - System.Reflection.TypeInfo.DeclaredNestedTypes\n  - System.Reflection.TypeInfo.DeclaredProperties\n  - System.Reflection.TypeInfo.GenericTypeParameters\n  - System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  - System.Reflection.TypeInfo.ImplementedInterfaces\n  - System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  - System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  langs:\n  - csharp\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class TypeInfo : Type, System.Reflection.IReflectableType\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Type\n  implements:\n  - System.Reflection.IReflectableType\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Name\n  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Type.Assembly\n  - System.Type.AssemblyQualifiedName\n  - System.Type.Attributes\n  - System.Type.BaseType\n  - System.Type.ContainsGenericParameters\n  - System.Type.DeclaringMethod\n  - System.Type.DeclaringType\n  - System.Type.DefaultBinder\n  - System.Type.Delimiter\n  - System.Type.EmptyTypes\n  - System.Type.Equals(System.Object)\n  - System.Type.Equals(System.Type)\n  - System.Type.FilterAttribute\n  - System.Type.FilterName\n  - System.Type.FilterNameIgnoreCase\n  - System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  - System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  - System.Type.FullName\n  - System.Type.GenericParameterAttributes\n  - System.Type.GenericParameterPosition\n  - System.Type.GenericTypeArguments\n  - System.Type.GetArrayRank\n  - System.Type.GetAttributeFlagsImpl\n  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetConstructor(System.Type[])\n  - System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetConstructors\n  - System.Type.GetConstructors(System.Reflection.BindingFlags)\n  - System.Type.GetDefaultMembers\n  - System.Type.GetElementType\n  - System.Type.GetEnumName(System.Object)\n  - System.Type.GetEnumNames\n  - System.Type.GetEnumUnderlyingType\n  - System.Type.GetEnumValues\n  - System.Type.GetEvent(System.String)\n  - System.Type.GetEvent(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetEvents\n  - System.Type.GetEvents(System.Reflection.BindingFlags)\n  - System.Type.GetField(System.String)\n  - System.Type.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetFields\n  - System.Type.GetFields(System.Reflection.BindingFlags)\n  - System.Type.GetGenericArguments\n  - System.Type.GetGenericParameterConstraints\n  - System.Type.GetGenericTypeDefinition\n  - System.Type.GetHashCode\n  - System.Type.GetInterface(System.String)\n  - System.Type.GetInterface(System.String,System.Boolean)\n  - System.Type.GetInterfaceMap(System.Type)\n  - System.Type.GetInterfaces\n  - System.Type.GetMember(System.String)\n  - System.Type.GetMember(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  - System.Type.GetMembers\n  - System.Type.GetMembers(System.Reflection.BindingFlags)\n  - System.Type.GetMethod(System.String)\n  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethod(System.String,System.Type[])\n  - System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethods\n  - System.Type.GetMethods(System.Reflection.BindingFlags)\n  - System.Type.GetNestedType(System.String)\n  - System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetNestedTypes\n  - System.Type.GetNestedTypes(System.Reflection.BindingFlags)\n  - System.Type.GetProperties\n  - System.Type.GetProperties(System.Reflection.BindingFlags)\n  - System.Type.GetProperty(System.String)\n  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetProperty(System.String,System.Type)\n  - System.Type.GetProperty(System.String,System.Type,System.Type[])\n  - System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetProperty(System.String,System.Type[])\n  - System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetType\n  - System.Type.GetType(System.String)\n  - System.Type.GetType(System.String,System.Boolean)\n  - System.Type.GetType(System.String,System.Boolean,System.Boolean)\n  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})\n  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)\n  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)\n  - System.Type.GetTypeArray(System.Object[])\n  - System.Type.GetTypeCode(System.Type)\n  - System.Type.GetTypeCodeImpl\n  - System.Type.GetTypeFromCLSID(System.Guid)\n  - System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)\n  - System.Type.GetTypeFromCLSID(System.Guid,System.String)\n  - System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)\n  - System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)\n  - System.Type.GetTypeFromProgID(System.String)\n  - System.Type.GetTypeFromProgID(System.String,System.Boolean)\n  - System.Type.GetTypeFromProgID(System.String,System.String)\n  - System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)\n  - System.Type.GetTypeHandle(System.Object)\n  - System.Type.GUID\n  - System.Type.HasElementType\n  - System.Type.HasElementTypeImpl\n  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  - System.Type.IsAbstract\n  - System.Type.IsAnsiClass\n  - System.Type.IsArray\n  - System.Type.IsArrayImpl\n  - System.Type.IsAssignableFrom(System.Type)\n  - System.Type.IsAutoClass\n  - System.Type.IsAutoLayout\n  - System.Type.IsByRef\n  - System.Type.IsByRefImpl\n  - System.Type.IsClass\n  - System.Type.IsCOMObject\n  - System.Type.IsCOMObjectImpl\n  - System.Type.IsConstructedGenericType\n  - System.Type.IsContextful\n  - System.Type.IsContextfulImpl\n  - System.Type.IsEnum\n  - System.Type.IsEnumDefined(System.Object)\n  - System.Type.IsEquivalentTo(System.Type)\n  - System.Type.IsExplicitLayout\n  - System.Type.IsGenericParameter\n  - System.Type.IsGenericType\n  - System.Type.IsGenericTypeDefinition\n  - System.Type.IsImport\n  - System.Type.IsInstanceOfType(System.Object)\n  - System.Type.IsInterface\n  - System.Type.IsLayoutSequential\n  - System.Type.IsMarshalByRef\n  - System.Type.IsMarshalByRefImpl\n  - System.Type.IsNested\n  - System.Type.IsNestedAssembly\n  - System.Type.IsNestedFamANDAssem\n  - System.Type.IsNestedFamily\n  - System.Type.IsNestedFamORAssem\n  - System.Type.IsNestedPrivate\n  - System.Type.IsNestedPublic\n  - System.Type.IsNotPublic\n  - System.Type.IsPointer\n  - System.Type.IsPointerImpl\n  - System.Type.IsPrimitive\n  - System.Type.IsPrimitiveImpl\n  - System.Type.IsPublic\n  - System.Type.IsSealed\n  - System.Type.IsSecurityCritical\n  - System.Type.IsSecuritySafeCritical\n  - System.Type.IsSecurityTransparent\n  - System.Type.IsSerializable\n  - System.Type.IsSpecialName\n  - System.Type.IsSubclassOf(System.Type)\n  - System.Type.IsUnicodeClass\n  - System.Type.IsValueType\n  - System.Type.IsValueTypeImpl\n  - System.Type.IsVisible\n  - System.Type.MakeArrayType\n  - System.Type.MakeArrayType(System.Int32)\n  - System.Type.MakeByRefType\n  - System.Type.MakeGenericType(System.Type[])\n  - System.Type.MakePointerType\n  - System.Type.MemberType\n  - System.Type.Missing\n  - System.Type.Module\n  - System.Type.Namespace\n  - System.Type.op_Equality(System.Type,System.Type)\n  - System.Type.op_Inequality(System.Type,System.Type)\n  - System.Type.ReflectedType\n  - System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  - System.Type.StructLayoutAttribute\n  - System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)\n  - System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Type.ToString\n  - System.Type.TypeHandle\n  - System.Type.TypeInitializer\n  - System.Type.UnderlyingSystemType\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.AsType\n  id: AsType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: AsType()\n  nameWithType: TypeInfo.AsType()\n  fullName: System.Reflection.TypeInfo.AsType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type AsType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.DeclaredConstructors\n  id: DeclaredConstructors\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredConstructors\n  nameWithType: TypeInfo.DeclaredConstructors\n  fullName: System.Reflection.TypeInfo.DeclaredConstructors\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.ConstructorInfo> DeclaredConstructors { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.DeclaredEvents\n  id: DeclaredEvents\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredEvents\n  nameWithType: TypeInfo.DeclaredEvents\n  fullName: System.Reflection.TypeInfo.DeclaredEvents\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.EventInfo> DeclaredEvents { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.EventInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.DeclaredFields\n  id: DeclaredFields\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredFields\n  nameWithType: TypeInfo.DeclaredFields\n  fullName: System.Reflection.TypeInfo.DeclaredFields\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.FieldInfo> DeclaredFields { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.FieldInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.DeclaredMembers\n  id: DeclaredMembers\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredMembers\n  nameWithType: TypeInfo.DeclaredMembers\n  fullName: System.Reflection.TypeInfo.DeclaredMembers\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo> DeclaredMembers { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.DeclaredMethods\n  id: DeclaredMethods\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredMethods\n  nameWithType: TypeInfo.DeclaredMethods\n  fullName: System.Reflection.TypeInfo.DeclaredMethods\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo> DeclaredMethods { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.DeclaredNestedTypes\n  id: DeclaredNestedTypes\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredNestedTypes\n  nameWithType: TypeInfo.DeclaredNestedTypes\n  fullName: System.Reflection.TypeInfo.DeclaredNestedTypes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo> DeclaredNestedTypes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.DeclaredProperties\n  id: DeclaredProperties\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredProperties\n  nameWithType: TypeInfo.DeclaredProperties\n  fullName: System.Reflection.TypeInfo.DeclaredProperties\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo> DeclaredProperties { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.GenericTypeParameters\n  id: GenericTypeParameters\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GenericTypeParameters\n  nameWithType: TypeInfo.GenericTypeParameters\n  fullName: System.Reflection.TypeInfo.GenericTypeParameters\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GenericTypeParameters { get; }\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  id: GetDeclaredEvent(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredEvent(String)\n  nameWithType: TypeInfo.GetDeclaredEvent(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredEvent(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.EventInfo GetDeclaredEvent (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.EventInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  id: GetDeclaredField(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredField(String)\n  nameWithType: TypeInfo.GetDeclaredField(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredField(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.FieldInfo GetDeclaredField (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  id: GetDeclaredMethod(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredMethod(String)\n  nameWithType: TypeInfo.GetDeclaredMethod(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredMethod(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MethodInfo GetDeclaredMethod (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  id: GetDeclaredMethods(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredMethods(String)\n  nameWithType: TypeInfo.GetDeclaredMethods(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredMethods(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo> GetDeclaredMethods (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  id: GetDeclaredNestedType(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredNestedType(String)\n  nameWithType: TypeInfo.GetDeclaredNestedType(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredNestedType(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.TypeInfo GetDeclaredNestedType (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.TypeInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  id: GetDeclaredProperty(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredProperty(String)\n  nameWithType: TypeInfo.GetDeclaredProperty(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredProperty(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.PropertyInfo GetDeclaredProperty (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.PropertyInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.ImplementedInterfaces\n  id: ImplementedInterfaces\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: ImplementedInterfaces\n  nameWithType: TypeInfo.ImplementedInterfaces\n  fullName: System.Reflection.TypeInfo.ImplementedInterfaces\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<Type> ImplementedInterfaces { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  id: IsAssignableFrom(System.Reflection.TypeInfo)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsAssignableFrom(TypeInfo)\n  nameWithType: TypeInfo.IsAssignableFrom(TypeInfo)\n  fullName: System.Reflection.TypeInfo.IsAssignableFrom(TypeInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);\n    parameters:\n    - id: typeInfo\n      type: System.Reflection.TypeInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  id: System#Reflection#IReflectableType#GetTypeInfo\n  isEii: true\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: System.Reflection.IReflectableType.GetTypeInfo()\n  nameWithType: TypeInfo.System.Reflection.IReflectableType.GetTypeInfo()\n  fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: System.Reflection.TypeInfo IReflectableType.GetTypeInfo ();\n    parameters: []\n    return:\n      type: System.Reflection.TypeInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Type\n  isExternal: false\n  name: System.Type\n- uid: System.Reflection.TypeInfo.AsType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: AsType()\n  nameWithType: TypeInfo.AsType()\n  fullName: System.Reflection.TypeInfo.AsType()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.TypeInfo.DeclaredConstructors\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredConstructors\n  nameWithType: TypeInfo.DeclaredConstructors\n  fullName: System.Reflection.TypeInfo.DeclaredConstructors\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ConstructorInfo>\n  nameWithType: IEnumerable<ConstructorInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.ConstructorInfo>\n- uid: System.Reflection.TypeInfo.DeclaredEvents\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredEvents\n  nameWithType: TypeInfo.DeclaredEvents\n  fullName: System.Reflection.TypeInfo.DeclaredEvents\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.EventInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<EventInfo>\n  nameWithType: IEnumerable<EventInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.EventInfo>\n- uid: System.Reflection.TypeInfo.DeclaredFields\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredFields\n  nameWithType: TypeInfo.DeclaredFields\n  fullName: System.Reflection.TypeInfo.DeclaredFields\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.FieldInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<FieldInfo>\n  nameWithType: IEnumerable<FieldInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.FieldInfo>\n- uid: System.Reflection.TypeInfo.DeclaredMembers\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredMembers\n  nameWithType: TypeInfo.DeclaredMembers\n  fullName: System.Reflection.TypeInfo.DeclaredMembers\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<MemberInfo>\n  nameWithType: IEnumerable<MemberInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>\n- uid: System.Reflection.TypeInfo.DeclaredMethods\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredMethods\n  nameWithType: TypeInfo.DeclaredMethods\n  fullName: System.Reflection.TypeInfo.DeclaredMethods\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<MethodInfo>\n  nameWithType: IEnumerable<MethodInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo>\n- uid: System.Reflection.TypeInfo.DeclaredNestedTypes\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredNestedTypes\n  nameWithType: TypeInfo.DeclaredNestedTypes\n  fullName: System.Reflection.TypeInfo.DeclaredNestedTypes\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TypeInfo>\n  nameWithType: IEnumerable<TypeInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>\n- uid: System.Reflection.TypeInfo.DeclaredProperties\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredProperties\n  nameWithType: TypeInfo.DeclaredProperties\n  fullName: System.Reflection.TypeInfo.DeclaredProperties\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<PropertyInfo>\n  nameWithType: IEnumerable<PropertyInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>\n- uid: System.Reflection.TypeInfo.GenericTypeParameters\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GenericTypeParameters\n  nameWithType: TypeInfo.GenericTypeParameters\n  fullName: System.Reflection.TypeInfo.GenericTypeParameters\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredEvent(String)\n  nameWithType: TypeInfo.GetDeclaredEvent(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredEvent(String)\n- uid: System.Reflection.EventInfo\n  parent: System.Reflection\n  isExternal: false\n  name: EventInfo\n  nameWithType: EventInfo\n  fullName: System.Reflection.EventInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredField(String)\n  nameWithType: TypeInfo.GetDeclaredField(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredField(String)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredMethod(String)\n  nameWithType: TypeInfo.GetDeclaredMethod(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredMethod(String)\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredMethods(String)\n  nameWithType: TypeInfo.GetDeclaredMethods(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredMethods(String)\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<MethodInfo>\n  nameWithType: IEnumerable<MethodInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredNestedType(String)\n  nameWithType: TypeInfo.GetDeclaredNestedType(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredNestedType(String)\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: false\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredProperty(String)\n  nameWithType: TypeInfo.GetDeclaredProperty(String)\n  fullName: System.Reflection.TypeInfo.GetDeclaredProperty(String)\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeInfo.ImplementedInterfaces\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: ImplementedInterfaces\n  nameWithType: TypeInfo.ImplementedInterfaces\n  fullName: System.Reflection.TypeInfo.ImplementedInterfaces\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAssignableFrom(TypeInfo)\n  nameWithType: TypeInfo.IsAssignableFrom(TypeInfo)\n  fullName: System.Reflection.TypeInfo.IsAssignableFrom(TypeInfo)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: false\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: System.Reflection.IReflectableType.GetTypeInfo()\n  nameWithType: TypeInfo.System.Reflection.IReflectableType.GetTypeInfo()\n  fullName: System.Reflection.TypeInfo.System.Reflection.IReflectableType.GetTypeInfo()\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: false\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n"}