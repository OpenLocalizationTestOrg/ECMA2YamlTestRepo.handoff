{"nodes":[{"pos":[2841,2855],"content":"IDeque<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IDeque<TValue>"},{"pos":[3180,3214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3600,3619],"content":"assign(IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(IEnumerable)","pos":[0,19]}]},{"pos":[4017,4051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4490,4543],"content":"assign(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,IInputIterator<ph id=\"ph2\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"assign(IInputIterator<TValue>,IInputIterator<TValue>)"},{"pos":[5116,5150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5248,5282],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5553,5573],"content":"assign(Int32,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(Int32,TValue)","pos":[0,20]}]},{"pos":[5941,5975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6029,6063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6320,6329],"content":"at(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"at(Int32)","pos":[0,9]}]},{"pos":[6656,6690],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6742,6776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6955,6961],"content":"back()","needQuote":true,"needEscape":true,"nodes":[{"content":"back()","pos":[0,6]}]},{"pos":[7271,7305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7494,7503],"content":"back_item","needQuote":true,"needEscape":true,"nodes":[{"content":"back_item","pos":[0,9]}]},{"pos":[7816,7850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8165,8209],"content":"begin(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"begin(ContainerRandomAccessIterator<TValue>)"},{"pos":[8776,8810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8918,8952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9143,9155],"content":"begin_bias()","needQuote":true,"needEscape":true,"nodes":[{"content":"begin_bias()","pos":[0,12]}]},{"pos":[9485,9519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9700,9707],"content":"clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"clear()","pos":[0,7]}]},{"pos":[10147,10154],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[10472,10506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10817,10859],"content":"end(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"end(ContainerRandomAccessIterator<TValue>)"},{"pos":[11420,11454],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11562,11596],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11783,11793],"content":"end_bias()","needQuote":true,"needEscape":true,"nodes":[{"content":"end_bias()","pos":[0,10]}]},{"pos":[12117,12151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12592,12666],"content":"erase(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)"},{"pos":[13364,13398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13510,13544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13652,13686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14306,14410],"content":"erase(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)"},{"pos":[15248,15282],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15399,15433],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15549,15583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15691,15725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15959,15966],"content":"front()","needQuote":true,"needEscape":true,"nodes":[{"content":"front()","pos":[0,7]}]},{"pos":[16279,16313],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16504,16514],"content":"front_item","needQuote":true,"needEscape":true,"nodes":[{"content":"front_item","pos":[0,10]}]},{"pos":[16830,16864],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17237,17286],"content":"insert(ContainerRandomAccessIterator,IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"insert(ContainerRandomAccessIterator,IEnumerable)","pos":[0,49]}]},{"pos":[17857,17891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17971,18005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18570,18653],"content":"insert(ContainerRandomAccessIterator,IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,IInputIterator<ph id=\"ph2\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)"},{"pos":[19370,19404],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19503,19537],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19635,19669],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20066,20116],"content":"insert(ContainerRandomAccessIterator,Int32,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"insert(ContainerRandomAccessIterator,Int32,TValue)","pos":[0,50]}]},{"pos":[20665,20699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20761,20795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20849,20883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21386,21468],"content":"insert(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator,TValue)","needQuote":true,"needEscape":true,"source":"insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)"},{"pos":[22196,22230],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22342,22376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22430,22464],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22572,22606],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22867,22878],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[23225,23259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23310,23344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23531,23541],"content":"pop_back()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop_back()","pos":[0,10]}]},{"pos":[23998,24009],"content":"pop_front()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop_front()","pos":[0,11]}]},{"pos":[24477,24494],"content":"push_back(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push_back(TValue)","pos":[0,17]}]},{"pos":[24839,24873],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25072,25090],"content":"push_front(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push_front(TValue)","pos":[0,18]}]},{"pos":[25438,25472],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25785,25828],"content":"rbegin(ReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"rbegin(ReverseRandomAccessIterator<TValue>)"},{"pos":[26390,26424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26532,26566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26875,26916],"content":"rend(ReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"rend(ReverseRandomAccessIterator<TValue>)"},{"pos":[27472,27506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27614,27648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27859,27872],"content":"resize(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"resize(Int32)","pos":[0,13]}]},{"pos":[28217,28251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28522,28542],"content":"resize(Int32,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"resize(Int32,TValue)","pos":[0,20]}]},{"pos":[28914,28948],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29002,29036],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29269,29275],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[29587,29621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29870,29890],"content":"swap(IDeque<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"swap(IDeque<TValue>)"},{"pos":[30294,30328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30542,30561],"content":"assign(IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(IEnumerable)","pos":[0,19]}]},{"pos":[30780,30791],"content":"IEnumerable","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[31084,31137],"content":"assign(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,IInputIterator<ph id=\"ph2\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"assign(IInputIterator<TValue>,IInputIterator<TValue>)"},{"pos":[31457,31479],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[31715,31737],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[31982,32002],"content":"assign(Int32,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(Int32,TValue)","pos":[0,20]}]},{"pos":[32193,32198],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32300,32306],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[32479,32488],"content":"at(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"at(Int32)","pos":[0,9]}]},{"pos":[32657,32662],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32828,32834],"content":"back()","needQuote":true,"needEscape":true,"nodes":[{"content":"back()","pos":[0,6]}]},{"pos":[33055,33064],"content":"back_item","needQuote":true,"needEscape":true,"nodes":[{"content":"back_item","pos":[0,9]}]},{"pos":[33222,33228],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[33457,33501],"content":"begin(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"begin(ContainerRandomAccessIterator<TValue>)"},{"pos":[33818,33855],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[34117,34129],"content":"begin_bias()","needQuote":true,"needEscape":true,"nodes":[{"content":"begin_bias()","pos":[0,12]}]},{"pos":[34304,34309],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34476,34483],"content":"clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"clear()","pos":[0,7]}]},{"pos":[34702,34709],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[34876,34883],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35119,35161],"content":"end(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"end(ContainerRandomAccessIterator<TValue>)"},{"pos":[35474,35511],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[35771,35781],"content":"end_bias()","needQuote":true,"needEscape":true,"nodes":[{"content":"end_bias()","pos":[0,10]}]},{"pos":[35952,35957],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36254,36328],"content":"erase(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)"},{"pos":[36705,36742],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[37020,37049],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[37483,37587],"content":"erase(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)"},{"pos":[38024,38061],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[38339,38368],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[38630,38659],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[38900,38907],"content":"front()","needQuote":true,"needEscape":true,"nodes":[{"content":"front()","pos":[0,7]}]},{"pos":[39131,39141],"content":"front_item","needQuote":true,"needEscape":true,"nodes":[{"content":"front_item","pos":[0,10]}]},{"pos":[39301,39307],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[39565,39614],"content":"insert(ContainerRandomAccessIterator,IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"insert(ContainerRandomAccessIterator,IEnumerable)","pos":[0,49]}]},{"pos":[39938,39967],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[40184,40195],"content":"IEnumerable","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[40551,40634],"content":"insert(ContainerRandomAccessIterator,IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,IInputIterator<ph id=\"ph2\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)"},{"pos":[41026,41055],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[41305,41327],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[41563,41585],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[41893,41943],"content":"insert(ContainerRandomAccessIterator,Int32,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"insert(ContainerRandomAccessIterator,Int32,TValue)","pos":[0,50]}]},{"pos":[42269,42298],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[42485,42490],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42592,42598],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[42894,42976],"content":"insert(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator,TValue)","needQuote":true,"needEscape":true,"source":"insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)"},{"pos":[43369,43406],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[43684,43713],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[43889,43895],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[44070,44081],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[44243,44249],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[44357,44362],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[44532,44542],"content":"pop_back()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop_back()","pos":[0,10]}]},{"pos":[44771,44782],"content":"pop_front()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop_front()","pos":[0,11]}]},{"pos":[45017,45034],"content":"push_back(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push_back(TValue)","pos":[0,17]}]},{"pos":[45208,45214],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[45385,45403],"content":"push_front(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push_front(TValue)","pos":[0,18]}]},{"pos":[45579,45585],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[45813,45856],"content":"rbegin(ReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"rbegin(ReverseRandomAccessIterator<TValue>)"},{"pos":[46169,46204],"content":"ReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReverseRandomAccessIterator<TValue>"},{"pos":[46521,46562],"content":"rend(ReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"rend(ReverseRandomAccessIterator<TValue>)"},{"pos":[46871,46906],"content":"ReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReverseRandomAccessIterator<TValue>"},{"pos":[47174,47187],"content":"resize(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"resize(Int32)","pos":[0,13]}]},{"pos":[47364,47369],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47554,47574],"content":"resize(Int32,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"resize(Int32,TValue)","pos":[0,20]}]},{"pos":[47765,47770],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47872,47878],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[48039,48045],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[48208,48213],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48414,48434],"content":"swap(IDeque<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"swap(IDeque<TValue>)"},{"pos":[48664,48678],"content":"IDeque<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IDeque<TValue>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IDeque`1\n  id: IDeque`1\n  children:\n  - Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)\n  - Microsoft.VisualC.StlClr.IDeque`1.back\n  - Microsoft.VisualC.StlClr.IDeque`1.back_item\n  - Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.IDeque`1.begin_bias\n  - Microsoft.VisualC.StlClr.IDeque`1.clear\n  - Microsoft.VisualC.StlClr.IDeque`1.empty\n  - Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.IDeque`1.end_bias\n  - Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.IDeque`1.front\n  - Microsoft.VisualC.StlClr.IDeque`1.front_item\n  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)\n  - Microsoft.VisualC.StlClr.IDeque`1.pop_back\n  - Microsoft.VisualC.StlClr.IDeque`1.pop_front\n  - Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)\n  - Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)\n  - Microsoft.VisualC.StlClr.IDeque`1.size\n  - Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque`1)\n  langs:\n  - csharp\n  name: IDeque<TValue>\n  nameWithType: IDeque<TValue>\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>\n  type: Interface\n  syntax:\n    content: 'public interface IDeque<TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>, System.Collections.ICollection'\n    typeParameters:\n    - id: TValue\n      description: Parameter description to be filled\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>\n  - System.Collections.ICollection\n  - System.ICloneable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)\n  id: assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: assign(IEnumerable)\n  nameWithType: IDeque<TValue>.assign(IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.assign(IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void assign (System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.assign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IDeque<TValue>.assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.assign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)\n  id: assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: assign(Int32,TValue)\n  nameWithType: IDeque<TValue>.assign(Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.assign(Int32,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void assign (int _Count, TValue _Val);\n    parameters:\n    - id: _Count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.assign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)\n  id: at(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: at(Int32)\n  nameWithType: IDeque<TValue>.at(Int32)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.at(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue at (int _Pos);\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back\n  id: back\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: back()\n  nameWithType: IDeque<TValue>.back()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue back ();\n    parameters: []\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back_item\n  id: back_item\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: back_item\n  nameWithType: IDeque<TValue>.back_item\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.back_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue back_item { get; set; }\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: begin(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin_bias\n  id: begin_bias\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: begin_bias()\n  nameWithType: IDeque<TValue>.begin_bias()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.begin_bias()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int begin_bias ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.clear\n  id: clear\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: clear()\n  nameWithType: IDeque<TValue>.clear()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.clear()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IDeque<TValue>.empty()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  id: end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: end(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end_bias\n  id: end_bias\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: end_bias()\n  nameWithType: IDeque<TValue>.end_bias()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.end_bias()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int end_bias ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.erase*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Last_iter);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _First_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    - id: _Last_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.erase*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front\n  id: front\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: front()\n  nameWithType: IDeque<TValue>.front()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.front()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue front ();\n    parameters: []\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front_item\n  id: front_item\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: front_item\n  nameWithType: IDeque<TValue>.front_item\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.front_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue front_item { get; set; }\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator,IEnumerable)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator,IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.insert(ContainerRandomAccessIterator,IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where_iter, System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Where_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator,Int32,TValue)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator,Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.insert(ContainerRandomAccessIterator,Int32,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, int _Count, TValue _Val);\n    parameters:\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    - id: _Count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Where, TValue _Val);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: IDeque<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue this[int _Pos] { get; set; }\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_back\n  id: pop_back\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: pop_back()\n  nameWithType: IDeque<TValue>.pop_back()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.pop_back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void pop_back ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_front\n  id: pop_front\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: pop_front()\n  nameWithType: IDeque<TValue>.pop_front()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.pop_front()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void pop_front ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)\n  id: push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: push_back(TValue)\n  nameWithType: IDeque<TValue>.push_back(TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.push_back(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void push_back (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)\n  id: push_front(`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: push_front(TValue)\n  nameWithType: IDeque<TValue>.push_front(TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.push_front(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void push_front (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: rbegin(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: rend(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)\n  id: resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: resize(Int32)\n  nameWithType: IDeque<TValue>.resize(Int32)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.resize(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void resize (int _Newsize);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.resize*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)\n  id: resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: resize(Int32,TValue)\n  nameWithType: IDeque<TValue>.resize(Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.resize(Int32,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void resize (int _Newsize, TValue _Val);\n    parameters:\n    - id: _Newsize\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IDeque`1.resize*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IDeque<TValue>.size()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque`1)\n  id: swap(Microsoft.VisualC.StlClr.IDeque`1)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  langs:\n  - csharp\n  name: swap(IDeque<TValue>)\n  nameWithType: IDeque<TValue>.swap(IDeque<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.swap(IDeque<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void swap (Microsoft.VisualC.StlClr.IDeque<TValue> A_0);\n    parameters:\n    - id: A_0\n      type: Microsoft.VisualC.StlClr.IDeque`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: assign(IEnumerable)\n  nameWithType: IDeque<TValue>.assign(IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.assign(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IDeque<TValue>.assign(IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.assign(IInputIterator<TValue>,IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: assign(Int32,TValue)\n  nameWithType: IDeque<TValue>.assign(Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.assign(Int32,TValue)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: at(Int32)\n  nameWithType: IDeque<TValue>.at(Int32)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.at(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: back()\n  nameWithType: IDeque<TValue>.back()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.back()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.back_item\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: back_item\n  nameWithType: IDeque<TValue>.back_item\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.back_item\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: begin(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.begin(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.begin_bias\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: begin_bias()\n  nameWithType: IDeque<TValue>.begin_bias()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.begin_bias()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IDeque`1.clear\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: clear()\n  nameWithType: IDeque<TValue>.clear()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.clear()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.empty\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: empty()\n  nameWithType: IDeque<TValue>.empty()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: end(ContainerRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.end(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.end_bias\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: end_bias()\n  nameWithType: IDeque<TValue>.end_bias()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.end_bias()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  nameWithType: IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.erase(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: front()\n  nameWithType: IDeque<TValue>.front()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.front()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.front_item\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: front_item\n  nameWithType: IDeque<TValue>.front_item\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.front_item\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator,IEnumerable)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator,IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.insert(ContainerRandomAccessIterator,IEnumerable)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.insert(ContainerRandomAccessIterator,IInputIterator<TValue>,IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator,Int32,TValue)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator,Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.insert(ContainerRandomAccessIterator,Int32,TValue)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  nameWithType: IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.insert(ContainerRandomAccessIterator<TValue>,ContainerRandomAccessIterator,TValue)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: IDeque<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.Item(Int32)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_back\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: pop_back()\n  nameWithType: IDeque<TValue>.pop_back()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.pop_back()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.pop_front\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: pop_front()\n  nameWithType: IDeque<TValue>.pop_front()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.pop_front()\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: push_back(TValue)\n  nameWithType: IDeque<TValue>.push_back(TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.push_back(TValue)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: push_front(TValue)\n  nameWithType: IDeque<TValue>.push_front(TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.push_front(TValue)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: rbegin(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.rbegin(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseRandomAccessIterator<TValue>\n  nameWithType: ReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: rend(ReverseRandomAccessIterator<TValue>)\n  nameWithType: IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.rend(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseRandomAccessIterator<TValue>\n  nameWithType: ReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: resize(Int32)\n  nameWithType: IDeque<TValue>.resize(Int32)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.resize(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: resize(Int32,TValue)\n  nameWithType: IDeque<TValue>.resize(Int32,TValue)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.resize(Int32,TValue)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IDeque`1.size\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: size()\n  nameWithType: IDeque<TValue>.size()\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.size()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque`1)\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  name: swap(IDeque<TValue>)\n  nameWithType: IDeque<TValue>.swap(IDeque<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>.swap(IDeque<TValue>)\n- uid: Microsoft.VisualC.StlClr.IDeque`1\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IDeque<TValue>\n  nameWithType: IDeque<TValue>\n  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>\n- uid: Microsoft.VisualC.StlClr.IDeque`1.assign*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  nameWithType: IDeque<TValue>.\n- uid: Microsoft.VisualC.StlClr.IDeque`1.erase*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  nameWithType: IDeque<TValue>.\n- uid: Microsoft.VisualC.StlClr.IDeque`1.insert*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  nameWithType: IDeque<TValue>.\n- uid: Microsoft.VisualC.StlClr.IDeque`1.resize*\n  parent: Microsoft.VisualC.StlClr.IDeque`1\n  isExternal: false\n  nameWithType: IDeque<TValue>.\n"}