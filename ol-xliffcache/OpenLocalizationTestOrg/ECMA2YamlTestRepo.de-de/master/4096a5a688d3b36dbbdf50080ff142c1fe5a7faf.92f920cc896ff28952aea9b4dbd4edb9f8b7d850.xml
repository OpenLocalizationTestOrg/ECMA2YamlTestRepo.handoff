{"nodes":[{"pos":[2183,2203],"content":"SchemaNameCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"SchemaNameCollection","pos":[0,20]}]},{"pos":[2999,3010],"content":"Add(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String)","pos":[0,11]}]},{"pos":[3357,3391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3448,3482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3787,3817],"content":"AddRange(SchemaNameCollection)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddRange(SchemaNameCollection)","pos":[0,30]}]},{"pos":[4279,4313],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4626,4644],"content":"AddRange(String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"AddRange(String[])","pos":[0,18]}]},{"pos":[5015,5049],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5322,5329],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[5841,5857],"content":"Contains(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(String)","pos":[0,16]}]},{"pos":[6220,6254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6313,6347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6614,6636],"content":"CopyTo(String[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(String[],Int32)","pos":[0,22]}]},{"pos":[7036,7070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7131,7165],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7370,7375],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[7686,7720],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7941,7956],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[8352,8386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8625,8640],"content":"IndexOf(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(String)","pos":[0,15]}]},{"pos":[8999,9033],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9090,9124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9387,9407],"content":"Insert(Int32,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,String)","pos":[0,20]}]},{"pos":[9786,9820],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9882,9916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10147,10158],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[10519,10553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10611,10645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10882,10896],"content":"Remove(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(String)","pos":[0,14]}]},{"pos":[11253,11287],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11526,11541],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[11898,11932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12269,12319],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[12762,12796],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12857,12891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13190,13235],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[13662,13696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13983,14022],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[14432,14466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14761,14797],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[15193,15227],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15284,15318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15623,15664],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[16076,16110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16169,16203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16506,16546],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[16954,16988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17045,17079],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17406,17451],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[17879,17913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17975,18009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18290,18326],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[18726,18760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19039,19074],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[19471,19505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19800,19836],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[20265,20299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20357,20391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20692,20731],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[21137,21171],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21282,21295],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[21452,21463],"content":"Add(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String)","pos":[0,11]}]},{"pos":[21648,21653],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21767,21773],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22016,22046],"content":"AddRange(SchemaNameCollection)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddRange(SchemaNameCollection)","pos":[0,30]}]},{"pos":[22320,22340],"content":"SchemaNameCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"SchemaNameCollection","pos":[0,20]}]},{"pos":[22599,22617],"content":"AddRange(String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"AddRange(String[])","pos":[0,18]}]},{"pos":[22817,22823],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23018,23025],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[23298,23314],"content":"Contains(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(String)","pos":[0,16]}]},{"pos":[23511,23518],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23636,23642],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23866,23888],"content":"CopyTo(String[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(String[],Int32)","pos":[0,22]}]},{"pos":[24096,24102],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24219,24224],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24415,24420],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[24593,24598],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24797,24812],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[25035,25046],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[25278,25293],"content":"IndexOf(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(String)","pos":[0,15]}]},{"pos":[25486,25491],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25605,25611],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25833,25853],"content":"Insert(Int32,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,String)","pos":[0,20]}]},{"pos":[26056,26061],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26175,26181],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26387,26398],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[26584,26590],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26705,26710],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26917,26931],"content":"Remove(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(String)","pos":[0,14]}]},{"pos":[27123,27129],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27339,27354],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[27547,27552],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27802,27852],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[28115,28120],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[28233,28238],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28469,28514],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[28769,28776],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29005,29044],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[29286,29292],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29523,29559],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[29794,29799],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29913,29919],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30155,30196],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[30443,30450],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30568,30574],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30809,30849],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[31092,31097],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31211,31217],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31464,31509],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[31762,31767],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31881,31887],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32111,32147],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[32384,32391],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32616,32651],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[32886,32893],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33126,33162],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[33398,33404],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33519,33524],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33756,33795],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[34037,34043],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.SchemaNameCollection\n  id: SchemaNameCollection\n  children:\n  - System.DirectoryServices.SchemaNameCollection.Add(System.String)\n  - System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)\n  - System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])\n  - System.DirectoryServices.SchemaNameCollection.Clear\n  - System.DirectoryServices.SchemaNameCollection.Contains(System.String)\n  - System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)\n  - System.DirectoryServices.SchemaNameCollection.Count\n  - System.DirectoryServices.SchemaNameCollection.GetEnumerator\n  - System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)\n  - System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)\n  - System.DirectoryServices.SchemaNameCollection.Item(System.Int32)\n  - System.DirectoryServices.SchemaNameCollection.Remove(System.String)\n  - System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)\n  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: SchemaNameCollection\n  nameWithType: SchemaNameCollection\n  fullName: System.DirectoryServices.SchemaNameCollection\n  type: Class\n  syntax:\n    content: 'public class SchemaNameCollection : System.Collections.IList'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.Add(System.String)\n  id: Add(System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: Add(String)\n  nameWithType: SchemaNameCollection.Add(String)\n  fullName: System.DirectoryServices.SchemaNameCollection.Add(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public int Add (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)\n  id: AddRange(System.DirectoryServices.SchemaNameCollection)\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: AddRange(SchemaNameCollection)\n  nameWithType: SchemaNameCollection.AddRange(SchemaNameCollection)\n  fullName: System.DirectoryServices.SchemaNameCollection.AddRange(SchemaNameCollection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public void AddRange (System.DirectoryServices.SchemaNameCollection value);\n    parameters:\n    - id: value\n      type: System.DirectoryServices.SchemaNameCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.SchemaNameCollection.AddRange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])\n  id: AddRange(System.String[])\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: AddRange(String[])\n  nameWithType: SchemaNameCollection.AddRange(String[])\n  fullName: System.DirectoryServices.SchemaNameCollection.AddRange(String[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public void AddRange (string[] value);\n    parameters:\n    - id: value\n      type: System.String[]\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.SchemaNameCollection.AddRange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.Clear\n  id: Clear\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: SchemaNameCollection.Clear()\n  fullName: System.DirectoryServices.SchemaNameCollection.Clear()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: SchemaNameCollection.Contains(String)\n  fullName: System.DirectoryServices.SchemaNameCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public bool Contains (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)\n  id: CopyTo(System.String[],System.Int32)\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: CopyTo(String[],Int32)\n  nameWithType: SchemaNameCollection.CopyTo(String[],Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.CopyTo(String[],Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public void CopyTo (string[] stringArray, int index);\n    parameters:\n    - id: stringArray\n      type: System.String[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.Count\n  id: Count\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: SchemaNameCollection.Count\n  fullName: System.DirectoryServices.SchemaNameCollection.Count\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: SchemaNameCollection.GetEnumerator()\n  fullName: System.DirectoryServices.SchemaNameCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)\n  id: IndexOf(System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: IndexOf(String)\n  nameWithType: SchemaNameCollection.IndexOf(String)\n  fullName: System.DirectoryServices.SchemaNameCollection.IndexOf(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public int IndexOf (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)\n  id: Insert(System.Int32,System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: Insert(Int32,String)\n  nameWithType: SchemaNameCollection.Insert(Int32,String)\n  fullName: System.DirectoryServices.SchemaNameCollection.Insert(Int32,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public void Insert (int index, string value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: SchemaNameCollection.Item(Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public string this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: SchemaNameCollection.Remove(String)\n  fullName: System.DirectoryServices.SchemaNameCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public void Remove (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: SchemaNameCollection.RemoveAt(Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: SchemaNameCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: SchemaNameCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: SchemaNameCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Add(Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Contains(Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: SchemaNameCollection.System.Collections.IList.IsFixedSize\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: SchemaNameCollection.System.Collections.IList.IsReadOnly\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Item(Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.SchemaNameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Remove(Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.DirectoryServices.SchemaNameCollection.Add(System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: Add(String)\n  nameWithType: SchemaNameCollection.Add(String)\n  fullName: System.DirectoryServices.SchemaNameCollection.Add(String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: AddRange(SchemaNameCollection)\n  nameWithType: SchemaNameCollection.AddRange(SchemaNameCollection)\n  fullName: System.DirectoryServices.SchemaNameCollection.AddRange(SchemaNameCollection)\n- uid: System.DirectoryServices.SchemaNameCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: SchemaNameCollection\n  nameWithType: SchemaNameCollection\n  fullName: System.DirectoryServices.SchemaNameCollection\n- uid: System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: AddRange(String[])\n  nameWithType: SchemaNameCollection.AddRange(String[])\n  fullName: System.DirectoryServices.SchemaNameCollection.AddRange(String[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.DirectoryServices.SchemaNameCollection.Clear\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: SchemaNameCollection.Clear()\n  fullName: System.DirectoryServices.SchemaNameCollection.Clear()\n- uid: System.DirectoryServices.SchemaNameCollection.Contains(System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: SchemaNameCollection.Contains(String)\n  fullName: System.DirectoryServices.SchemaNameCollection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: CopyTo(String[],Int32)\n  nameWithType: SchemaNameCollection.CopyTo(String[],Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.CopyTo(String[],Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.SchemaNameCollection.Count\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: Count\n  nameWithType: SchemaNameCollection.Count\n  fullName: System.DirectoryServices.SchemaNameCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.SchemaNameCollection.GetEnumerator\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: SchemaNameCollection.GetEnumerator()\n  fullName: System.DirectoryServices.SchemaNameCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: IndexOf(String)\n  nameWithType: SchemaNameCollection.IndexOf(String)\n  fullName: System.DirectoryServices.SchemaNameCollection.IndexOf(String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: Insert(Int32,String)\n  nameWithType: SchemaNameCollection.Insert(Int32,String)\n  fullName: System.DirectoryServices.SchemaNameCollection.Insert(Int32,String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.SchemaNameCollection.Item(System.Int32)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: SchemaNameCollection.Item(Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.Item(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.SchemaNameCollection.Remove(System.String)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: SchemaNameCollection.Remove(String)\n  fullName: System.DirectoryServices.SchemaNameCollection.Remove(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: SchemaNameCollection.RemoveAt(Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: SchemaNameCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: SchemaNameCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: SchemaNameCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Add(Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Contains(Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: SchemaNameCollection.System.Collections.IList.IsFixedSize\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: SchemaNameCollection.System.Collections.IList.IsReadOnly\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Item(Int32)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: SchemaNameCollection.System.Collections.IList.Remove(Object)\n  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.SchemaNameCollection.AddRange*\n  parent: System.DirectoryServices.SchemaNameCollection\n  isExternal: false\n  nameWithType: SchemaNameCollection.\n"}