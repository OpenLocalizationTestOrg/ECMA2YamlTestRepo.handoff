{"nodes":[{"pos":[1424,1438],"content":"EventLogReader","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogReader","pos":[0,14]}]},{"pos":[2291,2320],"content":"EventLogReader(EventLogQuery)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogReader(EventLogQuery)","pos":[0,29]}]},{"pos":[2797,2831],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3076,3098],"content":"EventLogReader(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogReader(String)","pos":[0,22]}]},{"pos":[3472,3506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3919,3962],"content":"EventLogReader(EventLogQuery,EventBookmark)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogReader(EventLogQuery,EventBookmark)","pos":[0,43]}]},{"pos":[4526,4560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4660,4694],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5027,5058],"content":"EventLogReader(String,PathType)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogReader(String,PathType)","pos":[0,31]}]},{"pos":[5504,5538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5633,5667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5888,5897],"content":"BatchSize","needQuote":true,"needEscape":true,"nodes":[{"content":"BatchSize","pos":[0,9]}]},{"pos":[6220,6254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6483,6498],"content":"CancelReading()","needQuote":true,"needEscape":true,"nodes":[{"content":"CancelReading()","pos":[0,15]}]},{"pos":[7005,7014],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[7606,7622],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[7997,8031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8323,8332],"content":"LogStatus","needQuote":true,"needEscape":true,"nodes":[{"content":"LogStatus","pos":[0,9]}]},{"pos":[8801,8835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9056,9067],"content":"ReadEvent()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadEvent()","pos":[0,11]}]},{"pos":[9478,9512],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9840,9859],"content":"ReadEvent(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadEvent(TimeSpan)","pos":[0,19]}]},{"pos":[10274,10308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10399,10433],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10817,10836],"content":"Seek(EventBookmark)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(EventBookmark)","pos":[0,19]}]},{"pos":[11279,11313],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11718,11743],"content":"Seek(EventBookmark,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(EventBookmark,Int64)","pos":[0,25]}]},{"pos":[12211,12245],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12307,12341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12690,12712],"content":"Seek(SeekOrigin,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(SeekOrigin,Int64)","pos":[0,22]}]},{"pos":[13114,13148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13210,13244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13423,13436],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[13638,13667],"content":"EventLogReader(EventLogQuery)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogReader(EventLogQuery)","pos":[0,29]}]},{"pos":[13950,13963],"content":"EventLogQuery","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery","pos":[0,13]}]},{"pos":[14221,14243],"content":"EventLogReader(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogReader(String)","pos":[0,22]}]},{"pos":[14449,14455],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14755,14798],"content":"EventLogReader(EventLogQuery,EventBookmark)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogReader(EventLogQuery,EventBookmark)","pos":[0,43]}]},{"pos":[15109,15122],"content":"EventLogQuery","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery","pos":[0,13]}]},{"pos":[15343,15356],"content":"EventBookmark","needQuote":true,"needEscape":true,"nodes":[{"content":"EventBookmark","pos":[0,13]}]},{"pos":[15658,15689],"content":"EventLogReader(String,PathType)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogReader(String,PathType)","pos":[0,31]}]},{"pos":[15913,15919],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16093,16101],"content":"PathType","needQuote":true,"needEscape":true,"nodes":[{"content":"PathType","pos":[0,8]}]},{"pos":[16338,16347],"content":"BatchSize","needQuote":true,"needEscape":true,"nodes":[{"content":"BatchSize","pos":[0,9]}]},{"pos":[16526,16531],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16738,16753],"content":"CancelReading()","needQuote":true,"needEscape":true,"nodes":[{"content":"CancelReading()","pos":[0,15]}]},{"pos":[17032,17041],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[17324,17340],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[17535,17542],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17749,17758],"content":"LogStatus","needQuote":true,"needEscape":true,"nodes":[{"content":"LogStatus","pos":[0,9]}]},{"pos":[18028,18049],"content":"IList<ph id=\"ph1\">&lt;EventLogStatus&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<EventLogStatus>"},{"pos":[18339,18350],"content":"ReadEvent()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadEvent()","pos":[0,11]}]},{"pos":[18595,18606],"content":"EventRecord","needQuote":true,"needEscape":true,"nodes":[{"content":"EventRecord","pos":[0,11]}]},{"pos":[18866,18885],"content":"ReadEvent(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadEvent(TimeSpan)","pos":[0,19]}]},{"pos":[19146,19157],"content":"EventRecord","needQuote":true,"needEscape":true,"nodes":[{"content":"EventRecord","pos":[0,11]}]},{"pos":[19313,19321],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[19575,19594],"content":"Seek(EventBookmark)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(EventBookmark)","pos":[0,19]}]},{"pos":[19857,19870],"content":"EventBookmark","needQuote":true,"needEscape":true,"nodes":[{"content":"EventBookmark","pos":[0,13]}]},{"pos":[20175,20200],"content":"Seek(EventBookmark,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(EventBookmark,Int64)","pos":[0,25]}]},{"pos":[20475,20488],"content":"EventBookmark","needQuote":true,"needEscape":true,"nodes":[{"content":"EventBookmark","pos":[0,13]}]},{"pos":[20645,20650],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[20883,20905],"content":"Seek(SeekOrigin,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(SeekOrigin,Int64)","pos":[0,22]}]},{"pos":[21121,21131],"content":"SeekOrigin","needQuote":true,"needEscape":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[21257,21262],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader\n  id: EventLogReader\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)\n  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)\n  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  - System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize\n  - System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading\n  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose\n  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)\n  - System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus\n  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent\n  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)\n  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)\n  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)\n  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)\n  langs:\n  - csharp\n  name: EventLogReader\n  nameWithType: EventLogReader\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader\n  type: Class\n  syntax:\n    content: 'public class EventLogReader : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)\n  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: EventLogReader(EventLogQuery)\n  nameWithType: EventLogReader.EventLogReader(EventLogQuery)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery);\n    parameters:\n    - id: eventQuery\n      type: System.Diagnostics.Eventing.Reader.EventLogQuery\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: EventLogReader(String)\n  nameWithType: EventLogReader.EventLogReader(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogReader (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)\n  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: EventLogReader(EventLogQuery,EventBookmark)\n  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark);\n    parameters:\n    - id: eventQuery\n      type: System.Diagnostics.Eventing.Reader.EventLogQuery\n      description: Parameter description to be filled\n    - id: bookmark\n      type: System.Diagnostics.Eventing.Reader.EventBookmark\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: EventLogReader(String,PathType)\n  nameWithType: EventLogReader.EventLogReader(String,PathType)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogReader (string path, System.Diagnostics.Eventing.Reader.PathType pathType);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize\n  id: BatchSize\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: BatchSize\n  nameWithType: EventLogReader.BatchSize\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public int BatchSize { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading\n  id: CancelReading\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: CancelReading()\n  nameWithType: EventLogReader.CancelReading()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void CancelReading ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose\n  id: Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: EventLogReader.Dispose()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: EventLogReader.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus\n  id: LogStatus\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: LogStatus\n  nameWithType: EventLogReader.LogStatus\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus> LogStatus { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent\n  id: ReadEvent\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: ReadEvent()\n  nameWithType: EventLogReader.ReadEvent()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent ();\n    parameters: []\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventRecord\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)\n  id: ReadEvent(System.TimeSpan)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: ReadEvent(TimeSpan)\n  nameWithType: EventLogReader.ReadEvent(TimeSpan)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventRecord\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)\n  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: Seek(EventBookmark)\n  nameWithType: EventLogReader.Seek(EventBookmark)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark);\n    parameters:\n    - id: bookmark\n      type: System.Diagnostics.Eventing.Reader.EventBookmark\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)\n  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: Seek(EventBookmark,Int64)\n  nameWithType: EventLogReader.Seek(EventBookmark,Int64)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark, long offset);\n    parameters:\n    - id: bookmark\n      type: System.Diagnostics.Eventing.Reader.EventBookmark\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)\n  id: Seek(System.IO.SeekOrigin,System.Int64)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  langs:\n  - csharp\n  name: Seek(SeekOrigin,Int64)\n  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void Seek (System.IO.SeekOrigin origin, long offset);\n    parameters:\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: EventLogReader(EventLogQuery)\n  nameWithType: EventLogReader.EventLogReader(EventLogQuery)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogQuery\n  nameWithType: EventLogQuery\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: EventLogReader(String)\n  nameWithType: EventLogReader.EventLogReader(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: EventLogReader(EventLogQuery,EventBookmark)\n  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogQuery\n  nameWithType: EventLogQuery\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery\n- uid: System.Diagnostics.Eventing.Reader.EventBookmark\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventBookmark\n  nameWithType: EventBookmark\n  fullName: System.Diagnostics.Eventing.Reader.EventBookmark\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: EventLogReader(String,PathType)\n  nameWithType: EventLogReader.EventLogReader(String,PathType)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: BatchSize\n  nameWithType: EventLogReader.BatchSize\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: CancelReading()\n  nameWithType: EventLogReader.CancelReading()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: Dispose()\n  nameWithType: EventLogReader.Dispose()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: EventLogReader.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: LogStatus\n  nameWithType: EventLogReader.LogStatus\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus\n- uid: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<EventLogStatus>\n  nameWithType: IList<EventLogStatus>\n  fullName: System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus>\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: ReadEvent()\n  nameWithType: EventLogReader.ReadEvent()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()\n- uid: System.Diagnostics.Eventing.Reader.EventRecord\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventRecord\n  nameWithType: EventRecord\n  fullName: System.Diagnostics.Eventing.Reader.EventRecord\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: ReadEvent(TimeSpan)\n  nameWithType: EventLogReader.ReadEvent(TimeSpan)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)\n- uid: System.Diagnostics.Eventing.Reader.EventRecord\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventRecord\n  nameWithType: EventRecord\n  fullName: System.Diagnostics.Eventing.Reader.EventRecord\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: Seek(EventBookmark)\n  nameWithType: EventLogReader.Seek(EventBookmark)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)\n- uid: System.Diagnostics.Eventing.Reader.EventBookmark\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventBookmark\n  nameWithType: EventBookmark\n  fullName: System.Diagnostics.Eventing.Reader.EventBookmark\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: Seek(EventBookmark,Int64)\n  nameWithType: EventLogReader.Seek(EventBookmark,Int64)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)\n- uid: System.Diagnostics.Eventing.Reader.EventBookmark\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventBookmark\n  nameWithType: EventBookmark\n  fullName: System.Diagnostics.Eventing.Reader.EventBookmark\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  name: Seek(SeekOrigin,Int64)\n  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  nameWithType: EventLogReader.\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  nameWithType: EventLogReader.\n- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*\n  parent: System.Diagnostics.Eventing.Reader.EventLogReader\n  isExternal: false\n  nameWithType: EventLogReader.\n"}