{"nodes":[{"pos":[2130,2145],"content":"ECDiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellman","pos":[0,15]}]},{"pos":[3590,3607],"content":"ECDiffieHellman()","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellman()","pos":[0,17]}]},{"pos":[4101,4109],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[4504,4538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4884,4899],"content":"Create(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(ECCurve)","pos":[0,15]}]},{"pos":[5343,5377],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5466,5500],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5856,5876],"content":"Create(ECParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(ECParameters)","pos":[0,20]}]},{"pos":[6350,6384],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6473,6507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6807,6821],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[7218,7252],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7341,7375],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7871,7932],"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)","pos":[0,61]}]},{"pos":[8558,8592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8695,8729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8787,8821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9384,9459],"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])","pos":[0,75]}]},{"pos":[10164,10198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10301,10335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10405,10439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10508,10542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10600,10634],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11169,11237],"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])","pos":[0,68]}]},{"pos":[11893,11927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12030,12064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12128,12162],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12220,12254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12845,12927],"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])","pos":[0,82]}]},{"pos":[13662,13696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13799,13833],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13897,13931],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14001,14035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14104,14138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14196,14230],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14643,14686],"content":"DeriveKeyMaterial(ECDiffieHellmanPublicKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyMaterial(ECDiffieHellmanPublicKey)","pos":[0,43]}]},{"pos":[15222,15256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15314,15348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15731,15783],"content":"DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])","pos":[0,52]}]},{"pos":[16365,16399],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16464,16498],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16562,16596],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16654,16688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16961,16994],"content":"ExportExplicitParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportExplicitParameters(Boolean)","pos":[0,33]}]},{"pos":[17474,17508],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17594,17628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17885,17910],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[18366,18400],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18486,18520],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18811,18831],"content":"GenerateKey(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey(ECCurve)","pos":[0,20]}]},{"pos":[19251,19285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19596,19626],"content":"ImportParameters(ECParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(ECParameters)","pos":[0,30]}]},{"pos":[20091,20125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20358,20378],"content":"KeyExchangeAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyExchangeAlgorithm","pos":[0,20]}]},{"pos":[20732,20766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20977,20986],"content":"PublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicKey","pos":[0,9]}]},{"pos":[21394,21428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21657,21675],"content":"SignatureAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureAlgorithm","pos":[0,18]}]},{"pos":[22023,22057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22203,22251],"content":"System.Security.Cryptography.AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.AsymmetricAlgorithm","pos":[0,48]}]},{"pos":[22393,22410],"content":"ECDiffieHellman()","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellman()","pos":[0,17]}]},{"pos":[22678,22686],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[22913,22928],"content":"ECDiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellman","pos":[0,15]}]},{"pos":[23198,23213],"content":"Create(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(ECCurve)","pos":[0,15]}]},{"pos":[23454,23469],"content":"ECDiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellman","pos":[0,15]}]},{"pos":[23670,23677],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[23936,23956],"content":"Create(ECParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(ECParameters)","pos":[0,20]}]},{"pos":[24207,24222],"content":"ECDiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellman","pos":[0,15]}]},{"pos":[24428,24440],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[24681,24695],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[24934,24949],"content":"ECDiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellman","pos":[0,15]}]},{"pos":[25105,25111],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25416,25477],"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)","pos":[0,61]}]},{"pos":[25755,25759],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[25935,25959],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[26188,26205],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[26582,26657],"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])","pos":[0,75]}]},{"pos":[26963,26967],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[27143,27167],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[27396,27413],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[27571,27575],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[27687,27691],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[28008,28076],"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])","pos":[0,68]}]},{"pos":[28368,28372],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[28548,28572],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[28801,28818],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[28976,28980],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[29325,29407],"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])","pos":[0,82]}]},{"pos":[29727,29731],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[29907,29931],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[30160,30177],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[30335,30339],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[30451,30455],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[30567,30571],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[30827,30870],"content":"DeriveKeyMaterial(ECDiffieHellmanPublicKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyMaterial(ECDiffieHellmanPublicKey)","pos":[0,43]}]},{"pos":[31112,31116],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[31292,31316],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[31655,31707],"content":"DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])","pos":[0,52]}]},{"pos":[31967,31971],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[32147,32171],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[32343,32347],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[32459,32463],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[32687,32720],"content":"ExportExplicitParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportExplicitParameters(Boolean)","pos":[0,33]}]},{"pos":[32994,33006],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[33157,33164],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33384,33409],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[33667,33679],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[33830,33837],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34074,34094],"content":"GenerateKey(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey(ECCurve)","pos":[0,20]}]},{"pos":[34337,34344],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[34613,34643],"content":"ImportParameters(ECParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(ECParameters)","pos":[0,30]}]},{"pos":[34911,34923],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[35163,35183],"content":"KeyExchangeAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyExchangeAlgorithm","pos":[0,20]}]},{"pos":[35381,35387],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35582,35591],"content":"PublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicKey","pos":[0,9]}]},{"pos":[35829,35853],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[36115,36133],"content":"SignatureAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureAlgorithm","pos":[0,18]}]},{"pos":[36327,36333],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ECDiffieHellman\n  id: ECDiffieHellman\n  children:\n  - System.Security.Cryptography.ECDiffieHellman.#ctor\n  - System.Security.Cryptography.ECDiffieHellman.Create\n  - System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)\n  - System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)\n  - System.Security.Cryptography.ECDiffieHellman.Create(System.String)\n  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])\n  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])\n  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])\n  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])\n  - System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)\n  - System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)\n  - System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)\n  - System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)\n  - System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm\n  - System.Security.Cryptography.ECDiffieHellman.PublicKey\n  - System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm\n  langs:\n  - csharp\n  name: ECDiffieHellman\n  nameWithType: ECDiffieHellman\n  fullName: System.Security.Cryptography.ECDiffieHellman\n  type: Class\n  syntax:\n    content: 'public abstract class ECDiffieHellman : System.Security.Cryptography.AsymmetricAlgorithm'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricAlgorithm\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: ECDiffieHellman()\n  nameWithType: ECDiffieHellman.ECDiffieHellman()\n  fullName: System.Security.Cryptography.ECDiffieHellman.ECDiffieHellman()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected ECDiffieHellman ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.Create\n  id: Create\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: ECDiffieHellman.Create()\n  fullName: System.Security.Cryptography.ECDiffieHellman.Create()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ECDiffieHellman Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ECDiffieHellman\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellman.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)\n  id: Create(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: Create(ECCurve)\n  nameWithType: ECDiffieHellman.Create(ECCurve)\n  fullName: System.Security.Cryptography.ECDiffieHellman.Create(ECCurve)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ECDiffieHellman Create (System.Security.Cryptography.ECCurve curve);\n    parameters:\n    - id: curve\n      type: System.Security.Cryptography.ECCurve\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECDiffieHellman\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellman.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)\n  id: Create(System.Security.Cryptography.ECParameters)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: Create(ECParameters)\n  nameWithType: ECDiffieHellman.Create(ECParameters)\n  fullName: System.Security.Cryptography.ECDiffieHellman.Create(ECParameters)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ECDiffieHellman Create (System.Security.Cryptography.ECParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECDiffieHellman\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellman.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: ECDiffieHellman.Create(String)\n  fullName: System.Security.Cryptography.ECDiffieHellman.Create(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ECDiffieHellman Create (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECDiffieHellman\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellman.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)\n  id: DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)\n  nameWithType: ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])\n  id: DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  nameWithType: ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] secretPrepend, byte[] secretAppend);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    - id: secretPrepend\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: secretAppend\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])\n  id: DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])\n  nameWithType: ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    - id: hmacKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])\n  id: DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  nameWithType: ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey, byte[] secretPrepend, byte[] secretAppend);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    - id: hmacKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: secretPrepend\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: secretAppend\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  id: DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  nameWithType: ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual byte[] DeriveKeyMaterial (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])\n  id: DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  nameWithType: ECDiffieHellman.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual byte[] DeriveKeyTls (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, byte[] prfLabel, byte[] prfSeed);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    - id: prfLabel\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: prfSeed\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)\n  id: ExportExplicitParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: ExportExplicitParameters(Boolean)\n  nameWithType: ECDiffieHellman.ExportExplicitParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)\n  id: ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: ExportParameters(Boolean)\n  nameWithType: ECDiffieHellman.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellman.ExportParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)\n  id: GenerateKey(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: GenerateKey(ECCurve)\n  nameWithType: ECDiffieHellman.GenerateKey(ECCurve)\n  fullName: System.Security.Cryptography.ECDiffieHellman.GenerateKey(ECCurve)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual void GenerateKey (System.Security.Cryptography.ECCurve curve);\n    parameters:\n    - id: curve\n      type: System.Security.Cryptography.ECCurve\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)\n  id: ImportParameters(System.Security.Cryptography.ECParameters)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: ImportParameters(ECParameters)\n  nameWithType: ECDiffieHellman.ImportParameters(ECParameters)\n  fullName: System.Security.Cryptography.ECDiffieHellman.ImportParameters(ECParameters)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual void ImportParameters (System.Security.Cryptography.ECParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm\n  id: KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: KeyExchangeAlgorithm\n  nameWithType: ECDiffieHellman.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string KeyExchangeAlgorithm { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.PublicKey\n  id: PublicKey\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: PublicKey\n  nameWithType: ECDiffieHellman.PublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellman.PublicKey\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey { get; }\n    return:\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.Security.Cryptography.ECDiffieHellman\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: ECDiffieHellman.SignatureAlgorithm\n  fullName: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string SignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.ECDiffieHellman.#ctor\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: ECDiffieHellman()\n  nameWithType: ECDiffieHellman.ECDiffieHellman()\n  fullName: System.Security.Cryptography.ECDiffieHellman.ECDiffieHellman()\n- uid: System.Security.Cryptography.ECDiffieHellman.Create\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: Create()\n  nameWithType: ECDiffieHellman.Create()\n  fullName: System.Security.Cryptography.ECDiffieHellman.Create()\n- uid: System.Security.Cryptography.ECDiffieHellman\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellman\n  nameWithType: ECDiffieHellman\n  fullName: System.Security.Cryptography.ECDiffieHellman\n- uid: System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: Create(ECCurve)\n  nameWithType: ECDiffieHellman.Create(ECCurve)\n  fullName: System.Security.Cryptography.ECDiffieHellman.Create(ECCurve)\n- uid: System.Security.Cryptography.ECDiffieHellman\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellman\n  nameWithType: ECDiffieHellman\n  fullName: System.Security.Cryptography.ECDiffieHellman\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: Create(ECParameters)\n  nameWithType: ECDiffieHellman.Create(ECParameters)\n  fullName: System.Security.Cryptography.ECDiffieHellman.Create(ECParameters)\n- uid: System.Security.Cryptography.ECDiffieHellman\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellman\n  nameWithType: ECDiffieHellman\n  fullName: System.Security.Cryptography.ECDiffieHellman\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Security.Cryptography.ECDiffieHellman.Create(System.String)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: Create(String)\n  nameWithType: ECDiffieHellman.Create(String)\n  fullName: System.Security.Cryptography.ECDiffieHellman.Create(String)\n- uid: System.Security.Cryptography.ECDiffieHellman\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellman\n  nameWithType: ECDiffieHellman\n  fullName: System.Security.Cryptography.ECDiffieHellman\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)\n  nameWithType: ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  nameWithType: ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])\n  nameWithType: ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  nameWithType: ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  nameWithType: ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  nameWithType: ECDiffieHellman.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: ExportExplicitParameters(Boolean)\n  nameWithType: ECDiffieHellman.ExportExplicitParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(Boolean)\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: ExportParameters(Boolean)\n  nameWithType: ECDiffieHellman.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellman.ExportParameters(Boolean)\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: GenerateKey(ECCurve)\n  nameWithType: ECDiffieHellman.GenerateKey(ECCurve)\n  fullName: System.Security.Cryptography.ECDiffieHellman.GenerateKey(ECCurve)\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: ImportParameters(ECParameters)\n  nameWithType: ECDiffieHellman.ImportParameters(ECParameters)\n  fullName: System.Security.Cryptography.ECDiffieHellman.ImportParameters(ECParameters)\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: ECDiffieHellman.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECDiffieHellman.PublicKey\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: PublicKey\n  nameWithType: ECDiffieHellman.PublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellman.PublicKey\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: ECDiffieHellman.SignatureAlgorithm\n  fullName: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECDiffieHellman.Create*\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  nameWithType: ECDiffieHellman.\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash*\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  nameWithType: ECDiffieHellman.\n- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac*\n  parent: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  nameWithType: ECDiffieHellman.\n"}