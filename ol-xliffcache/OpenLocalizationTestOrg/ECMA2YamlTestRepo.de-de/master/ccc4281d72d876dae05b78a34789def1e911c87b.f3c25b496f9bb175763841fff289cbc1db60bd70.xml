{"nodes":[{"pos":[404,431],"content":"HandleInitializationContext","needQuote":true,"needEscape":true,"nodes":[{"content":"HandleInitializationContext","pos":[0,27]}]},{"pos":[1213,1240],"content":"CreateAndInitializeHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateAndInitializeHandle()","pos":[0,27]}]},{"pos":[1671,1705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1930,1944],"content":"GetExtension()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExtension()","pos":[0,14]}]},{"pos":[2293,2327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2610,2636],"content":"UninitializeHandle(Handle)","needQuote":true,"needEscape":true,"nodes":[{"content":"UninitializeHandle(Handle)","pos":[0,26]}]},{"pos":[3053,3087],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3198,3211],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[3378,3405],"content":"CreateAndInitializeHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateAndInitializeHandle()","pos":[0,27]}]},{"pos":[3619,3626],"content":"THandle","needQuote":true,"needEscape":true,"nodes":[{"content":"THandle","pos":[0,7]}]},{"pos":[3824,3838],"content":"GetExtension()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExtension()","pos":[0,14]}]},{"pos":[4020,4021],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4236,4262],"content":"UninitializeHandle(Handle)","needQuote":true,"needEscape":true,"nodes":[{"content":"UninitializeHandle(Handle)","pos":[0,26]}]},{"pos":[4507,4513],"content":"Handle","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.HandleInitializationContext\n  id: HandleInitializationContext\n  children:\n  - System.Activities.HandleInitializationContext.CreateAndInitializeHandle``1\n  - System.Activities.HandleInitializationContext.GetExtension``1\n  - System.Activities.HandleInitializationContext.UninitializeHandle(System.Activities.Handle)\n  langs:\n  - csharp\n  name: HandleInitializationContext\n  nameWithType: HandleInitializationContext\n  fullName: System.Activities.HandleInitializationContext\n  type: Class\n  syntax:\n    content: public sealed class HandleInitializationContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.HandleInitializationContext.CreateAndInitializeHandle``1\n  id: CreateAndInitializeHandle``1\n  parent: System.Activities.HandleInitializationContext\n  langs:\n  - csharp\n  name: CreateAndInitializeHandle()\n  nameWithType: HandleInitializationContext.CreateAndInitializeHandle()\n  fullName: System.Activities.HandleInitializationContext.CreateAndInitializeHandle()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: 'public THandle CreateAndInitializeHandle<THandle> () where THandle : System.Activities.Handle;'\n    parameters: []\n    return:\n      type: THandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.HandleInitializationContext.GetExtension``1\n  id: GetExtension``1\n  parent: System.Activities.HandleInitializationContext\n  langs:\n  - csharp\n  name: GetExtension()\n  nameWithType: HandleInitializationContext.GetExtension()\n  fullName: System.Activities.HandleInitializationContext.GetExtension()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: 'public T GetExtension<T> () where T : class;'\n    parameters: []\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.HandleInitializationContext.UninitializeHandle(System.Activities.Handle)\n  id: UninitializeHandle(System.Activities.Handle)\n  parent: System.Activities.HandleInitializationContext\n  langs:\n  - csharp\n  name: UninitializeHandle(Handle)\n  nameWithType: HandleInitializationContext.UninitializeHandle(Handle)\n  fullName: System.Activities.HandleInitializationContext.UninitializeHandle(Handle)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public void UninitializeHandle (System.Activities.Handle handle);\n    parameters:\n    - id: handle\n      type: System.Activities.Handle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.HandleInitializationContext.CreateAndInitializeHandle``1\n  parent: System.Activities.HandleInitializationContext\n  isExternal: false\n  name: CreateAndInitializeHandle()\n  nameWithType: HandleInitializationContext.CreateAndInitializeHandle()\n  fullName: System.Activities.HandleInitializationContext.CreateAndInitializeHandle()\n- uid: THandle\n  parent: ''\n  isExternal: true\n  name: THandle\n  nameWithType: THandle\n  fullName: THandle\n- uid: System.Activities.HandleInitializationContext.GetExtension``1\n  parent: System.Activities.HandleInitializationContext\n  isExternal: false\n  name: GetExtension()\n  nameWithType: HandleInitializationContext.GetExtension()\n  fullName: System.Activities.HandleInitializationContext.GetExtension()\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.HandleInitializationContext.UninitializeHandle(System.Activities.Handle)\n  parent: System.Activities.HandleInitializationContext\n  isExternal: false\n  name: UninitializeHandle(Handle)\n  nameWithType: HandleInitializationContext.UninitializeHandle(Handle)\n  fullName: System.Activities.HandleInitializationContext.UninitializeHandle(Handle)\n- uid: System.Activities.Handle\n  parent: System.Activities\n  isExternal: false\n  name: Handle\n  nameWithType: Handle\n  fullName: System.Activities.Handle\n"}