{"nodes":[{"pos":[1028,1043],"content":"PolicyStatement","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatement","pos":[0,15]}]},{"pos":[1954,1984],"content":"PolicyStatement(PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatement(PermissionSet)","pos":[0,30]}]},{"pos":[2395,2429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2780,2835],"content":"PolicyStatement(PermissionSet,PolicyStatementAttribute)","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatement(PermissionSet,PolicyStatementAttribute)","pos":[0,55]}]},{"pos":[3356,3390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3491,3525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3726,3736],"content":"Attributes","needQuote":true,"needEscape":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[4116,4150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4361,4376],"content":"AttributeString","needQuote":true,"needEscape":true,"nodes":[{"content":"AttributeString","pos":[0,15]}]},{"pos":[4691,4725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4914,4920],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[5275,5309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5532,5546],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5878,5912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5971,6005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6266,6290],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[6675,6709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7100,7136],"content":"FromXml(SecurityElement,PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement,PolicyLevel)","pos":[0,36]}]},{"pos":[7587,7621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7704,7738],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8001,8014],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8338,8372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8579,8592],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[8945,8979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9170,9177],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[9521,9555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9876,9894],"content":"ToXml(PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml(PolicyLevel)","pos":[0,18]}]},{"pos":[10304,10338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10414,10448],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10617,10630],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[10791,10821],"content":"PolicyStatement(PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatement(PermissionSet)","pos":[0,30]}]},{"pos":[11058,11071],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[11352,11407],"content":"PolicyStatement(PermissionSet,PolicyStatementAttribute)","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatement(PermissionSet,PolicyStatementAttribute)","pos":[0,55]}]},{"pos":[11694,11707],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[11896,11920],"content":"PolicyStatementAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatementAttribute","pos":[0,24]}]},{"pos":[12156,12166],"content":"Attributes","needQuote":true,"needEscape":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[12388,12412],"content":"PolicyStatementAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatementAttribute","pos":[0,24]}]},{"pos":[12653,12668],"content":"AttributeString","needQuote":true,"needEscape":true,"nodes":[{"content":"AttributeString","pos":[0,15]}]},{"pos":[12850,12856],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13034,13040],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[13245,13260],"content":"PolicyStatement","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatement","pos":[0,15]}]},{"pos":[13489,13503],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13684,13691],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13809,13815],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14029,14053],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[14280,14295],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[14571,14607],"content":"FromXml(SecurityElement,PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement,PolicyLevel)","pos":[0,36]}]},{"pos":[14858,14873],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[15053,15064],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]},{"pos":[15275,15288],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15465,15470],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15655,15668],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[15871,15884],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[16086,16093],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[16286,16301],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[16543,16561],"content":"ToXml(PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml(PolicyLevel)","pos":[0,18]}]},{"pos":[16776,16791],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[16971,16982],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.PolicyStatement\n  id: PolicyStatement\n  children:\n  - System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)\n  - System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)\n  - System.Security.Policy.PolicyStatement.Attributes\n  - System.Security.Policy.PolicyStatement.AttributeString\n  - System.Security.Policy.PolicyStatement.Copy\n  - System.Security.Policy.PolicyStatement.Equals(System.Object)\n  - System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.PolicyStatement.GetHashCode\n  - System.Security.Policy.PolicyStatement.PermissionSet\n  - System.Security.Policy.PolicyStatement.ToXml\n  - System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)\n  langs:\n  - csharp\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class PolicyStatement : System.Security.ISecurityEncodable, System.Security.ISecurityPolicyEncodable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Security.ISecurityEncodable\n  - System.Security.ISecurityPolicyEncodable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)\n  id: '#ctor(System.Security.PermissionSet)'\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: PolicyStatement(PermissionSet)\n  nameWithType: PolicyStatement.PolicyStatement(PermissionSet)\n  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public PolicyStatement (System.Security.PermissionSet permSet);\n    parameters:\n    - id: permSet\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)\n  id: '#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)'\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  nameWithType: PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public PolicyStatement (System.Security.PermissionSet permSet, System.Security.Policy.PolicyStatementAttribute attributes);\n    parameters:\n    - id: permSet\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Security.Policy.PolicyStatementAttribute\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.Attributes\n  id: Attributes\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: PolicyStatement.Attributes\n  fullName: System.Security.Policy.PolicyStatement.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.Policy.PolicyStatementAttribute Attributes { get; set; }\n    return:\n      type: System.Security.Policy.PolicyStatementAttribute\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.AttributeString\n  id: AttributeString\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: AttributeString\n  nameWithType: PolicyStatement.AttributeString\n  fullName: System.Security.Policy.PolicyStatement.AttributeString\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public string AttributeString { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.Copy\n  id: Copy\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: PolicyStatement.Copy()\n  fullName: System.Security.Policy.PolicyStatement.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.Policy.PolicyStatement Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.PolicyStatement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: PolicyStatement.Equals(Object)\n  fullName: System.Security.Policy.PolicyStatement.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: PolicyStatement.FromXml(SecurityElement)\n  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement et);\n    parameters:\n    - id: et\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  overload: System.Security.Policy.PolicyStatement.FromXml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: FromXml(SecurityElement,PolicyLevel)\n  nameWithType: PolicyStatement.FromXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement,PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void FromXml (System.Security.SecurityElement et, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: et\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n  overload: System.Security.Policy.PolicyStatement.FromXml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: PolicyStatement.GetHashCode()\n  fullName: System.Security.Policy.PolicyStatement.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.PermissionSet\n  id: PermissionSet\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: PermissionSet\n  nameWithType: PolicyStatement.PermissionSet\n  fullName: System.Security.Policy.PolicyStatement.PermissionSet\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.PermissionSet PermissionSet { get; set; }\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.ToXml\n  id: ToXml\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: PolicyStatement.ToXml()\n  fullName: System.Security.Policy.PolicyStatement.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  overload: System.Security.Policy.PolicyStatement.ToXml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)\n  id: ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.PolicyStatement\n  langs:\n  - csharp\n  name: ToXml(PolicyLevel)\n  nameWithType: PolicyStatement.ToXml(PolicyLevel)\n  fullName: System.Security.Policy.PolicyStatement.ToXml(PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  overload: System.Security.Policy.PolicyStatement.ToXml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: PolicyStatement(PermissionSet)\n  nameWithType: PolicyStatement.PolicyStatement(PermissionSet)\n  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  nameWithType: PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)\n  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.PolicyStatementAttribute\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatementAttribute\n  nameWithType: PolicyStatementAttribute\n  fullName: System.Security.Policy.PolicyStatementAttribute\n- uid: System.Security.Policy.PolicyStatement.Attributes\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: Attributes\n  nameWithType: PolicyStatement.Attributes\n  fullName: System.Security.Policy.PolicyStatement.Attributes\n- uid: System.Security.Policy.PolicyStatementAttribute\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatementAttribute\n  nameWithType: PolicyStatementAttribute\n  fullName: System.Security.Policy.PolicyStatementAttribute\n- uid: System.Security.Policy.PolicyStatement.AttributeString\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: AttributeString\n  nameWithType: PolicyStatement.AttributeString\n  fullName: System.Security.Policy.PolicyStatement.AttributeString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.PolicyStatement.Copy\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: Copy()\n  nameWithType: PolicyStatement.Copy()\n  fullName: System.Security.Policy.PolicyStatement.Copy()\n- uid: System.Security.Policy.PolicyStatement\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n- uid: System.Security.Policy.PolicyStatement.Equals(System.Object)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PolicyStatement.Equals(Object)\n  fullName: System.Security.Policy.PolicyStatement.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: PolicyStatement.FromXml(SecurityElement)\n  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: FromXml(SecurityElement,PolicyLevel)\n  nameWithType: PolicyStatement.FromXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement,PolicyLevel)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.PolicyStatement.GetHashCode\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PolicyStatement.GetHashCode()\n  fullName: System.Security.Policy.PolicyStatement.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.PolicyStatement.PermissionSet\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PolicyStatement.PermissionSet\n  fullName: System.Security.Policy.PolicyStatement.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.PolicyStatement.ToXml\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: ToXml()\n  nameWithType: PolicyStatement.ToXml()\n  fullName: System.Security.Policy.PolicyStatement.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  name: ToXml(PolicyLevel)\n  nameWithType: PolicyStatement.ToXml(PolicyLevel)\n  fullName: System.Security.Policy.PolicyStatement.ToXml(PolicyLevel)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.PolicyStatement.FromXml*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  nameWithType: PolicyStatement.\n- uid: System.Security.Policy.PolicyStatement.ToXml*\n  parent: System.Security.Policy.PolicyStatement\n  isExternal: false\n  nameWithType: PolicyStatement.\n"}