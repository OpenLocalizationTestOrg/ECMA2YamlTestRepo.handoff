{"nodes":[{"pos":[1346,1359],"content":"EventListener","needQuote":true,"needEscape":true,"nodes":[{"content":"EventListener","pos":[0,13]}]},{"pos":[2083,2098],"content":"EventListener()","needQuote":true,"needEscape":true,"nodes":[{"content":"EventListener()","pos":[0,15]}]},{"pos":[2658,2684],"content":"DisableEvents(EventSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"DisableEvents(EventSource)","pos":[0,26]}]},{"pos":[3115,3149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3348,3357],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[3981,4017],"content":"EnableEvents(EventSource,EventLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"EnableEvents(EventSource,EventLevel)","pos":[0,36]}]},{"pos":[4512,4546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4632,4666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5180,5230],"content":"EnableEvents(EventSource,EventLevel,EventKeywords)","needQuote":true,"needEscape":true,"nodes":[{"content":"EnableEvents(EventSource,EventLevel,EventKeywords)","pos":[0,50]}]},{"pos":[5811,5845],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5931,5965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6064,6098],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6748,6825],"content":"EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)","needQuote":true,"needEscape":true,"nodes":[{"content":"EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary&lt;String,String&gt;)","pos":[0,77],"source":"EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)"}]},{"pos":[7525,7559],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7645,7679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7778,7812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7932,7966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8254,8272],"content":"EventSourceCreated","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceCreated","pos":[0,18]}]},{"pos":[8719,8753],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9050,9079],"content":"EventSourceIndex(EventSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceIndex(EventSource)","pos":[0,29]}]},{"pos":[9525,9559],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9616,9650],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9859,9871],"content":"EventWritten","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWritten","pos":[0,12]}]},{"pos":[10288,10322],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10627,10660],"content":"OnEventSourceCreated(EventSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnEventSourceCreated(EventSource)","pos":[0,33]}]},{"pos":[11123,11157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11470,11507],"content":"OnEventWritten(EventWrittenEventArgs)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnEventWritten(EventWrittenEventArgs)","pos":[0,37]}]},{"pos":[11988,12022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12133,12146],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[12280,12295],"content":"EventListener()","needQuote":true,"needEscape":true,"nodes":[{"content":"EventListener()","pos":[0,15]}]},{"pos":[12592,12618],"content":"DisableEvents(EventSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"DisableEvents(EventSource)","pos":[0,26]}]},{"pos":[12867,12878],"content":"EventSource","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource","pos":[0,11]}]},{"pos":[13093,13102],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[13424,13460],"content":"EnableEvents(EventSource,EventLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"EnableEvents(EventSource,EventLevel)","pos":[0,36]}]},{"pos":[13729,13740],"content":"EventSource","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource","pos":[0,11]}]},{"pos":[13930,13940],"content":"EventLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLevel","pos":[0,10]}]},{"pos":[14277,14327],"content":"EnableEvents(EventSource,EventLevel,EventKeywords)","needQuote":true,"needEscape":true,"nodes":[{"content":"EnableEvents(EventSource,EventLevel,EventKeywords)","pos":[0,50]}]},{"pos":[14624,14635],"content":"EventSource","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource","pos":[0,11]}]},{"pos":[14825,14835],"content":"EventLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLevel","pos":[0,10]}]},{"pos":[15026,15039],"content":"EventKeywords","needQuote":true,"needEscape":true,"nodes":[{"content":"EventKeywords","pos":[0,13]}]},{"pos":[15450,15527],"content":"EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)","needQuote":true,"needEscape":true,"nodes":[{"content":"EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary&lt;String,String&gt;)","pos":[0,77],"source":"EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)"}]},{"pos":[15878,15889],"content":"EventSource","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource","pos":[0,11]}]},{"pos":[16079,16089],"content":"EventLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLevel","pos":[0,10]}]},{"pos":[16280,16293],"content":"EventKeywords","needQuote":true,"needEscape":true,"nodes":[{"content":"EventKeywords","pos":[0,13]}]},{"pos":[16517,16543],"content":"IDictionary<String,String>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;String,String&gt;","pos":[0,26],"source":"IDictionary<String,String>"}]},{"pos":[16813,16831],"content":"EventSourceCreated","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceCreated","pos":[0,18]}]},{"pos":[17081,17122],"content":"EventHandler<ph id=\"ph1\">&lt;EventSourceCreatedEventArgs&gt;</ph>","needQuote":true,"needEscape":true,"source":"EventHandler<EventSourceCreatedEventArgs>"},{"pos":[17453,17482],"content":"EventSourceIndex(EventSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceIndex(EventSource)","pos":[0,29]}]},{"pos":[17691,17696],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17855,17866],"content":"EventSource","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource","pos":[0,11]}]},{"pos":[18086,18098],"content":"EventWritten","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWritten","pos":[0,12]}]},{"pos":[18330,18365],"content":"EventHandler<ph id=\"ph1\">&lt;EventWrittenEventArgs&gt;</ph>","needQuote":true,"needEscape":true,"source":"EventHandler<EventWrittenEventArgs>"},{"pos":[18688,18721],"content":"OnEventSourceCreated(EventSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnEventSourceCreated(EventSource)","pos":[0,33]}]},{"pos":[18984,18995],"content":"EventSource","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource","pos":[0,11]}]},{"pos":[19267,19304],"content":"OnEventWritten(EventWrittenEventArgs)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnEventWritten(EventWrittenEventArgs)","pos":[0,37]}]},{"pos":[19585,19606],"content":"EventWrittenEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWrittenEventArgs","pos":[0,21]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Tracing.EventListener\n  id: EventListener\n  children:\n  - System.Diagnostics.Tracing.EventListener.#ctor\n  - System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)\n  - System.Diagnostics.Tracing.EventListener.Dispose\n  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)\n  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)\n  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})\n  - System.Diagnostics.Tracing.EventListener.EventSourceCreated\n  - System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)\n  - System.Diagnostics.Tracing.EventListener.EventWritten\n  - System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)\n  - System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)\n  langs:\n  - csharp\n  name: EventListener\n  nameWithType: EventListener\n  fullName: System.Diagnostics.Tracing.EventListener\n  type: Class\n  syntax:\n    content: 'public class EventListener : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: EventListener()\n  nameWithType: EventListener.EventListener()\n  fullName: System.Diagnostics.Tracing.EventListener.EventListener()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public EventListener ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)\n  id: DisableEvents(System.Diagnostics.Tracing.EventSource)\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: DisableEvents(EventSource)\n  nameWithType: EventListener.DisableEvents(EventSource)\n  fullName: System.Diagnostics.Tracing.EventListener.DisableEvents(EventSource)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void DisableEvents (System.Diagnostics.Tracing.EventSource eventSource);\n    parameters:\n    - id: eventSource\n      type: System.Diagnostics.Tracing.EventSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.Dispose\n  id: Dispose\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: EventListener.Dispose()\n  fullName: System.Diagnostics.Tracing.EventListener.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public virtual void Dispose ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)\n  id: EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: EnableEvents(EventSource,EventLevel)\n  nameWithType: EventListener.EnableEvents(EventSource,EventLevel)\n  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level);\n    parameters:\n    - id: eventSource\n      type: System.Diagnostics.Tracing.EventSource\n      description: Parameter description to be filled\n    - id: level\n      type: System.Diagnostics.Tracing.EventLevel\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventListener.EnableEvents*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)\n  id: EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: EnableEvents(EventSource,EventLevel,EventKeywords)\n  nameWithType: EventListener.EnableEvents(EventSource,EventLevel,EventKeywords)\n  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel,EventKeywords)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword);\n    parameters:\n    - id: eventSource\n      type: System.Diagnostics.Tracing.EventSource\n      description: Parameter description to be filled\n    - id: level\n      type: System.Diagnostics.Tracing.EventLevel\n      description: Parameter description to be filled\n    - id: matchAnyKeyword\n      type: System.Diagnostics.Tracing.EventKeywords\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventListener.EnableEvents*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})\n  id: EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)\n  nameWithType: EventListener.EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)\n  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, System.Collections.Generic.IDictionary<string,string> arguments);\n    parameters:\n    - id: eventSource\n      type: System.Diagnostics.Tracing.EventSource\n      description: Parameter description to be filled\n    - id: level\n      type: System.Diagnostics.Tracing.EventLevel\n      description: Parameter description to be filled\n    - id: matchAnyKeyword\n      type: System.Diagnostics.Tracing.EventKeywords\n      description: Parameter description to be filled\n    - id: arguments\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventListener.EnableEvents*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.EventSourceCreated\n  id: EventSourceCreated\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: EventSourceCreated\n  nameWithType: EventListener.EventSourceCreated\n  fullName: System.Diagnostics.Tracing.EventListener.EventSourceCreated\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public event EventHandler<System.Diagnostics.Tracing.EventSourceCreatedEventArgs> EventSourceCreated;\n    return:\n      type: System.EventHandler{System.Diagnostics.Tracing.EventSourceCreatedEventArgs}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)\n  id: EventSourceIndex(System.Diagnostics.Tracing.EventSource)\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: EventSourceIndex(EventSource)\n  nameWithType: EventListener.EventSourceIndex(EventSource)\n  fullName: System.Diagnostics.Tracing.EventListener.EventSourceIndex(EventSource)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static int EventSourceIndex (System.Diagnostics.Tracing.EventSource eventSource);\n    parameters:\n    - id: eventSource\n      type: System.Diagnostics.Tracing.EventSource\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.EventWritten\n  id: EventWritten\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: EventWritten\n  nameWithType: EventListener.EventWritten\n  fullName: System.Diagnostics.Tracing.EventListener.EventWritten\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public event EventHandler<System.Diagnostics.Tracing.EventWrittenEventArgs> EventWritten;\n    return:\n      type: System.EventHandler{System.Diagnostics.Tracing.EventWrittenEventArgs}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)\n  id: OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: OnEventSourceCreated(EventSource)\n  nameWithType: EventListener.OnEventSourceCreated(EventSource)\n  fullName: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(EventSource)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected virtual void OnEventSourceCreated (System.Diagnostics.Tracing.EventSource eventSource);\n    parameters:\n    - id: eventSource\n      type: System.Diagnostics.Tracing.EventSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)\n  id: OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)\n  parent: System.Diagnostics.Tracing.EventListener\n  langs:\n  - csharp\n  name: OnEventWritten(EventWrittenEventArgs)\n  nameWithType: EventListener.OnEventWritten(EventWrittenEventArgs)\n  fullName: System.Diagnostics.Tracing.EventListener.OnEventWritten(EventWrittenEventArgs)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected virtual void OnEventWritten (System.Diagnostics.Tracing.EventWrittenEventArgs eventData);\n    parameters:\n    - id: eventData\n      type: System.Diagnostics.Tracing.EventWrittenEventArgs\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Tracing.EventListener.#ctor\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: EventListener()\n  nameWithType: EventListener.EventListener()\n  fullName: System.Diagnostics.Tracing.EventListener.EventListener()\n- uid: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: DisableEvents(EventSource)\n  nameWithType: EventListener.DisableEvents(EventSource)\n  fullName: System.Diagnostics.Tracing.EventListener.DisableEvents(EventSource)\n- uid: System.Diagnostics.Tracing.EventSource\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSource\n  nameWithType: EventSource\n  fullName: System.Diagnostics.Tracing.EventSource\n- uid: System.Diagnostics.Tracing.EventListener.Dispose\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: Dispose()\n  nameWithType: EventListener.Dispose()\n  fullName: System.Diagnostics.Tracing.EventListener.Dispose()\n- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: EnableEvents(EventSource,EventLevel)\n  nameWithType: EventListener.EnableEvents(EventSource,EventLevel)\n  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel)\n- uid: System.Diagnostics.Tracing.EventSource\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSource\n  nameWithType: EventSource\n  fullName: System.Diagnostics.Tracing.EventSource\n- uid: System.Diagnostics.Tracing.EventLevel\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventLevel\n  nameWithType: EventLevel\n  fullName: System.Diagnostics.Tracing.EventLevel\n- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: EnableEvents(EventSource,EventLevel,EventKeywords)\n  nameWithType: EventListener.EnableEvents(EventSource,EventLevel,EventKeywords)\n  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel,EventKeywords)\n- uid: System.Diagnostics.Tracing.EventSource\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSource\n  nameWithType: EventSource\n  fullName: System.Diagnostics.Tracing.EventSource\n- uid: System.Diagnostics.Tracing.EventLevel\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventLevel\n  nameWithType: EventLevel\n  fullName: System.Diagnostics.Tracing.EventLevel\n- uid: System.Diagnostics.Tracing.EventKeywords\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventKeywords\n  nameWithType: EventKeywords\n  fullName: System.Diagnostics.Tracing.EventKeywords\n- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)\n  nameWithType: EventListener.EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)\n  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary<String,String>)\n- uid: System.Diagnostics.Tracing.EventSource\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSource\n  nameWithType: EventSource\n  fullName: System.Diagnostics.Tracing.EventSource\n- uid: System.Diagnostics.Tracing.EventLevel\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventLevel\n  nameWithType: EventLevel\n  fullName: System.Diagnostics.Tracing.EventLevel\n- uid: System.Diagnostics.Tracing.EventKeywords\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventKeywords\n  nameWithType: EventKeywords\n  fullName: System.Diagnostics.Tracing.EventKeywords\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n- uid: System.Diagnostics.Tracing.EventListener.EventSourceCreated\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: EventSourceCreated\n  nameWithType: EventListener.EventSourceCreated\n  fullName: System.Diagnostics.Tracing.EventListener.EventSourceCreated\n- uid: System.EventHandler{System.Diagnostics.Tracing.EventSourceCreatedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<EventSourceCreatedEventArgs>\n  nameWithType: EventHandler<EventSourceCreatedEventArgs>\n  fullName: System.EventHandler<System.Diagnostics.Tracing.EventSourceCreatedEventArgs>\n- uid: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: EventSourceIndex(EventSource)\n  nameWithType: EventListener.EventSourceIndex(EventSource)\n  fullName: System.Diagnostics.Tracing.EventListener.EventSourceIndex(EventSource)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventSource\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSource\n  nameWithType: EventSource\n  fullName: System.Diagnostics.Tracing.EventSource\n- uid: System.Diagnostics.Tracing.EventListener.EventWritten\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: EventWritten\n  nameWithType: EventListener.EventWritten\n  fullName: System.Diagnostics.Tracing.EventListener.EventWritten\n- uid: System.EventHandler{System.Diagnostics.Tracing.EventWrittenEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<EventWrittenEventArgs>\n  nameWithType: EventHandler<EventWrittenEventArgs>\n  fullName: System.EventHandler<System.Diagnostics.Tracing.EventWrittenEventArgs>\n- uid: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: OnEventSourceCreated(EventSource)\n  nameWithType: EventListener.OnEventSourceCreated(EventSource)\n  fullName: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(EventSource)\n- uid: System.Diagnostics.Tracing.EventSource\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSource\n  nameWithType: EventSource\n  fullName: System.Diagnostics.Tracing.EventSource\n- uid: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  name: OnEventWritten(EventWrittenEventArgs)\n  nameWithType: EventListener.OnEventWritten(EventWrittenEventArgs)\n  fullName: System.Diagnostics.Tracing.EventListener.OnEventWritten(EventWrittenEventArgs)\n- uid: System.Diagnostics.Tracing.EventWrittenEventArgs\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventWrittenEventArgs\n  nameWithType: EventWrittenEventArgs\n  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs\n- uid: System.Diagnostics.Tracing.EventListener.EnableEvents*\n  parent: System.Diagnostics.Tracing.EventListener\n  isExternal: false\n  nameWithType: EventListener.\n"}