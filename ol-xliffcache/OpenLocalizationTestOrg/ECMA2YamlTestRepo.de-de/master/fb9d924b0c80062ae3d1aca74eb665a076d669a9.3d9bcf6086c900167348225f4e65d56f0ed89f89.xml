{"nodes":[{"pos":[670,690],"content":"IncrementalHitTester","needQuote":true,"needEscape":true,"nodes":[{"content":"IncrementalHitTester","pos":[0,20]}]},{"pos":[1446,1461],"content":"AddPoint(Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddPoint(Point)","pos":[0,15]}]},{"pos":[1823,1857],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2182,2211],"content":"AddPoints(IEnumerable<ph id=\"ph1\">&lt;Point&gt;</ph>)","needQuote":true,"needEscape":true,"source":"AddPoints(IEnumerable<Point>)"},{"pos":[2684,2718],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3070,3102],"content":"AddPoints(StylusPointCollection)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddPoints(StylusPointCollection)","pos":[0,32]}]},{"pos":[3557,3591],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3987,4020],"content":"AddPointsCore(IEnumerable<ph id=\"ph1\">&lt;Point&gt;</ph>)","needQuote":true,"needEscape":true,"source":"AddPointsCore(IEnumerable<Point>)"},{"pos":[4517,4551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4760,4775],"content":"EndHitTesting()","needQuote":true,"needEscape":true,"nodes":[{"content":"EndHitTesting()","pos":[0,15]}]},{"pos":[5247,5254],"content":"IsValid","needQuote":true,"needEscape":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[5554,5588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5699,5712],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5869,5884],"content":"AddPoint(Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddPoint(Point)","pos":[0,15]}]},{"pos":[6086,6091],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[6344,6373],"content":"AddPoints(IEnumerable<ph id=\"ph1\">&lt;Point&gt;</ph>)","needQuote":true,"needEscape":true,"source":"AddPoints(IEnumerable<Point>)"},{"pos":[6656,6674],"content":"IEnumerable<ph id=\"ph1\">&lt;Point&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Point>"},{"pos":[6962,6994],"content":"AddPoints(StylusPointCollection)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddPoints(StylusPointCollection)","pos":[0,32]}]},{"pos":[7259,7280],"content":"StylusPointCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"StylusPointCollection","pos":[0,21]}]},{"pos":[7575,7608],"content":"AddPointsCore(IEnumerable<ph id=\"ph1\">&lt;Point&gt;</ph>)","needQuote":true,"needEscape":true,"source":"AddPointsCore(IEnumerable<Point>)"},{"pos":[7899,7917],"content":"IEnumerable<ph id=\"ph1\">&lt;Point&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Point>"},{"pos":[8165,8180],"content":"EndHitTesting()","needQuote":true,"needEscape":true,"nodes":[{"content":"EndHitTesting()","pos":[0,15]}]},{"pos":[8435,8442],"content":"IsValid","needQuote":true,"needEscape":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[8615,8622],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Ink.IncrementalHitTester\n  id: IncrementalHitTester\n  children:\n  - System.Windows.Ink.IncrementalHitTester.AddPoint(System.Windows.Point)\n  - System.Windows.Ink.IncrementalHitTester.AddPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  - System.Windows.Ink.IncrementalHitTester.AddPoints(System.Windows.Input.StylusPointCollection)\n  - System.Windows.Ink.IncrementalHitTester.AddPointsCore(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  - System.Windows.Ink.IncrementalHitTester.EndHitTesting\n  - System.Windows.Ink.IncrementalHitTester.IsValid\n  langs:\n  - csharp\n  name: IncrementalHitTester\n  nameWithType: IncrementalHitTester\n  fullName: System.Windows.Ink.IncrementalHitTester\n  type: Class\n  syntax:\n    content: public abstract class IncrementalHitTester\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Ink.IncrementalHitTester.AddPoint(System.Windows.Point)\n  id: AddPoint(System.Windows.Point)\n  parent: System.Windows.Ink.IncrementalHitTester\n  langs:\n  - csharp\n  name: AddPoint(Point)\n  nameWithType: IncrementalHitTester.AddPoint(Point)\n  fullName: System.Windows.Ink.IncrementalHitTester.AddPoint(Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  syntax:\n    content: public void AddPoint (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Ink.IncrementalHitTester.AddPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  id: AddPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.IncrementalHitTester\n  langs:\n  - csharp\n  name: AddPoints(IEnumerable<Point>)\n  nameWithType: IncrementalHitTester.AddPoints(IEnumerable<Point>)\n  fullName: System.Windows.Ink.IncrementalHitTester.AddPoints(IEnumerable<Point>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  syntax:\n    content: public void AddPoints (System.Collections.Generic.IEnumerable<System.Windows.Point> points);\n    parameters:\n    - id: points\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: Parameter description to be filled\n  overload: System.Windows.Ink.IncrementalHitTester.AddPoints*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Ink.IncrementalHitTester.AddPoints(System.Windows.Input.StylusPointCollection)\n  id: AddPoints(System.Windows.Input.StylusPointCollection)\n  parent: System.Windows.Ink.IncrementalHitTester\n  langs:\n  - csharp\n  name: AddPoints(StylusPointCollection)\n  nameWithType: IncrementalHitTester.AddPoints(StylusPointCollection)\n  fullName: System.Windows.Ink.IncrementalHitTester.AddPoints(StylusPointCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  syntax:\n    content: public void AddPoints (System.Windows.Input.StylusPointCollection stylusPoints);\n    parameters:\n    - id: stylusPoints\n      type: System.Windows.Input.StylusPointCollection\n      description: Parameter description to be filled\n  overload: System.Windows.Ink.IncrementalHitTester.AddPoints*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Ink.IncrementalHitTester.AddPointsCore(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  id: AddPointsCore(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.IncrementalHitTester\n  langs:\n  - csharp\n  name: AddPointsCore(IEnumerable<Point>)\n  nameWithType: IncrementalHitTester.AddPointsCore(IEnumerable<Point>)\n  fullName: System.Windows.Ink.IncrementalHitTester.AddPointsCore(IEnumerable<Point>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  syntax:\n    content: protected abstract void AddPointsCore (System.Collections.Generic.IEnumerable<System.Windows.Point> points);\n    parameters:\n    - id: points\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Ink.IncrementalHitTester.EndHitTesting\n  id: EndHitTesting\n  parent: System.Windows.Ink.IncrementalHitTester\n  langs:\n  - csharp\n  name: EndHitTesting()\n  nameWithType: IncrementalHitTester.EndHitTesting()\n  fullName: System.Windows.Ink.IncrementalHitTester.EndHitTesting()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  syntax:\n    content: public void EndHitTesting ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Ink.IncrementalHitTester.IsValid\n  id: IsValid\n  parent: System.Windows.Ink.IncrementalHitTester\n  langs:\n  - csharp\n  name: IsValid\n  nameWithType: IncrementalHitTester.IsValid\n  fullName: System.Windows.Ink.IncrementalHitTester.IsValid\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  syntax:\n    content: public bool IsValid { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Ink.IncrementalHitTester.AddPoint(System.Windows.Point)\n  parent: System.Windows.Ink.IncrementalHitTester\n  isExternal: false\n  name: AddPoint(Point)\n  nameWithType: IncrementalHitTester.AddPoint(Point)\n  fullName: System.Windows.Ink.IncrementalHitTester.AddPoint(Point)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Ink.IncrementalHitTester.AddPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.IncrementalHitTester\n  isExternal: false\n  name: AddPoints(IEnumerable<Point>)\n  nameWithType: IncrementalHitTester.AddPoints(IEnumerable<Point>)\n  fullName: System.Windows.Ink.IncrementalHitTester.AddPoints(IEnumerable<Point>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Point}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Point>\n  nameWithType: IEnumerable<Point>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Point>\n- uid: System.Windows.Ink.IncrementalHitTester.AddPoints(System.Windows.Input.StylusPointCollection)\n  parent: System.Windows.Ink.IncrementalHitTester\n  isExternal: false\n  name: AddPoints(StylusPointCollection)\n  nameWithType: IncrementalHitTester.AddPoints(StylusPointCollection)\n  fullName: System.Windows.Ink.IncrementalHitTester.AddPoints(StylusPointCollection)\n- uid: System.Windows.Input.StylusPointCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusPointCollection\n  nameWithType: StylusPointCollection\n  fullName: System.Windows.Input.StylusPointCollection\n- uid: System.Windows.Ink.IncrementalHitTester.AddPointsCore(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.IncrementalHitTester\n  isExternal: false\n  name: AddPointsCore(IEnumerable<Point>)\n  nameWithType: IncrementalHitTester.AddPointsCore(IEnumerable<Point>)\n  fullName: System.Windows.Ink.IncrementalHitTester.AddPointsCore(IEnumerable<Point>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Point}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Point>\n  nameWithType: IEnumerable<Point>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Point>\n- uid: System.Windows.Ink.IncrementalHitTester.EndHitTesting\n  parent: System.Windows.Ink.IncrementalHitTester\n  isExternal: false\n  name: EndHitTesting()\n  nameWithType: IncrementalHitTester.EndHitTesting()\n  fullName: System.Windows.Ink.IncrementalHitTester.EndHitTesting()\n- uid: System.Windows.Ink.IncrementalHitTester.IsValid\n  parent: System.Windows.Ink.IncrementalHitTester\n  isExternal: false\n  name: IsValid\n  nameWithType: IncrementalHitTester.IsValid\n  fullName: System.Windows.Ink.IncrementalHitTester.IsValid\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Ink.IncrementalHitTester.AddPoints*\n  parent: System.Windows.Ink.IncrementalHitTester\n  isExternal: false\n  nameWithType: IncrementalHitTester.\n"}