{"nodes":[{"pos":[775,796],"content":"RandomNumberGenerator","needQuote":true,"needEscape":true,"nodes":[{"content":"RandomNumberGenerator","pos":[0,21]}]},{"pos":[1639,1662],"content":"RandomNumberGenerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"RandomNumberGenerator()","pos":[0,23]}]},{"pos":[2195,2203],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[2619,2653],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2971,2985],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[3393,3427],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3522,3556],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3846,3855],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[4449,4465],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[4839,4873],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5196,5212],"content":"GetBytes(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Byte[])","pos":[0,16]}]},{"pos":[5576,5610],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5986,6014],"content":"GetBytes(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[6424,6458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6520,6554],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6615,6649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6987,7010],"content":"GetNonZeroBytes(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNonZeroBytes(Byte[])","pos":[0,23]}]},{"pos":[7394,7428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7539,7552],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[7706,7729],"content":"RandomNumberGenerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"RandomNumberGenerator()","pos":[0,23]}]},{"pos":[8033,8041],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[8286,8307],"content":"RandomNumberGenerator","needQuote":true,"needEscape":true,"nodes":[{"content":"RandomNumberGenerator","pos":[0,21]}]},{"pos":[8578,8592],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[8849,8870],"content":"RandomNumberGenerator","needQuote":true,"needEscape":true,"nodes":[{"content":"RandomNumberGenerator","pos":[0,21]}]},{"pos":[9038,9044],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9249,9258],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[9551,9567],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[9770,9777],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10000,10016],"content":"GetBytes(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Byte[])","pos":[0,16]}]},{"pos":[10216,10220],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[10465,10493],"content":"GetBytes(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[10717,10721],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[10834,10839],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10952,10957],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11183,11206],"content":"GetNonZeroBytes(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNonZeroBytes(Byte[])","pos":[0,23]}]},{"pos":[11420,11424],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RandomNumberGenerator\n  id: RandomNumberGenerator\n  children:\n  - System.Security.Cryptography.RandomNumberGenerator.#ctor\n  - System.Security.Cryptography.RandomNumberGenerator.Create\n  - System.Security.Cryptography.RandomNumberGenerator.Create(System.String)\n  - System.Security.Cryptography.RandomNumberGenerator.Dispose\n  - System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)\n  - System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])\n  - System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])\n  langs:\n  - csharp\n  name: RandomNumberGenerator\n  nameWithType: RandomNumberGenerator\n  fullName: System.Security.Cryptography.RandomNumberGenerator\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class RandomNumberGenerator : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RandomNumberGenerator.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  langs:\n  - csharp\n  name: RandomNumberGenerator()\n  nameWithType: RandomNumberGenerator.RandomNumberGenerator()\n  fullName: System.Security.Cryptography.RandomNumberGenerator.RandomNumberGenerator()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected RandomNumberGenerator ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RandomNumberGenerator.Create\n  id: Create\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: RandomNumberGenerator.Create()\n  fullName: System.Security.Cryptography.RandomNumberGenerator.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.RandomNumberGenerator Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.RandomNumberGenerator\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RandomNumberGenerator.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RandomNumberGenerator.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: RandomNumberGenerator.Create(String)\n  fullName: System.Security.Cryptography.RandomNumberGenerator.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.RandomNumberGenerator Create (string rngName);\n    parameters:\n    - id: rngName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.RandomNumberGenerator\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RandomNumberGenerator.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: RandomNumberGenerator.Dispose()\n  fullName: System.Security.Cryptography.RandomNumberGenerator.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.RandomNumberGenerator.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: RandomNumberGenerator.Dispose(Boolean)\n  fullName: System.Security.Cryptography.RandomNumberGenerator.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RandomNumberGenerator.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])\n  id: GetBytes(System.Byte[])\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  langs:\n  - csharp\n  name: GetBytes(Byte[])\n  nameWithType: RandomNumberGenerator.GetBytes(Byte[])\n  fullName: System.Security.Cryptography.RandomNumberGenerator.GetBytes(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract void GetBytes (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RandomNumberGenerator.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)\n  id: GetBytes(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  langs:\n  - csharp\n  name: GetBytes(Byte[],Int32,Int32)\n  nameWithType: RandomNumberGenerator.GetBytes(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.RandomNumberGenerator.GetBytes(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual void GetBytes (byte[] data, int offset, int count);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RandomNumberGenerator.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])\n  id: GetNonZeroBytes(System.Byte[])\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  langs:\n  - csharp\n  name: GetNonZeroBytes(Byte[])\n  nameWithType: RandomNumberGenerator.GetNonZeroBytes(Byte[])\n  fullName: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual void GetNonZeroBytes (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.RandomNumberGenerator.#ctor\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  name: RandomNumberGenerator()\n  nameWithType: RandomNumberGenerator.RandomNumberGenerator()\n  fullName: System.Security.Cryptography.RandomNumberGenerator.RandomNumberGenerator()\n- uid: System.Security.Cryptography.RandomNumberGenerator.Create\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  name: Create()\n  nameWithType: RandomNumberGenerator.Create()\n  fullName: System.Security.Cryptography.RandomNumberGenerator.Create()\n- uid: System.Security.Cryptography.RandomNumberGenerator\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RandomNumberGenerator\n  nameWithType: RandomNumberGenerator\n  fullName: System.Security.Cryptography.RandomNumberGenerator\n- uid: System.Security.Cryptography.RandomNumberGenerator.Create(System.String)\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  name: Create(String)\n  nameWithType: RandomNumberGenerator.Create(String)\n  fullName: System.Security.Cryptography.RandomNumberGenerator.Create(String)\n- uid: System.Security.Cryptography.RandomNumberGenerator\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RandomNumberGenerator\n  nameWithType: RandomNumberGenerator\n  fullName: System.Security.Cryptography.RandomNumberGenerator\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  name: Dispose()\n  nameWithType: RandomNumberGenerator.Dispose()\n  fullName: System.Security.Cryptography.RandomNumberGenerator.Dispose()\n- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: RandomNumberGenerator.Dispose(Boolean)\n  fullName: System.Security.Cryptography.RandomNumberGenerator.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  name: GetBytes(Byte[])\n  nameWithType: RandomNumberGenerator.GetBytes(Byte[])\n  fullName: System.Security.Cryptography.RandomNumberGenerator.GetBytes(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  name: GetBytes(Byte[],Int32,Int32)\n  nameWithType: RandomNumberGenerator.GetBytes(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.RandomNumberGenerator.GetBytes(Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  name: GetNonZeroBytes(Byte[])\n  nameWithType: RandomNumberGenerator.GetNonZeroBytes(Byte[])\n  fullName: System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RandomNumberGenerator.Create*\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  nameWithType: RandomNumberGenerator.\n- uid: System.Security.Cryptography.RandomNumberGenerator.Dispose*\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  nameWithType: RandomNumberGenerator.\n- uid: System.Security.Cryptography.RandomNumberGenerator.GetBytes*\n  parent: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  nameWithType: RandomNumberGenerator.\n"}