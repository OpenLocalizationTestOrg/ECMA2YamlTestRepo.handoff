{"nodes":[{"pos":[849,870],"content":"ReadOnlyPermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyPermissionSet","pos":[0,21]}]},{"pos":[3093,3131],"content":"ReadOnlyPermissionSet(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyPermissionSet(SecurityElement)","pos":[0,38]}]},{"pos":[3584,3618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3889,3919],"content":"AddPermissionImpl(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddPermissionImpl(IPermission)","pos":[0,30]}]},{"pos":[4355,4389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4461,4495],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4682,4688],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[5032,5066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5325,5349],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[5741,5775],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5988,6007],"content":"GetEnumeratorImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumeratorImpl()","pos":[0,19]}]},{"pos":[6395,6429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6668,6691],"content":"GetPermissionImpl(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPermissionImpl(Type)","pos":[0,23]}]},{"pos":[7084,7118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7190,7224],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7423,7433],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[7739,7773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8018,8044],"content":"RemovePermissionImpl(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemovePermissionImpl(Type)","pos":[0,26]}]},{"pos":[8446,8480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8552,8586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8857,8887],"content":"SetPermissionImpl(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPermissionImpl(IPermission)","pos":[0,30]}]},{"pos":[9323,9357],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9429,9463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9652,9659],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[10010,10044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10171,10200],"content":"System.Security.PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.PermissionSet","pos":[0,29]}]},{"pos":[10361,10399],"content":"ReadOnlyPermissionSet(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyPermissionSet(SecurityElement)","pos":[0,38]}]},{"pos":[10659,10674],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[10919,10949],"content":"AddPermissionImpl(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddPermissionImpl(IPermission)","pos":[0,30]}]},{"pos":[11189,11200],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[11358,11369],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[11564,11570],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[11764,11777],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[12012,12036],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[12268,12283],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[12499,12518],"content":"GetEnumeratorImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumeratorImpl()","pos":[0,19]}]},{"pos":[12742,12753],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[12977,13000],"content":"GetPermissionImpl(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPermissionImpl(Type)","pos":[0,23]}]},{"pos":[13226,13237],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[13370,13374],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[13552,13562],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[13740,13747],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13954,13980],"content":"RemovePermissionImpl(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemovePermissionImpl(Type)","pos":[0,26]}]},{"pos":[14212,14223],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[14356,14360],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[14574,14604],"content":"SetPermissionImpl(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPermissionImpl(IPermission)","pos":[0,30]}]},{"pos":[14844,14855],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[15013,15024],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[15220,15227],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[15425,15440],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.ReadOnlyPermissionSet\n  id: ReadOnlyPermissionSet\n  children:\n  - System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)\n  - System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)\n  - System.Security.ReadOnlyPermissionSet.Copy\n  - System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\n  - System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl\n  - System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)\n  - System.Security.ReadOnlyPermissionSet.IsReadOnly\n  - System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)\n  - System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)\n  - System.Security.ReadOnlyPermissionSet.ToXml\n  langs:\n  - csharp\n  name: ReadOnlyPermissionSet\n  nameWithType: ReadOnlyPermissionSet\n  fullName: System.Security.ReadOnlyPermissionSet\n  type: Class\n  syntax:\n    content: 'public sealed class ReadOnlyPermissionSet : System.Security.PermissionSet'\n  inheritance:\n  - System.Object\n  - System.Security.PermissionSet\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.PermissionSet.AddPermission(System.Security.IPermission)\n  - System.Security.PermissionSet.Assert\n  - System.Security.PermissionSet.ContainsNonCodeAccessPermissions\n  - System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)\n  - System.Security.PermissionSet.CopyTo(System.Array,System.Int32)\n  - System.Security.PermissionSet.Count\n  - System.Security.PermissionSet.Demand\n  - System.Security.PermissionSet.Deny\n  - System.Security.PermissionSet.Equals(System.Object)\n  - System.Security.PermissionSet.GetEnumerator\n  - System.Security.PermissionSet.GetHashCode\n  - System.Security.PermissionSet.GetPermission(System.Type)\n  - System.Security.PermissionSet.Intersect(System.Security.PermissionSet)\n  - System.Security.PermissionSet.IsEmpty\n  - System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)\n  - System.Security.PermissionSet.IsSynchronized\n  - System.Security.PermissionSet.IsUnrestricted\n  - System.Security.PermissionSet.PermitOnly\n  - System.Security.PermissionSet.RemovePermission(System.Type)\n  - System.Security.PermissionSet.RevertAssert\n  - System.Security.PermissionSet.SetPermission(System.Security.IPermission)\n  - System.Security.PermissionSet.SyncRoot\n  - System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.Security.PermissionSet.ToString\n  - System.Security.PermissionSet.Union(System.Security.PermissionSet)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)\n  id: '#ctor(System.Security.SecurityElement)'\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: ReadOnlyPermissionSet(SecurityElement)\n  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)\n  fullName: System.Security.ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public ReadOnlyPermissionSet (System.Security.SecurityElement permissionSetXml);\n    parameters:\n    - id: permissionSetXml\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)\n  id: AddPermissionImpl(System.Security.IPermission)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: AddPermissionImpl(IPermission)\n  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)\n  fullName: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);\n    parameters:\n    - id: perm\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.Copy\n  id: Copy\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ReadOnlyPermissionSet.Copy()\n  fullName: System.Security.ReadOnlyPermissionSet.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public override System.Security.PermissionSet Copy ();\n    parameters: []\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ReadOnlyPermissionSet.FromXml(SecurityElement)\n  fullName: System.Security.ReadOnlyPermissionSet.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement et);\n    parameters:\n    - id: et\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl\n  id: GetEnumeratorImpl\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: GetEnumeratorImpl()\n  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl()\n  fullName: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Collections.IEnumerator GetEnumeratorImpl ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)\n  id: GetPermissionImpl(System.Type)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: GetPermissionImpl(Type)\n  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl(Type)\n  fullName: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Security.IPermission GetPermissionImpl (Type permClass);\n    parameters:\n    - id: permClass\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly\n  id: IsReadOnly\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ReadOnlyPermissionSet.IsReadOnly\n  fullName: System.Security.ReadOnlyPermissionSet.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public override bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)\n  id: RemovePermissionImpl(System.Type)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: RemovePermissionImpl(Type)\n  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl(Type)\n  fullName: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Security.IPermission RemovePermissionImpl (Type permClass);\n    parameters:\n    - id: permClass\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)\n  id: SetPermissionImpl(System.Security.IPermission)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: SetPermissionImpl(IPermission)\n  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)\n  fullName: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);\n    parameters:\n    - id: perm\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.ReadOnlyPermissionSet.ToXml\n  id: ToXml\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ReadOnlyPermissionSet.ToXml()\n  fullName: System.Security.ReadOnlyPermissionSet.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.PermissionSet\n  isExternal: false\n  name: System.Security.PermissionSet\n- uid: System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: ReadOnlyPermissionSet(SecurityElement)\n  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)\n  fullName: System.Security.ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: AddPermissionImpl(IPermission)\n  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)\n  fullName: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.ReadOnlyPermissionSet.Copy\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: Copy()\n  nameWithType: ReadOnlyPermissionSet.Copy()\n  fullName: System.Security.ReadOnlyPermissionSet.Copy()\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ReadOnlyPermissionSet.FromXml(SecurityElement)\n  fullName: System.Security.ReadOnlyPermissionSet.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: GetEnumeratorImpl()\n  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl()\n  fullName: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: GetPermissionImpl(Type)\n  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl(Type)\n  fullName: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(Type)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ReadOnlyPermissionSet.IsReadOnly\n  fullName: System.Security.ReadOnlyPermissionSet.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: RemovePermissionImpl(Type)\n  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl(Type)\n  fullName: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(Type)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: SetPermissionImpl(IPermission)\n  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)\n  fullName: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.ReadOnlyPermissionSet.ToXml\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: ToXml()\n  nameWithType: ReadOnlyPermissionSet.ToXml()\n  fullName: System.Security.ReadOnlyPermissionSet.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n"}