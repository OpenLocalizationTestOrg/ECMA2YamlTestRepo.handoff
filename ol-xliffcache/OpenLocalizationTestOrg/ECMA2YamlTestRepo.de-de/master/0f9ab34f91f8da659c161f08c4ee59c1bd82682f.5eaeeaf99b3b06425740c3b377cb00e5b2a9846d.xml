{"nodes":[{"pos":[527,537],"content":"Compensate","needQuote":true,"needEscape":true,"nodes":[{"content":"Compensate","pos":[0,10]}]},{"pos":[2303,2315],"content":"Compensate()","needQuote":true,"needEscape":true,"nodes":[{"content":"Compensate()","pos":[0,12]}]},{"pos":[2875,2912],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[3382,3416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3693,3722],"content":"Cancel(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel(NativeActivityContext)","pos":[0,29]}]},{"pos":[4165,4199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4478,4508],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[4954,4988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5183,5189],"content":"Target","needQuote":true,"needEscape":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[5626,5660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5790,5822],"content":"System.Activities.NativeActivity","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.NativeActivity","pos":[0,32]}]},{"pos":[5954,5966],"content":"Compensate()","needQuote":true,"needEscape":true,"nodes":[{"content":"Compensate()","pos":[0,12]}]},{"pos":[6253,6290],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[6550,6572],"content":"NativeActivityMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityMetadata","pos":[0,22]}]},{"pos":[6838,6867],"content":"Cancel(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel(NativeActivityContext)","pos":[0,29]}]},{"pos":[7110,7131],"content":"NativeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityContext","pos":[0,21]}]},{"pos":[7396,7426],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[7671,7692],"content":"NativeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityContext","pos":[0,21]}]},{"pos":[7915,7921],"content":"Target","needQuote":true,"needEscape":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[8155,8184],"content":"InArgument<ph id=\"ph1\">&lt;CompensationToken&gt;</ph>","needQuote":true,"needEscape":true,"source":"InArgument<CompensationToken>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Compensate\n  id: Compensate\n  children:\n  - System.Activities.Statements.Compensate.#ctor\n  - System.Activities.Statements.Compensate.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Compensate.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Compensate.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Compensate.Target\n  langs:\n  - csharp\n  name: Compensate\n  nameWithType: Compensate\n  fullName: System.Activities.Statements.Compensate\n  type: Class\n  syntax:\n    content: 'public sealed class Compensate : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Compensate.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Compensate\n  langs:\n  - csharp\n  name: Compensate()\n  nameWithType: Compensate.Compensate()\n  fullName: System.Activities.Statements.Compensate.Compensate()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public Compensate ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Compensate.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Compensate\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Compensate.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Compensate.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Compensate.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Compensate\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: Compensate.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.Compensate.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Compensate.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Compensate\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Compensate.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Compensate.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Compensate.Target\n  id: Target\n  parent: System.Activities.Statements.Compensate\n  langs:\n  - csharp\n  name: Target\n  nameWithType: Compensate.Target\n  fullName: System.Activities.Statements.Compensate.Target\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.InArgument<System.Activities.Statements.CompensationToken> Target { get; set; }\n    return:\n      type: System.Activities.InArgument{System.Activities.Statements.CompensationToken}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Compensate.#ctor\n  parent: System.Activities.Statements.Compensate\n  isExternal: false\n  name: Compensate()\n  nameWithType: Compensate.Compensate()\n  fullName: System.Activities.Statements.Compensate.Compensate()\n- uid: System.Activities.Statements.Compensate.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Compensate\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Compensate.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Compensate.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Compensate.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Compensate\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: Compensate.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.Compensate.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Compensate.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Compensate\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Compensate.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Compensate.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Compensate.Target\n  parent: System.Activities.Statements.Compensate\n  isExternal: false\n  name: Target\n  nameWithType: Compensate.Target\n  fullName: System.Activities.Statements.Compensate.Target\n- uid: System.Activities.InArgument{System.Activities.Statements.CompensationToken}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<CompensationToken>\n  nameWithType: InArgument<CompensationToken>\n  fullName: System.Activities.InArgument<System.Activities.Statements.CompensationToken>\n"}