{"nodes":[{"pos":[483,515],"content":"IReadOnlyDictionary<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey,TValue&gt;","pos":[0,32],"source":"IReadOnlyDictionary<TKey,TValue>"}]},{"pos":[981,1015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1052,1086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1533,1550],"content":"ContainsKey(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[1915,1949],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2008,2042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2259,2269],"content":"Item(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(TKey)","pos":[0,10]}]},{"pos":[2624,2658],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2709,2743],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2952,2956],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[3349,3383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3622,3646],"content":"TryGetValue(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(TKey,TValue)","pos":[0,24]}]},{"pos":[4043,4077],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4132,4166],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4225,4259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4472,4478],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[4881,4915],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5136,5153],"content":"ContainsKey(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[5378,5385],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5489,5493],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[5684,5694],"content":"Item(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(TKey)","pos":[0,10]}]},{"pos":[5892,5898],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[5993,5997],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[6184,6188],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[6437,6454],"content":"IEnumerable<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TKey>"},{"pos":[6709,6733],"content":"TryGetValue(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(TKey,TValue)","pos":[0,24]}]},{"pos":[6972,6979],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7083,7087],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[7180,7186],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[7379,7385],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[7640,7659],"content":"IEnumerable<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TValue>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.IReadOnlyDictionary`2\n  id: IReadOnlyDictionary`2\n  children:\n  - System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n  - System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n  - System.Collections.Generic.IReadOnlyDictionary`2.Keys\n  - System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  - System.Collections.Generic.IReadOnlyDictionary`2.Values\n  langs:\n  - csharp\n  name: IReadOnlyDictionary<TKey,TValue>\n  nameWithType: IReadOnlyDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>\n  type: Interface\n  syntax:\n    content: 'public interface IReadOnlyDictionary<TKey,TValue> : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>'\n    typeParameters:\n    - id: TKey\n      description: Parameter description to be filled\n    - id: TValue\n      description: Parameter description to be filled\n  implements:\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  - System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n  id: ContainsKey(`0)\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: ContainsKey(TKey)\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool ContainsKey (TKey key);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n  id: Item(`0)\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: Item(TKey)\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.Item(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Item(TKey)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public TValue this[TKey key] { get; }\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Keys\n  id: Keys\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.Keys\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<TKey> Keys { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  id: TryGetValue(`0,`1@)\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: TryGetValue(TKey,TValue)\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool TryGetValue (TKey key, out TValue value);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    - id: value\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Values\n  id: Values\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: Values\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.Values\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<TValue> Values { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{TValue}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  isExternal: false\n  name: ContainsKey(TKey)\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  isExternal: false\n  name: Item(TKey)\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.Item(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Item(TKey)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Keys\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  isExternal: false\n  name: Keys\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.Keys\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n- uid: System.Collections.Generic.IEnumerable{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TKey>\n  nameWithType: IEnumerable<TKey>\n  fullName: System.Collections.Generic.IEnumerable<TKey>\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  isExternal: false\n  name: TryGetValue(TKey,TValue)\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Values\n  parent: System.Collections.Generic.IReadOnlyDictionary`2\n  isExternal: false\n  name: Values\n  nameWithType: IReadOnlyDictionary<TKey,TValue>.Values\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n- uid: System.Collections.Generic.IEnumerable{TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TValue>\n  nameWithType: IEnumerable<TValue>\n  fullName: System.Collections.Generic.IEnumerable<TValue>\n"}