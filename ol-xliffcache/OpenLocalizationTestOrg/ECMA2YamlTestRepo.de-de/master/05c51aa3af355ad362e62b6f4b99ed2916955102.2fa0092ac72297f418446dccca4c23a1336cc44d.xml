{"nodes":[{"pos":[671,695],"content":"ActiveDirectoryPartition","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveDirectoryPartition","pos":[0,24]}]},{"pos":[1498,1524],"content":"ActiveDirectoryPartition()","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveDirectoryPartition()","pos":[0,26]}]},{"pos":[2144,2153],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[2838,2854],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[3274,3308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3664,3683],"content":"GetDirectoryEntry()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDirectoryEntry()","pos":[0,19]}]},{"pos":[4158,4192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4435,4439],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[4791,4825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5076,5086],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5475,5509],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5620,5633],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5817,5843],"content":"ActiveDirectoryPartition()","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveDirectoryPartition()","pos":[0,26]}]},{"pos":[6202,6211],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[6552,6568],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[6789,6796],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7043,7062],"content":"GetDirectoryEntry()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDirectoryEntry()","pos":[0,19]}]},{"pos":[7332,7346],"content":"DirectoryEntry","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryEntry","pos":[0,14]}]},{"pos":[7612,7616],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[7812,7818],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8054,8064],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8272,8278],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  id: ActiveDirectoryPartition\n  children:\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString\n  langs:\n  - csharp\n  name: ActiveDirectoryPartition\n  nameWithType: ActiveDirectoryPartition\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  type: Class\n  syntax:\n    content: 'public abstract class ActiveDirectoryPartition : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: ActiveDirectoryPartition()\n  nameWithType: ActiveDirectoryPartition.ActiveDirectoryPartition()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ActiveDirectoryPartition()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: protected ActiveDirectoryPartition ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose\n  id: Dispose\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ActiveDirectoryPartition.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ActiveDirectoryPartition.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry\n  id: GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: GetDirectoryEntry()\n  nameWithType: ActiveDirectoryPartition.GetDirectoryEntry()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public abstract System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  id: Name\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ActiveDirectoryPartition.Name\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString\n  id: ToString\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ActiveDirectoryPartition.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: ActiveDirectoryPartition()\n  nameWithType: ActiveDirectoryPartition.ActiveDirectoryPartition()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ActiveDirectoryPartition()\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Dispose()\n  nameWithType: ActiveDirectoryPartition.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose()\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ActiveDirectoryPartition.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: GetDirectoryEntry()\n  nameWithType: ActiveDirectoryPartition.GetDirectoryEntry()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry()\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: Name\n  nameWithType: ActiveDirectoryPartition.Name\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: ToString()\n  nameWithType: ActiveDirectoryPartition.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  nameWithType: ActiveDirectoryPartition.\n"}