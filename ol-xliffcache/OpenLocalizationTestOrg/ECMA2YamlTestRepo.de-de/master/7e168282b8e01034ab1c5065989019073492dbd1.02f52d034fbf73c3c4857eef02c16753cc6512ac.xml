{"nodes":[{"pos":[639,648],"content":"TypeToken","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeToken","pos":[0,9]}]},{"pos":[1097,1102],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[1425,1459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1670,1684],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2004,2038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2097,2131],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2433,2450],"content":"Equals(TypeToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(TypeToken)","pos":[0,17]}]},{"pos":[2812,2846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2905,2939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3183,3196],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3508,3542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3867,3899],"content":"op_Equality(TypeToken,TypeToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(TypeToken,TypeToken)","pos":[0,32]}]},{"pos":[4337,4371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4448,4482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4541,4575],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4904,4938],"content":"op_Inequality(TypeToken,TypeToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(TypeToken,TypeToken)","pos":[0,34]}]},{"pos":[5382,5416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5493,5527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5586,5620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5799,5804],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[6073,6107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6221,6237],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[6355,6360],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[6545,6554],"content":"TypeToken","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeToken","pos":[0,9]}]},{"pos":[6759,6773],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6942,6949],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7067,7073],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7275,7292],"content":"Equals(TypeToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(TypeToken)","pos":[0,17]}]},{"pos":[7467,7474],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7627,7636],"content":"TypeToken","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeToken","pos":[0,9]}]},{"pos":[7831,7844],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8009,8014],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8252,8284],"content":"op_Equality(TypeToken,TypeToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(TypeToken,TypeToken)","pos":[0,32]}]},{"pos":[8489,8496],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8649,8658],"content":"TypeToken","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeToken","pos":[0,9]}]},{"pos":[8831,8840],"content":"TypeToken","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeToken","pos":[0,9]}]},{"pos":[9104,9138],"content":"op_Inequality(TypeToken,TypeToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(TypeToken,TypeToken)","pos":[0,34]}]},{"pos":[9347,9354],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9507,9516],"content":"TypeToken","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeToken","pos":[0,9]}]},{"pos":[9689,9698],"content":"TypeToken","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeToken","pos":[0,9]}]},{"pos":[9887,9892],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[10041,10046],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.TypeToken\n  id: TypeToken\n  children:\n  - System.Reflection.Emit.TypeToken.Empty\n  - System.Reflection.Emit.TypeToken.Equals(System.Object)\n  - System.Reflection.Emit.TypeToken.Equals(System.Reflection.Emit.TypeToken)\n  - System.Reflection.Emit.TypeToken.GetHashCode\n  - System.Reflection.Emit.TypeToken.op_Equality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)\n  - System.Reflection.Emit.TypeToken.op_Inequality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)\n  - System.Reflection.Emit.TypeToken.Token\n  langs:\n  - csharp\n  name: TypeToken\n  nameWithType: TypeToken\n  fullName: System.Reflection.Emit.TypeToken\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct TypeToken\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.TypeToken.Empty\n  id: Empty\n  parent: System.Reflection.Emit.TypeToken\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: TypeToken.Empty\n  fullName: System.Reflection.Emit.TypeToken.Empty\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static readonly System.Reflection.Emit.TypeToken Empty;\n    return:\n      type: System.Reflection.Emit.TypeToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.TypeToken.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.TypeToken\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: TypeToken.Equals(Object)\n  fullName: System.Reflection.Emit.TypeToken.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.TypeToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.TypeToken.Equals(System.Reflection.Emit.TypeToken)\n  id: Equals(System.Reflection.Emit.TypeToken)\n  parent: System.Reflection.Emit.TypeToken\n  langs:\n  - csharp\n  name: Equals(TypeToken)\n  nameWithType: TypeToken.Equals(TypeToken)\n  fullName: System.Reflection.Emit.TypeToken.Equals(TypeToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.TypeToken obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.TypeToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.TypeToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.TypeToken.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.TypeToken\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: TypeToken.GetHashCode()\n  fullName: System.Reflection.Emit.TypeToken.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.TypeToken.op_Equality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)\n  id: op_Equality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)\n  parent: System.Reflection.Emit.TypeToken\n  langs:\n  - csharp\n  name: op_Equality(TypeToken,TypeToken)\n  nameWithType: TypeToken.op_Equality(TypeToken,TypeToken)\n  fullName: System.Reflection.Emit.TypeToken.op_Equality(TypeToken,TypeToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.TypeToken a, System.Reflection.Emit.TypeToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.TypeToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.TypeToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.TypeToken.op_Inequality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)\n  id: op_Inequality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)\n  parent: System.Reflection.Emit.TypeToken\n  langs:\n  - csharp\n  name: op_Inequality(TypeToken,TypeToken)\n  nameWithType: TypeToken.op_Inequality(TypeToken,TypeToken)\n  fullName: System.Reflection.Emit.TypeToken.op_Inequality(TypeToken,TypeToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.TypeToken a, System.Reflection.Emit.TypeToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.TypeToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.TypeToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.TypeToken.Token\n  id: Token\n  parent: System.Reflection.Emit.TypeToken\n  langs:\n  - csharp\n  name: Token\n  nameWithType: TypeToken.Token\n  fullName: System.Reflection.Emit.TypeToken.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public int Token { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Reflection.Emit.TypeToken.Empty\n  parent: System.Reflection.Emit.TypeToken\n  isExternal: false\n  name: Empty\n  nameWithType: TypeToken.Empty\n  fullName: System.Reflection.Emit.TypeToken.Empty\n- uid: System.Reflection.Emit.TypeToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeToken\n  nameWithType: TypeToken\n  fullName: System.Reflection.Emit.TypeToken\n- uid: System.Reflection.Emit.TypeToken.Equals(System.Object)\n  parent: System.Reflection.Emit.TypeToken\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: TypeToken.Equals(Object)\n  fullName: System.Reflection.Emit.TypeToken.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.TypeToken.Equals(System.Reflection.Emit.TypeToken)\n  parent: System.Reflection.Emit.TypeToken\n  isExternal: false\n  name: Equals(TypeToken)\n  nameWithType: TypeToken.Equals(TypeToken)\n  fullName: System.Reflection.Emit.TypeToken.Equals(TypeToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.TypeToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeToken\n  nameWithType: TypeToken\n  fullName: System.Reflection.Emit.TypeToken\n- uid: System.Reflection.Emit.TypeToken.GetHashCode\n  parent: System.Reflection.Emit.TypeToken\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: TypeToken.GetHashCode()\n  fullName: System.Reflection.Emit.TypeToken.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.TypeToken.op_Equality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)\n  parent: System.Reflection.Emit.TypeToken\n  isExternal: false\n  name: op_Equality(TypeToken,TypeToken)\n  nameWithType: TypeToken.op_Equality(TypeToken,TypeToken)\n  fullName: System.Reflection.Emit.TypeToken.op_Equality(TypeToken,TypeToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.TypeToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeToken\n  nameWithType: TypeToken\n  fullName: System.Reflection.Emit.TypeToken\n- uid: System.Reflection.Emit.TypeToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeToken\n  nameWithType: TypeToken\n  fullName: System.Reflection.Emit.TypeToken\n- uid: System.Reflection.Emit.TypeToken.op_Inequality(System.Reflection.Emit.TypeToken,System.Reflection.Emit.TypeToken)\n  parent: System.Reflection.Emit.TypeToken\n  isExternal: false\n  name: op_Inequality(TypeToken,TypeToken)\n  nameWithType: TypeToken.op_Inequality(TypeToken,TypeToken)\n  fullName: System.Reflection.Emit.TypeToken.op_Inequality(TypeToken,TypeToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.TypeToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeToken\n  nameWithType: TypeToken\n  fullName: System.Reflection.Emit.TypeToken\n- uid: System.Reflection.Emit.TypeToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeToken\n  nameWithType: TypeToken\n  fullName: System.Reflection.Emit.TypeToken\n- uid: System.Reflection.Emit.TypeToken.Token\n  parent: System.Reflection.Emit.TypeToken\n  isExternal: false\n  name: Token\n  nameWithType: TypeToken.Token\n  fullName: System.Reflection.Emit.TypeToken.Token\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.TypeToken.Equals*\n  parent: System.Reflection.Emit.TypeToken\n  isExternal: false\n  nameWithType: TypeToken.\n"}