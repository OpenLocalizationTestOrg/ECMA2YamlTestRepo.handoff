{"nodes":[{"pos":[6198,6213],"content":"X509Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[7175,7192],"content":"X509Certificate()","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate()","pos":[0,17]}]},{"pos":[7778,7801],"content":"X509Certificate(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[])","pos":[0,23]}]},{"pos":[8199,8233],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8502,8525],"content":"X509Certificate(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(IntPtr)","pos":[0,23]}]},{"pos":[8927,8961],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9326,9358],"content":"X509Certificate(X509Certificate)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(X509Certificate)","pos":[0,32]}]},{"pos":[9877,9911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10180,10203],"content":"X509Certificate(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String)","pos":[0,23]}]},{"pos":[10609,10643],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10970,11006],"content":"X509Certificate(Byte[],SecureString)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[],SecureString)","pos":[0,36]}]},{"pos":[11475,11509],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11589,11623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11920,11950],"content":"X509Certificate(Byte[],String)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[],String)","pos":[0,30]}]},{"pos":[12385,12419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12484,12518],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12945,12996],"content":"X509Certificate(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(SerializationInfo,StreamingContext)","pos":[0,51]}]},{"pos":[13578,13612],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13708,13742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14069,14105],"content":"X509Certificate(String,SecureString)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String,SecureString)","pos":[0,36]}]},{"pos":[14576,14610],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14690,14724],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15021,15051],"content":"X509Certificate(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String,String)","pos":[0,30]}]},{"pos":[15488,15522],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15587,15621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16080,16136],"content":"X509Certificate(Byte[],SecureString,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[],SecureString,X509KeyStorageFlags)","pos":[0,56]}]},{"pos":[16728,16762],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16842,16876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17000,17034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17463,17513],"content":"X509Certificate(Byte[],String,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[],String,X509KeyStorageFlags)","pos":[0,50]}]},{"pos":[18071,18105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18170,18204],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18328,18362],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18821,18877],"content":"X509Certificate(String,SecureString,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String,SecureString,X509KeyStorageFlags)","pos":[0,56]}]},{"pos":[19471,19505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19585,19619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19743,19777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20206,20256],"content":"X509Certificate(String,String,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String,String,X509KeyStorageFlags)","pos":[0,50]}]},{"pos":[20816,20850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20915,20949],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21073,21107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21400,21426],"content":"CreateFromCertFile(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromCertFile(String)","pos":[0,26]}]},{"pos":[21905,21939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22045,22079],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22376,22404],"content":"CreateFromSignedFile(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromSignedFile(String)","pos":[0,28]}]},{"pos":[22889,22923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23029,23063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23304,23313],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[23962,23978],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[24374,24408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24760,24774],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[25152,25186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25245,25279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25726,25749],"content":"Equals(X509Certificate)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(X509Certificate)","pos":[0,23]}]},{"pos":[26251,26285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26344,26378],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26825,26848],"content":"Export(X509ContentType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Export(X509ContentType)","pos":[0,23]}]},{"pos":[27364,27398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27456,27490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27995,28031],"content":"Export(X509ContentType,SecureString)","needQuote":true,"needEscape":true,"nodes":[{"content":"Export(X509ContentType,SecureString)","pos":[0,36]}]},{"pos":[28612,28646],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28726,28760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28818,28852],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29327,29357],"content":"Export(X509ContentType,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Export(X509ContentType,String)","pos":[0,30]}]},{"pos":[29904,29938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30003,30037],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30095,30129],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30492,30512],"content":"FormatDate(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"FormatDate(DateTime)","pos":[0,20]}]},{"pos":[30915,30949],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31007,31041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31290,31303],"content":"GetCertHash()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCertHash()","pos":[0,13]}]},{"pos":[31676,31710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31971,31990],"content":"GetCertHashString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCertHashString()","pos":[0,19]}]},{"pos":[32381,32415],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32686,32710],"content":"GetEffectiveDateString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEffectiveDateString()","pos":[0,24]}]},{"pos":[33116,33150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33423,33448],"content":"GetExpirationDateString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExpirationDateString()","pos":[0,25]}]},{"pos":[33857,33891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34136,34147],"content":"GetFormat()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFormat()","pos":[0,11]}]},{"pos":[34514,34548],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34797,34810],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[35180,35214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35467,35482],"content":"GetIssuerName()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIssuerName()","pos":[0,15]}]},{"pos":[35861,35895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36152,36169],"content":"GetKeyAlgorithm()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetKeyAlgorithm()","pos":[0,17]}]},{"pos":[36554,36588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36865,36892],"content":"GetKeyAlgorithmParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetKeyAlgorithmParameters()","pos":[0,27]}]},{"pos":[37307,37341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37630,37663],"content":"GetKeyAlgorithmParametersString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetKeyAlgorithmParametersString()","pos":[0,33]}]},{"pos":[38096,38130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38371,38380],"content":"GetName()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetName()","pos":[0,9]}]},{"pos":[38741,38775],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39026,39040],"content":"GetPublicKey()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPublicKey()","pos":[0,14]}]},{"pos":[39416,39450],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39713,39733],"content":"GetPublicKeyString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPublicKeyString()","pos":[0,20]}]},{"pos":[40127,40161],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40416,40432],"content":"GetRawCertData()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRawCertData()","pos":[0,16]}]},{"pos":[40814,40848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41115,41137],"content":"GetRawCertDataString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRawCertDataString()","pos":[0,22]}]},{"pos":[41537,41571],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41828,41845],"content":"GetSerialNumber()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSerialNumber()","pos":[0,17]}]},{"pos":[42230,42264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42533,42556],"content":"GetSerialNumberString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSerialNumberString()","pos":[0,23]}]},{"pos":[42959,42993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43232,43238],"content":"Handle","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle","pos":[0,6]}]},{"pos":[43572,43606],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43875,43889],"content":"Import(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(Byte[])","pos":[0,14]}]},{"pos":[44274,44308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44659,44673],"content":"Import(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(String)","pos":[0,14]}]},{"pos":[45060,45094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45635,45682],"content":"Import(Byte[],SecureString,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(Byte[],SecureString,X509KeyStorageFlags)","pos":[0,47]}]},{"pos":[46255,46289],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46369,46403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46527,46561],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47072,47113],"content":"Import(Byte[],String,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(Byte[],String,X509KeyStorageFlags)","pos":[0,41]}]},{"pos":[47652,47686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47751,47785],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47909,47943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48484,48531],"content":"Import(String,SecureString,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(String,SecureString,X509KeyStorageFlags)","pos":[0,47]}]},{"pos":[49106,49140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49220,49254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49378,49412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49923,49964],"content":"Import(String,String,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(String,String,X509KeyStorageFlags)","pos":[0,41]}]},{"pos":[50505,50539],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50604,50638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50762,50796],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51117,51123],"content":"Issuer","needQuote":true,"needEscape":true,"nodes":[{"content":"Issuer","pos":[0,6]}]},{"pos":[51457,51491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51728,51735],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[52271,52278],"content":"Subject","needQuote":true,"needEscape":true,"nodes":[{"content":"Subject","pos":[0,7]}]},{"pos":[52615,52649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53062,53141],"content":"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)","pos":[0,79]}]},{"pos":[53675,53709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54250,54342],"content":"System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)","pos":[0,92]}]},{"pos":[55011,55045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55141,55175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55418,55428],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[55793,55827],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56186,56203],"content":"ToString(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(Boolean)","pos":[0,17]}]},{"pos":[56599,56633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56691,56725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56920,56933],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[57109,57126],"content":"X509Certificate()","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate()","pos":[0,17]}]},{"pos":[57459,57482],"content":"X509Certificate(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[])","pos":[0,23]}]},{"pos":[57701,57705],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[57943,57966],"content":"X509Certificate(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(IntPtr)","pos":[0,23]}]},{"pos":[58187,58193],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[58481,58513],"content":"X509Certificate(X509Certificate)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(X509Certificate)","pos":[0,32]}]},{"pos":[58839,58854],"content":"X509Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[59151,59174],"content":"X509Certificate(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String)","pos":[0,23]}]},{"pos":[59395,59401],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59670,59706],"content":"X509Certificate(Byte[],SecureString)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[],SecureString)","pos":[0,36]}]},{"pos":[59951,59955],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[60093,60105],"content":"SecureString","needQuote":true,"needEscape":true,"nodes":[{"content":"SecureString","pos":[0,12]}]},{"pos":[60380,60410],"content":"X509Certificate(Byte[],String)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[],String)","pos":[0,30]}]},{"pos":[60643,60647],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[60761,60767],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61086,61137],"content":"X509Certificate(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(SerializationInfo,StreamingContext)","pos":[0,51]}]},{"pos":[61469,61486],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[61700,61716],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[62027,62063],"content":"X509Certificate(String,SecureString)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String,SecureString)","pos":[0,36]}]},{"pos":[62310,62316],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[62456,62468],"content":"SecureString","needQuote":true,"needEscape":true,"nodes":[{"content":"SecureString","pos":[0,12]}]},{"pos":[62743,62773],"content":"X509Certificate(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String,String)","pos":[0,30]}]},{"pos":[63008,63014],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63130,63136],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63471,63527],"content":"X509Certificate(Byte[],SecureString,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[],SecureString,X509KeyStorageFlags)","pos":[0,56]}]},{"pos":[63812,63816],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[63954,63966],"content":"SecureString","needQuote":true,"needEscape":true,"nodes":[{"content":"SecureString","pos":[0,12]}]},{"pos":[64194,64213],"content":"X509KeyStorageFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"X509KeyStorageFlags","pos":[0,19]}]},{"pos":[64598,64648],"content":"X509Certificate(Byte[],String,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(Byte[],String,X509KeyStorageFlags)","pos":[0,50]}]},{"pos":[64921,64925],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[65039,65045],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[65252,65271],"content":"X509KeyStorageFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"X509KeyStorageFlags","pos":[0,19]}]},{"pos":[65671,65727],"content":"X509Certificate(String,SecureString,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String,SecureString,X509KeyStorageFlags)","pos":[0,56]}]},{"pos":[66014,66020],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[66160,66172],"content":"SecureString","needQuote":true,"needEscape":true,"nodes":[{"content":"SecureString","pos":[0,12]}]},{"pos":[66400,66419],"content":"X509KeyStorageFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"X509KeyStorageFlags","pos":[0,19]}]},{"pos":[66804,66854],"content":"X509Certificate(String,String,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate(String,String,X509KeyStorageFlags)","pos":[0,50]}]},{"pos":[67129,67135],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67251,67257],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67464,67483],"content":"X509KeyStorageFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"X509KeyStorageFlags","pos":[0,19]}]},{"pos":[67801,67827],"content":"CreateFromCertFile(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromCertFile(String)","pos":[0,26]}]},{"pos":[68141,68156],"content":"X509Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[68329,68335],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[68590,68618],"content":"CreateFromSignedFile(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromSignedFile(String)","pos":[0,28]}]},{"pos":[68936,68951],"content":"X509Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[69124,69130],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[69357,69366],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[69686,69702],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[69910,69917],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[70160,70174],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[70378,70385],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[70503,70509],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70798,70821],"content":"Equals(X509Certificate)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(X509Certificate)","pos":[0,23]}]},{"pos":[71043,71050],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71255,71270],"content":"X509Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[71616,71639],"content":"Export(X509ContentType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Export(X509ContentType)","pos":[0,23]}]},{"pos":[71858,71862],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[72063,72078],"content":"X509ContentType","needQuote":true,"needEscape":true,"nodes":[{"content":"X509ContentType","pos":[0,15]}]},{"pos":[72453,72489],"content":"Export(X509ContentType,SecureString)","needQuote":true,"needEscape":true,"nodes":[{"content":"Export(X509ContentType,SecureString)","pos":[0,36]}]},{"pos":[72734,72738],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[72939,72954],"content":"X509ContentType","needQuote":true,"needEscape":true,"nodes":[{"content":"X509ContentType","pos":[0,15]}]},{"pos":[73151,73163],"content":"SecureString","needQuote":true,"needEscape":true,"nodes":[{"content":"SecureString","pos":[0,12]}]},{"pos":[73487,73517],"content":"Export(X509ContentType,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Export(X509ContentType,String)","pos":[0,30]}]},{"pos":[73750,73754],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[73955,73970],"content":"X509ContentType","needQuote":true,"needEscape":true,"nodes":[{"content":"X509ContentType","pos":[0,15]}]},{"pos":[74143,74149],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[74396,74416],"content":"FormatDate(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"FormatDate(DateTime)","pos":[0,20]}]},{"pos":[74631,74637],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[74755,74763],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[74998,75011],"content":"GetCertHash()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCertHash()","pos":[0,13]}]},{"pos":[75210,75214],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[75449,75468],"content":"GetCertHashString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCertHashString()","pos":[0,19]}]},{"pos":[75681,75687],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[75929,75953],"content":"GetEffectiveDateString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEffectiveDateString()","pos":[0,24]}]},{"pos":[76176,76182],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[76425,76450],"content":"GetExpirationDateString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExpirationDateString()","pos":[0,25]}]},{"pos":[76675,76681],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[76910,76921],"content":"GetFormat()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFormat()","pos":[0,11]}]},{"pos":[77118,77124],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[77355,77368],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[77568,77573],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[77804,77819],"content":"GetIssuerName()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIssuerName()","pos":[0,15]}]},{"pos":[78024,78030],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[78265,78282],"content":"GetKeyAlgorithm()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetKeyAlgorithm()","pos":[0,17]}]},{"pos":[78491,78497],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[78742,78769],"content":"GetKeyAlgorithmParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetKeyAlgorithmParameters()","pos":[0,27]}]},{"pos":[78996,79000],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[79249,79282],"content":"GetKeyAlgorithmParametersString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetKeyAlgorithmParametersString()","pos":[0,33]}]},{"pos":[79523,79529],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[79756,79765],"content":"GetName()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetName()","pos":[0,9]}]},{"pos":[79958,79964],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[80196,80210],"content":"GetPublicKey()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPublicKey()","pos":[0,14]}]},{"pos":[80411,80415],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[80651,80671],"content":"GetPublicKeyString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPublicKeyString()","pos":[0,20]}]},{"pos":[80886,80892],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[81126,81142],"content":"GetRawCertData()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRawCertData()","pos":[0,16]}]},{"pos":[81347,81351],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[81589,81611],"content":"GetRawCertDataString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRawCertDataString()","pos":[0,22]}]},{"pos":[81830,81836],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[82071,82088],"content":"GetSerialNumber()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSerialNumber()","pos":[0,17]}]},{"pos":[82295,82299],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[82538,82561],"content":"GetSerialNumberString()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSerialNumberString()","pos":[0,23]}]},{"pos":[82782,82788],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[83014,83020],"content":"Handle","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle","pos":[0,6]}]},{"pos":[83207,83213],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[83454,83468],"content":"Import(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(Byte[])","pos":[0,14]}]},{"pos":[83669,83673],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[83912,83926],"content":"Import(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(String)","pos":[0,14]}]},{"pos":[84129,84135],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[84471,84518],"content":"Import(Byte[],SecureString,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(Byte[],SecureString,X509KeyStorageFlags)","pos":[0,47]}]},{"pos":[84785,84789],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[84927,84939],"content":"SecureString","needQuote":true,"needEscape":true,"nodes":[{"content":"SecureString","pos":[0,12]}]},{"pos":[85167,85186],"content":"X509KeyStorageFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"X509KeyStorageFlags","pos":[0,19]}]},{"pos":[85572,85613],"content":"Import(Byte[],String,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(Byte[],String,X509KeyStorageFlags)","pos":[0,41]}]},{"pos":[85868,85872],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[85986,85992],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[86199,86218],"content":"X509KeyStorageFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"X509KeyStorageFlags","pos":[0,19]}]},{"pos":[86619,86666],"content":"Import(String,SecureString,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(String,SecureString,X509KeyStorageFlags)","pos":[0,47]}]},{"pos":[86935,86941],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[87081,87093],"content":"SecureString","needQuote":true,"needEscape":true,"nodes":[{"content":"SecureString","pos":[0,12]}]},{"pos":[87321,87340],"content":"X509KeyStorageFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"X509KeyStorageFlags","pos":[0,19]}]},{"pos":[87726,87767],"content":"Import(String,String,X509KeyStorageFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"Import(String,String,X509KeyStorageFlags)","pos":[0,41]}]},{"pos":[88024,88030],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[88146,88152],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[88359,88378],"content":"X509KeyStorageFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"X509KeyStorageFlags","pos":[0,19]}]},{"pos":[88669,88675],"content":"Issuer","needQuote":true,"needEscape":true,"nodes":[{"content":"Issuer","pos":[0,6]}]},{"pos":[88862,88868],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[89093,89100],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[89400,89407],"content":"Subject","needQuote":true,"needEscape":true,"nodes":[{"content":"Subject","pos":[0,7]}]},{"pos":[89596,89602],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[89908,89987],"content":"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)","pos":[0,79]}]},{"pos":[90320,90326],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[90696,90788],"content":"System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)","pos":[0,92]}]},{"pos":[91202,91219],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[91433,91449],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[91719,91729],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[91924,91930],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[92174,92191],"content":"ToString(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(Boolean)","pos":[0,17]}]},{"pos":[92400,92406],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[92523,92530],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  id: X509Certificate\n  children:\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Reset\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject\n  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)\n  langs:\n  - csharp\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class X509Certificate : IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate()\n  nameWithType: X509Certificate.X509Certificate()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[])\n  nameWithType: X509Certificate.X509Certificate(Byte[])\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)\n  id: '#ctor(System.IntPtr)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(IntPtr)\n  nameWithType: X509Certificate.X509Certificate(IntPtr)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (IntPtr handle);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(X509Certificate)\n  nameWithType: X509Certificate.X509Certificate(X509Certificate)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (System.Security.Cryptography.X509Certificates.X509Certificate cert);\n    parameters:\n    - id: cert\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String)\n  nameWithType: X509Certificate.X509Certificate(String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)\n  id: '#ctor(System.Byte[],System.Security.SecureString)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[],SecureString)\n  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (byte[] rawData, System.Security.SecureString password);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: password\n      type: System.Security.SecureString\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)\n  id: '#ctor(System.Byte[],System.String)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[],String)\n  nameWithType: X509Certificate.X509Certificate(Byte[],String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (byte[] rawData, string password);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: password\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(SerializationInfo,StreamingContext)\n  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)\n  id: '#ctor(System.String,System.Security.SecureString)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String,SecureString)\n  nameWithType: X509Certificate.X509Certificate(String,SecureString)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (string fileName, System.Security.SecureString password);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n    - id: password\n      type: System.Security.SecureString\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String,String)\n  nameWithType: X509Certificate.X509Certificate(String,String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (string fileName, string password);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n    - id: password\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: password\n      type: System.Security.SecureString\n      description: Parameter description to be filled\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[],String,X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: password\n      type: System.String\n      description: Parameter description to be filled\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String,SecureString,X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n    - id: password\n      type: System.Security.SecureString\n      description: Parameter description to be filled\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String,String,X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public X509Certificate (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n    - id: password\n      type: System.String\n      description: Parameter description to be filled\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)\n  id: CreateFromCertFile(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: CreateFromCertFile(String)\n  nameWithType: X509Certificate.CreateFromCertFile(String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromCertFile (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)\n  id: CreateFromSignedFile(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: CreateFromSignedFile(String)\n  nameWithType: X509Certificate.CreateFromSignedFile(String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromSignedFile (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: X509Certificate.Dispose()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: X509Certificate.Dispose(Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: X509Certificate.Equals(Object)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: Equals(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Equals(X509Certificate)\n  nameWithType: X509Certificate.Equals(X509Certificate)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual bool Equals (System.Security.Cryptography.X509Certificates.X509Certificate other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Export(X509ContentType)\n  nameWithType: X509Certificate.Export(X509ContentType)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType);\n    parameters:\n    - id: contentType\n      type: System.Security.Cryptography.X509Certificates.X509ContentType\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)\n  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Export(X509ContentType,SecureString)\n  nameWithType: X509Certificate.Export(X509ContentType,SecureString)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, System.Security.SecureString password);\n    parameters:\n    - id: contentType\n      type: System.Security.Cryptography.X509Certificates.X509ContentType\n      description: Parameter description to be filled\n    - id: password\n      type: System.Security.SecureString\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Export(X509ContentType,String)\n  nameWithType: X509Certificate.Export(X509ContentType,String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);\n    parameters:\n    - id: contentType\n      type: System.Security.Cryptography.X509Certificates.X509ContentType\n      description: Parameter description to be filled\n    - id: password\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)\n  id: FormatDate(System.DateTime)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: FormatDate(DateTime)\n  nameWithType: X509Certificate.FormatDate(DateTime)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: protected static string FormatDate (DateTime date);\n    parameters:\n    - id: date\n      type: System.DateTime\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash\n  id: GetCertHash\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetCertHash()\n  nameWithType: X509Certificate.GetCertHash()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual byte[] GetCertHash ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString\n  id: GetCertHashString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetCertHashString()\n  nameWithType: X509Certificate.GetCertHashString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetCertHashString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString\n  id: GetEffectiveDateString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetEffectiveDateString()\n  nameWithType: X509Certificate.GetEffectiveDateString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetEffectiveDateString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString\n  id: GetExpirationDateString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetExpirationDateString()\n  nameWithType: X509Certificate.GetExpirationDateString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetExpirationDateString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat\n  id: GetFormat\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetFormat()\n  nameWithType: X509Certificate.GetFormat()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetFormat ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: X509Certificate.GetHashCode()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName\n  id: GetIssuerName\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetIssuerName()\n  nameWithType: X509Certificate.GetIssuerName()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetIssuerName ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm\n  id: GetKeyAlgorithm\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetKeyAlgorithm()\n  nameWithType: X509Certificate.GetKeyAlgorithm()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetKeyAlgorithm ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters\n  id: GetKeyAlgorithmParameters\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetKeyAlgorithmParameters()\n  nameWithType: X509Certificate.GetKeyAlgorithmParameters()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual byte[] GetKeyAlgorithmParameters ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString\n  id: GetKeyAlgorithmParametersString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetKeyAlgorithmParametersString()\n  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetKeyAlgorithmParametersString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName\n  id: GetName\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetName()\n  nameWithType: X509Certificate.GetName()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetName ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey\n  id: GetPublicKey\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetPublicKey()\n  nameWithType: X509Certificate.GetPublicKey()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual byte[] GetPublicKey ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString\n  id: GetPublicKeyString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetPublicKeyString()\n  nameWithType: X509Certificate.GetPublicKeyString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetPublicKeyString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData\n  id: GetRawCertData\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetRawCertData()\n  nameWithType: X509Certificate.GetRawCertData()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual byte[] GetRawCertData ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString\n  id: GetRawCertDataString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetRawCertDataString()\n  nameWithType: X509Certificate.GetRawCertDataString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetRawCertDataString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber\n  id: GetSerialNumber\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetSerialNumber()\n  nameWithType: X509Certificate.GetSerialNumber()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual byte[] GetSerialNumber ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString\n  id: GetSerialNumberString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetSerialNumberString()\n  nameWithType: X509Certificate.GetSerialNumberString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string GetSerialNumberString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle\n  id: Handle\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: X509Certificate.Handle\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public IntPtr Handle { get; }\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])\n  id: Import(System.Byte[])\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(Byte[])\n  nameWithType: X509Certificate.Import(Byte[])\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual void Import (byte[] rawData);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)\n  id: Import(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(String)\n  nameWithType: X509Certificate.Import(String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual void Import (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(Byte[],SecureString,X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: password\n      type: System.Security.SecureString\n      description: Parameter description to be filled\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(Byte[],String,X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: password\n      type: System.String\n      description: Parameter description to be filled\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(String,SecureString,X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n    - id: password\n      type: System.Security.SecureString\n      description: Parameter description to be filled\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(String,String,X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n    - id: password\n      type: System.String\n      description: Parameter description to be filled\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\n  id: Issuer\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Issuer\n  nameWithType: X509Certificate.Issuer\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public string Issuer { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset\n  id: Reset\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: X509Certificate.Reset()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual void Reset ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject\n  id: Subject\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Subject\n  nameWithType: X509Certificate.Subject\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public string Subject { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString\n  id: ToString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: X509Certificate.ToString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)\n  id: ToString(System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: ToString(Boolean)\n  nameWithType: X509Certificate.ToString(Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography.X509Certificates\n  syntax:\n    content: public virtual string ToString (bool fVerbose);\n    parameters:\n    - id: fVerbose\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate()\n  nameWithType: X509Certificate.X509Certificate()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[])\n  nameWithType: X509Certificate.X509Certificate(Byte[])\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(IntPtr)\n  nameWithType: X509Certificate.X509Certificate(IntPtr)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(X509Certificate)\n  nameWithType: X509Certificate.X509Certificate(X509Certificate)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String)\n  nameWithType: X509Certificate.X509Certificate(String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[],SecureString)\n  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[],String)\n  nameWithType: X509Certificate.X509Certificate(Byte[],String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(SerializationInfo,StreamingContext)\n  nameWithType: X509Certificate.X509Certificate(SerializationInfo,StreamingContext)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String,SecureString)\n  nameWithType: X509Certificate.X509Certificate(String,SecureString)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String,String)\n  nameWithType: X509Certificate.X509Certificate(String,String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[],SecureString,X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],SecureString,X509KeyStorageFlags)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[],String,X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(Byte[],String,X509KeyStorageFlags)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String,SecureString,X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,SecureString,X509KeyStorageFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String,String,X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.X509Certificate(String,String,X509KeyStorageFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: CreateFromCertFile(String)\n  nameWithType: X509Certificate.CreateFromCertFile(String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: CreateFromSignedFile(String)\n  nameWithType: X509Certificate.CreateFromSignedFile(String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Dispose()\n  nameWithType: X509Certificate.Dispose()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: X509Certificate.Dispose(Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: X509Certificate.Equals(Object)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Equals(X509Certificate)\n  nameWithType: X509Certificate.Equals(X509Certificate)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(X509Certificate)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Export(X509ContentType)\n  nameWithType: X509Certificate.Export(X509ContentType)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509ContentType\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509ContentType\n  nameWithType: X509ContentType\n  fullName: System.Security.Cryptography.X509Certificates.X509ContentType\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Export(X509ContentType,SecureString)\n  nameWithType: X509Certificate.Export(X509ContentType,SecureString)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,SecureString)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509ContentType\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509ContentType\n  nameWithType: X509ContentType\n  fullName: System.Security.Cryptography.X509Certificates.X509ContentType\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Export(X509ContentType,String)\n  nameWithType: X509Certificate.Export(X509ContentType,String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(X509ContentType,String)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509ContentType\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509ContentType\n  nameWithType: X509ContentType\n  fullName: System.Security.Cryptography.X509Certificates.X509ContentType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: FormatDate(DateTime)\n  nameWithType: X509Certificate.FormatDate(DateTime)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(DateTime)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetCertHash()\n  nameWithType: X509Certificate.GetCertHash()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetCertHashString()\n  nameWithType: X509Certificate.GetCertHashString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetEffectiveDateString()\n  nameWithType: X509Certificate.GetEffectiveDateString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetExpirationDateString()\n  nameWithType: X509Certificate.GetExpirationDateString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetFormat()\n  nameWithType: X509Certificate.GetFormat()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: X509Certificate.GetHashCode()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetIssuerName()\n  nameWithType: X509Certificate.GetIssuerName()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetKeyAlgorithm()\n  nameWithType: X509Certificate.GetKeyAlgorithm()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetKeyAlgorithmParameters()\n  nameWithType: X509Certificate.GetKeyAlgorithmParameters()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetKeyAlgorithmParametersString()\n  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetName()\n  nameWithType: X509Certificate.GetName()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetName()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetPublicKey()\n  nameWithType: X509Certificate.GetPublicKey()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetPublicKeyString()\n  nameWithType: X509Certificate.GetPublicKeyString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetRawCertData()\n  nameWithType: X509Certificate.GetRawCertData()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetRawCertDataString()\n  nameWithType: X509Certificate.GetRawCertDataString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetSerialNumber()\n  nameWithType: X509Certificate.GetSerialNumber()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetSerialNumberString()\n  nameWithType: X509Certificate.GetSerialNumberString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Handle\n  nameWithType: X509Certificate.Handle\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(Byte[])\n  nameWithType: X509Certificate.Import(Byte[])\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(String)\n  nameWithType: X509Certificate.Import(String)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(Byte[],SecureString,X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],SecureString,X509KeyStorageFlags)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(Byte[],String,X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(Byte[],String,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(Byte[],String,X509KeyStorageFlags)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(String,SecureString,X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(String,SecureString,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,SecureString,X509KeyStorageFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(String,String,X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(String,String,X509KeyStorageFlags)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Import(String,String,X509KeyStorageFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Issuer\n  nameWithType: X509Certificate.Issuer\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Reset()\n  nameWithType: X509Certificate.Reset()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Reset()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Subject\n  nameWithType: X509Certificate.Subject\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: ToString()\n  nameWithType: X509Certificate.ToString()\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: ToString(Boolean)\n  nameWithType: X509Certificate.ToString(Boolean)\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  nameWithType: X509Certificate.\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  nameWithType: X509Certificate.\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  nameWithType: X509Certificate.\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  nameWithType: X509Certificate.\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  nameWithType: X509Certificate.\n"}