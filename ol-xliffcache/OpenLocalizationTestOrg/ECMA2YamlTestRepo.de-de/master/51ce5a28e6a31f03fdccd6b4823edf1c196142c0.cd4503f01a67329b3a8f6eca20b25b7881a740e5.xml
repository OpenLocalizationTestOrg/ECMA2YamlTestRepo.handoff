{"nodes":[{"pos":[1068,1091],"content":"ICompiledExpressionRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"ICompiledExpressionRoot","pos":[0,23]}]},{"pos":[1787,1854],"content":"CanExecuteExpression(String,Boolean,IList<ph id=\"ph1\">&lt;LocationReference&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)"},{"pos":[2487,2521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2590,2624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2746,2780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2848,2882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2941,2975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3422,3484],"content":"GetExpressionTreeForExpression(Int32,IList<ph id=\"ph1\">&lt;LocationReference&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GetExpressionTreeForExpression(Int32,IList<LocationReference>)"},{"pos":[4108,4142],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4273,4307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4386,4420],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4661,4674],"content":"GetLanguage()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLanguage()","pos":[0,13]}]},{"pos":[5040,5074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5361,5388],"content":"GetRequiredLocations(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRequiredLocations(Int32)","pos":[0,27]}]},{"pos":[5848,5882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5974,6008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6409,6448],"content":"InvokeExpression(Int32,IList<ph id=\"ph1\">&lt;Location&gt;</ph>)","needQuote":true,"needEscape":true,"source":"InvokeExpression(Int32,IList<Location>)"},{"pos":[6966,7000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7113,7147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7205,7239],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7814,7878],"content":"InvokeExpression(Int32,IList<ph id=\"ph1\">&lt;LocationReference&gt;</ph>,ActivityContext)","needQuote":true,"needEscape":true,"source":"InvokeExpression(Int32,IList<LocationReference>,ActivityContext)"},{"pos":[8506,8540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8662,8696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8788,8822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8880,8914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9360,9427],"content":"CanExecuteExpression(String,Boolean,IList<ph id=\"ph1\">&lt;LocationReference&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)"},{"pos":[9741,9748],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9866,9872],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9989,9996],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10190,10214],"content":"IList<ph id=\"ph1\">&lt;LocationReference&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<LocationReference>"},{"pos":[10403,10408],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10732,10794],"content":"GetExpressionTreeForExpression(Int32,IList<ph id=\"ph1\">&lt;LocationReference&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GetExpressionTreeForExpression(Int32,IList<LocationReference>)"},{"pos":[11135,11145],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[11285,11290],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11480,11504],"content":"IList<ph id=\"ph1\">&lt;LocationReference&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<LocationReference>"},{"pos":[11801,11814],"content":"GetLanguage()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLanguage()","pos":[0,13]}]},{"pos":[12019,12025],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12271,12298],"content":"GetRequiredLocations(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRequiredLocations(Int32)","pos":[0,27]}]},{"pos":[12585,12598],"content":"IList<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<String>"},{"pos":[12754,12759],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13060,13099],"content":"InvokeExpression(Int32,IList<ph id=\"ph1\">&lt;Location&gt;</ph>)","needQuote":true,"needEscape":true,"source":"InvokeExpression(Int32,IList<Location>)"},{"pos":[13356,13362],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13477,13482],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13663,13678],"content":"IList<ph id=\"ph1\">&lt;Location&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<Location>"},{"pos":[14080,14144],"content":"InvokeExpression(Int32,IList<ph id=\"ph1\">&lt;LocationReference&gt;</ph>,ActivityContext)","needQuote":true,"needEscape":true,"source":"InvokeExpression(Int32,IList<LocationReference>,ActivityContext)"},{"pos":[14451,14457],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14572,14577],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14767,14791],"content":"IList<ph id=\"ph1\">&lt;LocationReference&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<LocationReference>"},{"pos":[15012,15027],"content":"ActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ActivityContext","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  id: ICompiledExpressionRoot\n  children:\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  langs:\n  - csharp\n  name: ICompiledExpressionRoot\n  nameWithType: ICompiledExpressionRoot\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  type: Interface\n  syntax:\n    content: public interface ICompiledExpressionRoot\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  id: CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  nameWithType: ICompiledExpressionRoot.CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  syntax:\n    content: public bool CanExecuteExpression (string expressionText, bool isReference, System.Collections.Generic.IList<System.Activities.LocationReference> locations, out int expressionId);\n    parameters:\n    - id: expressionText\n      type: System.String\n      description: Parameter description to be filled\n    - id: isReference\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: locations\n      type: System.Collections.Generic.IList{System.Activities.LocationReference}\n      description: Parameter description to be filled\n    - id: expressionId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  id: GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  nameWithType: ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  syntax:\n    content: public System.Linq.Expressions.Expression GetExpressionTreeForExpression (int expressionId, System.Collections.Generic.IList<System.Activities.LocationReference> locationReferences);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: locationReferences\n      type: System.Collections.Generic.IList{System.Activities.LocationReference}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  id: GetLanguage\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: GetLanguage()\n  nameWithType: ICompiledExpressionRoot.GetLanguage()\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  syntax:\n    content: public string GetLanguage ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  id: GetRequiredLocations(System.Int32)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: GetRequiredLocations(Int32)\n  nameWithType: ICompiledExpressionRoot.GetRequiredLocations(Int32)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(Int32)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  syntax:\n    content: public System.Collections.Generic.IList<string> GetRequiredLocations (int expressionId);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.Generic.IList{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  id: InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: InvokeExpression(Int32,IList<Location>)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32,IList<Location>)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(Int32,IList<Location>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  syntax:\n    content: public object InvokeExpression (int expressionId, System.Collections.Generic.IList<System.Activities.Location> locations);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: locations\n      type: System.Collections.Generic.IList{System.Activities.Location}\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  id: InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  syntax:\n    content: public object InvokeExpression (int expressionId, System.Collections.Generic.IList<System.Activities.LocationReference> locations, System.Activities.ActivityContext activityContext);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: locations\n      type: System.Collections.Generic.IList{System.Activities.LocationReference}\n      description: Parameter description to be filled\n    - id: activityContext\n      type: System.Activities.ActivityContext\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  nameWithType: ICompiledExpressionRoot.CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IList{System.Activities.LocationReference}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<LocationReference>\n  nameWithType: IList<LocationReference>\n  fullName: System.Collections.Generic.IList<System.Activities.LocationReference>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  nameWithType: ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.IList{System.Activities.LocationReference}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<LocationReference>\n  nameWithType: IList<LocationReference>\n  fullName: System.Collections.Generic.IList<System.Activities.LocationReference>\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetLanguage()\n  nameWithType: ICompiledExpressionRoot.GetLanguage()\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetRequiredLocations(Int32)\n  nameWithType: ICompiledExpressionRoot.GetRequiredLocations(Int32)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(Int32)\n- uid: System.Collections.Generic.IList{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<String>\n  nameWithType: IList<String>\n  fullName: System.Collections.Generic.IList<System.String>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: InvokeExpression(Int32,IList<Location>)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32,IList<Location>)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(Int32,IList<Location>)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.IList{System.Activities.Location}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<Location>\n  nameWithType: IList<Location>\n  fullName: System.Collections.Generic.IList<System.Activities.Location>\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.IList{System.Activities.LocationReference}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<LocationReference>\n  nameWithType: IList<LocationReference>\n  fullName: System.Collections.Generic.IList<System.Activities.LocationReference>\n- uid: System.Activities.ActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  nameWithType: ICompiledExpressionRoot.\n"}