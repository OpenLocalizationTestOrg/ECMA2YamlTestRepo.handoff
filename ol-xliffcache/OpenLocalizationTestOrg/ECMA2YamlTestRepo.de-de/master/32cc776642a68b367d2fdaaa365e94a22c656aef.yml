### YamlMime:ManagedReference
items:
- uid: System.Linq.Expressions.Expression
  id: Expression
  children:
  - System.Linq.Expressions.Expression.#ctor
  - System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)
  - System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.CanReduce
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Constant(System.Object)
  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Default(System.Type)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Empty
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.GetActionType(System.Type[])
  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Label
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Label(System.String)
  - System.Linq.Expressions.Expression.Label(System.Type)
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Label(System.Type,System.String)
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  - System.Linq.Expressions.Expression.New(System.Type)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NodeType
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Parameter(System.Type)
  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Reduce
  - System.Linq.Expressions.Expression.ReduceAndCheck
  - System.Linq.Expressions.Expression.ReduceExtensions
  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Rethrow
  - System.Linq.Expressions.Expression.Rethrow(System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.SymbolDocument(System.String)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ToString
  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.Type
  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  langs:
  - csharp
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
  type: Class
  syntax:
    content: public abstract class Expression
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.#ctor
  id: '#ctor'
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Expression()
  nameWithType: Expression.Expression()
  fullName: System.Linq.Expressions.Expression.Expression()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: protected Expression ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)
  id: '#ctor(System.Linq.Expressions.ExpressionType,System.Type)'
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Expression(ExpressionType,Type)
  nameWithType: Expression.Expression(ExpressionType,Type)
  fullName: System.Linq.Expressions.Expression.Expression(ExpressionType,Type)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: protected Expression (System.Linq.Expressions.ExpressionType nodeType, Type type);
    parameters:
    - id: nodeType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  id: Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Accept(ExpressionVisitor)
  nameWithType: Expression.Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.Expression.Accept(ExpressionVisitor)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: protected virtual System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Linq.Expressions.ExpressionVisitor
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Add(Expression,Expression)
  nameWithType: Expression.Add(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Add(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Add*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Add(Expression,Expression,MethodInfo)
  nameWithType: Expression.Add(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Add(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Add*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AddAssign(Expression,Expression)
  nameWithType: Expression.AddAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AddAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AddAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AddAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.AddAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AddAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AddAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.AddAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AddAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AddAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AddAssignChecked(Expression,Expression)
  nameWithType: Expression.AddAssignChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AddAssignChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AddAssignChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.AddAssignChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AddAssignChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AddAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.AddAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AddAssignChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AddChecked(Expression,Expression)
  nameWithType: Expression.AddChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AddChecked(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AddChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AddChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.AddChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddChecked(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AddChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: And(Expression,Expression)
  nameWithType: Expression.And(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.And(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.And*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: And(Expression,Expression,MethodInfo)
  nameWithType: Expression.And(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.And(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.And*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AndAlso(Expression,Expression)
  nameWithType: Expression.AndAlso(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AndAlso(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AndAlso*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AndAlso(Expression,Expression,MethodInfo)
  nameWithType: Expression.AndAlso(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AndAlso(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AndAlso*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AndAssign(Expression,Expression)
  nameWithType: Expression.AndAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AndAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AndAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AndAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.AndAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AndAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AndAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: AndAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.AndAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AndAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.AndAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ArrayAccess(Expression,IEnumerable<Expression>)
  nameWithType: Expression.ArrayAccess(Expression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ArrayAccess(Expression,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> indexes);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexes
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ArrayAccess*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  id: ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ArrayAccess(Expression,Expression[])
  nameWithType: Expression.ArrayAccess(Expression,Expression[])
  fullName: System.Linq.Expressions.Expression.ArrayAccess(Expression,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, System.Linq.Expressions.Expression[] indexes);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexes
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ArrayAccess*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ArrayIndex(Expression,IEnumerable<Expression>)
  nameWithType: Expression.ArrayIndex(Expression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ArrayIndex(Expression,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> indexes);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexes
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ArrayIndex*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ArrayIndex(Expression,Expression)
  nameWithType: Expression.ArrayIndex(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ArrayIndex(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Linq.Expressions.Expression index);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: index
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ArrayIndex*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  id: ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ArrayIndex(Expression,Expression[])
  nameWithType: Expression.ArrayIndex(Expression,Expression[])
  fullName: System.Linq.Expressions.Expression.ArrayIndex(Expression,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Linq.Expressions.Expression[] indexes);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexes
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ArrayIndex*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  id: ArrayLength(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ArrayLength(Expression)
  nameWithType: Expression.ArrayLength(Expression)
  fullName: System.Linq.Expressions.Expression.ArrayLength(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression ArrayLength (System.Linq.Expressions.Expression array);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Assign(Expression,Expression)
  nameWithType: Expression.Assign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Assign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Assign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  id: Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Bind(MemberInfo,Expression)
  nameWithType: Expression.Bind(MemberInfo,Expression)
  fullName: System.Linq.Expressions.Expression.Bind(MemberInfo,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MemberInfo member, System.Linq.Expressions.Expression expression);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberAssignment
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Bind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  id: Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Bind(MethodInfo,Expression)
  nameWithType: Expression.Bind(MethodInfo,Expression)
  fullName: System.Linq.Expressions.Expression.Bind(MethodInfo,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MethodInfo propertyAccessor, System.Linq.Expressions.Expression expression);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberAssignment
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Bind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(IEnumerable<Expression>)
  nameWithType: Expression.Block(IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> expressions);
    parameters:
    - id: expressions
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  id: Block(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(Expression[])
  nameWithType: Expression.Block(Expression[])
  fullName: System.Linq.Expressions.Expression.Block(Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression[] expressions);
    parameters:
    - id: expressions
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  nameWithType: Expression.Block(IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> expressions);
    parameters:
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    - id: expressions
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  id: Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(IEnumerable<ParameterExpression>,Expression[])
  nameWithType: Expression.Block(IEnumerable<ParameterExpression>,Expression[])
  fullName: System.Linq.Expressions.Expression.Block(IEnumerable<ParameterExpression>,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables, System.Linq.Expressions.Expression[] expressions);
    parameters:
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    - id: expressions
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(Expression,Expression)
  nameWithType: Expression.Block(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Block(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(Type,IEnumerable<Expression>)
  nameWithType: Expression.Block(Type,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(Type,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> expressions);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: expressions
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  id: Block(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(Type,Expression[])
  nameWithType: Expression.Block(Type,Expression[])
  fullName: System.Linq.Expressions.Expression.Block(Type,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (Type type, System.Linq.Expressions.Expression[] expressions);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: expressions
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(Expression,Expression,Expression)
  nameWithType: Expression.Block(Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Block(Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(Type,IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  nameWithType: Expression.Block(Type,IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(Type,IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> expressions);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    - id: expressions
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  id: Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(Type,IEnumerable<ParameterExpression>,Expression[])
  nameWithType: Expression.Block(Type,IEnumerable<ParameterExpression>,Expression[])
  fullName: System.Linq.Expressions.Expression.Block(Type,IEnumerable<ParameterExpression>,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables, System.Linq.Expressions.Expression[] expressions);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    - id: expressions
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(Expression,Expression,Expression,Expression)
  nameWithType: Expression.Block(Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Block(Expression,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Block(Expression,Expression,Expression,Expression,Expression)
  nameWithType: Expression.Block(Expression,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Block(Expression,Expression,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);
    parameters:
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg4
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Block*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  id: Break(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Break(LabelTarget)
  nameWithType: Expression.Break(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Break(LabelTarget)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Break*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  id: Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Break(LabelTarget,Expression)
  nameWithType: Expression.Break(LabelTarget,Expression)
  fullName: System.Linq.Expressions.Expression.Break(LabelTarget,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Break*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  id: Break(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Break(LabelTarget,Type)
  nameWithType: Expression.Break(LabelTarget,Type)
  fullName: System.Linq.Expressions.Expression.Break(LabelTarget,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Break*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  id: Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Break(LabelTarget,Expression,Type)
  nameWithType: Expression.Break(LabelTarget,Expression,Type)
  fullName: System.Linq.Expressions.Expression.Break(LabelTarget,Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Break*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(Expression,MethodInfo)
  nameWithType: Expression.Call(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(MethodInfo,IEnumerable<Expression>)
  nameWithType: Expression.Call(MethodInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(MethodInfo,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(MethodInfo,Expression[])
  nameWithType: Expression.Call(MethodInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(Expression,MethodInfo,IEnumerable<Expression>)
  nameWithType: Expression.Call(Expression,MethodInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(Expression,MethodInfo,Expression[])
  nameWithType: Expression.Call(Expression,MethodInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(MethodInfo,Expression,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(Expression,MethodInfo,Expression,Expression)
  nameWithType: Expression.Call(Expression,MethodInfo,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  id: Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(Expression,String,Type[],Expression[])
  nameWithType: Expression.Call(Expression,String,Type[],Expression[])
  fullName: System.Linq.Expressions.Expression.Call(Expression,String,Type[],Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, string methodName, Type[] typeArguments, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: methodName
      type: System.String
      description: Parameter description to be filled
    - id: typeArguments
      type: System.Type[]
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(MethodInfo,Expression,Expression,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  id: Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(Type,String,Type[],Expression[])
  nameWithType: Expression.Call(Type,String,Type[],Expression[])
  fullName: System.Linq.Expressions.Expression.Call(Type,String,Type[],Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (Type type, string methodName, Type[] typeArguments, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: methodName
      type: System.String
      description: Parameter description to be filled
    - id: typeArguments
      type: System.Type[]
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(Expression,MethodInfo,Expression,Expression,Expression)
  nameWithType: Expression.Call(Expression,MethodInfo,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(MethodInfo,Expression,Expression,Expression,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Call(MethodInfo,Expression,Expression,Expression,Expression,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression,Expression,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg4
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Call*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.CanReduce
  id: CanReduce
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: CanReduce
  nameWithType: Expression.CanReduce
  fullName: System.Linq.Expressions.Expression.CanReduce
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public virtual bool CanReduce { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  id: Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Catch(ParameterExpression,Expression)
  nameWithType: Expression.Catch(ParameterExpression,Expression)
  fullName: System.Linq.Expressions.Expression.Catch(ParameterExpression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body);
    parameters:
    - id: variable
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Catch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  id: Catch(System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Catch(Type,Expression)
  nameWithType: Expression.Catch(Type,Expression)
  fullName: System.Linq.Expressions.Expression.Catch(Type,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Catch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Catch(ParameterExpression,Expression,Expression)
  nameWithType: Expression.Catch(ParameterExpression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Catch(ParameterExpression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);
    parameters:
    - id: variable
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: filter
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Catch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Catch(Type,Expression,Expression)
  nameWithType: Expression.Catch(Type,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Catch(Type,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: filter
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Catch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  id: ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ClearDebugInfo(SymbolDocumentInfo)
  nameWithType: Expression.ClearDebugInfo(SymbolDocumentInfo)
  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(SymbolDocumentInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DebugInfoExpression ClearDebugInfo (System.Linq.Expressions.SymbolDocumentInfo document);
    parameters:
    - id: document
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DebugInfoExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Coalesce(Expression,Expression)
  nameWithType: Expression.Coalesce(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Coalesce(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Coalesce*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  id: Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Coalesce(Expression,Expression,LambdaExpression)
  nameWithType: Expression.Coalesce(Expression,Expression,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.Coalesce(Expression,Expression,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Coalesce*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Condition(Expression,Expression,Expression)
  nameWithType: Expression.Condition(Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Condition(Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);
    parameters:
    - id: test
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifTrue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifFalse
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConditionalExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Condition*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  id: Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Condition(Expression,Expression,Expression,Type)
  nameWithType: Expression.Condition(Expression,Expression,Expression,Type)
  fullName: System.Linq.Expressions.Expression.Condition(Expression,Expression,Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse, Type type);
    parameters:
    - id: test
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifTrue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifFalse
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConditionalExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Condition*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Constant(System.Object)
  id: Constant(System.Object)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Constant(Object)
  nameWithType: Expression.Constant(Object)
  fullName: System.Linq.Expressions.Expression.Constant(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConstantExpression Constant (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConstantExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Constant*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  id: Constant(System.Object,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Constant(Object,Type)
  nameWithType: Expression.Constant(Object,Type)
  fullName: System.Linq.Expressions.Expression.Constant(Object,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConstantExpression Constant (object value, Type type);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConstantExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Constant*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  id: Continue(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Continue(LabelTarget)
  nameWithType: Expression.Continue(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Continue(LabelTarget)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Continue*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  id: Continue(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Continue(LabelTarget,Type)
  nameWithType: Expression.Continue(LabelTarget,Type)
  fullName: System.Linq.Expressions.Expression.Continue(LabelTarget,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Continue*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  id: Convert(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Convert(Expression,Type)
  nameWithType: Expression.Convert(Expression,Type)
  fullName: System.Linq.Expressions.Expression.Convert(Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Convert*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  id: Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Convert(Expression,Type,MethodInfo)
  nameWithType: Expression.Convert(Expression,Type,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Convert(Expression,Type,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Convert*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  id: ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ConvertChecked(Expression,Type)
  nameWithType: Expression.ConvertChecked(Expression,Type)
  fullName: System.Linq.Expressions.Expression.ConvertChecked(Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ConvertChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  id: ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ConvertChecked(Expression,Type,MethodInfo)
  nameWithType: Expression.ConvertChecked(Expression,Type,MethodInfo)
  fullName: System.Linq.Expressions.Expression.ConvertChecked(Expression,Type,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ConvertChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: DebugInfo(SymbolDocumentInfo,Int32,Int32,Int32,Int32)
  nameWithType: Expression.DebugInfo(SymbolDocumentInfo,Int32,Int32,Int32,Int32)
  fullName: System.Linq.Expressions.Expression.DebugInfo(SymbolDocumentInfo,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DebugInfoExpression DebugInfo (System.Linq.Expressions.SymbolDocumentInfo document, int startLine, int startColumn, int endLine, int endColumn);
    parameters:
    - id: document
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Parameter description to be filled
    - id: startLine
      type: System.Int32
      description: Parameter description to be filled
    - id: startColumn
      type: System.Int32
      description: Parameter description to be filled
    - id: endLine
      type: System.Int32
      description: Parameter description to be filled
    - id: endColumn
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DebugInfoExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  id: Decrement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Decrement(Expression)
  nameWithType: Expression.Decrement(Expression)
  fullName: System.Linq.Expressions.Expression.Decrement(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Decrement*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Decrement(Expression,MethodInfo)
  nameWithType: Expression.Decrement(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Decrement(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Decrement*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Default(System.Type)
  id: Default(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Default(Type)
  nameWithType: Expression.Default(Type)
  fullName: System.Linq.Expressions.Expression.Default(Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DefaultExpression Default (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DefaultExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Divide(Expression,Expression)
  nameWithType: Expression.Divide(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Divide(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Divide*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Divide(Expression,Expression,MethodInfo)
  nameWithType: Expression.Divide(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Divide(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Divide*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: DivideAssign(Expression,Expression)
  nameWithType: Expression.DivideAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.DivideAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.DivideAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: DivideAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.DivideAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.DivideAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.DivideAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: DivideAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.DivideAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.DivideAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.DivideAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder,Type,IEnumerable<Expression>)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder,Type,Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder,Type,Expression[])
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression[])
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder,Type,Expression,Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder,Type,Expression,Expression,Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder,Type,Expression,Expression,Expression,Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ElementInit(MethodInfo,IEnumerable<Expression>)
  nameWithType: Expression.ElementInit(MethodInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ElementInit(MethodInfo,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: addMethod
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ElementInit
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ElementInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  id: ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ElementInit(MethodInfo,Expression[])
  nameWithType: Expression.ElementInit(MethodInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.ElementInit(MethodInfo,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: addMethod
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ElementInit
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ElementInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Empty
  id: Empty
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Empty()
  nameWithType: Expression.Empty()
  fullName: System.Linq.Expressions.Expression.Empty()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DefaultExpression Empty ();
    parameters: []
    return:
      type: System.Linq.Expressions.DefaultExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Equal(Expression,Expression)
  nameWithType: Expression.Equal(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Equal(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Equal*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Equal(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.Equal(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Equal(Expression,Expression,Boolean,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Equal*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ExclusiveOr(Expression,Expression)
  nameWithType: Expression.ExclusiveOr(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOr*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ExclusiveOr(Expression,Expression,MethodInfo)
  nameWithType: Expression.ExclusiveOr(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOr*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ExclusiveOrAssign(Expression,Expression)
  nameWithType: Expression.ExclusiveOrAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOrAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ExclusiveOrAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.ExclusiveOrAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOrAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ExclusiveOrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.ExclusiveOrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOrAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  id: Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Field(Expression,FieldInfo)
  nameWithType: Expression.Field(Expression,FieldInfo)
  fullName: System.Linq.Expressions.Expression.Field(Expression,FieldInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, System.Reflection.FieldInfo field);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: field
      type: System.Reflection.FieldInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Field*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  id: Field(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Field(Expression,String)
  nameWithType: Expression.Field(Expression,String)
  fullName: System.Linq.Expressions.Expression.Field(Expression,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, string fieldName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: fieldName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Field*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  id: Field(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Field(Expression,Type,String)
  nameWithType: Expression.Field(Expression,Type,String)
  fullName: System.Linq.Expressions.Expression.Field(Expression,Type,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, Type type, string fieldName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: fieldName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Field*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  id: GetActionType(System.Type[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: GetActionType(Type[])
  nameWithType: Expression.GetActionType(Type[])
  fullName: System.Linq.Expressions.Expression.GetActionType(Type[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static Type GetActionType (Type[] typeArgs);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    return:
      type: System.Type
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  id: GetDelegateType(System.Type[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: GetDelegateType(Type[])
  nameWithType: Expression.GetDelegateType(Type[])
  fullName: System.Linq.Expressions.Expression.GetDelegateType(Type[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static Type GetDelegateType (Type[] typeArgs);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    return:
      type: System.Type
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  id: GetFuncType(System.Type[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: GetFuncType(Type[])
  nameWithType: Expression.GetFuncType(Type[])
  fullName: System.Linq.Expressions.Expression.GetFuncType(Type[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static Type GetFuncType (Type[] typeArgs);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    return:
      type: System.Type
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  id: Goto(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Goto(LabelTarget)
  nameWithType: Expression.Goto(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Goto(LabelTarget)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Goto*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  id: Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Goto(LabelTarget,Expression)
  nameWithType: Expression.Goto(LabelTarget,Expression)
  fullName: System.Linq.Expressions.Expression.Goto(LabelTarget,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Goto*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  id: Goto(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Goto(LabelTarget,Type)
  nameWithType: Expression.Goto(LabelTarget,Type)
  fullName: System.Linq.Expressions.Expression.Goto(LabelTarget,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Goto*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  id: Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Goto(LabelTarget,Expression,Type)
  nameWithType: Expression.Goto(LabelTarget,Expression,Type)
  fullName: System.Linq.Expressions.Expression.Goto(LabelTarget,Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Goto*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: GreaterThan(Expression,Expression)
  nameWithType: Expression.GreaterThan(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.GreaterThan(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.GreaterThan*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: GreaterThan(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.GreaterThan(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.GreaterThan(Expression,Expression,Boolean,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.GreaterThan*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: GreaterThanOrEqual(Expression,Expression)
  nameWithType: Expression.GreaterThanOrEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.GreaterThanOrEqual*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: GreaterThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.GreaterThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.GreaterThanOrEqual*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: IfThen(Expression,Expression)
  nameWithType: Expression.IfThen(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.IfThen(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConditionalExpression IfThen (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue);
    parameters:
    - id: test
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifTrue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConditionalExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: IfThenElse(Expression,Expression,Expression)
  nameWithType: Expression.IfThenElse(Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.IfThenElse(Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConditionalExpression IfThenElse (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);
    parameters:
    - id: test
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifTrue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifFalse
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConditionalExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  id: Increment(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Increment(Expression)
  nameWithType: Expression.Increment(Expression)
  fullName: System.Linq.Expressions.Expression.Increment(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Increment*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Increment(Expression,MethodInfo)
  nameWithType: Expression.Increment(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Increment(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Increment*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Invoke(Expression,IEnumerable<Expression>)
  nameWithType: Expression.Invoke(Expression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Invoke(Expression,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.InvocationExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Invoke*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  id: Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Invoke(Expression,Expression[])
  nameWithType: Expression.Invoke(Expression,Expression[])
  fullName: System.Linq.Expressions.Expression.Invoke(Expression,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.InvocationExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Invoke*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  id: IsFalse(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: IsFalse(Expression)
  nameWithType: Expression.IsFalse(Expression)
  fullName: System.Linq.Expressions.Expression.IsFalse(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.IsFalse*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: IsFalse(Expression,MethodInfo)
  nameWithType: Expression.IsFalse(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.IsFalse(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.IsFalse*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  id: IsTrue(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: IsTrue(Expression)
  nameWithType: Expression.IsTrue(Expression)
  fullName: System.Linq.Expressions.Expression.IsTrue(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.IsTrue*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: IsTrue(Expression,MethodInfo)
  nameWithType: Expression.IsTrue(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.IsTrue(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.IsTrue*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Label
  id: Label
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Label()
  nameWithType: Expression.Label()
  fullName: System.Linq.Expressions.Expression.Label()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelTarget Label ();
    parameters: []
    return:
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Label*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  id: Label(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Label(LabelTarget)
  nameWithType: Expression.Label(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Label(LabelTarget)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Label*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Label(System.String)
  id: Label(System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Label(String)
  nameWithType: Expression.Label(String)
  fullName: System.Linq.Expressions.Expression.Label(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelTarget Label (string name);
    parameters:
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Label*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Label(System.Type)
  id: Label(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Label(Type)
  nameWithType: Expression.Label(Type)
  fullName: System.Linq.Expressions.Expression.Label(Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelTarget Label (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Label*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  id: Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Label(LabelTarget,Expression)
  nameWithType: Expression.Label(LabelTarget,Expression)
  fullName: System.Linq.Expressions.Expression.Label(LabelTarget,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression defaultValue);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: defaultValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Label*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
  id: Label(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Label(Type,String)
  nameWithType: Expression.Label(Type,String)
  fullName: System.Linq.Expressions.Expression.Label(Type,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelTarget Label (Type type, string name);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Label*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  id: Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,ParameterExpression[])
  nameWithType: Expression.Lambda(Expression,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,ParameterExpression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  id: Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,Boolean,ParameterExpression[])
  nameWithType: Expression.Lambda(Expression,Boolean,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,Boolean,ParameterExpression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,String,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,String,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,String,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Type,Expression,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type,Expression,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Type,Expression,ParameterExpression[])
  nameWithType: Expression.Lambda(Type,Expression,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,ParameterExpression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Type,Expression,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type,Expression,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,Boolean,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Type,Expression,Boolean,ParameterExpression[])
  nameWithType: Expression.Lambda(Type,Expression,Boolean,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,Boolean,ParameterExpression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Type,Expression,String,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type,Expression,String,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,String,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Type,Expression,String,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type,Expression,String,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,String,Boolean,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression`1
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  id: Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,ParameterExpression[])
  nameWithType: Expression.Lambda(Expression,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,ParameterExpression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression`1
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression`1
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  id: Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,Boolean,ParameterExpression[])
  nameWithType: Expression.Lambda(Expression,Boolean,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,Boolean,ParameterExpression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, bool tailCall, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression`1
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,String,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,String,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,String,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression`1
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression`1
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: LeftShift(Expression,Expression)
  nameWithType: Expression.LeftShift(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.LeftShift(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.LeftShift*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: LeftShift(Expression,Expression,MethodInfo)
  nameWithType: Expression.LeftShift(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.LeftShift(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.LeftShift*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: LeftShiftAssign(Expression,Expression)
  nameWithType: Expression.LeftShiftAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.LeftShiftAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: LeftShiftAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.LeftShiftAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.LeftShiftAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: LeftShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.LeftShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.LeftShiftAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: LessThan(Expression,Expression)
  nameWithType: Expression.LessThan(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.LessThan(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.LessThan*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: LessThan(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.LessThan(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.LessThan(Expression,Expression,Boolean,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.LessThan*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: LessThanOrEqual(Expression,Expression)
  nameWithType: Expression.LessThanOrEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.LessThanOrEqual*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: LessThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.LessThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.LessThanOrEqual*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  id: ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListBind(MemberInfo,IEnumerable<ElementInit>)
  nameWithType: Expression.ListBind(MemberInfo,IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListBind(MemberInfo,IEnumerable<ElementInit>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit> initializers);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListBind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  id: ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListBind(MemberInfo,ElementInit[])
  nameWithType: Expression.ListBind(MemberInfo,ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListBind(MemberInfo,ElementInit[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, System.Linq.Expressions.ElementInit[] initializers);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.ElementInit[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListBind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  id: ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListBind(MethodInfo,IEnumerable<ElementInit>)
  nameWithType: Expression.ListBind(MethodInfo,IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListBind(MethodInfo,IEnumerable<ElementInit>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit> initializers);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListBind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  id: ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListBind(MethodInfo,ElementInit[])
  nameWithType: Expression.ListBind(MethodInfo,ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListBind(MethodInfo,ElementInit[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, System.Linq.Expressions.ElementInit[] initializers);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.ElementInit[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListBind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  id: ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListInit(NewExpression,IEnumerable<ElementInit>)
  nameWithType: Expression.ListInit(NewExpression,IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,IEnumerable<ElementInit>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit> initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListInit(NewExpression,IEnumerable<Expression>)
  nameWithType: Expression.ListInit(NewExpression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  id: ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListInit(NewExpression,ElementInit[])
  nameWithType: Expression.ListInit(NewExpression,ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,ElementInit[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Linq.Expressions.ElementInit[] initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.ElementInit[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  id: ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListInit(NewExpression,Expression[])
  nameWithType: Expression.ListInit(NewExpression,Expression[])
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Linq.Expressions.Expression[] initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListInit(NewExpression,MethodInfo,IEnumerable<Expression>)
  nameWithType: Expression.ListInit(NewExpression,MethodInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,MethodInfo,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: addMethod
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  id: ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ListInit(NewExpression,MethodInfo,Expression[])
  nameWithType: Expression.ListInit(NewExpression,MethodInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,MethodInfo,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, System.Linq.Expressions.Expression[] initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: addMethod
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  id: Loop(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Loop(Expression)
  nameWithType: Expression.Loop(Expression)
  fullName: System.Linq.Expressions.Expression.Loop(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LoopExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Loop*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  id: Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Loop(Expression,LabelTarget)
  nameWithType: Expression.Loop(Expression,LabelTarget)
  fullName: System.Linq.Expressions.Expression.Loop(Expression,LabelTarget)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: break
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LoopExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Loop*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  id: Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Loop(Expression,LabelTarget,LabelTarget)
  nameWithType: Expression.Loop(Expression,LabelTarget,LabelTarget)
  fullName: System.Linq.Expressions.Expression.Loop(Expression,LabelTarget,LabelTarget)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break, System.Linq.Expressions.LabelTarget continue);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: break
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: continue
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LoopExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Loop*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeBinary(ExpressionType,Expression,Expression)
  nameWithType: Expression.MakeBinary(ExpressionType,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeBinary(ExpressionType,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: binaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeBinary*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: binaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeBinary*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo,LambdaExpression)
  nameWithType: Expression.MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: binaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeBinary*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeCatchBlock(Type,ParameterExpression,Expression,Expression)
  nameWithType: Expression.MakeCatchBlock(Type,ParameterExpression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(Type,ParameterExpression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock MakeCatchBlock (Type type, System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: variable
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: filter
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeDynamic(Type,CallSiteBinder,IEnumerable<Expression>)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeDynamic(Type,CallSiteBinder,Expression)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeDynamic(Type,CallSiteBinder,Expression[])
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression[])
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeDynamic(Type,CallSiteBinder,Expression,Expression)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression,Expression)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  id: MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeGoto(GotoExpressionKind,LabelTarget,Expression,Type)
  nameWithType: Expression.MakeGoto(GotoExpressionKind,LabelTarget,Expression,Type)
  fullName: System.Linq.Expressions.Expression.MakeGoto(GotoExpressionKind,LabelTarget,Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression MakeGoto (System.Linq.Expressions.GotoExpressionKind kind, System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: kind
      type: System.Linq.Expressions.GotoExpressionKind
      description: Parameter description to be filled
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeIndex(Expression,PropertyInfo,IEnumerable<Expression>)
  nameWithType: Expression.MakeIndex(Expression,PropertyInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.MakeIndex(Expression,PropertyInfo,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression MakeIndex (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexer
      type: System.Reflection.PropertyInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  id: MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeMemberAccess(Expression,MemberInfo)
  nameWithType: Expression.MakeMemberAccess(Expression,MemberInfo)
  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(Expression,MemberInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression MakeMemberAccess (System.Linq.Expressions.Expression expression, System.Reflection.MemberInfo member);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  id: MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeTry(Type,Expression,Expression,Expression,IEnumerable<CatchBlock>)
  nameWithType: Expression.MakeTry(Type,Expression,Expression,Expression,IEnumerable<CatchBlock>)
  fullName: System.Linq.Expressions.Expression.MakeTry(Type,Expression,Expression,Expression,IEnumerable<CatchBlock>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression MakeTry (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, System.Linq.Expressions.Expression fault, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock> handlers);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: finally
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: fault
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: handlers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  id: MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeUnary(ExpressionType,Expression,Type)
  nameWithType: Expression.MakeUnary(ExpressionType,Expression,Type)
  fullName: System.Linq.Expressions.Expression.MakeUnary(ExpressionType,Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type);
    parameters:
    - id: unaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: operand
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeUnary*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  id: MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MakeUnary(ExpressionType,Expression,Type,MethodInfo)
  nameWithType: Expression.MakeUnary(ExpressionType,Expression,Type,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MakeUnary(ExpressionType,Expression,Type,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type, System.Reflection.MethodInfo method);
    parameters:
    - id: unaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: operand
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MakeUnary*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  id: MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MemberBind(MemberInfo,IEnumerable<MemberBinding>)
  nameWithType: Expression.MemberBind(MemberInfo,IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberBind(MemberInfo,IEnumerable<MemberBinding>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding> bindings);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: bindings
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MemberBind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  id: MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MemberBind(MemberInfo,MemberBinding[])
  nameWithType: Expression.MemberBind(MemberInfo,MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberBind(MemberInfo,MemberBinding[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, System.Linq.Expressions.MemberBinding[] bindings);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: bindings
      type: System.Linq.Expressions.MemberBinding[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MemberBind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  id: MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MemberBind(MethodInfo,IEnumerable<MemberBinding>)
  nameWithType: Expression.MemberBind(MethodInfo,IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberBind(MethodInfo,IEnumerable<MemberBinding>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding> bindings);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: bindings
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MemberBind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  id: MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MemberBind(MethodInfo,MemberBinding[])
  nameWithType: Expression.MemberBind(MethodInfo,MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberBind(MethodInfo,MemberBinding[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, System.Linq.Expressions.MemberBinding[] bindings);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: bindings
      type: System.Linq.Expressions.MemberBinding[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MemberBind*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  id: MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MemberInit(NewExpression,IEnumerable<MemberBinding>)
  nameWithType: Expression.MemberInit(NewExpression,IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberInit(NewExpression,IEnumerable<MemberBinding>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding> bindings);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: bindings
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberInitExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MemberInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  id: MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MemberInit(NewExpression,MemberBinding[])
  nameWithType: Expression.MemberInit(NewExpression,MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberInit(NewExpression,MemberBinding[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, System.Linq.Expressions.MemberBinding[] bindings);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: bindings
      type: System.Linq.Expressions.MemberBinding[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberInitExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MemberInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Modulo(Expression,Expression)
  nameWithType: Expression.Modulo(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Modulo(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Modulo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Modulo(Expression,Expression,MethodInfo)
  nameWithType: Expression.Modulo(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Modulo(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Modulo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ModuloAssign(Expression,Expression)
  nameWithType: Expression.ModuloAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ModuloAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ModuloAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.ModuloAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ModuloAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ModuloAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.ModuloAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.ModuloAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Multiply(Expression,Expression)
  nameWithType: Expression.Multiply(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Multiply(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Multiply*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Multiply(Expression,Expression,MethodInfo)
  nameWithType: Expression.Multiply(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Multiply(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Multiply*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MultiplyAssign(Expression,Expression)
  nameWithType: Expression.MultiplyAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MultiplyAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.MultiplyAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MultiplyAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.MultiplyAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MultiplyAssignChecked(Expression,Expression)
  nameWithType: Expression.MultiplyAssignChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssignChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MultiplyAssignChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.MultiplyAssignChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssignChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MultiplyAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.MultiplyAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssignChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MultiplyChecked(Expression,Expression)
  nameWithType: Expression.MultiplyChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: MultiplyChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.MultiplyChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  id: Negate(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Negate(Expression)
  nameWithType: Expression.Negate(Expression)
  fullName: System.Linq.Expressions.Expression.Negate(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Negate*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Negate(Expression,MethodInfo)
  nameWithType: Expression.Negate(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Negate(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Negate*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  id: NegateChecked(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: NegateChecked(Expression)
  nameWithType: Expression.NegateChecked(Expression)
  fullName: System.Linq.Expressions.Expression.NegateChecked(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.NegateChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: NegateChecked(Expression,MethodInfo)
  nameWithType: Expression.NegateChecked(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.NegateChecked(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.NegateChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  id: New(System.Reflection.ConstructorInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: New(ConstructorInfo)
  nameWithType: Expression.New(ConstructorInfo)
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.New*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.New(System.Type)
  id: New(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: New(Type)
  nameWithType: Expression.New(Type)
  fullName: System.Linq.Expressions.Expression.New(Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.New*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: New(ConstructorInfo,IEnumerable<Expression>)
  nameWithType: Expression.New(ConstructorInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.New*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  id: New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: New(ConstructorInfo,Expression[])
  nameWithType: Expression.New(ConstructorInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.New*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  id: New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: New(ConstructorInfo,IEnumerable<Expression>,IEnumerable<MemberInfo>)
  nameWithType: Expression.New(ConstructorInfo,IEnumerable<Expression>,IEnumerable<MemberInfo>)
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo,IEnumerable<Expression>,IEnumerable<MemberInfo>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo> members);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    - id: members
      type: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.New*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  id: New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: New(ConstructorInfo,IEnumerable<Expression>,MemberInfo[])
  nameWithType: Expression.New(ConstructorInfo,IEnumerable<Expression>,MemberInfo[])
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo,IEnumerable<Expression>,MemberInfo[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments, System.Reflection.MemberInfo[] members);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    - id: members
      type: System.Reflection.MemberInfo[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.New*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: NewArrayBounds(Type,IEnumerable<Expression>)
  nameWithType: Expression.NewArrayBounds(Type,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(Type,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> bounds);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: bounds
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewArrayExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.NewArrayBounds*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  id: NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: NewArrayBounds(Type,Expression[])
  nameWithType: Expression.NewArrayBounds(Type,Expression[])
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(Type,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, System.Linq.Expressions.Expression[] bounds);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: bounds
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewArrayExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.NewArrayBounds*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: NewArrayInit(Type,IEnumerable<Expression>)
  nameWithType: Expression.NewArrayInit(Type,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.NewArrayInit(Type,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> initializers);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewArrayExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.NewArrayInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  id: NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: NewArrayInit(Type,Expression[])
  nameWithType: Expression.NewArrayInit(Type,Expression[])
  fullName: System.Linq.Expressions.Expression.NewArrayInit(Type,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, System.Linq.Expressions.Expression[] initializers);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewArrayExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.NewArrayInit*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.NodeType
  id: NodeType
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: NodeType
  nameWithType: Expression.NodeType
  fullName: System.Linq.Expressions.Expression.NodeType
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public virtual System.Linq.Expressions.ExpressionType NodeType { get; }
    return:
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  id: Not(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Not(Expression)
  nameWithType: Expression.Not(Expression)
  fullName: System.Linq.Expressions.Expression.Not(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Not*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Not(Expression,MethodInfo)
  nameWithType: Expression.Not(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Not(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Not*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: NotEqual(Expression,Expression)
  nameWithType: Expression.NotEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.NotEqual(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.NotEqual*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: NotEqual(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.NotEqual(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.NotEqual(Expression,Expression,Boolean,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.NotEqual*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  id: OnesComplement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: OnesComplement(Expression)
  nameWithType: Expression.OnesComplement(Expression)
  fullName: System.Linq.Expressions.Expression.OnesComplement(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.OnesComplement*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: OnesComplement(Expression,MethodInfo)
  nameWithType: Expression.OnesComplement(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.OnesComplement(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.OnesComplement*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Or(Expression,Expression)
  nameWithType: Expression.Or(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Or(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Or*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Or(Expression,Expression,MethodInfo)
  nameWithType: Expression.Or(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Or(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Or*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: OrAssign(Expression,Expression)
  nameWithType: Expression.OrAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.OrAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.OrAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: OrAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.OrAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.OrAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.OrAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: OrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.OrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.OrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.OrAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: OrElse(Expression,Expression)
  nameWithType: Expression.OrElse(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.OrElse(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.OrElse*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: OrElse(Expression,Expression,MethodInfo)
  nameWithType: Expression.OrElse(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.OrElse(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.OrElse*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Parameter(System.Type)
  id: Parameter(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Parameter(Type)
  nameWithType: Expression.Parameter(Type)
  fullName: System.Linq.Expressions.Expression.Parameter(Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ParameterExpression Parameter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Parameter*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  id: Parameter(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Parameter(Type,String)
  nameWithType: Expression.Parameter(Type,String)
  fullName: System.Linq.Expressions.Expression.Parameter(Type,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ParameterExpression Parameter (Type type, string name);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Parameter*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  id: PostDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PostDecrementAssign(Expression)
  nameWithType: Expression.PostDecrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PostDecrementAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PostDecrementAssign(Expression,MethodInfo)
  nameWithType: Expression.PostDecrementAssign(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PostDecrementAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  id: PostIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PostIncrementAssign(Expression)
  nameWithType: Expression.PostIncrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PostIncrementAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PostIncrementAssign(Expression,MethodInfo)
  nameWithType: Expression.PostIncrementAssign(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PostIncrementAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Power(Expression,Expression)
  nameWithType: Expression.Power(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Power(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Power*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Power(Expression,Expression,MethodInfo)
  nameWithType: Expression.Power(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Power(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Power*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PowerAssign(Expression,Expression)
  nameWithType: Expression.PowerAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.PowerAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PowerAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PowerAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.PowerAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PowerAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PowerAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PowerAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.PowerAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.PowerAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PowerAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  id: PreDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PreDecrementAssign(Expression)
  nameWithType: Expression.PreDecrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PreDecrementAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PreDecrementAssign(Expression,MethodInfo)
  nameWithType: Expression.PreDecrementAssign(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PreDecrementAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  id: PreIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PreIncrementAssign(Expression)
  nameWithType: Expression.PreIncrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PreIncrementAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PreIncrementAssign(Expression,MethodInfo)
  nameWithType: Expression.PreIncrementAssign(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.PreIncrementAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Property(Expression,MethodInfo)
  nameWithType: Expression.Property(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Property(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo propertyAccessor);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  id: Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Property(Expression,PropertyInfo)
  nameWithType: Expression.Property(Expression,PropertyInfo)
  fullName: System.Linq.Expressions.Expression.Property(Expression,PropertyInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.PropertyInfo property);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: property
      type: System.Reflection.PropertyInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  id: Property(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Property(Expression,String)
  nameWithType: Expression.Property(Expression,String)
  fullName: System.Linq.Expressions.Expression.Property(Expression,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, string propertyName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: propertyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Property(Expression,PropertyInfo,IEnumerable<Expression>)
  nameWithType: Expression.Property(Expression,PropertyInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Property(Expression,PropertyInfo,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexer
      type: System.Reflection.PropertyInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  id: Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Property(Expression,PropertyInfo,Expression[])
  nameWithType: Expression.Property(Expression,PropertyInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.Property(Expression,PropertyInfo,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexer
      type: System.Reflection.PropertyInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  id: Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Property(Expression,String,Expression[])
  nameWithType: Expression.Property(Expression,String,Expression[])
  fullName: System.Linq.Expressions.Expression.Property(Expression,String,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, string propertyName, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: propertyName
      type: System.String
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  id: Property(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Property(Expression,Type,String)
  nameWithType: Expression.Property(Expression,Type,String)
  fullName: System.Linq.Expressions.Expression.Property(Expression,Type,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, Type type, string propertyName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: propertyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  id: PropertyOrField(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: PropertyOrField(Expression,String)
  nameWithType: Expression.PropertyOrField(Expression,String)
  fullName: System.Linq.Expressions.Expression.PropertyOrField(Expression,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression PropertyOrField (System.Linq.Expressions.Expression expression, string propertyOrFieldName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: propertyOrFieldName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  id: Quote(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Quote(Expression)
  nameWithType: Expression.Quote(Expression)
  fullName: System.Linq.Expressions.Expression.Quote(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Quote (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Reduce
  id: Reduce
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Reduce()
  nameWithType: Expression.Reduce()
  fullName: System.Linq.Expressions.Expression.Reduce()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public virtual System.Linq.Expressions.Expression Reduce ();
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ReduceAndCheck
  id: ReduceAndCheck
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ReduceAndCheck()
  nameWithType: Expression.ReduceAndCheck()
  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public System.Linq.Expressions.Expression ReduceAndCheck ();
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ReduceExtensions
  id: ReduceExtensions
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ReduceExtensions()
  nameWithType: Expression.ReduceExtensions()
  fullName: System.Linq.Expressions.Expression.ReduceExtensions()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public System.Linq.Expressions.Expression ReduceExtensions ();
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ReferenceEqual(Expression,Expression)
  nameWithType: Expression.ReferenceEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ReferenceEqual(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ReferenceEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ReferenceNotEqual(Expression,Expression)
  nameWithType: Expression.ReferenceNotEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ReferenceNotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Rethrow
  id: Rethrow
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Rethrow()
  nameWithType: Expression.Rethrow()
  fullName: System.Linq.Expressions.Expression.Rethrow()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Rethrow ();
    parameters: []
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Rethrow*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
  id: Rethrow(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Rethrow(Type)
  nameWithType: Expression.Rethrow(Type)
  fullName: System.Linq.Expressions.Expression.Rethrow(Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Rethrow (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Rethrow*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  id: Return(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Return(LabelTarget)
  nameWithType: Expression.Return(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Return(LabelTarget)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Return*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  id: Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Return(LabelTarget,Expression)
  nameWithType: Expression.Return(LabelTarget,Expression)
  fullName: System.Linq.Expressions.Expression.Return(LabelTarget,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Return*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  id: Return(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Return(LabelTarget,Type)
  nameWithType: Expression.Return(LabelTarget,Type)
  fullName: System.Linq.Expressions.Expression.Return(LabelTarget,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Return*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  id: Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Return(LabelTarget,Expression,Type)
  nameWithType: Expression.Return(LabelTarget,Expression,Type)
  fullName: System.Linq.Expressions.Expression.Return(LabelTarget,Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Return*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: RightShift(Expression,Expression)
  nameWithType: Expression.RightShift(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.RightShift(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.RightShift*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: RightShift(Expression,Expression,MethodInfo)
  nameWithType: Expression.RightShift(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.RightShift(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.RightShift*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: RightShiftAssign(Expression,Expression)
  nameWithType: Expression.RightShiftAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.RightShiftAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: RightShiftAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.RightShiftAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.RightShiftAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: RightShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.RightShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.RightShiftAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: RuntimeVariables(IEnumerable<ParameterExpression>)
  nameWithType: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(IEnumerable<ParameterExpression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables);
    parameters:
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.RuntimeVariablesExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.RuntimeVariables*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  id: RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: RuntimeVariables(ParameterExpression[])
  nameWithType: Expression.RuntimeVariables(ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(ParameterExpression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (System.Linq.Expressions.ParameterExpression[] variables);
    parameters:
    - id: variables
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.RuntimeVariablesExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.RuntimeVariables*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Subtract(Expression,Expression)
  nameWithType: Expression.Subtract(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Subtract(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Subtract*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Subtract(Expression,Expression,MethodInfo)
  nameWithType: Expression.Subtract(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Subtract(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Subtract*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SubtractAssign(Expression,Expression)
  nameWithType: Expression.SubtractAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SubtractAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.SubtractAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SubtractAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.SubtractAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssign*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SubtractAssignChecked(Expression,Expression)
  nameWithType: Expression.SubtractAssignChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssignChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SubtractAssignChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.SubtractAssignChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssignChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SubtractAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.SubtractAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssignChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SubtractChecked(Expression,Expression)
  nameWithType: Expression.SubtractChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.SubtractChecked(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SubtractChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SubtractChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.SubtractChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractChecked(Expression,Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SubtractChecked*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  id: Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Switch(Expression,SwitchCase[])
  nameWithType: Expression.Switch(Expression,SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(Expression,SwitchCase[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.SwitchCase[] cases);
    parameters:
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: cases
      type: System.Linq.Expressions.SwitchCase[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  id: Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Switch(Expression,Expression,SwitchCase[])
  nameWithType: Expression.Switch(Expression,Expression,SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(Expression,Expression,SwitchCase[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Linq.Expressions.SwitchCase[] cases);
    parameters:
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: cases
      type: System.Linq.Expressions.SwitchCase[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  id: Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Switch(Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  nameWithType: Expression.Switch(Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  fullName: System.Linq.Expressions.Expression.Switch(Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase> cases);
    parameters:
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: comparison
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: cases
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  id: Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Switch(Expression,Expression,MethodInfo,SwitchCase[])
  nameWithType: Expression.Switch(Expression,Expression,MethodInfo,SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(Expression,Expression,MethodInfo,SwitchCase[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Linq.Expressions.SwitchCase[] cases);
    parameters:
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: comparison
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: cases
      type: System.Linq.Expressions.SwitchCase[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  id: Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Switch(Type,Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  nameWithType: Expression.Switch(Type,Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  fullName: System.Linq.Expressions.Expression.Switch(Type,Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase> cases);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: comparison
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: cases
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  id: Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Switch(Type,Expression,Expression,MethodInfo,SwitchCase[])
  nameWithType: Expression.Switch(Type,Expression,Expression,MethodInfo,SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(Type,Expression,Expression,MethodInfo,SwitchCase[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Linq.Expressions.SwitchCase[] cases);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: comparison
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: cases
      type: System.Linq.Expressions.SwitchCase[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SwitchCase(Expression,IEnumerable<Expression>)
  nameWithType: Expression.SwitchCase(Expression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.SwitchCase(Expression,IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> testValues);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: testValues
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchCase
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SwitchCase*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  id: SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SwitchCase(Expression,Expression[])
  nameWithType: Expression.SwitchCase(Expression,Expression[])
  fullName: System.Linq.Expressions.Expression.SwitchCase(Expression,Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression[] testValues);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: testValues
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchCase
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SwitchCase*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  id: SymbolDocument(System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SymbolDocument(String)
  nameWithType: Expression.SymbolDocument(String)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SymbolDocument*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  id: SymbolDocument(System.String,System.Guid)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SymbolDocument(String,Guid)
  nameWithType: Expression.SymbolDocument(String,Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(String,Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language);
    parameters:
    - id: fileName
      type: System.String
      description: Parameter description to be filled
    - id: language
      type: System.Guid
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SymbolDocument*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  id: SymbolDocument(System.String,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SymbolDocument(String,Guid,Guid)
  nameWithType: Expression.SymbolDocument(String,Guid,Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(String,Guid,Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor);
    parameters:
    - id: fileName
      type: System.String
      description: Parameter description to be filled
    - id: language
      type: System.Guid
      description: Parameter description to be filled
    - id: languageVendor
      type: System.Guid
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SymbolDocument*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: SymbolDocument(String,Guid,Guid,Guid)
  nameWithType: Expression.SymbolDocument(String,Guid,Guid,Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: fileName
      type: System.String
      description: Parameter description to be filled
    - id: language
      type: System.Guid
      description: Parameter description to be filled
    - id: languageVendor
      type: System.Guid
      description: Parameter description to be filled
    - id: documentType
      type: System.Guid
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.SymbolDocument*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  id: Throw(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Throw(Expression)
  nameWithType: Expression.Throw(Expression)
  fullName: System.Linq.Expressions.Expression.Throw(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value);
    parameters:
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Throw*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  id: Throw(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Throw(Expression,Type)
  nameWithType: Expression.Throw(Expression,Type)
  fullName: System.Linq.Expressions.Expression.Throw(Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Throw*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.ToString
  id: ToString
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: ToString()
  nameWithType: Expression.ToString()
  fullName: System.Linq.Expressions.Expression.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  id: TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: TryCatch(Expression,CatchBlock[])
  nameWithType: Expression.TryCatch(Expression,CatchBlock[])
  fullName: System.Linq.Expressions.Expression.TryCatch(Expression,CatchBlock[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression TryCatch (System.Linq.Expressions.Expression body, System.Linq.Expressions.CatchBlock[] handlers);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: handlers
      type: System.Linq.Expressions.CatchBlock[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  id: TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: TryCatchFinally(Expression,Expression,CatchBlock[])
  nameWithType: Expression.TryCatchFinally(Expression,Expression,CatchBlock[])
  fullName: System.Linq.Expressions.Expression.TryCatchFinally(Expression,Expression,CatchBlock[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression TryCatchFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, System.Linq.Expressions.CatchBlock[] handlers);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: finally
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: handlers
      type: System.Linq.Expressions.CatchBlock[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: TryFault(Expression,Expression)
  nameWithType: Expression.TryFault(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.TryFault(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression TryFault (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression fault);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: fault
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: TryFinally(Expression,Expression)
  nameWithType: Expression.TryFinally(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.TryFinally(Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression TryFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: finally
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  id: TryGetActionType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: TryGetActionType(Type[],Type)
  nameWithType: Expression.TryGetActionType(Type[],Type)
  fullName: System.Linq.Expressions.Expression.TryGetActionType(Type[],Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static bool TryGetActionType (Type[] typeArgs, out Type actionType);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    - id: actionType
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  id: TryGetFuncType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: TryGetFuncType(Type[],Type)
  nameWithType: Expression.TryGetFuncType(Type[],Type)
  fullName: System.Linq.Expressions.Expression.TryGetFuncType(Type[],Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static bool TryGetFuncType (Type[] typeArgs, out Type funcType);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    - id: funcType
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Type
  id: Type
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Type
  nameWithType: Expression.Type
  fullName: System.Linq.Expressions.Expression.Type
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public virtual Type Type { get; }
    return:
      type: System.Type
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  id: TypeAs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: TypeAs(Expression,Type)
  nameWithType: Expression.TypeAs(Expression,Type)
  fullName: System.Linq.Expressions.Expression.TypeAs(Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression TypeAs (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  id: TypeEqual(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: TypeEqual(Expression,Type)
  nameWithType: Expression.TypeEqual(Expression,Type)
  fullName: System.Linq.Expressions.Expression.TypeEqual(Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TypeBinaryExpression TypeEqual (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TypeBinaryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  id: TypeIs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: TypeIs(Expression,Type)
  nameWithType: Expression.TypeIs(Expression,Type)
  fullName: System.Linq.Expressions.Expression.TypeIs(Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TypeBinaryExpression TypeIs (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TypeBinaryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  id: UnaryPlus(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: UnaryPlus(Expression)
  nameWithType: Expression.UnaryPlus(Expression)
  fullName: System.Linq.Expressions.Expression.UnaryPlus(Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.UnaryPlus*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: UnaryPlus(Expression,MethodInfo)
  nameWithType: Expression.UnaryPlus(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.UnaryPlus(Expression,MethodInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.UnaryPlus*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  id: Unbox(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Unbox(Expression,Type)
  nameWithType: Expression.Unbox(Expression,Type)
  fullName: System.Linq.Expressions.Expression.Unbox(Expression,Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Unbox (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Variable(System.Type)
  id: Variable(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Variable(Type)
  nameWithType: Expression.Variable(Type)
  fullName: System.Linq.Expressions.Expression.Variable(Type)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ParameterExpression Variable (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Variable*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  id: Variable(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: Variable(Type,String)
  nameWithType: Expression.Variable(Type,String)
  fullName: System.Linq.Expressions.Expression.Variable(Type,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ParameterExpression Variable (Type type, string name);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
  overload: System.Linq.Expressions.Expression.Variable*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  id: VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  name: VisitChildren(ExpressionVisitor)
  nameWithType: Expression.VisitChildren(ExpressionVisitor)
  fullName: System.Linq.Expressions.Expression.VisitChildren(ExpressionVisitor)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: protected virtual System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Linq.Expressions.ExpressionVisitor
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Linq.Expressions.Expression.#ctor
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Expression()
  nameWithType: Expression.Expression()
  fullName: System.Linq.Expressions.Expression.Expression()
- uid: System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Expression(ExpressionType,Type)
  nameWithType: Expression.Expression(ExpressionType,Type)
  fullName: System.Linq.Expressions.Expression.Expression(ExpressionType,Type)
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept(ExpressionVisitor)
  nameWithType: Expression.Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.Expression.Accept(ExpressionVisitor)
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Add(Expression,Expression)
  nameWithType: Expression.Add(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Add(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Add(Expression,Expression,MethodInfo)
  nameWithType: Expression.Add(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Add(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign(Expression,Expression)
  nameWithType: Expression.AddAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AddAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.AddAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.AddAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AddAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked(Expression,Expression)
  nameWithType: Expression.AddAssignChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.AddAssignChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.AddAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddChecked(Expression,Expression)
  nameWithType: Expression.AddChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AddChecked(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.AddChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddChecked(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: And(Expression,Expression)
  nameWithType: Expression.And(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.And(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: And(Expression,Expression,MethodInfo)
  nameWithType: Expression.And(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.And(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAlso(Expression,Expression)
  nameWithType: Expression.AndAlso(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AndAlso(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAlso(Expression,Expression,MethodInfo)
  nameWithType: Expression.AndAlso(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AndAlso(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign(Expression,Expression)
  nameWithType: Expression.AndAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.AndAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.AndAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.AndAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.AndAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AndAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayAccess(Expression,IEnumerable<Expression>)
  nameWithType: Expression.ArrayAccess(Expression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ArrayAccess(Expression,IEnumerable<Expression>)
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayAccess(Expression,Expression[])
  nameWithType: Expression.ArrayAccess(Expression,Expression[])
  fullName: System.Linq.Expressions.Expression.ArrayAccess(Expression,Expression[])
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex(Expression,IEnumerable<Expression>)
  nameWithType: Expression.ArrayIndex(Expression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ArrayIndex(Expression,IEnumerable<Expression>)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex(Expression,Expression)
  nameWithType: Expression.ArrayIndex(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ArrayIndex(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex(Expression,Expression[])
  nameWithType: Expression.ArrayIndex(Expression,Expression[])
  fullName: System.Linq.Expressions.Expression.ArrayIndex(Expression,Expression[])
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayLength(Expression)
  nameWithType: Expression.ArrayLength(Expression)
  fullName: System.Linq.Expressions.Expression.ArrayLength(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Assign(Expression,Expression)
  nameWithType: Expression.Assign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Assign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Bind(MemberInfo,Expression)
  nameWithType: Expression.Bind(MemberInfo,Expression)
  fullName: System.Linq.Expressions.Expression.Bind(MemberInfo,Expression)
- uid: System.Linq.Expressions.MemberAssignment
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberAssignment
  nameWithType: MemberAssignment
  fullName: System.Linq.Expressions.MemberAssignment
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Bind(MethodInfo,Expression)
  nameWithType: Expression.Bind(MethodInfo,Expression)
  fullName: System.Linq.Expressions.Expression.Bind(MethodInfo,Expression)
- uid: System.Linq.Expressions.MemberAssignment
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberAssignment
  nameWithType: MemberAssignment
  fullName: System.Linq.Expressions.MemberAssignment
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(IEnumerable<Expression>)
  nameWithType: Expression.Block(IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(IEnumerable<Expression>)
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression[])
  nameWithType: Expression.Block(Expression[])
  fullName: System.Linq.Expressions.Expression.Block(Expression[])
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  nameWithType: Expression.Block(IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(IEnumerable<ParameterExpression>,IEnumerable<Expression>)
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(IEnumerable<ParameterExpression>,Expression[])
  nameWithType: Expression.Block(IEnumerable<ParameterExpression>,Expression[])
  fullName: System.Linq.Expressions.Expression.Block(IEnumerable<ParameterExpression>,Expression[])
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression,Expression)
  nameWithType: Expression.Block(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Block(Expression,Expression)
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Type,IEnumerable<Expression>)
  nameWithType: Expression.Block(Type,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(Type,IEnumerable<Expression>)
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Type,Expression[])
  nameWithType: Expression.Block(Type,Expression[])
  fullName: System.Linq.Expressions.Expression.Block(Type,Expression[])
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression,Expression,Expression)
  nameWithType: Expression.Block(Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Block(Expression,Expression,Expression)
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Type,IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  nameWithType: Expression.Block(Type,IEnumerable<ParameterExpression>,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(Type,IEnumerable<ParameterExpression>,IEnumerable<Expression>)
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Type,IEnumerable<ParameterExpression>,Expression[])
  nameWithType: Expression.Block(Type,IEnumerable<ParameterExpression>,Expression[])
  fullName: System.Linq.Expressions.Expression.Block(Type,IEnumerable<ParameterExpression>,Expression[])
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression,Expression,Expression,Expression)
  nameWithType: Expression.Block(Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Block(Expression,Expression,Expression,Expression)
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression,Expression,Expression,Expression,Expression)
  nameWithType: Expression.Block(Expression,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Block(Expression,Expression,Expression,Expression,Expression)
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget)
  nameWithType: Expression.Break(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Break(LabelTarget)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget,Expression)
  nameWithType: Expression.Break(LabelTarget,Expression)
  fullName: System.Linq.Expressions.Expression.Break(LabelTarget,Expression)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget,Type)
  nameWithType: Expression.Break(LabelTarget,Type)
  fullName: System.Linq.Expressions.Expression.Break(LabelTarget,Type)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget,Expression,Type)
  nameWithType: Expression.Break(LabelTarget,Expression,Type)
  fullName: System.Linq.Expressions.Expression.Break(LabelTarget,Expression,Type)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression,MethodInfo)
  nameWithType: Expression.Call(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo,IEnumerable<Expression>)
  nameWithType: Expression.Call(MethodInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,IEnumerable<Expression>)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo,Expression[])
  nameWithType: Expression.Call(MethodInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression[])
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression,MethodInfo,IEnumerable<Expression>)
  nameWithType: Expression.Call(Expression,MethodInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo,IEnumerable<Expression>)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression,MethodInfo,Expression[])
  nameWithType: Expression.Call(Expression,MethodInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo,Expression[])
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo,Expression,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression,Expression)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression,MethodInfo,Expression,Expression)
  nameWithType: Expression.Call(Expression,MethodInfo,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo,Expression,Expression)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression,String,Type[],Expression[])
  nameWithType: Expression.Call(Expression,String,Type[],Expression[])
  fullName: System.Linq.Expressions.Expression.Call(Expression,String,Type[],Expression[])
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo,Expression,Expression,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression,Expression,Expression)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Type,String,Type[],Expression[])
  nameWithType: Expression.Call(Type,String,Type[],Expression[])
  fullName: System.Linq.Expressions.Expression.Call(Type,String,Type[],Expression[])
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(Expression,MethodInfo,Expression,Expression,Expression)
  nameWithType: Expression.Call(Expression,MethodInfo,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(Expression,MethodInfo,Expression,Expression,Expression)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo,Expression,Expression,Expression,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression,Expression,Expression,Expression)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call(MethodInfo,Expression,Expression,Expression,Expression,Expression)
  nameWithType: Expression.Call(MethodInfo,Expression,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Call(MethodInfo,Expression,Expression,Expression,Expression,Expression)
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.CanReduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: CanReduce
  nameWithType: Expression.CanReduce
  fullName: System.Linq.Expressions.Expression.CanReduce
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(ParameterExpression,Expression)
  nameWithType: Expression.Catch(ParameterExpression,Expression)
  fullName: System.Linq.Expressions.Expression.Catch(ParameterExpression,Expression)
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(Type,Expression)
  nameWithType: Expression.Catch(Type,Expression)
  fullName: System.Linq.Expressions.Expression.Catch(Type,Expression)
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(ParameterExpression,Expression,Expression)
  nameWithType: Expression.Catch(ParameterExpression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Catch(ParameterExpression,Expression,Expression)
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(Type,Expression,Expression)
  nameWithType: Expression.Catch(Type,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Catch(Type,Expression,Expression)
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ClearDebugInfo(SymbolDocumentInfo)
  nameWithType: Expression.ClearDebugInfo(SymbolDocumentInfo)
  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(SymbolDocumentInfo)
- uid: System.Linq.Expressions.DebugInfoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DebugInfoExpression
  nameWithType: DebugInfoExpression
  fullName: System.Linq.Expressions.DebugInfoExpression
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Coalesce(Expression,Expression)
  nameWithType: Expression.Coalesce(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Coalesce(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Coalesce(Expression,Expression,LambdaExpression)
  nameWithType: Expression.Coalesce(Expression,Expression,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.Coalesce(Expression,Expression,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Condition(Expression,Expression,Expression)
  nameWithType: Expression.Condition(Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Condition(Expression,Expression,Expression)
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Condition(Expression,Expression,Expression,Type)
  nameWithType: Expression.Condition(Expression,Expression,Expression,Type)
  fullName: System.Linq.Expressions.Expression.Condition(Expression,Expression,Expression,Type)
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Constant(System.Object)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Constant(Object)
  nameWithType: Expression.Constant(Object)
  fullName: System.Linq.Expressions.Expression.Constant(Object)
- uid: System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConstantExpression
  nameWithType: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Constant(Object,Type)
  nameWithType: Expression.Constant(Object,Type)
  fullName: System.Linq.Expressions.Expression.Constant(Object,Type)
- uid: System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConstantExpression
  nameWithType: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Continue(LabelTarget)
  nameWithType: Expression.Continue(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Continue(LabelTarget)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Continue(LabelTarget,Type)
  nameWithType: Expression.Continue(LabelTarget,Type)
  fullName: System.Linq.Expressions.Expression.Continue(LabelTarget,Type)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Convert(Expression,Type)
  nameWithType: Expression.Convert(Expression,Type)
  fullName: System.Linq.Expressions.Expression.Convert(Expression,Type)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Convert(Expression,Type,MethodInfo)
  nameWithType: Expression.Convert(Expression,Type,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Convert(Expression,Type,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ConvertChecked(Expression,Type)
  nameWithType: Expression.ConvertChecked(Expression,Type)
  fullName: System.Linq.Expressions.Expression.ConvertChecked(Expression,Type)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ConvertChecked(Expression,Type,MethodInfo)
  nameWithType: Expression.ConvertChecked(Expression,Type,MethodInfo)
  fullName: System.Linq.Expressions.Expression.ConvertChecked(Expression,Type,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DebugInfo(SymbolDocumentInfo,Int32,Int32,Int32,Int32)
  nameWithType: Expression.DebugInfo(SymbolDocumentInfo,Int32,Int32,Int32,Int32)
  fullName: System.Linq.Expressions.Expression.DebugInfo(SymbolDocumentInfo,Int32,Int32,Int32,Int32)
- uid: System.Linq.Expressions.DebugInfoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DebugInfoExpression
  nameWithType: DebugInfoExpression
  fullName: System.Linq.Expressions.DebugInfoExpression
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Decrement(Expression)
  nameWithType: Expression.Decrement(Expression)
  fullName: System.Linq.Expressions.Expression.Decrement(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Decrement(Expression,MethodInfo)
  nameWithType: Expression.Decrement(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Decrement(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Default(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Default(Type)
  nameWithType: Expression.Default(Type)
  fullName: System.Linq.Expressions.Expression.Default(Type)
- uid: System.Linq.Expressions.DefaultExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DefaultExpression
  nameWithType: DefaultExpression
  fullName: System.Linq.Expressions.DefaultExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Divide(Expression,Expression)
  nameWithType: Expression.Divide(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Divide(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Divide(Expression,Expression,MethodInfo)
  nameWithType: Expression.Divide(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Divide(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign(Expression,Expression)
  nameWithType: Expression.DivideAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.DivideAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.DivideAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.DivideAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.DivideAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.DivideAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder,Type,IEnumerable<Expression>)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,IEnumerable<Expression>)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder,Type,Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder,Type,Expression[])
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression[])
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression[])
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder,Type,Expression,Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression,Expression)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder,Type,Expression,Expression,Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression,Expression,Expression)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic(CallSiteBinder,Type,Expression,Expression,Expression,Expression)
  nameWithType: Expression.Dynamic(CallSiteBinder,Type,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Dynamic(CallSiteBinder,Type,Expression,Expression,Expression,Expression)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ElementInit(MethodInfo,IEnumerable<Expression>)
  nameWithType: Expression.ElementInit(MethodInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ElementInit(MethodInfo,IEnumerable<Expression>)
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  nameWithType: ElementInit
  fullName: System.Linq.Expressions.ElementInit
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ElementInit(MethodInfo,Expression[])
  nameWithType: Expression.ElementInit(MethodInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.ElementInit(MethodInfo,Expression[])
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  nameWithType: ElementInit
  fullName: System.Linq.Expressions.ElementInit
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Empty
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Empty()
  nameWithType: Expression.Empty()
  fullName: System.Linq.Expressions.Expression.Empty()
- uid: System.Linq.Expressions.DefaultExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DefaultExpression
  nameWithType: DefaultExpression
  fullName: System.Linq.Expressions.DefaultExpression
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Equal(Expression,Expression)
  nameWithType: Expression.Equal(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Equal(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Equal(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.Equal(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Equal(Expression,Expression,Boolean,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOr(Expression,Expression)
  nameWithType: Expression.ExclusiveOr(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOr(Expression,Expression,MethodInfo)
  nameWithType: Expression.ExclusiveOr(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign(Expression,Expression)
  nameWithType: Expression.ExclusiveOrAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.ExclusiveOrAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.ExclusiveOrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Field(Expression,FieldInfo)
  nameWithType: Expression.Field(Expression,FieldInfo)
  fullName: System.Linq.Expressions.Expression.Field(Expression,FieldInfo)
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Field(Expression,String)
  nameWithType: Expression.Field(Expression,String)
  fullName: System.Linq.Expressions.Expression.Field(Expression,String)
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Field(Expression,Type,String)
  nameWithType: Expression.Field(Expression,Type,String)
  fullName: System.Linq.Expressions.Expression.Field(Expression,Type,String)
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GetActionType(Type[])
  nameWithType: Expression.GetActionType(Type[])
  fullName: System.Linq.Expressions.Expression.GetActionType(Type[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GetDelegateType(Type[])
  nameWithType: Expression.GetDelegateType(Type[])
  fullName: System.Linq.Expressions.Expression.GetDelegateType(Type[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GetFuncType(Type[])
  nameWithType: Expression.GetFuncType(Type[])
  fullName: System.Linq.Expressions.Expression.GetFuncType(Type[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget)
  nameWithType: Expression.Goto(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Goto(LabelTarget)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget,Expression)
  nameWithType: Expression.Goto(LabelTarget,Expression)
  fullName: System.Linq.Expressions.Expression.Goto(LabelTarget,Expression)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget,Type)
  nameWithType: Expression.Goto(LabelTarget,Type)
  fullName: System.Linq.Expressions.Expression.Goto(LabelTarget,Type)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget,Expression,Type)
  nameWithType: Expression.Goto(LabelTarget,Expression,Type)
  fullName: System.Linq.Expressions.Expression.Goto(LabelTarget,Expression,Type)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThan(Expression,Expression)
  nameWithType: Expression.GreaterThan(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.GreaterThan(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThan(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.GreaterThan(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.GreaterThan(Expression,Expression,Boolean,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThanOrEqual(Expression,Expression)
  nameWithType: Expression.GreaterThanOrEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.GreaterThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(Expression,Expression,Boolean,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IfThen(Expression,Expression)
  nameWithType: Expression.IfThen(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.IfThen(Expression,Expression)
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IfThenElse(Expression,Expression,Expression)
  nameWithType: Expression.IfThenElse(Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.IfThenElse(Expression,Expression,Expression)
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Increment(Expression)
  nameWithType: Expression.Increment(Expression)
  fullName: System.Linq.Expressions.Expression.Increment(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Increment(Expression,MethodInfo)
  nameWithType: Expression.Increment(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Increment(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Invoke(Expression,IEnumerable<Expression>)
  nameWithType: Expression.Invoke(Expression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Invoke(Expression,IEnumerable<Expression>)
- uid: System.Linq.Expressions.InvocationExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: InvocationExpression
  nameWithType: InvocationExpression
  fullName: System.Linq.Expressions.InvocationExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Invoke(Expression,Expression[])
  nameWithType: Expression.Invoke(Expression,Expression[])
  fullName: System.Linq.Expressions.Expression.Invoke(Expression,Expression[])
- uid: System.Linq.Expressions.InvocationExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: InvocationExpression
  nameWithType: InvocationExpression
  fullName: System.Linq.Expressions.InvocationExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsFalse(Expression)
  nameWithType: Expression.IsFalse(Expression)
  fullName: System.Linq.Expressions.Expression.IsFalse(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsFalse(Expression,MethodInfo)
  nameWithType: Expression.IsFalse(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.IsFalse(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsTrue(Expression)
  nameWithType: Expression.IsTrue(Expression)
  fullName: System.Linq.Expressions.Expression.IsTrue(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsTrue(Expression,MethodInfo)
  nameWithType: Expression.IsTrue(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.IsTrue(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Label
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label()
  nameWithType: Expression.Label()
  fullName: System.Linq.Expressions.Expression.Label()
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(LabelTarget)
  nameWithType: Expression.Label(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Label(LabelTarget)
- uid: System.Linq.Expressions.LabelExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelExpression
  nameWithType: LabelExpression
  fullName: System.Linq.Expressions.LabelExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Label(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(String)
  nameWithType: Expression.Label(String)
  fullName: System.Linq.Expressions.Expression.Label(String)
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Label(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(Type)
  nameWithType: Expression.Label(Type)
  fullName: System.Linq.Expressions.Expression.Label(Type)
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(LabelTarget,Expression)
  nameWithType: Expression.Label(LabelTarget,Expression)
  fullName: System.Linq.Expressions.Expression.Label(LabelTarget,Expression)
- uid: System.Linq.Expressions.LabelExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelExpression
  nameWithType: LabelExpression
  fullName: System.Linq.Expressions.LabelExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(Type,String)
  nameWithType: Expression.Label(Type,String)
  fullName: System.Linq.Expressions.Expression.Label(Type,String)
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,ParameterExpression[])
  nameWithType: Expression.Lambda(Expression,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,ParameterExpression[])
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression[]
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,Boolean,ParameterExpression[])
  nameWithType: Expression.Lambda(Expression,Boolean,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,Boolean,ParameterExpression[])
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression[]
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,String,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,String,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,String,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type,Expression,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type,Expression,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type,Expression,ParameterExpression[])
  nameWithType: Expression.Lambda(Type,Expression,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,ParameterExpression[])
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression[]
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type,Expression,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type,Expression,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,Boolean,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type,Expression,Boolean,ParameterExpression[])
  nameWithType: Expression.Lambda(Type,Expression,Boolean,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,Boolean,ParameterExpression[])
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression[]
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type,Expression,String,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type,Expression,String,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,String,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Type,Expression,String,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Type,Expression,String,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Type,Expression,String,Boolean,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,ParameterExpression[])
  nameWithType: Expression.Lambda(Expression,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,ParameterExpression[])
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression[]
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,Boolean,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,Boolean,ParameterExpression[])
  nameWithType: Expression.Lambda(Expression,Boolean,ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,Boolean,ParameterExpression[])
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression[]
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,String,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,String,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,String,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  nameWithType: Expression.Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(Expression,String,Boolean,IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShift(Expression,Expression)
  nameWithType: Expression.LeftShift(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.LeftShift(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShift(Expression,Expression,MethodInfo)
  nameWithType: Expression.LeftShift(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.LeftShift(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign(Expression,Expression)
  nameWithType: Expression.LeftShiftAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.LeftShiftAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.LeftShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThan(Expression,Expression)
  nameWithType: Expression.LessThan(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.LessThan(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThan(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.LessThan(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.LessThan(Expression,Expression,Boolean,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThanOrEqual(Expression,Expression)
  nameWithType: Expression.LessThanOrEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.LessThanOrEqual(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(Expression,Expression,Boolean,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind(MemberInfo,IEnumerable<ElementInit>)
  nameWithType: Expression.ListBind(MemberInfo,IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListBind(MemberInfo,IEnumerable<ElementInit>)
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberListBinding
  nameWithType: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ElementInit>
  nameWithType: IEnumerable<ElementInit>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind(MemberInfo,ElementInit[])
  nameWithType: Expression.ListBind(MemberInfo,ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListBind(MemberInfo,ElementInit[])
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberListBinding
  nameWithType: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  nameWithType: ElementInit
  fullName: System.Linq.Expressions.ElementInit[]
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind(MethodInfo,IEnumerable<ElementInit>)
  nameWithType: Expression.ListBind(MethodInfo,IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListBind(MethodInfo,IEnumerable<ElementInit>)
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberListBinding
  nameWithType: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ElementInit>
  nameWithType: IEnumerable<ElementInit>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind(MethodInfo,ElementInit[])
  nameWithType: Expression.ListBind(MethodInfo,ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListBind(MethodInfo,ElementInit[])
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberListBinding
  nameWithType: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  nameWithType: ElementInit
  fullName: System.Linq.Expressions.ElementInit[]
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression,IEnumerable<ElementInit>)
  nameWithType: Expression.ListInit(NewExpression,IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,IEnumerable<ElementInit>)
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ElementInit>
  nameWithType: IEnumerable<ElementInit>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression,IEnumerable<Expression>)
  nameWithType: Expression.ListInit(NewExpression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,IEnumerable<Expression>)
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression,ElementInit[])
  nameWithType: Expression.ListInit(NewExpression,ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,ElementInit[])
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  nameWithType: ElementInit
  fullName: System.Linq.Expressions.ElementInit[]
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression,Expression[])
  nameWithType: Expression.ListInit(NewExpression,Expression[])
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,Expression[])
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression,MethodInfo,IEnumerable<Expression>)
  nameWithType: Expression.ListInit(NewExpression,MethodInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,MethodInfo,IEnumerable<Expression>)
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression,MethodInfo,Expression[])
  nameWithType: Expression.ListInit(NewExpression,MethodInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.ListInit(NewExpression,MethodInfo,Expression[])
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop(Expression)
  nameWithType: Expression.Loop(Expression)
  fullName: System.Linq.Expressions.Expression.Loop(Expression)
- uid: System.Linq.Expressions.LoopExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LoopExpression
  nameWithType: LoopExpression
  fullName: System.Linq.Expressions.LoopExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop(Expression,LabelTarget)
  nameWithType: Expression.Loop(Expression,LabelTarget)
  fullName: System.Linq.Expressions.Expression.Loop(Expression,LabelTarget)
- uid: System.Linq.Expressions.LoopExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LoopExpression
  nameWithType: LoopExpression
  fullName: System.Linq.Expressions.LoopExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop(Expression,LabelTarget,LabelTarget)
  nameWithType: Expression.Loop(Expression,LabelTarget,LabelTarget)
  fullName: System.Linq.Expressions.Expression.Loop(Expression,LabelTarget,LabelTarget)
- uid: System.Linq.Expressions.LoopExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LoopExpression
  nameWithType: LoopExpression
  fullName: System.Linq.Expressions.LoopExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary(ExpressionType,Expression,Expression)
  nameWithType: Expression.MakeBinary(ExpressionType,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeBinary(ExpressionType,Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo,LambdaExpression)
  nameWithType: Expression.MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeCatchBlock(Type,ParameterExpression,Expression,Expression)
  nameWithType: Expression.MakeCatchBlock(Type,ParameterExpression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(Type,ParameterExpression,Expression,Expression)
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type,CallSiteBinder,IEnumerable<Expression>)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,IEnumerable<Expression>)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type,CallSiteBinder,Expression)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type,CallSiteBinder,Expression[])
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression[])
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression[])
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type,CallSiteBinder,Expression,Expression)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression,Expression)
  nameWithType: Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression,Expression)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeGoto(GotoExpressionKind,LabelTarget,Expression,Type)
  nameWithType: Expression.MakeGoto(GotoExpressionKind,LabelTarget,Expression,Type)
  fullName: System.Linq.Expressions.Expression.MakeGoto(GotoExpressionKind,LabelTarget,Expression,Type)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.GotoExpressionKind
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpressionKind
  nameWithType: GotoExpressionKind
  fullName: System.Linq.Expressions.GotoExpressionKind
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeIndex(Expression,PropertyInfo,IEnumerable<Expression>)
  nameWithType: Expression.MakeIndex(Expression,PropertyInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.MakeIndex(Expression,PropertyInfo,IEnumerable<Expression>)
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeMemberAccess(Expression,MemberInfo)
  nameWithType: Expression.MakeMemberAccess(Expression,MemberInfo)
  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(Expression,MemberInfo)
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeTry(Type,Expression,Expression,Expression,IEnumerable<CatchBlock>)
  nameWithType: Expression.MakeTry(Type,Expression,Expression,Expression,IEnumerable<CatchBlock>)
  fullName: System.Linq.Expressions.Expression.MakeTry(Type,Expression,Expression,Expression,IEnumerable<CatchBlock>)
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<CatchBlock>
  nameWithType: IEnumerable<CatchBlock>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock>
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeUnary(ExpressionType,Expression,Type)
  nameWithType: Expression.MakeUnary(ExpressionType,Expression,Type)
  fullName: System.Linq.Expressions.Expression.MakeUnary(ExpressionType,Expression,Type)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeUnary(ExpressionType,Expression,Type,MethodInfo)
  nameWithType: Expression.MakeUnary(ExpressionType,Expression,Type,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MakeUnary(ExpressionType,Expression,Type,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind(MemberInfo,IEnumerable<MemberBinding>)
  nameWithType: Expression.MemberBind(MemberInfo,IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberBind(MemberInfo,IEnumerable<MemberBinding>)
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberMemberBinding
  nameWithType: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<MemberBinding>
  nameWithType: IEnumerable<MemberBinding>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind(MemberInfo,MemberBinding[])
  nameWithType: Expression.MemberBind(MemberInfo,MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberBind(MemberInfo,MemberBinding[])
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberMemberBinding
  nameWithType: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.MemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberBinding
  nameWithType: MemberBinding
  fullName: System.Linq.Expressions.MemberBinding[]
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind(MethodInfo,IEnumerable<MemberBinding>)
  nameWithType: Expression.MemberBind(MethodInfo,IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberBind(MethodInfo,IEnumerable<MemberBinding>)
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberMemberBinding
  nameWithType: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<MemberBinding>
  nameWithType: IEnumerable<MemberBinding>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind(MethodInfo,MemberBinding[])
  nameWithType: Expression.MemberBind(MethodInfo,MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberBind(MethodInfo,MemberBinding[])
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberMemberBinding
  nameWithType: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.MemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberBinding
  nameWithType: MemberBinding
  fullName: System.Linq.Expressions.MemberBinding[]
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberInit(NewExpression,IEnumerable<MemberBinding>)
  nameWithType: Expression.MemberInit(NewExpression,IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberInit(NewExpression,IEnumerable<MemberBinding>)
- uid: System.Linq.Expressions.MemberInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberInitExpression
  nameWithType: MemberInitExpression
  fullName: System.Linq.Expressions.MemberInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<MemberBinding>
  nameWithType: IEnumerable<MemberBinding>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberInit(NewExpression,MemberBinding[])
  nameWithType: Expression.MemberInit(NewExpression,MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberInit(NewExpression,MemberBinding[])
- uid: System.Linq.Expressions.MemberInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberInitExpression
  nameWithType: MemberInitExpression
  fullName: System.Linq.Expressions.MemberInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.MemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberBinding
  nameWithType: MemberBinding
  fullName: System.Linq.Expressions.MemberBinding[]
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Modulo(Expression,Expression)
  nameWithType: Expression.Modulo(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Modulo(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Modulo(Expression,Expression,MethodInfo)
  nameWithType: Expression.Modulo(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Modulo(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign(Expression,Expression)
  nameWithType: Expression.ModuloAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.ModuloAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.ModuloAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Multiply(Expression,Expression)
  nameWithType: Expression.Multiply(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Multiply(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Multiply(Expression,Expression,MethodInfo)
  nameWithType: Expression.Multiply(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Multiply(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign(Expression,Expression)
  nameWithType: Expression.MultiplyAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.MultiplyAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.MultiplyAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked(Expression,Expression)
  nameWithType: Expression.MultiplyAssignChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.MultiplyAssignChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.MultiplyAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyChecked(Expression,Expression)
  nameWithType: Expression.MultiplyChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.MultiplyChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Negate(Expression)
  nameWithType: Expression.Negate(Expression)
  fullName: System.Linq.Expressions.Expression.Negate(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Negate(Expression,MethodInfo)
  nameWithType: Expression.Negate(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Negate(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NegateChecked(Expression)
  nameWithType: Expression.NegateChecked(Expression)
  fullName: System.Linq.Expressions.Expression.NegateChecked(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NegateChecked(Expression,MethodInfo)
  nameWithType: Expression.NegateChecked(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.NegateChecked(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo)
  nameWithType: Expression.New(ConstructorInfo)
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo)
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Linq.Expressions.Expression.New(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(Type)
  nameWithType: Expression.New(Type)
  fullName: System.Linq.Expressions.Expression.New(Type)
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo,IEnumerable<Expression>)
  nameWithType: Expression.New(ConstructorInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo,IEnumerable<Expression>)
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo,Expression[])
  nameWithType: Expression.New(ConstructorInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo,Expression[])
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo,IEnumerable<Expression>,IEnumerable<MemberInfo>)
  nameWithType: Expression.New(ConstructorInfo,IEnumerable<Expression>,IEnumerable<MemberInfo>)
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo,IEnumerable<Expression>,IEnumerable<MemberInfo>)
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<MemberInfo>
  nameWithType: IEnumerable<MemberInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New(ConstructorInfo,IEnumerable<Expression>,MemberInfo[])
  nameWithType: Expression.New(ConstructorInfo,IEnumerable<Expression>,MemberInfo[])
  fullName: System.Linq.Expressions.Expression.New(ConstructorInfo,IEnumerable<Expression>,MemberInfo[])
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayBounds(Type,IEnumerable<Expression>)
  nameWithType: Expression.NewArrayBounds(Type,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(Type,IEnumerable<Expression>)
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewArrayExpression
  nameWithType: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayBounds(Type,Expression[])
  nameWithType: Expression.NewArrayBounds(Type,Expression[])
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(Type,Expression[])
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewArrayExpression
  nameWithType: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayInit(Type,IEnumerable<Expression>)
  nameWithType: Expression.NewArrayInit(Type,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.NewArrayInit(Type,IEnumerable<Expression>)
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewArrayExpression
  nameWithType: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayInit(Type,Expression[])
  nameWithType: Expression.NewArrayInit(Type,Expression[])
  fullName: System.Linq.Expressions.Expression.NewArrayInit(Type,Expression[])
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewArrayExpression
  nameWithType: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.NodeType
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NodeType
  nameWithType: Expression.NodeType
  fullName: System.Linq.Expressions.Expression.NodeType
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Not(Expression)
  nameWithType: Expression.Not(Expression)
  fullName: System.Linq.Expressions.Expression.Not(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Not(Expression,MethodInfo)
  nameWithType: Expression.Not(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Not(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NotEqual(Expression,Expression)
  nameWithType: Expression.NotEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.NotEqual(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NotEqual(Expression,Expression,Boolean,MethodInfo)
  nameWithType: Expression.NotEqual(Expression,Expression,Boolean,MethodInfo)
  fullName: System.Linq.Expressions.Expression.NotEqual(Expression,Expression,Boolean,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OnesComplement(Expression)
  nameWithType: Expression.OnesComplement(Expression)
  fullName: System.Linq.Expressions.Expression.OnesComplement(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OnesComplement(Expression,MethodInfo)
  nameWithType: Expression.OnesComplement(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.OnesComplement(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Or(Expression,Expression)
  nameWithType: Expression.Or(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Or(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Or(Expression,Expression,MethodInfo)
  nameWithType: Expression.Or(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Or(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign(Expression,Expression)
  nameWithType: Expression.OrAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.OrAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.OrAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.OrAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.OrAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.OrAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrElse(Expression,Expression)
  nameWithType: Expression.OrElse(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.OrElse(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrElse(Expression,Expression,MethodInfo)
  nameWithType: Expression.OrElse(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.OrElse(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Parameter(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Parameter(Type)
  nameWithType: Expression.Parameter(Type)
  fullName: System.Linq.Expressions.Expression.Parameter(Type)
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Parameter(Type,String)
  nameWithType: Expression.Parameter(Type,String)
  fullName: System.Linq.Expressions.Expression.Parameter(Type,String)
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostDecrementAssign(Expression)
  nameWithType: Expression.PostDecrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostDecrementAssign(Expression,MethodInfo)
  nameWithType: Expression.PostDecrementAssign(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostIncrementAssign(Expression)
  nameWithType: Expression.PostIncrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostIncrementAssign(Expression,MethodInfo)
  nameWithType: Expression.PostIncrementAssign(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Power(Expression,Expression)
  nameWithType: Expression.Power(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Power(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Power(Expression,Expression,MethodInfo)
  nameWithType: Expression.Power(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Power(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign(Expression,Expression)
  nameWithType: Expression.PowerAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.PowerAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.PowerAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PowerAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.PowerAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.PowerAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreDecrementAssign(Expression)
  nameWithType: Expression.PreDecrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreDecrementAssign(Expression,MethodInfo)
  nameWithType: Expression.PreDecrementAssign(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreIncrementAssign(Expression)
  nameWithType: Expression.PreIncrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreIncrementAssign(Expression,MethodInfo)
  nameWithType: Expression.PreIncrementAssign(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression,MethodInfo)
  nameWithType: Expression.Property(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Property(Expression,MethodInfo)
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression,PropertyInfo)
  nameWithType: Expression.Property(Expression,PropertyInfo)
  fullName: System.Linq.Expressions.Expression.Property(Expression,PropertyInfo)
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression,String)
  nameWithType: Expression.Property(Expression,String)
  fullName: System.Linq.Expressions.Expression.Property(Expression,String)
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression,PropertyInfo,IEnumerable<Expression>)
  nameWithType: Expression.Property(Expression,PropertyInfo,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Property(Expression,PropertyInfo,IEnumerable<Expression>)
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression,PropertyInfo,Expression[])
  nameWithType: Expression.Property(Expression,PropertyInfo,Expression[])
  fullName: System.Linq.Expressions.Expression.Property(Expression,PropertyInfo,Expression[])
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression,String,Expression[])
  nameWithType: Expression.Property(Expression,String,Expression[])
  fullName: System.Linq.Expressions.Expression.Property(Expression,String,Expression[])
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property(Expression,Type,String)
  nameWithType: Expression.Property(Expression,Type,String)
  fullName: System.Linq.Expressions.Expression.Property(Expression,Type,String)
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PropertyOrField(Expression,String)
  nameWithType: Expression.PropertyOrField(Expression,String)
  fullName: System.Linq.Expressions.Expression.PropertyOrField(Expression,String)
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Quote(Expression)
  nameWithType: Expression.Quote(Expression)
  fullName: System.Linq.Expressions.Expression.Quote(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Reduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Reduce()
  nameWithType: Expression.Reduce()
  fullName: System.Linq.Expressions.Expression.Reduce()
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ReduceAndCheck
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReduceAndCheck()
  nameWithType: Expression.ReduceAndCheck()
  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ReduceExtensions
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReduceExtensions()
  nameWithType: Expression.ReduceExtensions()
  fullName: System.Linq.Expressions.Expression.ReduceExtensions()
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReferenceEqual(Expression,Expression)
  nameWithType: Expression.ReferenceEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ReferenceEqual(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReferenceNotEqual(Expression,Expression)
  nameWithType: Expression.ReferenceNotEqual(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Rethrow
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Rethrow()
  nameWithType: Expression.Rethrow()
  fullName: System.Linq.Expressions.Expression.Rethrow()
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Rethrow(Type)
  nameWithType: Expression.Rethrow(Type)
  fullName: System.Linq.Expressions.Expression.Rethrow(Type)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget)
  nameWithType: Expression.Return(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Return(LabelTarget)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget,Expression)
  nameWithType: Expression.Return(LabelTarget,Expression)
  fullName: System.Linq.Expressions.Expression.Return(LabelTarget,Expression)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget,Type)
  nameWithType: Expression.Return(LabelTarget,Type)
  fullName: System.Linq.Expressions.Expression.Return(LabelTarget,Type)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget,Expression,Type)
  nameWithType: Expression.Return(LabelTarget,Expression,Type)
  fullName: System.Linq.Expressions.Expression.Return(LabelTarget,Expression,Type)
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShift(Expression,Expression)
  nameWithType: Expression.RightShift(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.RightShift(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShift(Expression,Expression,MethodInfo)
  nameWithType: Expression.RightShift(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.RightShift(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign(Expression,Expression)
  nameWithType: Expression.RightShiftAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.RightShiftAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.RightShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RuntimeVariables(IEnumerable<ParameterExpression>)
  nameWithType: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(IEnumerable<ParameterExpression>)
- uid: System.Linq.Expressions.RuntimeVariablesExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: RuntimeVariablesExpression
  nameWithType: RuntimeVariablesExpression
  fullName: System.Linq.Expressions.RuntimeVariablesExpression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RuntimeVariables(ParameterExpression[])
  nameWithType: Expression.RuntimeVariables(ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(ParameterExpression[])
- uid: System.Linq.Expressions.RuntimeVariablesExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: RuntimeVariablesExpression
  nameWithType: RuntimeVariablesExpression
  fullName: System.Linq.Expressions.RuntimeVariablesExpression
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression[]
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Subtract(Expression,Expression)
  nameWithType: Expression.Subtract(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.Subtract(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Subtract(Expression,Expression,MethodInfo)
  nameWithType: Expression.Subtract(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.Subtract(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign(Expression,Expression)
  nameWithType: Expression.SubtractAssign(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign(Expression,Expression,MethodInfo)
  nameWithType: Expression.SubtractAssign(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.SubtractAssign(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked(Expression,Expression)
  nameWithType: Expression.SubtractAssignChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.SubtractAssignChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  nameWithType: Expression.SubtractAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractChecked(Expression,Expression)
  nameWithType: Expression.SubtractChecked(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.SubtractChecked(Expression,Expression)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractChecked(Expression,Expression,MethodInfo)
  nameWithType: Expression.SubtractChecked(Expression,Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractChecked(Expression,Expression,MethodInfo)
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression,SwitchCase[])
  nameWithType: Expression.Switch(Expression,SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(Expression,SwitchCase[])
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase[]
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression,Expression,SwitchCase[])
  nameWithType: Expression.Switch(Expression,Expression,SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(Expression,Expression,SwitchCase[])
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase[]
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  nameWithType: Expression.Switch(Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  fullName: System.Linq.Expressions.Expression.Switch(Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<SwitchCase>
  nameWithType: IEnumerable<SwitchCase>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression,Expression,MethodInfo,SwitchCase[])
  nameWithType: Expression.Switch(Expression,Expression,MethodInfo,SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(Expression,Expression,MethodInfo,SwitchCase[])
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase[]
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Type,Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  nameWithType: Expression.Switch(Type,Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
  fullName: System.Linq.Expressions.Expression.Switch(Type,Expression,Expression,MethodInfo,IEnumerable<SwitchCase>)
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<SwitchCase>
  nameWithType: IEnumerable<SwitchCase>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Type,Expression,Expression,MethodInfo,SwitchCase[])
  nameWithType: Expression.Switch(Type,Expression,Expression,MethodInfo,SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(Type,Expression,Expression,MethodInfo,SwitchCase[])
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase[]
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SwitchCase(Expression,IEnumerable<Expression>)
  nameWithType: Expression.SwitchCase(Expression,IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.SwitchCase(Expression,IEnumerable<Expression>)
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SwitchCase(Expression,Expression[])
  nameWithType: Expression.SwitchCase(Expression,Expression[])
  fullName: System.Linq.Expressions.Expression.SwitchCase(Expression,Expression[])
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument(String)
  nameWithType: Expression.SymbolDocument(String)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(String)
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument(String,Guid)
  nameWithType: Expression.SymbolDocument(String,Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(String,Guid)
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument(String,Guid,Guid)
  nameWithType: Expression.SymbolDocument(String,Guid,Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(String,Guid,Guid)
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument(String,Guid,Guid,Guid)
  nameWithType: Expression.SymbolDocument(String,Guid,Guid,Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(String,Guid,Guid,Guid)
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Throw(Expression)
  nameWithType: Expression.Throw(Expression)
  fullName: System.Linq.Expressions.Expression.Throw(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Throw(Expression,Type)
  nameWithType: Expression.Throw(Expression,Type)
  fullName: System.Linq.Expressions.Expression.Throw(Expression,Type)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.ToString
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ToString()
  nameWithType: Expression.ToString()
  fullName: System.Linq.Expressions.Expression.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryCatch(Expression,CatchBlock[])
  nameWithType: Expression.TryCatch(Expression,CatchBlock[])
  fullName: System.Linq.Expressions.Expression.TryCatch(Expression,CatchBlock[])
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock[]
- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryCatchFinally(Expression,Expression,CatchBlock[])
  nameWithType: Expression.TryCatchFinally(Expression,Expression,CatchBlock[])
  fullName: System.Linq.Expressions.Expression.TryCatchFinally(Expression,Expression,CatchBlock[])
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock[]
- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryFault(Expression,Expression)
  nameWithType: Expression.TryFault(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.TryFault(Expression,Expression)
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryFinally(Expression,Expression)
  nameWithType: Expression.TryFinally(Expression,Expression)
  fullName: System.Linq.Expressions.Expression.TryFinally(Expression,Expression)
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryGetActionType(Type[],Type)
  nameWithType: Expression.TryGetActionType(Type[],Type)
  fullName: System.Linq.Expressions.Expression.TryGetActionType(Type[],Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryGetFuncType(Type[],Type)
  nameWithType: Expression.TryGetFuncType(Type[],Type)
  fullName: System.Linq.Expressions.Expression.TryGetFuncType(Type[],Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Type
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Type
  nameWithType: Expression.Type
  fullName: System.Linq.Expressions.Expression.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TypeAs(Expression,Type)
  nameWithType: Expression.TypeAs(Expression,Type)
  fullName: System.Linq.Expressions.Expression.TypeAs(Expression,Type)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TypeEqual(Expression,Type)
  nameWithType: Expression.TypeEqual(Expression,Type)
  fullName: System.Linq.Expressions.Expression.TypeEqual(Expression,Type)
- uid: System.Linq.Expressions.TypeBinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TypeBinaryExpression
  nameWithType: TypeBinaryExpression
  fullName: System.Linq.Expressions.TypeBinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TypeIs(Expression,Type)
  nameWithType: Expression.TypeIs(Expression,Type)
  fullName: System.Linq.Expressions.Expression.TypeIs(Expression,Type)
- uid: System.Linq.Expressions.TypeBinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TypeBinaryExpression
  nameWithType: TypeBinaryExpression
  fullName: System.Linq.Expressions.TypeBinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: UnaryPlus(Expression)
  nameWithType: Expression.UnaryPlus(Expression)
  fullName: System.Linq.Expressions.Expression.UnaryPlus(Expression)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: UnaryPlus(Expression,MethodInfo)
  nameWithType: Expression.UnaryPlus(Expression,MethodInfo)
  fullName: System.Linq.Expressions.Expression.UnaryPlus(Expression,MethodInfo)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Unbox(Expression,Type)
  nameWithType: Expression.Unbox(Expression,Type)
  fullName: System.Linq.Expressions.Expression.Unbox(Expression,Type)
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Variable(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Variable(Type)
  nameWithType: Expression.Variable(Type)
  fullName: System.Linq.Expressions.Expression.Variable(Type)
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Variable(Type,String)
  nameWithType: Expression.Variable(Type,String)
  fullName: System.Linq.Expressions.Expression.Variable(Type,String)
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: VisitChildren(ExpressionVisitor)
  nameWithType: Expression.VisitChildren(ExpressionVisitor)
  fullName: System.Linq.Expressions.Expression.VisitChildren(ExpressionVisitor)
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: System.Linq.Expressions.Expression.Add*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.AddAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.AddAssignChecked*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.AddChecked*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.And*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.AndAlso*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.AndAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.ArrayAccess*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.ArrayIndex*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Bind*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Block*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Break*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Call*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Catch*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Coalesce*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Condition*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Constant*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Continue*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Convert*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.ConvertChecked*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Decrement*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Divide*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.DivideAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Dynamic*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.ElementInit*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Equal*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.ExclusiveOr*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Field*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Goto*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.GreaterThan*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Increment*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Invoke*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.IsFalse*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.IsTrue*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Label*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Lambda*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Lambda<TDelegate>*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.LeftShift*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.LeftShiftAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.LessThan*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.LessThanOrEqual*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.ListBind*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.ListInit*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Loop*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.MakeBinary*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.MakeDynamic*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.MakeUnary*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.MemberBind*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.MemberInit*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Modulo*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.ModuloAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Multiply*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.MultiplyAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.MultiplyChecked*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Negate*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.NegateChecked*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.New*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.NewArrayBounds*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.NewArrayInit*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Not*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.NotEqual*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.OnesComplement*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Or*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.OrAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.OrElse*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Parameter*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.PostDecrementAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.PostIncrementAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Power*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.PowerAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.PreDecrementAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.PreIncrementAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Property*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Rethrow*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Return*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.RightShift*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.RightShiftAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.RuntimeVariables*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Subtract*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.SubtractAssign*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.SubtractChecked*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Switch*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.SwitchCase*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.SymbolDocument*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Throw*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.UnaryPlus*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
- uid: System.Linq.Expressions.Expression.Variable*
  parent: System.Linq.Expressions.Expression
  isExternal: false
  nameWithType: Expression.
