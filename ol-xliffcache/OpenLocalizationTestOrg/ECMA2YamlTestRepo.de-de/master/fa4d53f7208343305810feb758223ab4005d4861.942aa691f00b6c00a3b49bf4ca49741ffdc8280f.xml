{"nodes":[{"pos":[382,407],"content":"ForEachWithBodyFactory<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ForEachWithBodyFactory<T>"},{"pos":[728,762],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1420,1444],"content":"ForEachWithBodyFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"ForEachWithBodyFactory()","pos":[0,24]}]},{"pos":[2152,2176],"content":"Create(DependencyObject)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(DependencyObject)","pos":[0,24]}]},{"pos":[2683,2717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2788,2822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2933,2946],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[3140,3164],"content":"ForEachWithBodyFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"ForEachWithBodyFactory()","pos":[0,24]}]},{"pos":[3568,3592],"content":"Create(DependencyObject)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(DependencyObject)","pos":[0,24]}]},{"pos":[3859,3867],"content":"Activity","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity","pos":[0,8]}]},{"pos":[4023,4039],"content":"DependencyObject","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyObject","pos":[0,16]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1\n  id: ForEachWithBodyFactory`1\n  children:\n  - System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.#ctor\n  - System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.Create(System.Windows.DependencyObject)\n  langs:\n  - csharp\n  name: ForEachWithBodyFactory<T>\n  nameWithType: ForEachWithBodyFactory<T>\n  fullName: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory<T>\n  type: Class\n  syntax:\n    content: 'public sealed class ForEachWithBodyFactory<T> : System.Activities.Presentation.IActivityTemplateFactory'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Activities.Presentation.IActivityTemplateFactory\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1\n  langs:\n  - csharp\n  name: ForEachWithBodyFactory()\n  nameWithType: ForEachWithBodyFactory<T>.ForEachWithBodyFactory()\n  fullName: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory<T>.ForEachWithBodyFactory()\n  type: Constructor\n  assemblies:\n  - System.Activities.Core.Presentation\n  namespace: System.Activities.Core.Presentation.Factories\n  syntax:\n    content: public ForEachWithBodyFactory ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.Create(System.Windows.DependencyObject)\n  id: Create(System.Windows.DependencyObject)\n  parent: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1\n  langs:\n  - csharp\n  name: Create(DependencyObject)\n  nameWithType: ForEachWithBodyFactory<T>.Create(DependencyObject)\n  fullName: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory<T>.Create(DependencyObject)\n  type: Method\n  assemblies:\n  - System.Activities.Core.Presentation\n  namespace: System.Activities.Core.Presentation.Factories\n  syntax:\n    content: public System.Activities.Activity Create (System.Windows.DependencyObject target);\n    parameters:\n    - id: target\n      type: System.Windows.DependencyObject\n      description: Parameter description to be filled\n    return:\n      type: System.Activities.Activity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.#ctor\n  parent: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1\n  isExternal: false\n  name: ForEachWithBodyFactory()\n  nameWithType: ForEachWithBodyFactory<T>.ForEachWithBodyFactory()\n  fullName: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory<T>.ForEachWithBodyFactory()\n- uid: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1.Create(System.Windows.DependencyObject)\n  parent: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory`1\n  isExternal: false\n  name: Create(DependencyObject)\n  nameWithType: ForEachWithBodyFactory<T>.Create(DependencyObject)\n  fullName: System.Activities.Core.Presentation.Factories.ForEachWithBodyFactory<T>.Create(DependencyObject)\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: true\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n"}