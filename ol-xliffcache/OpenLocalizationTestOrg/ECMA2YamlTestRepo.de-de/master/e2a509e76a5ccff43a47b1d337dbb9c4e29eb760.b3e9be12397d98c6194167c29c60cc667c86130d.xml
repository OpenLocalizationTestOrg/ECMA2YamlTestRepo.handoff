{"nodes":[{"pos":[614,625],"content":"ElementInit","needQuote":true,"needEscape":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[1369,1378],"content":"AddMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"AddMethod","pos":[0,9]}]},{"pos":[1709,1743],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1936,1945],"content":"Arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"Arguments","pos":[0,9]}]},{"pos":[2390,2424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2723,2778],"content":"System.Linq.Expressions.IArgumentProvider.ArgumentCount","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.Expressions.IArgumentProvider.ArgumentCount","pos":[0,55]}]},{"pos":[3199,3233],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3556,3616],"content":"System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)","pos":[0,60]}]},{"pos":[4074,4108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4187,4221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4412,4422],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[4738,4772],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5111,5142],"content":"Update(IEnumerable<ph id=\"ph1\">&lt;Expression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Update(IEnumerable<Expression>)"},{"pos":[5668,5702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5782,5816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5927,5940],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[6068,6077],"content":"AddMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"AddMethod","pos":[0,9]}]},{"pos":[6266,6276],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[6472,6481],"content":"Arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"Arguments","pos":[0,9]}]},{"pos":[6740,6770],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;Expression&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<Expression>"},{"pos":[7089,7144],"content":"System.Linq.Expressions.IArgumentProvider.ArgumentCount","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.Expressions.IArgumentProvider.ArgumentCount","pos":[0,55]}]},{"pos":[7398,7403],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7636,7696],"content":"System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)","pos":[0,60]}]},{"pos":[7999,8009],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[8149,8154],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8328,8338],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8503,8509],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8759,8790],"content":"Update(IEnumerable<ph id=\"ph1\">&lt;Expression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Update(IEnumerable<Expression>)"},{"pos":[9036,9047],"content":"ElementInit","needQuote":true,"needEscape":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[9271,9294],"content":"IEnumerable<ph id=\"ph1\">&lt;Expression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Expression>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.ElementInit\n  id: ElementInit\n  children:\n  - System.Linq.Expressions.ElementInit.AddMethod\n  - System.Linq.Expressions.ElementInit.Arguments\n  - System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount\n  - System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)\n  - System.Linq.Expressions.ElementInit.ToString\n  - System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  langs:\n  - csharp\n  name: ElementInit\n  nameWithType: ElementInit\n  fullName: System.Linq.Expressions.ElementInit\n  type: Class\n  syntax:\n    content: 'public sealed class ElementInit : System.Linq.Expressions.IArgumentProvider'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Linq.Expressions.IArgumentProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ElementInit.AddMethod\n  id: AddMethod\n  parent: System.Linq.Expressions.ElementInit\n  langs:\n  - csharp\n  name: AddMethod\n  nameWithType: ElementInit.AddMethod\n  fullName: System.Linq.Expressions.ElementInit.AddMethod\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public System.Reflection.MethodInfo AddMethod { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ElementInit.Arguments\n  id: Arguments\n  parent: System.Linq.Expressions.ElementInit\n  langs:\n  - csharp\n  name: Arguments\n  nameWithType: ElementInit.Arguments\n  fullName: System.Linq.Expressions.ElementInit.Arguments\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression> Arguments { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount\n  id: System#Linq#Expressions#IArgumentProvider#ArgumentCount\n  isEii: true\n  parent: System.Linq.Expressions.ElementInit\n  langs:\n  - csharp\n  name: System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  nameWithType: ElementInit.System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  fullName: System.Linq.Expressions.ElementInit.System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: int System.Linq.Expressions.IArgumentProvider.ArgumentCount { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)\n  id: System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)\n  isEii: true\n  parent: System.Linq.Expressions.ElementInit\n  langs:\n  - csharp\n  name: System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)\n  nameWithType: ElementInit.System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)\n  fullName: System.Linq.Expressions.ElementInit.System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: System.Linq.Expressions.Expression IArgumentProvider.GetArgument (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ElementInit.ToString\n  id: ToString\n  parent: System.Linq.Expressions.ElementInit\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ElementInit.ToString()\n  fullName: System.Linq.Expressions.ElementInit.ToString()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  id: Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.ElementInit\n  langs:\n  - csharp\n  name: Update(IEnumerable<Expression>)\n  nameWithType: ElementInit.Update(IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.ElementInit.Update(IEnumerable<Expression>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public System.Linq.Expressions.ElementInit Update (System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);\n    parameters:\n    - id: arguments\n      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.ElementInit\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Linq.Expressions.ElementInit.AddMethod\n  parent: System.Linq.Expressions.ElementInit\n  isExternal: false\n  name: AddMethod\n  nameWithType: ElementInit.AddMethod\n  fullName: System.Linq.Expressions.ElementInit.AddMethod\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Linq.Expressions.ElementInit.Arguments\n  parent: System.Linq.Expressions.ElementInit\n  isExternal: false\n  name: Arguments\n  nameWithType: ElementInit.Arguments\n  fullName: System.Linq.Expressions.ElementInit.Arguments\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<Expression>\n  nameWithType: ReadOnlyCollection<Expression>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>\n- uid: System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount\n  parent: System.Linq.Expressions.ElementInit\n  isExternal: false\n  name: System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  nameWithType: ElementInit.System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  fullName: System.Linq.Expressions.ElementInit.System.Linq.Expressions.IArgumentProvider.ArgumentCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)\n  parent: System.Linq.Expressions.ElementInit\n  isExternal: false\n  name: System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)\n  nameWithType: ElementInit.System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)\n  fullName: System.Linq.Expressions.ElementInit.System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.Expressions.ElementInit.ToString\n  parent: System.Linq.Expressions.ElementInit\n  isExternal: false\n  name: ToString()\n  nameWithType: ElementInit.ToString()\n  fullName: System.Linq.Expressions.ElementInit.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.ElementInit\n  isExternal: false\n  name: Update(IEnumerable<Expression>)\n  nameWithType: ElementInit.Update(IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.ElementInit.Update(IEnumerable<Expression>)\n- uid: System.Linq.Expressions.ElementInit\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ElementInit\n  nameWithType: ElementInit\n  fullName: System.Linq.Expressions.ElementInit\n- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Expression>\n  nameWithType: IEnumerable<Expression>\n  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>\n"}