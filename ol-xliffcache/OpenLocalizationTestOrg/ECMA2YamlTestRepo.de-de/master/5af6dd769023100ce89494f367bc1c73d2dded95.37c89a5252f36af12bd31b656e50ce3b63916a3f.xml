{"nodes":[{"pos":[1694,1705],"content":"Interlocked","needQuote":true,"needEscape":true,"nodes":[{"content":"Interlocked","pos":[0,11]}]},{"pos":[2410,2426],"content":"Add(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Int32,Int32)","pos":[0,16]}]},{"pos":[2759,2793],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2854,2888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2945,2979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3248,3264],"content":"Add(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Int64,Int64)","pos":[0,16]}]},{"pos":[3600,3634],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3695,3729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3786,3820],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4145,4182],"content":"CompareExchange(Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Double,Double,Double)","pos":[0,37]}]},{"pos":[4597,4631],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4693,4727],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4793,4827],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4885,4919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5250,5284],"content":"CompareExchange(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Int32,Int32,Int32)","pos":[0,34]}]},{"pos":[5680,5714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5775,5809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5874,5908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5965,5999],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6330,6364],"content":"CompareExchange(Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Int64,Int64,Int64)","pos":[0,34]}]},{"pos":[6764,6798],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6859,6893],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6958,6992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7049,7083],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7420,7457],"content":"CompareExchange(IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(IntPtr,IntPtr,IntPtr)","pos":[0,37]}]},{"pos":[7872,7906],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7968,8002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8068,8102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8160,8194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8531,8568],"content":"CompareExchange(Object,Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Object,Object,Object)","pos":[0,37]}]},{"pos":[8983,9017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9079,9113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9179,9213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9271,9305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9642,9679],"content":"CompareExchange(Single,Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Single,Single,Single)","pos":[0,37]}]},{"pos":[10090,10124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10186,10220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10286,10320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10378,10412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10695,10717],"content":"CompareExchange(T,T,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(T,T,T)","pos":[0,22]}]},{"pos":[11091,11125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11175,11209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11263,11297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11343,11377],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11586,11602],"content":"Decrement(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrement(Int32)","pos":[0,16]}]},{"pos":[11928,11962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12019,12053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12314,12330],"content":"Decrement(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrement(Int64)","pos":[0,16]}]},{"pos":[12658,12692],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12749,12783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13072,13095],"content":"Exchange(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Double,Double)","pos":[0,23]}]},{"pos":[13457,13491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13553,13587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13645,13679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13963,13984],"content":"Exchange(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Int32,Int32)","pos":[0,21]}]},{"pos":[14332,14366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14427,14461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14518,14552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14836,14857],"content":"Exchange(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Int64,Int64)","pos":[0,21]}]},{"pos":[15208,15242],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15303,15337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15394,15428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15716,15739],"content":"Exchange(IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(IntPtr,IntPtr)","pos":[0,23]}]},{"pos":[16101,16135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16197,16231],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16289,16323],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16611,16634],"content":"Exchange(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Object,Object)","pos":[0,23]}]},{"pos":[16996,17030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17092,17126],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17184,17218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17506,17529],"content":"Exchange(Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Single,Single)","pos":[0,23]}]},{"pos":[17888,17922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17984,18018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18076,18110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18364,18377],"content":"Exchange(T,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(T,T)","pos":[0,13]}]},{"pos":[18713,18747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18797,18831],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18877,18911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19120,19136],"content":"Increment(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Increment(Int32)","pos":[0,16]}]},{"pos":[19462,19496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19553,19587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19848,19864],"content":"Increment(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Increment(Int64)","pos":[0,16]}]},{"pos":[20192,20226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20283,20317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20556,20571],"content":"MemoryBarrier()","needQuote":true,"needEscape":true,"nodes":[{"content":"MemoryBarrier()","pos":[0,15]}]},{"pos":[21022,21033],"content":"Read(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Int64)","pos":[0,11]}]},{"pos":[21346,21380],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21437,21471],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21582,21595],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[21731,21747],"content":"Add(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Int32,Int32)","pos":[0,16]}]},{"pos":[21916,21921],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22034,22039],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22152,22157],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22340,22356],"content":"Add(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Int64,Int64)","pos":[0,16]}]},{"pos":[22525,22530],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[22643,22648],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[22761,22766],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[22977,23014],"content":"CompareExchange(Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Double,Double,Double)","pos":[0,37]}]},{"pos":[23226,23232],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[23348,23354],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[23470,23476],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[23592,23598],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[23808,23842],"content":"CompareExchange(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Int32,Int32,Int32)","pos":[0,34]}]},{"pos":[24047,24052],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24165,24170],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24283,24288],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24401,24406],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24614,24648],"content":"CompareExchange(Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Int64,Int64,Int64)","pos":[0,34]}]},{"pos":[24853,24858],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[24971,24976],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[25089,25094],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[25207,25212],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[25423,25460],"content":"CompareExchange(IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(IntPtr,IntPtr,IntPtr)","pos":[0,37]}]},{"pos":[25672,25678],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[25794,25800],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[25916,25922],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[26038,26044],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[26257,26294],"content":"CompareExchange(Object,Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Object,Object,Object)","pos":[0,37]}]},{"pos":[26506,26512],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26628,26634],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26750,26756],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26872,26878],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27091,27128],"content":"CompareExchange(Single,Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(Single,Single,Single)","pos":[0,37]}]},{"pos":[27340,27346],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[27462,27468],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[27584,27590],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[27706,27712],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[27898,27920],"content":"CompareExchange(T,T,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareExchange(T,T,T)","pos":[0,22]}]},{"pos":[28085,28086],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28168,28169],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28251,28252],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28334,28335],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28496,28512],"content":"Decrement(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrement(Int32)","pos":[0,16]}]},{"pos":[28681,28686],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28799,28804],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28980,28996],"content":"Decrement(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrement(Int64)","pos":[0,16]}]},{"pos":[29165,29170],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[29283,29288],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[29478,29501],"content":"Exchange(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Double,Double)","pos":[0,23]}]},{"pos":[29685,29691],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[29807,29813],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[29929,29935],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[30125,30146],"content":"Exchange(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Int32,Int32)","pos":[0,21]}]},{"pos":[30325,30330],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30443,30448],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30561,30566],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30754,30775],"content":"Exchange(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Int64,Int64)","pos":[0,21]}]},{"pos":[30954,30959],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[31072,31077],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[31190,31195],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[31385,31408],"content":"Exchange(IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(IntPtr,IntPtr)","pos":[0,23]}]},{"pos":[31592,31598],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[31714,31720],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[31836,31842],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[32034,32057],"content":"Exchange(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Object,Object)","pos":[0,23]}]},{"pos":[32241,32247],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32363,32369],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32485,32491],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32683,32706],"content":"Exchange(Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(Single,Single)","pos":[0,23]}]},{"pos":[32890,32896],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[33012,33018],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[33134,33140],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[33315,33328],"content":"Exchange(T,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exchange(T,T)","pos":[0,13]}]},{"pos":[33475,33476],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33558,33559],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33641,33642],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33803,33819],"content":"Increment(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Increment(Int32)","pos":[0,16]}]},{"pos":[33988,33993],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34106,34111],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34287,34303],"content":"Increment(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Increment(Int64)","pos":[0,16]}]},{"pos":[34472,34477],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[34590,34595],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[34760,34775],"content":"MemoryBarrier()","needQuote":true,"needEscape":true,"nodes":[{"content":"MemoryBarrier()","pos":[0,15]}]},{"pos":[35000,35011],"content":"Read(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Int64)","pos":[0,11]}]},{"pos":[35170,35175],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[35288,35293],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Interlocked\n  id: Interlocked\n  children:\n  - System.Threading.Interlocked.Add(System.Int32@,System.Int32)\n  - System.Threading.Interlocked.Add(System.Int64@,System.Int64)\n  - System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)\n  - System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)\n  - System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)\n  - System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)\n  - System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)\n  - System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)\n  - System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)\n  - System.Threading.Interlocked.Decrement(System.Int32@)\n  - System.Threading.Interlocked.Decrement(System.Int64@)\n  - System.Threading.Interlocked.Exchange(System.Double@,System.Double)\n  - System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)\n  - System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)\n  - System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)\n  - System.Threading.Interlocked.Exchange(System.Object@,System.Object)\n  - System.Threading.Interlocked.Exchange(System.Single@,System.Single)\n  - System.Threading.Interlocked.Exchange``1(``0@,``0)\n  - System.Threading.Interlocked.Increment(System.Int32@)\n  - System.Threading.Interlocked.Increment(System.Int64@)\n  - System.Threading.Interlocked.MemoryBarrier\n  - System.Threading.Interlocked.Read(System.Int64@)\n  langs:\n  - csharp\n  name: Interlocked\n  nameWithType: Interlocked\n  fullName: System.Threading.Interlocked\n  type: Class\n  syntax:\n    content: public static class Interlocked\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Add(System.Int32@,System.Int32)\n  id: Add(System.Int32@,System.Int32)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Add(Int32,Int32)\n  nameWithType: Interlocked.Add(Int32,Int32)\n  fullName: System.Threading.Interlocked.Add(Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int Add (ref int location1, int value);\n    parameters:\n    - id: location1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Add*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Add(System.Int64@,System.Int64)\n  id: Add(System.Int64@,System.Int64)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Add(Int64,Int64)\n  nameWithType: Interlocked.Add(Int64,Int64)\n  fullName: System.Threading.Interlocked.Add(Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static long Add (ref long location1, long value);\n    parameters:\n    - id: location1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: value\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Add*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)\n  id: CompareExchange(System.Double@,System.Double,System.Double)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: CompareExchange(Double,Double,Double)\n  nameWithType: Interlocked.CompareExchange(Double,Double,Double)\n  fullName: System.Threading.Interlocked.CompareExchange(Double,Double,Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static double CompareExchange (ref double location1, double value, double comparand);\n    parameters:\n    - id: location1\n      type: System.Double\n      description: Parameter description to be filled\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    - id: comparand\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.CompareExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)\n  id: CompareExchange(System.Int32@,System.Int32,System.Int32)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: CompareExchange(Int32,Int32,Int32)\n  nameWithType: Interlocked.CompareExchange(Int32,Int32,Int32)\n  fullName: System.Threading.Interlocked.CompareExchange(Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int CompareExchange (ref int location1, int value, int comparand);\n    parameters:\n    - id: location1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: comparand\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.CompareExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)\n  id: CompareExchange(System.Int64@,System.Int64,System.Int64)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: CompareExchange(Int64,Int64,Int64)\n  nameWithType: Interlocked.CompareExchange(Int64,Int64,Int64)\n  fullName: System.Threading.Interlocked.CompareExchange(Int64,Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static long CompareExchange (ref long location1, long value, long comparand);\n    parameters:\n    - id: location1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: value\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: comparand\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.CompareExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)\n  id: CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: CompareExchange(IntPtr,IntPtr,IntPtr)\n  nameWithType: Interlocked.CompareExchange(IntPtr,IntPtr,IntPtr)\n  fullName: System.Threading.Interlocked.CompareExchange(IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static IntPtr CompareExchange (ref IntPtr location1, IntPtr value, IntPtr comparand);\n    parameters:\n    - id: location1\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: value\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: comparand\n      type: System.IntPtr\n      description: Parameter description to be filled\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.CompareExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)\n  id: CompareExchange(System.Object@,System.Object,System.Object)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: CompareExchange(Object,Object,Object)\n  nameWithType: Interlocked.CompareExchange(Object,Object,Object)\n  fullName: System.Threading.Interlocked.CompareExchange(Object,Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static object CompareExchange (ref object location1, object value, object comparand);\n    parameters:\n    - id: location1\n      type: System.Object\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparand\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.CompareExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)\n  id: CompareExchange(System.Single@,System.Single,System.Single)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: CompareExchange(Single,Single,Single)\n  nameWithType: Interlocked.CompareExchange(Single,Single,Single)\n  fullName: System.Threading.Interlocked.CompareExchange(Single,Single,Single)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static float CompareExchange (ref float location1, float value, float comparand);\n    parameters:\n    - id: location1\n      type: System.Single\n      description: Parameter description to be filled\n    - id: value\n      type: System.Single\n      description: Parameter description to be filled\n    - id: comparand\n      type: System.Single\n      description: Parameter description to be filled\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.CompareExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)\n  id: CompareExchange``1(``0@,``0,``0)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: CompareExchange(T,T,T)\n  nameWithType: Interlocked.CompareExchange(T,T,T)\n  fullName: System.Threading.Interlocked.CompareExchange(T,T,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: 'public static T CompareExchange<T> (ref T location1, T value, T comparand) where T : class;'\n    parameters:\n    - id: location1\n      type: T\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    - id: comparand\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Decrement(System.Int32@)\n  id: Decrement(System.Int32@)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Decrement(Int32)\n  nameWithType: Interlocked.Decrement(Int32)\n  fullName: System.Threading.Interlocked.Decrement(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int Decrement (ref int location);\n    parameters:\n    - id: location\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Decrement*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Decrement(System.Int64@)\n  id: Decrement(System.Int64@)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Decrement(Int64)\n  nameWithType: Interlocked.Decrement(Int64)\n  fullName: System.Threading.Interlocked.Decrement(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static long Decrement (ref long location);\n    parameters:\n    - id: location\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Decrement*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Exchange(System.Double@,System.Double)\n  id: Exchange(System.Double@,System.Double)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Exchange(Double,Double)\n  nameWithType: Interlocked.Exchange(Double,Double)\n  fullName: System.Threading.Interlocked.Exchange(Double,Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static double Exchange (ref double location1, double value);\n    parameters:\n    - id: location1\n      type: System.Double\n      description: Parameter description to be filled\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Exchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)\n  id: Exchange(System.Int32@,System.Int32)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Exchange(Int32,Int32)\n  nameWithType: Interlocked.Exchange(Int32,Int32)\n  fullName: System.Threading.Interlocked.Exchange(Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int Exchange (ref int location1, int value);\n    parameters:\n    - id: location1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Exchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)\n  id: Exchange(System.Int64@,System.Int64)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Exchange(Int64,Int64)\n  nameWithType: Interlocked.Exchange(Int64,Int64)\n  fullName: System.Threading.Interlocked.Exchange(Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static long Exchange (ref long location1, long value);\n    parameters:\n    - id: location1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: value\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Exchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)\n  id: Exchange(System.IntPtr@,System.IntPtr)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Exchange(IntPtr,IntPtr)\n  nameWithType: Interlocked.Exchange(IntPtr,IntPtr)\n  fullName: System.Threading.Interlocked.Exchange(IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static IntPtr Exchange (ref IntPtr location1, IntPtr value);\n    parameters:\n    - id: location1\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: value\n      type: System.IntPtr\n      description: Parameter description to be filled\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Exchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Exchange(System.Object@,System.Object)\n  id: Exchange(System.Object@,System.Object)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Exchange(Object,Object)\n  nameWithType: Interlocked.Exchange(Object,Object)\n  fullName: System.Threading.Interlocked.Exchange(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static object Exchange (ref object location1, object value);\n    parameters:\n    - id: location1\n      type: System.Object\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Exchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Exchange(System.Single@,System.Single)\n  id: Exchange(System.Single@,System.Single)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Exchange(Single,Single)\n  nameWithType: Interlocked.Exchange(Single,Single)\n  fullName: System.Threading.Interlocked.Exchange(Single,Single)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static float Exchange (ref float location1, float value);\n    parameters:\n    - id: location1\n      type: System.Single\n      description: Parameter description to be filled\n    - id: value\n      type: System.Single\n      description: Parameter description to be filled\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Exchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Exchange``1(``0@,``0)\n  id: Exchange``1(``0@,``0)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Exchange(T,T)\n  nameWithType: Interlocked.Exchange(T,T)\n  fullName: System.Threading.Interlocked.Exchange(T,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: 'public static T Exchange<T> (ref T location1, T value) where T : class;'\n    parameters:\n    - id: location1\n      type: T\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Increment(System.Int32@)\n  id: Increment(System.Int32@)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Increment(Int32)\n  nameWithType: Interlocked.Increment(Int32)\n  fullName: System.Threading.Interlocked.Increment(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int Increment (ref int location);\n    parameters:\n    - id: location\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Increment*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Increment(System.Int64@)\n  id: Increment(System.Int64@)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Increment(Int64)\n  nameWithType: Interlocked.Increment(Int64)\n  fullName: System.Threading.Interlocked.Increment(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static long Increment (ref long location);\n    parameters:\n    - id: location\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Threading.Interlocked.Increment*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.MemoryBarrier\n  id: MemoryBarrier\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: MemoryBarrier()\n  nameWithType: Interlocked.MemoryBarrier()\n  fullName: System.Threading.Interlocked.MemoryBarrier()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static void MemoryBarrier ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Interlocked.Read(System.Int64@)\n  id: Read(System.Int64@)\n  parent: System.Threading.Interlocked\n  langs:\n  - csharp\n  name: Read(Int64)\n  nameWithType: Interlocked.Read(Int64)\n  fullName: System.Threading.Interlocked.Read(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static long Read (ref long location);\n    parameters:\n    - id: location\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Threading.Interlocked.Add(System.Int32@,System.Int32)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Add(Int32,Int32)\n  nameWithType: Interlocked.Add(Int32,Int32)\n  fullName: System.Threading.Interlocked.Add(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Interlocked.Add(System.Int64@,System.Int64)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Add(Int64,Int64)\n  nameWithType: Interlocked.Add(Int64,Int64)\n  fullName: System.Threading.Interlocked.Add(Int64,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: CompareExchange(Double,Double,Double)\n  nameWithType: Interlocked.CompareExchange(Double,Double,Double)\n  fullName: System.Threading.Interlocked.CompareExchange(Double,Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: CompareExchange(Int32,Int32,Int32)\n  nameWithType: Interlocked.CompareExchange(Int32,Int32,Int32)\n  fullName: System.Threading.Interlocked.CompareExchange(Int32,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: CompareExchange(Int64,Int64,Int64)\n  nameWithType: Interlocked.CompareExchange(Int64,Int64,Int64)\n  fullName: System.Threading.Interlocked.CompareExchange(Int64,Int64,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: CompareExchange(IntPtr,IntPtr,IntPtr)\n  nameWithType: Interlocked.CompareExchange(IntPtr,IntPtr,IntPtr)\n  fullName: System.Threading.Interlocked.CompareExchange(IntPtr,IntPtr,IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: CompareExchange(Object,Object,Object)\n  nameWithType: Interlocked.CompareExchange(Object,Object,Object)\n  fullName: System.Threading.Interlocked.CompareExchange(Object,Object,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: CompareExchange(Single,Single,Single)\n  nameWithType: Interlocked.CompareExchange(Single,Single,Single)\n  fullName: System.Threading.Interlocked.CompareExchange(Single,Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: CompareExchange(T,T,T)\n  nameWithType: Interlocked.CompareExchange(T,T,T)\n  fullName: System.Threading.Interlocked.CompareExchange(T,T,T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Threading.Interlocked.Decrement(System.Int32@)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Decrement(Int32)\n  nameWithType: Interlocked.Decrement(Int32)\n  fullName: System.Threading.Interlocked.Decrement(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Interlocked.Decrement(System.Int64@)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Decrement(Int64)\n  nameWithType: Interlocked.Decrement(Int64)\n  fullName: System.Threading.Interlocked.Decrement(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Interlocked.Exchange(System.Double@,System.Double)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Exchange(Double,Double)\n  nameWithType: Interlocked.Exchange(Double,Double)\n  fullName: System.Threading.Interlocked.Exchange(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Exchange(Int32,Int32)\n  nameWithType: Interlocked.Exchange(Int32,Int32)\n  fullName: System.Threading.Interlocked.Exchange(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Exchange(Int64,Int64)\n  nameWithType: Interlocked.Exchange(Int64,Int64)\n  fullName: System.Threading.Interlocked.Exchange(Int64,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Exchange(IntPtr,IntPtr)\n  nameWithType: Interlocked.Exchange(IntPtr,IntPtr)\n  fullName: System.Threading.Interlocked.Exchange(IntPtr,IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Threading.Interlocked.Exchange(System.Object@,System.Object)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Exchange(Object,Object)\n  nameWithType: Interlocked.Exchange(Object,Object)\n  fullName: System.Threading.Interlocked.Exchange(Object,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Interlocked.Exchange(System.Single@,System.Single)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Exchange(Single,Single)\n  nameWithType: Interlocked.Exchange(Single,Single)\n  fullName: System.Threading.Interlocked.Exchange(Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Threading.Interlocked.Exchange``1(``0@,``0)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Exchange(T,T)\n  nameWithType: Interlocked.Exchange(T,T)\n  fullName: System.Threading.Interlocked.Exchange(T,T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Threading.Interlocked.Increment(System.Int32@)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Increment(Int32)\n  nameWithType: Interlocked.Increment(Int32)\n  fullName: System.Threading.Interlocked.Increment(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Interlocked.Increment(System.Int64@)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Increment(Int64)\n  nameWithType: Interlocked.Increment(Int64)\n  fullName: System.Threading.Interlocked.Increment(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Interlocked.MemoryBarrier\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: MemoryBarrier()\n  nameWithType: Interlocked.MemoryBarrier()\n  fullName: System.Threading.Interlocked.MemoryBarrier()\n- uid: System.Threading.Interlocked.Read(System.Int64@)\n  parent: System.Threading.Interlocked\n  isExternal: false\n  name: Read(Int64)\n  nameWithType: Interlocked.Read(Int64)\n  fullName: System.Threading.Interlocked.Read(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Interlocked.Add*\n  parent: System.Threading.Interlocked\n  isExternal: false\n  nameWithType: Interlocked.\n- uid: System.Threading.Interlocked.CompareExchange*\n  parent: System.Threading.Interlocked\n  isExternal: false\n  nameWithType: Interlocked.\n- uid: System.Threading.Interlocked.Decrement*\n  parent: System.Threading.Interlocked\n  isExternal: false\n  nameWithType: Interlocked.\n- uid: System.Threading.Interlocked.Exchange*\n  parent: System.Threading.Interlocked\n  isExternal: false\n  nameWithType: Interlocked.\n- uid: System.Threading.Interlocked.Increment*\n  parent: System.Threading.Interlocked\n  isExternal: false\n  nameWithType: Interlocked.\n"}