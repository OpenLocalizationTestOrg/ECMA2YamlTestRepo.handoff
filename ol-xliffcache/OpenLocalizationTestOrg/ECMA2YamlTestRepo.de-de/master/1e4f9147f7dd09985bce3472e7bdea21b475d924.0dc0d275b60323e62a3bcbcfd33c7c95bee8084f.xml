{"nodes":[{"pos":[566,581],"content":"MutexAccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexAccessRule","pos":[0,15]}]},{"pos":[2105,2169],"content":"MutexAccessRule(IdentityReference,MutexRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexAccessRule(IdentityReference,MutexRights,AccessControlType)","pos":[0,64]}]},{"pos":[2801,2835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2931,2965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3060,3094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3511,3564],"content":"MutexAccessRule(String,MutexRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexAccessRule(String,MutexRights,AccessControlType)","pos":[0,53]}]},{"pos":[4107,4141],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4237,4271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4366,4400],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4617,4628],"content":"MutexRights","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexRights","pos":[0,11]}]},{"pos":[5008,5042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5180,5220],"content":"System.Security.AccessControl.AccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.AccessRule","pos":[0,40]}]},{"pos":[5499,5563],"content":"MutexAccessRule(IdentityReference,MutexRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexAccessRule(IdentityReference,MutexRights,AccessControlType)","pos":[0,64]}]},{"pos":[5899,5916],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[6124,6135],"content":"MutexRights","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexRights","pos":[0,11]}]},{"pos":[6341,6358],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[6701,6754],"content":"MutexAccessRule(String,MutexRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexAccessRule(String,MutexRights,AccessControlType)","pos":[0,53]}]},{"pos":[7019,7025],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7192,7203],"content":"MutexRights","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexRights","pos":[0,11]}]},{"pos":[7409,7426],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[7670,7681],"content":"MutexRights","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexRights","pos":[0,11]}]},{"pos":[7913,7924],"content":"MutexRights","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexRights","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.MutexAccessRule\n  id: MutexAccessRule\n  children:\n  - System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.MutexAccessRule.MutexRights\n  langs:\n  - csharp\n  name: MutexAccessRule\n  nameWithType: MutexAccessRule\n  fullName: System.Security.AccessControl.MutexAccessRule\n  type: Class\n  syntax:\n    content: 'public sealed class MutexAccessRule : System.Security.AccessControl.AccessRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AccessRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AccessRule.AccessControlType\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.MutexAccessRule\n  langs:\n  - csharp\n  name: MutexAccessRule(IdentityReference,MutexRights,AccessControlType)\n  nameWithType: MutexAccessRule.MutexAccessRule(IdentityReference,MutexRights,AccessControlType)\n  fullName: System.Security.AccessControl.MutexAccessRule.MutexAccessRule(IdentityReference,MutexRights,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public MutexAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: eventRights\n      type: System.Security.AccessControl.MutexRights\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.MutexAccessRule\n  langs:\n  - csharp\n  name: MutexAccessRule(String,MutexRights,AccessControlType)\n  nameWithType: MutexAccessRule.MutexAccessRule(String,MutexRights,AccessControlType)\n  fullName: System.Security.AccessControl.MutexAccessRule.MutexAccessRule(String,MutexRights,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public MutexAccessRule (string identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: Parameter description to be filled\n    - id: eventRights\n      type: System.Security.AccessControl.MutexRights\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.MutexAccessRule.MutexRights\n  id: MutexRights\n  parent: System.Security.AccessControl.MutexAccessRule\n  langs:\n  - csharp\n  name: MutexRights\n  nameWithType: MutexAccessRule.MutexRights\n  fullName: System.Security.AccessControl.MutexAccessRule.MutexRights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public System.Security.AccessControl.MutexRights MutexRights { get; }\n    return:\n      type: System.Security.AccessControl.MutexRights\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.AccessRule\n  isExternal: false\n  name: System.Security.AccessControl.AccessRule\n- uid: System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.MutexAccessRule\n  isExternal: false\n  name: MutexAccessRule(IdentityReference,MutexRights,AccessControlType)\n  nameWithType: MutexAccessRule.MutexAccessRule(IdentityReference,MutexRights,AccessControlType)\n  fullName: System.Security.AccessControl.MutexAccessRule.MutexAccessRule(IdentityReference,MutexRights,AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Security.AccessControl.MutexRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexRights\n  fullName: System.Security.AccessControl.MutexRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.MutexAccessRule\n  isExternal: false\n  name: MutexAccessRule(String,MutexRights,AccessControlType)\n  nameWithType: MutexAccessRule.MutexAccessRule(String,MutexRights,AccessControlType)\n  fullName: System.Security.AccessControl.MutexAccessRule.MutexAccessRule(String,MutexRights,AccessControlType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.MutexRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexRights\n  fullName: System.Security.AccessControl.MutexRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.MutexAccessRule.MutexRights\n  parent: System.Security.AccessControl.MutexAccessRule\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexAccessRule.MutexRights\n  fullName: System.Security.AccessControl.MutexAccessRule.MutexRights\n- uid: System.Security.AccessControl.MutexRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexRights\n  fullName: System.Security.AccessControl.MutexRights\n"}