{"nodes":[{"pos":[1544,1553],"content":"SymReader","needQuote":true,"needEscape":true,"nodes":[{"content":"SymReader","pos":[0,9]}]},{"pos":[2701,2732],"content":"SymReader(ISymUnmanagedReader*)","needQuote":true,"needEscape":true,"nodes":[{"content":"SymReader(ISymUnmanagedReader*)","pos":[0,31]}]},{"pos":[3206,3240],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3439,3448],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[4011,4027],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[4372,4406],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4669,4679],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[5235,5269],"content":"GetDocument(String,Guid,Guid,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDocument(String,Guid,Guid,Guid)","pos":[0,34]}]},{"pos":[5749,5783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5846,5880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5949,5983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6050,6084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6175,6209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6418,6432],"content":"GetDocuments()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDocuments()","pos":[0,14]}]},{"pos":[6846,6880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7101,7121],"content":"GetGlobalVariables()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetGlobalVariables()","pos":[0,20]}]},{"pos":[7553,7587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7878,7900],"content":"GetMethod(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(SymbolToken)","pos":[0,22]}]},{"pos":[8368,8402],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8491,8525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8906,8934],"content":"GetMethod(SymbolToken,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(SymbolToken,Int32)","pos":[0,28]}]},{"pos":[9427,9461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9524,9558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9647,9681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10136,10194],"content":"GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)","pos":[0,58]}]},{"pos":[10788,10822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10882,10916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10978,11012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11101,11135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11346,11361],"content":"GetNamespaces()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNamespaces()","pos":[0,15]}]},{"pos":[11780,11814],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12145,12180],"content":"GetSymAttribute(SymbolToken,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSymAttribute(SymbolToken,String)","pos":[0,35]}]},{"pos":[12655,12689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12750,12784],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12842,12876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13173,13198],"content":"GetVariables(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetVariables(SymbolToken)","pos":[0,25]}]},{"pos":[13679,13713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13806,13840],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14119,14152],"content":"ReplaceSymbolStore(String,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplaceSymbolStore(String,IntPtr)","pos":[0,33]}]},{"pos":[14565,14599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14662,14696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14973,15005],"content":"UpdateSymbolStore(String,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateSymbolStore(String,IntPtr)","pos":[0,32]}]},{"pos":[15415,15449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15512,15546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15759,15773],"content":"UserEntryPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"UserEntryPoint","pos":[0,14]}]},{"pos":[16165,16199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16341,16385],"content":"System.Diagnostics.SymbolStore.SymReaderBase","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Diagnostics.SymbolStore.SymReaderBase","pos":[0,44]}]},{"pos":[16580,16611],"content":"SymReader(ISymUnmanagedReader*)","needQuote":true,"needEscape":true,"nodes":[{"content":"SymReader(ISymUnmanagedReader*)","pos":[0,31]}]},{"pos":[16890,16899],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[17150,17166],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[17347,17354],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17542,17552],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[17844,17878],"content":"GetDocument(String,Guid,Guid,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDocument(String,Guid,Guid,Guid)","pos":[0,34]}]},{"pos":[18151,18166],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[18324,18330],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18444,18448],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[18558,18562],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[18672,18676],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[18862,18876],"content":"GetDocuments()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDocuments()","pos":[0,14]}]},{"pos":[19109,19124],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[19364,19384],"content":"GetGlobalVariables()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetGlobalVariables()","pos":[0,20]}]},{"pos":[19629,19644],"content":"ISymbolVariable","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolVariable","pos":[0,15]}]},{"pos":[19919,19941],"content":"GetMethod(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(SymbolToken)","pos":[0,22]}]},{"pos":[20188,20201],"content":"ISymbolMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolMethod","pos":[0,13]}]},{"pos":[20408,20419],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[20697,20725],"content":"GetMethod(SymbolToken,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(SymbolToken,Int32)","pos":[0,28]}]},{"pos":[20984,20997],"content":"ISymbolMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolMethod","pos":[0,13]}]},{"pos":[21204,21215],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[21364,21369],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21648,21706],"content":"GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)","pos":[0,58]}]},{"pos":[22025,22038],"content":"ISymbolMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolMethod","pos":[0,13]}]},{"pos":[22249,22264],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[22421,22426],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22539,22544],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22733,22748],"content":"GetNamespaces()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNamespaces()","pos":[0,15]}]},{"pos":[22984,23000],"content":"ISymbolNamespace","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolNamespace","pos":[0,16]}]},{"pos":[23297,23332],"content":"GetSymAttribute(SymbolToken,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSymAttribute(SymbolToken,String)","pos":[0,35]}]},{"pos":[23548,23552],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[23719,23730],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[23880,23886],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24120,24145],"content":"GetVariables(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetVariables(SymbolToken)","pos":[0,25]}]},{"pos":[24400,24415],"content":"ISymbolVariable","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolVariable","pos":[0,15]}]},{"pos":[24628,24639],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[24898,24931],"content":"ReplaceSymbolStore(String,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplaceSymbolStore(String,IntPtr)","pos":[0,33]}]},{"pos":[25145,25151],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25267,25273],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[25497,25529],"content":"UpdateSymbolStore(String,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateSymbolStore(String,IntPtr)","pos":[0,32]}]},{"pos":[25741,25747],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25863,25869],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[26061,26075],"content":"UserEntryPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"UserEntryPoint","pos":[0,14]}]},{"pos":[26304,26315],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymReader\n  id: SymReader\n  children:\n  - System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)\n  - System.Diagnostics.SymbolStore.SymReader.Dispose\n  - System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymReader.Finalize\n  - System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Diagnostics.SymbolStore.SymReader.GetDocuments\n  - System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables\n  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  - System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymReader.GetNamespaces\n  - System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  - System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)\n  - System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)\n  - System.Diagnostics.SymbolStore.SymReader.UserEntryPoint\n  langs:\n  - csharp\n  name: SymReader\n  nameWithType: SymReader\n  fullName: System.Diagnostics.SymbolStore.SymReader\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SymReader : System.Diagnostics.SymbolStore.SymReaderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolReader\n  inheritance:\n  - System.Object\n  - System.Diagnostics.SymbolStore.SymReaderBase\n  implements:\n  - System.Diagnostics.SymbolStore.ISymbolReader\n  - System.IDisposable\n  inheritedMembers:\n  - System.Diagnostics.SymbolStore.SymReaderBase.{dtor}\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)\n  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)'\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: SymReader(ISymUnmanagedReader*)\n  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)\n  fullName: System.Diagnostics.SymbolStore.SymReader.SymReader(ISymUnmanagedReader*)\n  type: Constructor\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public SymReader (System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader);\n    parameters:\n    - id: pReader\n      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose\n  id: Dispose\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SymReader.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SymReader.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.Finalize\n  id: Finalize\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: SymReader.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymReader.Finalize()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: ~SymReader ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  id: GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetDocument(String,Guid,Guid,Guid)\n  nameWithType: SymReader.GetDocument(String,Guid,Guid,Guid)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocument(String,Guid,Guid,Guid)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);\n    parameters:\n    - id: url\n      type: System.String\n      description: Parameter description to be filled\n    - id: language\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: languageVendor\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: documentType\n      type: System.Guid\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments\n  id: GetDocuments\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetDocuments()\n  nameWithType: SymReader.GetDocuments()\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocuments()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables\n  id: GetGlobalVariables\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetGlobalVariables()\n  nameWithType: SymReader.GetGlobalVariables()\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetMethod(SymbolToken)\n  nameWithType: SymReader.GetMethod(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: Parameter description to be filled\n  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetMethod(SymbolToken,Int32)\n  nameWithType: SymReader.GetMethod(SymbolToken,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n    - id: version\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: Parameter description to be filled\n  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: Parameter description to be filled\n    - id: line\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: column\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolMethod\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces\n  id: GetNamespaces\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetNamespaces()\n  nameWithType: SymReader.GetNamespaces()\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetNamespaces()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  id: GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetSymAttribute(SymbolToken,String)\n  nameWithType: SymReader.GetSymAttribute(SymbolToken,String)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(SymbolToken,String)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  id: GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: GetVariables(SymbolToken)\n  nameWithType: SymReader.GetVariables(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetVariables(SymbolToken)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)\n  id: ReplaceSymbolStore(System.String,System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: ReplaceSymbolStore(String,IntPtr)\n  nameWithType: SymReader.ReplaceSymbolStore(String,IntPtr)\n  fullName: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(String,IntPtr)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void ReplaceSymbolStore (string fileName, IntPtr stream);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n    - id: stream\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)\n  id: UpdateSymbolStore(System.String,System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: UpdateSymbolStore(String,IntPtr)\n  nameWithType: SymReader.UpdateSymbolStore(String,IntPtr)\n  fullName: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(String,IntPtr)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void UpdateSymbolStore (string fileName, IntPtr stream);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Parameter description to be filled\n    - id: stream\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint\n  id: UserEntryPoint\n  parent: System.Diagnostics.SymbolStore.SymReader\n  langs:\n  - csharp\n  name: UserEntryPoint\n  nameWithType: SymReader.UserEntryPoint\n  fullName: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Diagnostics.SymbolStore.SymReaderBase\n  isExternal: false\n  name: System.Diagnostics.SymbolStore.SymReaderBase\n- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: SymReader(ISymUnmanagedReader*)\n  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)\n  fullName: System.Diagnostics.SymbolStore.SymReader.SymReader(ISymUnmanagedReader*)\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymReader.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose()\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymReader.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymReader.Finalize\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: Finalize()\n  nameWithType: SymReader.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymReader.Finalize()\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetDocument(String,Guid,Guid,Guid)\n  nameWithType: SymReader.GetDocument(String,Guid,Guid,Guid)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocument(String,Guid,Guid,Guid)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetDocuments()\n  nameWithType: SymReader.GetDocuments()\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocuments()\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]\n- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetGlobalVariables()\n  nameWithType: SymReader.GetGlobalVariables()\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables()\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetMethod(SymbolToken)\n  nameWithType: SymReader.GetMethod(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetMethod(SymbolToken,Int32)\n  nameWithType: SymReader.GetMethod(SymbolToken,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken,Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetNamespaces()\n  nameWithType: SymReader.GetNamespaces()\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetNamespaces()\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolNamespace\n  nameWithType: ISymbolNamespace\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]\n- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetSymAttribute(SymbolToken,String)\n  nameWithType: SymReader.GetSymAttribute(SymbolToken,String)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(SymbolToken,String)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: GetVariables(SymbolToken)\n  nameWithType: SymReader.GetVariables(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymReader.GetVariables(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: ReplaceSymbolStore(String,IntPtr)\n  nameWithType: SymReader.ReplaceSymbolStore(String,IntPtr)\n  fullName: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(String,IntPtr)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: UpdateSymbolStore(String,IntPtr)\n  nameWithType: SymReader.UpdateSymbolStore(String,IntPtr)\n  fullName: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(String,IntPtr)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  name: UserEntryPoint\n  nameWithType: SymReader.UserEntryPoint\n  fullName: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.SymReader.Dispose*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  nameWithType: SymReader.\n- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod*\n  parent: System.Diagnostics.SymbolStore.SymReader\n  isExternal: false\n  nameWithType: SymReader.\n"}