{"nodes":[{"pos":[3277,3298],"content":"PathSegmentCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegmentCollection","pos":[0,21]}]},{"pos":[5439,5462],"content":"PathSegmentCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegmentCollection()","pos":[0,23]}]},{"pos":[6116,6163],"content":"PathSegmentCollection(IEnumerable<ph id=\"ph1\">&lt;PathSegment&gt;</ph>)","needQuote":true,"needEscape":true,"source":"PathSegmentCollection(IEnumerable<PathSegment>)"},{"pos":[6722,6756],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6985,7013],"content":"PathSegmentCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegmentCollection(Int32)","pos":[0,28]}]},{"pos":[7401,7435],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7698,7714],"content":"Add(PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(PathSegment)","pos":[0,16]}]},{"pos":[8103,8137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8336,8343],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[8799,8806],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[9188,9222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9481,9501],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[9902,9936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10159,10178],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[10596,10630],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10913,10945],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[11382,11416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11689,11710],"content":"Contains(PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(PathSegment)","pos":[0,21]}]},{"pos":[12114,12148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12207,12241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12540,12567],"content":"CopyTo(PathSegment[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(PathSegment[],Int32)","pos":[0,27]}]},{"pos":[12996,13030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13091,13125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13324,13329],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[13626,13660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13885,13905],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[14302,14336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14577,14596],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[14974,15008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15067,15101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15372,15398],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[15817,15851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16146,16184],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[16639,16673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16888,16903],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[17331,17365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17636,17656],"content":"IndexOf(PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(PathSegment)","pos":[0,20]}]},{"pos":[18056,18090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18147,18181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18476,18501],"content":"Insert(Int32,PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,PathSegment)","pos":[0,25]}]},{"pos":[18902,18936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19017,19051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19276,19287],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[19660,19694],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19771,19805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20074,20093],"content":"Remove(PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(PathSegment)","pos":[0,19]}]},{"pos":[20491,20525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20584,20618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20851,20866],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[21209,21243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21612,21650],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[22087,22121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22496,22536],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[23070,23104],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23435,23485],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[23914,23948],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24009,24043],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24336,24381],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[24794,24828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25109,25148],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[25544,25578],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25869,25915],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[26364,26398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26687,26723],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[27105,27139],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27196,27230],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27529,27570],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[27968,28002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28061,28095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28392,28432],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[28826,28860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28917,28951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29272,29317],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[29731,29765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29827,29861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30136,30172],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[30558,30592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30865,30900],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[31283,31317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31606,31642],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[32057,32091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32149,32183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32478,32517],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[32909,32943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33082,33123],"content":"System.Windows.Media.Animation.Animatable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.Animatable","pos":[0,41]}]},{"pos":[33261,33284],"content":"PathSegmentCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegmentCollection()","pos":[0,23]}]},{"pos":[33637,33684],"content":"PathSegmentCollection(IEnumerable<ph id=\"ph1\">&lt;PathSegment&gt;</ph>)","needQuote":true,"needEscape":true,"source":"PathSegmentCollection(IEnumerable<PathSegment>)"},{"pos":[34019,34043],"content":"IEnumerable<ph id=\"ph1\">&lt;PathSegment&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<PathSegment>"},{"pos":[34321,34349],"content":"PathSegmentCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegmentCollection(Int32)","pos":[0,28]}]},{"pos":[34566,34571],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34788,34804],"content":"Add(PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(PathSegment)","pos":[0,16]}]},{"pos":[35031,35042],"content":"PathSegment","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegment","pos":[0,11]}]},{"pos":[35253,35260],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[35507,35514],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[35733,35754],"content":"PathSegmentCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegmentCollection","pos":[0,21]}]},{"pos":[36015,36035],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[36255,36264],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[36477,36496],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[36739,36760],"content":"PathSegmentCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegmentCollection","pos":[0,21]}]},{"pos":[37033,37065],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[37309,37318],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[37556,37577],"content":"Contains(PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(PathSegment)","pos":[0,21]}]},{"pos":[37782,37789],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37940,37951],"content":"PathSegment","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegment","pos":[0,11]}]},{"pos":[38212,38239],"content":"CopyTo(PathSegment[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(PathSegment[],Int32)","pos":[0,27]}]},{"pos":[38488,38499],"content":"PathSegment","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegment","pos":[0,11]}]},{"pos":[38640,38645],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38830,38835],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[39006,39011],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39209,39229],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[39449,39458],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39680,39699],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[39900,39907],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40026,40033],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40258,40284],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[40516,40525],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[40774,40812],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[41068,41077],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[41286,41301],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[41547,41579],"content":"PathSegmentCollection+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegmentCollection+Enumerator","pos":[0,32]}]},{"pos":[41868,41888],"content":"IndexOf(PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(PathSegment)","pos":[0,20]}]},{"pos":[42089,42094],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42241,42252],"content":"PathSegment","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegment","pos":[0,11]}]},{"pos":[42511,42536],"content":"Insert(Int32,PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,PathSegment)","pos":[0,25]}]},{"pos":[42747,42752],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42899,42910],"content":"PathSegment","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegment","pos":[0,11]}]},{"pos":[43134,43145],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[43362,43373],"content":"PathSegment","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegment","pos":[0,11]}]},{"pos":[43512,43517],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43737,43756],"content":"Remove(PathSegment)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(PathSegment)","pos":[0,19]}]},{"pos":[43957,43964],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44115,44126],"content":"PathSegment","needQuote":true,"needEscape":true,"nodes":[{"content":"PathSegment","pos":[0,11]}]},{"pos":[44354,44369],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[44560,44565],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[44828,44866],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[45105,45112],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45382,45422],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[45743,45767],"content":"IEnumerator<ph id=\"ph1\">&lt;PathSegment&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<PathSegment>"},{"pos":[46090,46140],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[46401,46406],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[46519,46524],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46749,46794],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[47047,47054],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47277,47316],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[47556,47562],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47788,47834],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[48117,48128],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[48375,48411],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[48644,48649],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48763,48769],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48999,49040],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[49285,49292],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[49410,49416],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49645,49685],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[49926,49931],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[50045,50051],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50292,50337],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[50588,50593],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[50707,50713],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50931,50967],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[51202,51209],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[51428,51463],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[51696,51703],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[51930,51966],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[52200,52206],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52321,52326],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52552,52591],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[52831,52837],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.PathSegmentCollection\n  id: PathSegmentCollection\n  children:\n  - System.Windows.Media.PathSegmentCollection.#ctor\n  - System.Windows.Media.PathSegmentCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})\n  - System.Windows.Media.PathSegmentCollection.#ctor(System.Int32)\n  - System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)\n  - System.Windows.Media.PathSegmentCollection.Clear\n  - System.Windows.Media.PathSegmentCollection.Clone\n  - System.Windows.Media.PathSegmentCollection.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.PathSegmentCollection.CloneCurrentValue\n  - System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)\n  - System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)\n  - System.Windows.Media.PathSegmentCollection.Count\n  - System.Windows.Media.PathSegmentCollection.CreateInstanceCore\n  - System.Windows.Media.PathSegmentCollection.FreezeCore(System.Boolean)\n  - System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.PathSegmentCollection.GetEnumerator\n  - System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)\n  - System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)\n  - System.Windows.Media.PathSegmentCollection.Item(System.Int32)\n  - System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)\n  - System.Windows.Media.PathSegmentCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection{System#Windows#Media#PathSegment}#IsReadOnly\n  - System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#PathSegment}#GetEnumerator\n  - System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly\n  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: PathSegmentCollection\n  nameWithType: PathSegmentCollection\n  fullName: System.Windows.Media.PathSegmentCollection\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public sealed class PathSegmentCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection<System.Windows.Media.PathSegment>, System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment>, System.Collections.Generic.IList<System.Windows.Media.PathSegment>, System.Collections.IList\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.Media.PathSegment>\n  - System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment>\n  - System.Collections.Generic.IList<System.Windows.Media.PathSegment>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: PathSegmentCollection()\n  nameWithType: PathSegmentCollection.PathSegmentCollection()\n  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public PathSegmentCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})'\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: PathSegmentCollection(IEnumerable<PathSegment>)\n  nameWithType: PathSegmentCollection.PathSegmentCollection(IEnumerable<PathSegment>)\n  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection(IEnumerable<PathSegment>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public PathSegmentCollection (System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: PathSegmentCollection(Int32)\n  nameWithType: PathSegmentCollection.PathSegmentCollection(Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public PathSegmentCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)\n  id: Add(System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: Add(PathSegment)\n  nameWithType: PathSegmentCollection.Add(PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.Add(PathSegment)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Add (System.Windows.Media.PathSegment value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.PathSegment\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: PathSegmentCollection.Clear()\n  fullName: System.Windows.Media.PathSegmentCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.Clone\n  id: Clone\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: PathSegmentCollection.Clone()\n  fullName: System.Windows.Media.PathSegmentCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathSegmentCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.PathSegmentCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: PathSegmentCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.PathSegmentCollection.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: PathSegmentCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.PathSegmentCollection.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathSegmentCollection CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.PathSegmentCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: PathSegmentCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)\n  id: Contains(System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: Contains(PathSegment)\n  nameWithType: PathSegmentCollection.Contains(PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.Contains(PathSegment)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Contains (System.Windows.Media.PathSegment value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.PathSegment\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)\n  id: CopyTo(System.Windows.Media.PathSegment[],System.Int32)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: CopyTo(PathSegment[],Int32)\n  nameWithType: PathSegmentCollection.CopyTo(PathSegment[],Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.CopyTo(PathSegment[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void CopyTo (System.Windows.Media.PathSegment[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Media.PathSegment[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.Count\n  id: Count\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: PathSegmentCollection.Count\n  fullName: System.Windows.Media.PathSegmentCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: PathSegmentCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.PathSegmentCollection.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: PathSegmentCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.PathSegmentCollection.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: PathSegmentCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: PathSegmentCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: PathSegmentCollection.GetEnumerator()\n  fullName: System.Windows.Media.PathSegmentCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathSegmentCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.Media.PathSegmentCollection.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)\n  id: IndexOf(System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: IndexOf(PathSegment)\n  nameWithType: PathSegmentCollection.IndexOf(PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.IndexOf(PathSegment)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int IndexOf (System.Windows.Media.PathSegment value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.PathSegment\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)\n  id: Insert(System.Int32,System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: Insert(Int32,PathSegment)\n  nameWithType: PathSegmentCollection.Insert(Int32,PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.Insert(Int32,PathSegment)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Insert (int index, System.Windows.Media.PathSegment value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Windows.Media.PathSegment\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: PathSegmentCollection.Item(Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathSegment this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.PathSegment\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)\n  id: Remove(System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: Remove(PathSegment)\n  nameWithType: PathSegmentCollection.Remove(PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.Remove(PathSegment)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Remove (System.Windows.Media.PathSegment value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.PathSegment\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: PathSegmentCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection{System#Windows#Media#PathSegment}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Windows#Media#PathSegment}#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: PathSegmentCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Windows.Media.PathSegment>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#PathSegment}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Windows#Media#PathSegment}#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: PathSegmentCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Windows.Media.PathSegment> IEnumerable<PathSegment>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.Media.PathSegment}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: PathSegmentCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: PathSegmentCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: PathSegmentCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: PathSegmentCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: PathSegmentCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: PathSegmentCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.PathSegmentCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.PathSegmentCollection.#ctor\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: PathSegmentCollection()\n  nameWithType: PathSegmentCollection.PathSegmentCollection()\n  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection()\n- uid: System.Windows.Media.PathSegmentCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: PathSegmentCollection(IEnumerable<PathSegment>)\n  nameWithType: PathSegmentCollection.PathSegmentCollection(IEnumerable<PathSegment>)\n  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection(IEnumerable<PathSegment>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<PathSegment>\n  nameWithType: IEnumerable<PathSegment>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment>\n- uid: System.Windows.Media.PathSegmentCollection.#ctor(System.Int32)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: PathSegmentCollection(Int32)\n  nameWithType: PathSegmentCollection.PathSegmentCollection(Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: Add(PathSegment)\n  nameWithType: PathSegmentCollection.Add(PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.Add(PathSegment)\n- uid: System.Windows.Media.PathSegment\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegment\n  nameWithType: PathSegment\n  fullName: System.Windows.Media.PathSegment\n- uid: System.Windows.Media.PathSegmentCollection.Clear\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: PathSegmentCollection.Clear()\n  fullName: System.Windows.Media.PathSegmentCollection.Clear()\n- uid: System.Windows.Media.PathSegmentCollection.Clone\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: PathSegmentCollection.Clone()\n  fullName: System.Windows.Media.PathSegmentCollection.Clone()\n- uid: System.Windows.Media.PathSegmentCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegmentCollection\n  nameWithType: PathSegmentCollection\n  fullName: System.Windows.Media.PathSegmentCollection\n- uid: System.Windows.Media.PathSegmentCollection.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: PathSegmentCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.PathSegmentCollection.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValue\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: PathSegmentCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.PathSegmentCollection.CloneCurrentValue()\n- uid: System.Windows.Media.PathSegmentCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegmentCollection\n  nameWithType: PathSegmentCollection\n  fullName: System.Windows.Media.PathSegmentCollection\n- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: PathSegmentCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: Contains(PathSegment)\n  nameWithType: PathSegmentCollection.Contains(PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.Contains(PathSegment)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PathSegment\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegment\n  nameWithType: PathSegment\n  fullName: System.Windows.Media.PathSegment\n- uid: System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: CopyTo(PathSegment[],Int32)\n  nameWithType: PathSegmentCollection.CopyTo(PathSegment[],Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.CopyTo(PathSegment[],Int32)\n- uid: System.Windows.Media.PathSegment\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegment\n  nameWithType: PathSegment\n  fullName: System.Windows.Media.PathSegment[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PathSegmentCollection.Count\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: Count\n  nameWithType: PathSegmentCollection.Count\n  fullName: System.Windows.Media.PathSegmentCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PathSegmentCollection.CreateInstanceCore\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: PathSegmentCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.PathSegmentCollection.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.PathSegmentCollection.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: PathSegmentCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.PathSegmentCollection.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: PathSegmentCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: PathSegmentCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.PathSegmentCollection.GetEnumerator\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: PathSegmentCollection.GetEnumerator()\n  fullName: System.Windows.Media.PathSegmentCollection.GetEnumerator()\n- uid: System.Windows.Media.PathSegmentCollection.Enumerator\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegmentCollection+Enumerator\n  nameWithType: PathSegmentCollection+Enumerator\n  fullName: System.Windows.Media.PathSegmentCollection+Enumerator\n- uid: System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: IndexOf(PathSegment)\n  nameWithType: PathSegmentCollection.IndexOf(PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.IndexOf(PathSegment)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PathSegment\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegment\n  nameWithType: PathSegment\n  fullName: System.Windows.Media.PathSegment\n- uid: System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: Insert(Int32,PathSegment)\n  nameWithType: PathSegmentCollection.Insert(Int32,PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.Insert(Int32,PathSegment)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PathSegment\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegment\n  nameWithType: PathSegment\n  fullName: System.Windows.Media.PathSegment\n- uid: System.Windows.Media.PathSegmentCollection.Item(System.Int32)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: PathSegmentCollection.Item(Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.Item(Int32)\n- uid: System.Windows.Media.PathSegment\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegment\n  nameWithType: PathSegment\n  fullName: System.Windows.Media.PathSegment\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: Remove(PathSegment)\n  nameWithType: PathSegmentCollection.Remove(PathSegment)\n  fullName: System.Windows.Media.PathSegmentCollection.Remove(PathSegment)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PathSegment\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathSegment\n  nameWithType: PathSegment\n  fullName: System.Windows.Media.PathSegment\n- uid: System.Windows.Media.PathSegmentCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: PathSegmentCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection{System#Windows#Media#PathSegment}#IsReadOnly\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: PathSegmentCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#PathSegment}#GetEnumerator\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: PathSegmentCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.Media.PathSegment}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<PathSegment>\n  nameWithType: IEnumerator<PathSegment>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.Media.PathSegment>\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: PathSegmentCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: PathSegmentCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: PathSegmentCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: PathSegmentCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: PathSegmentCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: PathSegmentCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.PathSegmentCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: PathSegmentCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}