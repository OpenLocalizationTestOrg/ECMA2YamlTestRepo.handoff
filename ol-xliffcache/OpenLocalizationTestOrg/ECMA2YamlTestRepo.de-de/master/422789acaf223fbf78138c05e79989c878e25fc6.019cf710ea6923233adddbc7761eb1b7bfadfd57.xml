{"nodes":[{"pos":[453,462],"content":"AuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[2003,2090],"content":"AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)","pos":[0,87]}]},{"pos":[2861,2895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2961,2995],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3064,3098],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3204,3238],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3344,3378],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3472,3506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3709,3719],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[4082,4116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4261,4308],"content":"System.Security.AccessControl.AuthorizationRule","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.AuthorizationRule","pos":[0,47]}]},{"pos":[4648,4735],"content":"AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)","pos":[0,87]}]},{"pos":[5105,5122],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[5278,5283],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[5398,5405],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5579,5595],"content":"InheritanceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[5810,5826],"content":"PropagationFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[6035,6045],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[6262,6272],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[6489,6499],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.AuditRule\n  id: AuditRule\n  children:\n  - System.Security.AccessControl.AuditRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.AuditRule.AuditFlags\n  langs:\n  - csharp\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n  type: Class\n  syntax:\n    content: 'public abstract class AuditRule : System.Security.AccessControl.AuthorizationRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AuditRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.AuditRule\n  langs:\n  - csharp\n  name: AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule.AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule.AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: protected AuditRule (System.Security.Principal.IdentityReference identity, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags auditFlags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: accessMask\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: isInherited\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Parameter description to be filled\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Parameter description to be filled\n    - id: auditFlags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AuditRule.AuditFlags\n  id: AuditFlags\n  parent: System.Security.AccessControl.AuditRule\n  langs:\n  - csharp\n  name: AuditFlags\n  nameWithType: AuditRule.AuditFlags\n  fullName: System.Security.AccessControl.AuditRule.AuditFlags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public System.Security.AccessControl.AuditFlags AuditFlags { get; }\n    return:\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: System.Security.AccessControl.AuthorizationRule\n- uid: System.Security.AccessControl.AuditRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule.AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule.AuditRule(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.AuditRule.AuditFlags\n  parent: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditRule.AuditFlags\n  fullName: System.Security.AccessControl.AuditRule.AuditFlags\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n"}