{"nodes":[{"pos":[1624,1637],"content":"EventProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"EventProvider","pos":[0,13]}]},{"pos":[2390,2409],"content":"EventProvider(Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventProvider(Guid)","pos":[0,19]}]},{"pos":[2772,2806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3003,3010],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[3487,3505],"content":"CreateActivityId()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateActivityId()","pos":[0,18]}]},{"pos":[3851,3885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4086,4095],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[4647,4663],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[5022,5056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5322,5332],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[5816,5840],"content":"GetLastWriteEventError()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLastWriteEventError()","pos":[0,24]}]},{"pos":[6311,6345],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6550,6561],"content":"IsEnabled()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled()","pos":[0,11]}]},{"pos":[6882,6916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7238,7259],"content":"IsEnabled(Byte,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled(Byte,Int64)","pos":[0,21]}]},{"pos":[7623,7657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7721,7755],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7814,7848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8154,8173],"content":"SetActivityId(Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetActivityId(Guid)","pos":[0,19]}]},{"pos":[8527,8561],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8892,8928],"content":"WriteEvent(EventDescriptor,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(EventDescriptor,Object[])","pos":[0,36]}]},{"pos":[9426,9460],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9531,9565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9624,9658],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10051,10085],"content":"WriteEvent(EventDescriptor,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(EventDescriptor,String)","pos":[0,34]}]},{"pos":[10569,10603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10664,10698],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10757,10791],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11210,11250],"content":"WriteEvent(EventDescriptor,Int32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(EventDescriptor,Int32,IntPtr)","pos":[0,40]}]},{"pos":[11764,11798],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11863,11897],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11958,11992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12051,12085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12402,12427],"content":"WriteMessageEvent(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteMessageEvent(String)","pos":[0,25]}]},{"pos":[12810,12844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12903,12937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13311,13347],"content":"WriteMessageEvent(String,Byte,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteMessageEvent(String,Byte,Int64)","pos":[0,36]}]},{"pos":[13789,13823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13888,13922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13991,14025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14084,14118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14562,14611],"content":"WriteTransferEvent(EventDescriptor,Guid,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteTransferEvent(EventDescriptor,Guid,Object[])","pos":[0,49]}]},{"pos":[15167,15201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15273,15307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15378,15412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15471,15505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15972,16025],"content":"WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)","pos":[0,53]}]},{"pos":[16597,16631],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16703,16737],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16802,16836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16897,16931],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16990,17024],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17209,17222],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[17371,17390],"content":"EventProvider(Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventProvider(Guid)","pos":[0,19]}]},{"pos":[17579,17583],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[17764,17771],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[18018,18036],"content":"CreateActivityId()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateActivityId()","pos":[0,18]}]},{"pos":[18223,18227],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[18410,18419],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[18677,18693],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[18879,18886],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19076,19086],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[19345,19369],"content":"GetLastWriteEventError()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLastWriteEventError()","pos":[0,24]}]},{"pos":[19639,19672],"content":"EventProvider+WriteEventErrorCode","needQuote":true,"needEscape":true,"nodes":[{"content":"EventProvider+WriteEventErrorCode","pos":[0,33]}]},{"pos":[19936,19947],"content":"IsEnabled()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled()","pos":[0,11]}]},{"pos":[20123,20130],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20347,20368],"content":"IsEnabled(Byte,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled(Byte,Int64)","pos":[0,21]}]},{"pos":[20564,20571],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20687,20691],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[20802,20807],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[21012,21031],"content":"SetActivityId(Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetActivityId(Guid)","pos":[0,19]}]},{"pos":[21220,21224],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[21472,21508],"content":"WriteEvent(EventDescriptor,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(EventDescriptor,Object[])","pos":[0,36]}]},{"pos":[21734,21741],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21910,21925],"content":"EventDescriptor","needQuote":true,"needEscape":true,"nodes":[{"content":"EventDescriptor","pos":[0,15]}]},{"pos":[22080,22086],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22338,22372],"content":"WriteEvent(EventDescriptor,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(EventDescriptor,String)","pos":[0,34]}]},{"pos":[22594,22601],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22770,22785],"content":"EventDescriptor","needQuote":true,"needEscape":true,"nodes":[{"content":"EventDescriptor","pos":[0,15]}]},{"pos":[22940,22946],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23209,23249],"content":"WriteEvent(EventDescriptor,Int32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(EventDescriptor,Int32,IntPtr)","pos":[0,40]}]},{"pos":[23483,23490],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23659,23674],"content":"EventDescriptor","needQuote":true,"needEscape":true,"nodes":[{"content":"EventDescriptor","pos":[0,15]}]},{"pos":[23828,23833],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23947,23953],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[24165,24190],"content":"WriteMessageEvent(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteMessageEvent(String)","pos":[0,25]}]},{"pos":[24394,24401],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24519,24525],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24762,24798],"content":"WriteMessageEvent(String,Byte,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteMessageEvent(String,Byte,Int64)","pos":[0,36]}]},{"pos":[25024,25031],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25149,25155],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25269,25273],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[25384,25389],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[25659,25708],"content":"WriteTransferEvent(EventDescriptor,Guid,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteTransferEvent(EventDescriptor,Guid,Object[])","pos":[0,49]}]},{"pos":[25960,25967],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26136,26151],"content":"EventDescriptor","needQuote":true,"needEscape":true,"nodes":[{"content":"EventDescriptor","pos":[0,15]}]},{"pos":[26304,26308],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[26420,26426],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26711,26764],"content":"WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)","pos":[0,53]}]},{"pos":[27024,27031],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27200,27215],"content":"EventDescriptor","needQuote":true,"needEscape":true,"nodes":[{"content":"EventDescriptor","pos":[0,15]}]},{"pos":[27368,27372],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[27483,27488],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27602,27608],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.EventProvider\n  id: EventProvider\n  children:\n  - System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)\n  - System.Diagnostics.Eventing.EventProvider.Close\n  - System.Diagnostics.Eventing.EventProvider.CreateActivityId\n  - System.Diagnostics.Eventing.EventProvider.Dispose\n  - System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)\n  - System.Diagnostics.Eventing.EventProvider.Finalize\n  - System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError\n  - System.Diagnostics.Eventing.EventProvider.IsEnabled\n  - System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)\n  - System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)\n  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])\n  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)\n  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)\n  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)\n  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)\n  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])\n  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)\n  langs:\n  - csharp\n  name: EventProvider\n  nameWithType: EventProvider\n  fullName: System.Diagnostics.Eventing.EventProvider\n  type: Class\n  syntax:\n    content: 'public class EventProvider : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)\n  id: '#ctor(System.Guid)'\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: EventProvider(Guid)\n  nameWithType: EventProvider.EventProvider(Guid)\n  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public EventProvider (Guid providerGuid);\n    parameters:\n    - id: providerGuid\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.Close\n  id: Close\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: EventProvider.Close()\n  fullName: System.Diagnostics.Eventing.EventProvider.Close()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public virtual void Close ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId\n  id: CreateActivityId\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: CreateActivityId()\n  nameWithType: EventProvider.CreateActivityId()\n  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public static Guid CreateActivityId ();\n    parameters: []\n    return:\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.Dispose\n  id: Dispose\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: EventProvider.Dispose()\n  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.Eventing.EventProvider.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: EventProvider.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.Finalize\n  id: Finalize\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: EventProvider.Finalize()\n  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: ~EventProvider ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError\n  id: GetLastWriteEventError\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: GetLastWriteEventError()\n  nameWithType: EventProvider.GetLastWriteEventError()\n  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public static System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode GetLastWriteEventError ();\n    parameters: []\n    return:\n      type: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled\n  id: IsEnabled\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: IsEnabled()\n  nameWithType: EventProvider.IsEnabled()\n  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public bool IsEnabled ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)\n  id: IsEnabled(System.Byte,System.Int64)\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: IsEnabled(Byte,Int64)\n  nameWithType: EventProvider.IsEnabled(Byte,Int64)\n  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public bool IsEnabled (byte level, long keywords);\n    parameters:\n    - id: level\n      type: System.Byte\n      description: Parameter description to be filled\n    - id: keywords\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)\n  id: SetActivityId(System.Guid@)\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: SetActivityId(Guid)\n  nameWithType: EventProvider.SetActivityId(Guid)\n  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public static void SetActivityId (ref Guid id);\n    parameters:\n    - id: id\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])\n  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: WriteEvent(EventDescriptor,Object[])\n  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, object[] eventPayload);\n    parameters:\n    - id: eventDescriptor\n      type: System.Diagnostics.Eventing.EventDescriptor\n      description: Parameter description to be filled\n    - id: eventPayload\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)\n  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: WriteEvent(EventDescriptor,String)\n  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, string data);\n    parameters:\n    - id: eventDescriptor\n      type: System.Diagnostics.Eventing.EventDescriptor\n      description: Parameter description to be filled\n    - id: data\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)\n  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: WriteEvent(EventDescriptor,Int32,IntPtr)\n  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: protected bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, int dataCount, IntPtr data);\n    parameters:\n    - id: eventDescriptor\n      type: System.Diagnostics.Eventing.EventDescriptor\n      description: Parameter description to be filled\n    - id: dataCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: data\n      type: System.IntPtr\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)\n  id: WriteMessageEvent(System.String)\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: WriteMessageEvent(String)\n  nameWithType: EventProvider.WriteMessageEvent(String)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public bool WriteMessageEvent (string eventMessage);\n    parameters:\n    - id: eventMessage\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)\n  id: WriteMessageEvent(System.String,System.Byte,System.Int64)\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: WriteMessageEvent(String,Byte,Int64)\n  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public bool WriteMessageEvent (string eventMessage, byte eventLevel, long eventKeywords);\n    parameters:\n    - id: eventMessage\n      type: System.String\n      description: Parameter description to be filled\n    - id: eventLevel\n      type: System.Byte\n      description: Parameter description to be filled\n    - id: eventKeywords\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])\n  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: WriteTransferEvent(EventDescriptor,Guid,Object[])\n  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: public bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, object[] eventPayload);\n    parameters:\n    - id: eventDescriptor\n      type: System.Diagnostics.Eventing.EventDescriptor\n      description: Parameter description to be filled\n    - id: relatedActivityId\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: eventPayload\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)\n  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)\n  parent: System.Diagnostics.Eventing.EventProvider\n  langs:\n  - csharp\n  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)\n  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing\n  syntax:\n    content: protected bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, int dataCount, IntPtr data);\n    parameters:\n    - id: eventDescriptor\n      type: System.Diagnostics.Eventing.EventDescriptor\n      description: Parameter description to be filled\n    - id: relatedActivityId\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: dataCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: data\n      type: System.IntPtr\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: EventProvider(Guid)\n  nameWithType: EventProvider.EventProvider(Guid)\n  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.Eventing.EventProvider.Close\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: Close()\n  nameWithType: EventProvider.Close()\n  fullName: System.Diagnostics.Eventing.EventProvider.Close()\n- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: CreateActivityId()\n  nameWithType: EventProvider.CreateActivityId()\n  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.Eventing.EventProvider.Dispose\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: Dispose()\n  nameWithType: EventProvider.Dispose()\n  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()\n- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: EventProvider.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.EventProvider.Finalize\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: Finalize()\n  nameWithType: EventProvider.Finalize()\n  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()\n- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: GetLastWriteEventError()\n  nameWithType: EventProvider.GetLastWriteEventError()\n  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()\n- uid: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode\n  parent: System.Diagnostics.Eventing\n  isExternal: false\n  name: EventProvider+WriteEventErrorCode\n  nameWithType: EventProvider+WriteEventErrorCode\n  fullName: System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode\n- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: IsEnabled()\n  nameWithType: EventProvider.IsEnabled()\n  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: IsEnabled(Byte,Int64)\n  nameWithType: EventProvider.IsEnabled(Byte,Int64)\n  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: SetActivityId(Guid)\n  nameWithType: EventProvider.SetActivityId(Guid)\n  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: WriteEvent(EventDescriptor,Object[])\n  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.EventDescriptor\n  parent: System.Diagnostics.Eventing\n  isExternal: false\n  name: EventDescriptor\n  nameWithType: EventDescriptor\n  fullName: System.Diagnostics.Eventing.EventDescriptor\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: WriteEvent(EventDescriptor,String)\n  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.EventDescriptor\n  parent: System.Diagnostics.Eventing\n  isExternal: false\n  name: EventDescriptor\n  nameWithType: EventDescriptor\n  fullName: System.Diagnostics.Eventing.EventDescriptor\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: WriteEvent(EventDescriptor,Int32,IntPtr)\n  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.EventDescriptor\n  parent: System.Diagnostics.Eventing\n  isExternal: false\n  name: EventDescriptor\n  nameWithType: EventDescriptor\n  fullName: System.Diagnostics.Eventing.EventDescriptor\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: WriteMessageEvent(String)\n  nameWithType: EventProvider.WriteMessageEvent(String)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: WriteMessageEvent(String,Byte,Int64)\n  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: WriteTransferEvent(EventDescriptor,Guid,Object[])\n  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.EventDescriptor\n  parent: System.Diagnostics.Eventing\n  isExternal: false\n  name: EventDescriptor\n  nameWithType: EventDescriptor\n  fullName: System.Diagnostics.Eventing.EventDescriptor\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)\n  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)\n  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.EventDescriptor\n  parent: System.Diagnostics.Eventing\n  isExternal: false\n  name: EventDescriptor\n  nameWithType: EventDescriptor\n  fullName: System.Diagnostics.Eventing.EventDescriptor\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Diagnostics.Eventing.EventProvider.Dispose*\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  nameWithType: EventProvider.\n- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled*\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  nameWithType: EventProvider.\n- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent*\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  nameWithType: EventProvider.\n- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  nameWithType: EventProvider.\n- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*\n  parent: System.Diagnostics.Eventing.EventProvider\n  isExternal: false\n  nameWithType: EventProvider.\n"}