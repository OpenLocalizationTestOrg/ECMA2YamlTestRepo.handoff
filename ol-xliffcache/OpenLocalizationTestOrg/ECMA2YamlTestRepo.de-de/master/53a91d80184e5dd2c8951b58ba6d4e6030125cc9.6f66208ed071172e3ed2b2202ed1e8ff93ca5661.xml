{"nodes":[{"pos":[5375,5386],"content":"EventSource","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource","pos":[0,11]}]},{"pos":[6073,6086],"content":"EventSource()","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource()","pos":[0,13]}]},{"pos":[6573,6593],"content":"EventSource(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(Boolean)","pos":[0,20]}]},{"pos":[6975,7009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7298,7330],"content":"EventSource(EventSourceSettings)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(EventSourceSettings)","pos":[0,32]}]},{"pos":[7780,7814],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8037,8056],"content":"EventSource(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(String)","pos":[0,19]}]},{"pos":[8418,8452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8773,8814],"content":"EventSource(EventSourceSettings,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(EventSourceSettings,String[])","pos":[0,41]}]},{"pos":[9299,9333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9398,9432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9749,9788],"content":"EventSource(String,EventSourceSettings)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(String,EventSourceSettings)","pos":[0,39]}]},{"pos":[10245,10279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10375,10409],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10758,10806],"content":"EventSource(String,EventSourceSettings,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(String,EventSourceSettings,String[])","pos":[0,48]}]},{"pos":[11298,11332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11428,11462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11527,11561],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11784,11805],"content":"ConstructionException","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstructionException","pos":[0,21]}]},{"pos":[12144,12178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12405,12428],"content":"CurrentThreadActivityId","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentThreadActivityId","pos":[0,23]}]},{"pos":[12770,12804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12999,13008],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[13542,13558],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[13908,13942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14223,14243],"content":"EventCommandExecuted","needQuote":true,"needEscape":true,"nodes":[{"content":"EventCommandExecuted","pos":[0,20]}]},{"pos":[14680,14714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14911,14921],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[15430,15459],"content":"GenerateManifest(Type,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateManifest(Type,String)","pos":[0,29]}]},{"pos":[15891,15925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16013,16047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16105,16139],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16571,16621],"content":"GenerateManifest(Type,String,EventManifestOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateManifest(Type,String,EventManifestOptions)","pos":[0,50]}]},{"pos":[17150,17184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17272,17306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17402,17436],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17494,17528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17818,17831],"content":"GetGuid(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetGuid(Type)","pos":[0,13]}]},{"pos":[18180,18214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18270,18304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18525,18538],"content":"GetName(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetName(Type)","pos":[0,13]}]},{"pos":[18889,18923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18981,19015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19216,19228],"content":"GetSources()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSources()","pos":[0,12]}]},{"pos":[19688,19722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19949,19965],"content":"GetTrait(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTrait(String)","pos":[0,16]}]},{"pos":[20296,20330],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20388,20422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20611,20615],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[20893,20927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21126,21137],"content":"IsEnabled()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled()","pos":[0,11]}]},{"pos":[21449,21483],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21904,21939],"content":"IsEnabled(EventLevel,EventKeywords)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled(EventLevel,EventKeywords)","pos":[0,35]}]},{"pos":[22417,22451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22543,22577],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22636,22670],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23171,23219],"content":"IsEnabled(EventLevel,EventKeywords,EventChannel)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled(EventLevel,EventKeywords,EventChannel)","pos":[0,48]}]},{"pos":[23772,23806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23898,23932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24022,24056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24115,24149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24400,24404],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[24686,24720],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25029,25066],"content":"OnEventCommand(EventCommandEventArgs)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnEventCommand(EventCommandEventArgs)","pos":[0,37]}]},{"pos":[25539,25573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26072,26136],"content":"SendCommand(EventSource,EventCommand,IDictionary<String,String>)","needQuote":true,"needEscape":true,"nodes":[{"content":"SendCommand(EventSource,EventCommand,IDictionary&lt;String,String&gt;)","pos":[0,64],"source":"SendCommand(EventSource,EventCommand,IDictionary<String,String>)"}]},{"pos":[26765,26799],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26889,26923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27050,27084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27343,27375],"content":"SetCurrentThreadActivityId(Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetCurrentThreadActivityId(Guid)","pos":[0,32]}]},{"pos":[27771,27805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28169,28206],"content":"SetCurrentThreadActivityId(Guid,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetCurrentThreadActivityId(Guid,Guid)","pos":[0,37]}]},{"pos":[28650,28684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28766,28800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29076,29084],"content":"Settings","needQuote":true,"needEscape":true,"nodes":[{"content":"Settings","pos":[0,8]}]},{"pos":[29451,29485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29682,29692],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[30011,30045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30266,30279],"content":"Write(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"pos":[30611,30645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31016,31048],"content":"Write(String,EventSourceOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,EventSourceOptions)","pos":[0,32]}]},{"pos":[31473,31507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31603,31637],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31930,31945],"content":"Write(String,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,T)","pos":[0,15]}]},{"pos":[32292,32326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32375,32409],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32801,32835],"content":"Write(String,EventSourceOptions,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,EventSourceOptions,T)","pos":[0,34]}]},{"pos":[33275,33309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33405,33439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33488,33522],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33918,33952],"content":"Write(String,EventSourceOptions,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,EventSourceOptions,T)","pos":[0,34]}]},{"pos":[34400,34434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34530,34564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34613,34647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35095,35139],"content":"Write(String,EventSourceOptions,Guid,Guid,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,EventSourceOptions,Guid,Guid,T)","pos":[0,44]}]},{"pos":[35656,35690],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35786,35820],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35885,35919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35991,36025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36074,36108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36398,36415],"content":"WriteEvent(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32)","pos":[0,17]}]},{"pos":[36755,36789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37109,37133],"content":"WriteEvent(Int32,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Byte[])","pos":[0,24]}]},{"pos":[37500,37534],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37595,37629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37947,37970],"content":"WriteEvent(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int32)","pos":[0,23]}]},{"pos":[38332,38366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38426,38460],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38778,38801],"content":"WriteEvent(Int32,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64)","pos":[0,23]}]},{"pos":[39164,39198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39258,39292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39616,39642],"content":"WriteEvent(Int32,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Object[])","pos":[0,26]}]},{"pos":[40015,40049],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40112,40146],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40466,40490],"content":"WriteEvent(Int32,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String)","pos":[0,24]}]},{"pos":[40857,40891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40952,40986],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41330,41359],"content":"WriteEvent(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int32,Int32)","pos":[0,29]}]},{"pos":[41743,41777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41837,41871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41931,41965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42311,42341],"content":"WriteEvent(Int32,Int32,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int32,String)","pos":[0,30]}]},{"pos":[42730,42764],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42824,42858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42919,42953],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43299,43329],"content":"WriteEvent(Int32,Int64,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64,Byte[])","pos":[0,30]}]},{"pos":[43719,43753],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43813,43847],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43908,43942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44286,44315],"content":"WriteEvent(Int32,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64,Int64)","pos":[0,29]}]},{"pos":[44701,44735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44795,44829],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44889,44923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45269,45299],"content":"WriteEvent(Int32,Int64,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64,String)","pos":[0,30]}]},{"pos":[45689,45723],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45783,45817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45878,45912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46258,46288],"content":"WriteEvent(Int32,String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,Int32)","pos":[0,30]}]},{"pos":[46677,46711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46772,46806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46866,46900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47246,47276],"content":"WriteEvent(Int32,String,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,Int64)","pos":[0,30]}]},{"pos":[47666,47700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47761,47795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47855,47889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48237,48268],"content":"WriteEvent(Int32,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,String)","pos":[0,31]}]},{"pos":[48662,48696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48757,48791],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48852,48886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49256,49291],"content":"WriteEvent(Int32,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int32,Int32,Int32)","pos":[0,35]}]},{"pos":[49697,49731],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49791,49825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49885,49919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49979,50013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50383,50418],"content":"WriteEvent(Int32,Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64,Int64,Int64)","pos":[0,35]}]},{"pos":[50827,50861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50921,50955],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51015,51049],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51109,51143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51515,51551],"content":"WriteEvent(Int32,String,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,Int32,Int32)","pos":[0,36]}]},{"pos":[51962,51996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52057,52091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52151,52185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52245,52279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52655,52693],"content":"WriteEvent(Int32,String,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,String,String)","pos":[0,38]}]},{"pos":[53114,53148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53209,53243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53304,53338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53399,53433],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53859,53909],"content":"WriteEventCore(Int32,Int32,EventSource+EventData*)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEventCore(Int32,Int32,EventSource+EventData*)","pos":[0,50]}]},{"pos":[54395,54429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54499,54533],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54630,54664],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54991,55043],"content":"WriteEventWithRelatedActivityId(Int32,Guid,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEventWithRelatedActivityId(Int32,Guid,Object[])","pos":[0,52]}]},{"pos":[55513,55547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55619,55653],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55716,55750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56181,56258],"content":"WriteEventWithRelatedActivityIdCore(Int32,Guid<bpt id=\"p1\">*</bpt>,Int32,EventSource+EventData<ept id=\"p1\">*</ept>)","needQuote":true,"needEscape":true,"source":"WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)"},{"pos":[56844,56878],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56951,56985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57055,57089],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57186,57220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57331,57344],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[57474,57487],"content":"EventSource()","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource()","pos":[0,13]}]},{"pos":[57740,57760],"content":"EventSource(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(Boolean)","pos":[0,20]}]},{"pos":[57949,57956],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58185,58217],"content":"EventSource(EventSourceSettings)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(EventSourceSettings)","pos":[0,32]}]},{"pos":[58482,58501],"content":"EventSourceSettings","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceSettings","pos":[0,19]}]},{"pos":[58741,58760],"content":"EventSource(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(String)","pos":[0,19]}]},{"pos":[58946,58952],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59195,59236],"content":"EventSource(EventSourceSettings,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(EventSourceSettings,String[])","pos":[0,41]}]},{"pos":[59519,59538],"content":"EventSourceSettings","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceSettings","pos":[0,19]}]},{"pos":[59700,59706],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59949,59988],"content":"EventSource(String,EventSourceSettings)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(String,EventSourceSettings)","pos":[0,39]}]},{"pos":[60214,60220],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[60389,60408],"content":"EventSourceSettings","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceSettings","pos":[0,19]}]},{"pos":[60711,60759],"content":"EventSource(String,EventSourceSettings,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource(String,EventSourceSettings,String[])","pos":[0,48]}]},{"pos":[61003,61009],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61178,61197],"content":"EventSourceSettings","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceSettings","pos":[0,19]}]},{"pos":[61359,61365],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61562,61583],"content":"ConstructionException","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstructionException","pos":[0,21]}]},{"pos":[61776,61785],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[61988,62011],"content":"CurrentThreadActivityId","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentThreadActivityId","pos":[0,23]}]},{"pos":[62203,62207],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[62384,62393],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[62640,62656],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[62837,62844],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63040,63060],"content":"EventCommandExecuted","needQuote":true,"needEscape":true,"nodes":[{"content":"EventCommandExecuted","pos":[0,20]}]},{"pos":[63304,63339],"content":"EventHandler<ph id=\"ph1\">&lt;EventCommandEventArgs&gt;</ph>","needQuote":true,"needEscape":true,"source":"EventHandler<EventCommandEventArgs>"},{"pos":[63606,63616],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[63885,63914],"content":"GenerateManifest(Type,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateManifest(Type,String)","pos":[0,29]}]},{"pos":[64120,64126],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[64240,64244],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[64356,64362],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[64627,64677],"content":"GenerateManifest(Type,String,EventManifestOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateManifest(Type,String,EventManifestOptions)","pos":[0,50]}]},{"pos":[64925,64931],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[65045,65049],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[65161,65167],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[65337,65357],"content":"EventManifestOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"EventManifestOptions","pos":[0,20]}]},{"pos":[65599,65612],"content":"GetGuid(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetGuid(Type)","pos":[0,13]}]},{"pos":[65784,65788],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[65898,65902],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[66092,66105],"content":"GetName(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetName(Type)","pos":[0,13]}]},{"pos":[66279,66285],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[66399,66403],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[66583,66595],"content":"GetSources()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSources()","pos":[0,12]}]},{"pos":[66852,66876],"content":"IEnumerable<ph id=\"ph1\">&lt;EventSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<EventSource>"},{"pos":[67156,67172],"content":"GetTrait(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTrait(String)","pos":[0,16]}]},{"pos":[67352,67358],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67474,67480],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67658,67662],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[67816,67820],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[67999,68010],"content":"IsEnabled()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled()","pos":[0,11]}]},{"pos":[68181,68188],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[68453,68488],"content":"IsEnabled(EventLevel,EventKeywords)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled(EventLevel,EventKeywords)","pos":[0,35]}]},{"pos":[68707,68714],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[68876,68886],"content":"EventLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLevel","pos":[0,10]}]},{"pos":[69077,69090],"content":"EventKeywords","needQuote":true,"needEscape":true,"nodes":[{"content":"EventKeywords","pos":[0,13]}]},{"pos":[69427,69475],"content":"IsEnabled(EventLevel,EventKeywords,EventChannel)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled(EventLevel,EventKeywords,EventChannel)","pos":[0,48]}]},{"pos":[69720,69727],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[69889,69899],"content":"EventLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLevel","pos":[0,10]}]},{"pos":[70090,70103],"content":"EventKeywords","needQuote":true,"needEscape":true,"nodes":[{"content":"EventKeywords","pos":[0,13]}]},{"pos":[70299,70311],"content":"EventChannel","needQuote":true,"needEscape":true,"nodes":[{"content":"EventChannel","pos":[0,12]}]},{"pos":[70521,70525],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[70681,70687],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[70925,70962],"content":"OnEventCommand(EventCommandEventArgs)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnEventCommand(EventCommandEventArgs)","pos":[0,37]}]},{"pos":[71239,71260],"content":"EventCommandEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"EventCommandEventArgs","pos":[0,21]}]},{"pos":[71643,71707],"content":"SendCommand(EventSource,EventCommand,IDictionary<String,String>)","needQuote":true,"needEscape":true,"nodes":[{"content":"SendCommand(EventSource,EventCommand,IDictionary&lt;String,String&gt;)","pos":[0,64],"source":"SendCommand(EventSource,EventCommand,IDictionary<String,String>)"}]},{"pos":[72028,72039],"content":"EventSource","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSource","pos":[0,11]}]},{"pos":[72231,72243],"content":"EventCommand","needQuote":true,"needEscape":true,"nodes":[{"content":"EventCommand","pos":[0,12]}]},{"pos":[72465,72491],"content":"IDictionary<String,String>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;String,String&gt;","pos":[0,26],"source":"IDictionary<String,String>"}]},{"pos":[72778,72810],"content":"SetCurrentThreadActivityId(Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetCurrentThreadActivityId(Guid)","pos":[0,32]}]},{"pos":[73020,73024],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[73246,73283],"content":"SetCurrentThreadActivityId(Guid,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetCurrentThreadActivityId(Guid,Guid)","pos":[0,37]}]},{"pos":[73503,73507],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[73617,73621],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[73799,73807],"content":"Settings","needQuote":true,"needEscape":true,"nodes":[{"content":"Settings","pos":[0,8]}]},{"pos":[74024,74043],"content":"EventSourceSettings","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceSettings","pos":[0,19]}]},{"pos":[74271,74281],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[74449,74455],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[74649,74662],"content":"Write(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"pos":[74836,74842],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[75082,75114],"content":"Write(String,EventSourceOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,EventSourceOptions)","pos":[0,32]}]},{"pos":[75326,75332],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[75500,75518],"content":"EventSourceOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceOptions","pos":[0,18]}]},{"pos":[75763,75778],"content":"Write(String,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,T)","pos":[0,15]}]},{"pos":[75956,75962],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[76061,76062],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[76294,76328],"content":"Write(String,EventSourceOptions,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,EventSourceOptions,T)","pos":[0,34]}]},{"pos":[76544,76550],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[76718,76736],"content":"EventSourceOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceOptions","pos":[0,18]}]},{"pos":[76879,76880],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[77114,77148],"content":"Write(String,EventSourceOptions,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,EventSourceOptions,T)","pos":[0,34]}]},{"pos":[77364,77370],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[77538,77556],"content":"EventSourceOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceOptions","pos":[0,18]}]},{"pos":[77699,77700],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[77960,78004],"content":"Write(String,EventSourceOptions,Guid,Guid,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String,EventSourceOptions,Guid,Guid,T)","pos":[0,44]}]},{"pos":[78240,78246],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[78414,78432],"content":"EventSourceOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"EventSourceOptions","pos":[0,18]}]},{"pos":[78590,78594],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[78704,78708],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[78803,78804],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[78985,79002],"content":"WriteEvent(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32)","pos":[0,17]}]},{"pos":[79183,79188],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[79398,79422],"content":"WriteEvent(Int32,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Byte[])","pos":[0,24]}]},{"pos":[79617,79622],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[79734,79738],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[79947,79970],"content":"WriteEvent(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int32)","pos":[0,23]}]},{"pos":[80163,80168],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[80281,80286],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[80495,80518],"content":"WriteEvent(Int32,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64)","pos":[0,23]}]},{"pos":[80711,80716],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[80829,80834],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[81046,81072],"content":"WriteEvent(Int32,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Object[])","pos":[0,26]}]},{"pos":[81271,81276],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[81390,81396],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[81610,81634],"content":"WriteEvent(Int32,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String)","pos":[0,24]}]},{"pos":[81829,81834],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[81948,81954],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[82178,82207],"content":"WriteEvent(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int32,Int32)","pos":[0,29]}]},{"pos":[82412,82417],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82530,82535],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82648,82653],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82876,82906],"content":"WriteEvent(Int32,Int32,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int32,String)","pos":[0,30]}]},{"pos":[83113,83118],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83231,83236],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83350,83356],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[83581,83611],"content":"WriteEvent(Int32,Int64,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64,Byte[])","pos":[0,30]}]},{"pos":[83818,83823],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83936,83941],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[84053,84057],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[84279,84308],"content":"WriteEvent(Int32,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64,Int64)","pos":[0,29]}]},{"pos":[84513,84518],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84631,84636],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[84749,84754],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[84977,85007],"content":"WriteEvent(Int32,Int64,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64,String)","pos":[0,30]}]},{"pos":[85214,85219],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85332,85337],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[85451,85457],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[85682,85712],"content":"WriteEvent(Int32,String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,Int32)","pos":[0,30]}]},{"pos":[85919,85924],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[86038,86044],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[86159,86164],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[86387,86417],"content":"WriteEvent(Int32,String,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,Int64)","pos":[0,30]}]},{"pos":[86624,86629],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[86743,86749],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[86864,86869],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[87093,87124],"content":"WriteEvent(Int32,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,String)","pos":[0,31]}]},{"pos":[87333,87338],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[87452,87458],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[87574,87580],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[87817,87852],"content":"WriteEvent(Int32,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int32,Int32,Int32)","pos":[0,35]}]},{"pos":[88069,88074],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[88187,88192],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[88305,88310],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[88423,88428],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[88663,88698],"content":"WriteEvent(Int32,Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,Int64,Int64,Int64)","pos":[0,35]}]},{"pos":[88915,88920],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[89033,89038],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[89151,89156],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[89269,89274],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[89510,89546],"content":"WriteEvent(Int32,String,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,Int32,Int32)","pos":[0,36]}]},{"pos":[89765,89770],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[89884,89890],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[90005,90010],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[90123,90128],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[90366,90404],"content":"WriteEvent(Int32,String,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEvent(Int32,String,String,String)","pos":[0,38]}]},{"pos":[90627,90632],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[90746,90752],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[90868,90874],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[90990,90996],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[91261,91311],"content":"WriteEventCore(Int32,Int32,EventSource+EventData*)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEventCore(Int32,Int32,EventSource+EventData*)","pos":[0,50]}]},{"pos":[91558,91563],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91676,91681],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91926,91978],"content":"WriteEventWithRelatedActivityId(Int32,Guid,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteEventWithRelatedActivityId(Int32,Guid,Object[])","pos":[0,52]}]},{"pos":[92229,92234],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[92346,92350],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[92462,92468],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[92769,92846],"content":"WriteEventWithRelatedActivityIdCore(Int32,Guid<bpt id=\"p1\">*</bpt>,Int32,EventSource+EventData<ept id=\"p1\">*</ept>)","needQuote":true,"needEscape":true,"source":"WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)"},{"pos":[93147,93152],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[93265,93270],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Tracing.EventSource\n  id: EventSource\n  children:\n  - System.Diagnostics.Tracing.EventSource.#ctor\n  - System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)\n  - System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)\n  - System.Diagnostics.Tracing.EventSource.#ctor(System.String)\n  - System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])\n  - System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)\n  - System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])\n  - System.Diagnostics.Tracing.EventSource.ConstructionException\n  - System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId\n  - System.Diagnostics.Tracing.EventSource.Dispose\n  - System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)\n  - System.Diagnostics.Tracing.EventSource.EventCommandExecuted\n  - System.Diagnostics.Tracing.EventSource.Finalize\n  - System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)\n  - System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)\n  - System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)\n  - System.Diagnostics.Tracing.EventSource.GetName(System.Type)\n  - System.Diagnostics.Tracing.EventSource.GetSources\n  - System.Diagnostics.Tracing.EventSource.GetTrait(System.String)\n  - System.Diagnostics.Tracing.EventSource.Guid\n  - System.Diagnostics.Tracing.EventSource.IsEnabled\n  - System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)\n  - System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)\n  - System.Diagnostics.Tracing.EventSource.Name\n  - System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)\n  - System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})\n  - System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)\n  - System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)\n  - System.Diagnostics.Tracing.EventSource.Settings\n  - System.Diagnostics.Tracing.EventSource.ToString\n  - System.Diagnostics.Tracing.EventSource.Write(System.String)\n  - System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)\n  - System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)\n  - System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions,``0)\n  - System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions@,``0@)\n  - System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)\n  - System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)\n  - System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)\n  - System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])\n  - System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)\n  langs:\n  - csharp\n  name: EventSource\n  nameWithType: EventSource\n  fullName: System.Diagnostics.Tracing.EventSource\n  type: Class\n  syntax:\n    content: 'public class EventSource : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: EventSource()\n  nameWithType: EventSource.EventSource()\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected EventSource ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: EventSource(Boolean)\n  nameWithType: EventSource.EventSource(Boolean)\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected EventSource (bool throwOnEventWriteErrors);\n    parameters:\n    - id: throwOnEventWriteErrors\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)\n  id: '#ctor(System.Diagnostics.Tracing.EventSourceSettings)'\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: EventSource(EventSourceSettings)\n  nameWithType: EventSource.EventSource(EventSourceSettings)\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(EventSourceSettings)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings);\n    parameters:\n    - id: settings\n      type: System.Diagnostics.Tracing.EventSourceSettings\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: EventSource(String)\n  nameWithType: EventSource.EventSource(String)\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public EventSource (string eventSourceName);\n    parameters:\n    - id: eventSourceName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])\n  id: '#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])'\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: EventSource(EventSourceSettings,String[])\n  nameWithType: EventSource.EventSource(EventSourceSettings,String[])\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(EventSourceSettings,String[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings, string[] traits);\n    parameters:\n    - id: settings\n      type: System.Diagnostics.Tracing.EventSourceSettings\n      description: Parameter description to be filled\n    - id: traits\n      type: System.String[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)\n  id: '#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)'\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: EventSource(String,EventSourceSettings)\n  nameWithType: EventSource.EventSource(String,EventSourceSettings)\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(String,EventSourceSettings)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config);\n    parameters:\n    - id: eventSourceName\n      type: System.String\n      description: Parameter description to be filled\n    - id: config\n      type: System.Diagnostics.Tracing.EventSourceSettings\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])\n  id: '#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])'\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: EventSource(String,EventSourceSettings,String[])\n  nameWithType: EventSource.EventSource(String,EventSourceSettings,String[])\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(String,EventSourceSettings,String[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config, string[] traits);\n    parameters:\n    - id: eventSourceName\n      type: System.String\n      description: Parameter description to be filled\n    - id: config\n      type: System.Diagnostics.Tracing.EventSourceSettings\n      description: Parameter description to be filled\n    - id: traits\n      type: System.String[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.ConstructionException\n  id: ConstructionException\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: ConstructionException\n  nameWithType: EventSource.ConstructionException\n  fullName: System.Diagnostics.Tracing.EventSource.ConstructionException\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public Exception ConstructionException { get; }\n    return:\n      type: System.Exception\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId\n  id: CurrentThreadActivityId\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: CurrentThreadActivityId\n  nameWithType: EventSource.CurrentThreadActivityId\n  fullName: System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static Guid CurrentThreadActivityId { get; }\n    return:\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Dispose\n  id: Dispose\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: EventSource.Dispose()\n  fullName: System.Diagnostics.Tracing.EventSource.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.Tracing.EventSource.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: EventSource.Dispose(Boolean)\n  fullName: System.Diagnostics.Tracing.EventSource.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.EventCommandExecuted\n  id: EventCommandExecuted\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: EventCommandExecuted\n  nameWithType: EventSource.EventCommandExecuted\n  fullName: System.Diagnostics.Tracing.EventSource.EventCommandExecuted\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public event EventHandler<System.Diagnostics.Tracing.EventCommandEventArgs> EventCommandExecuted;\n    return:\n      type: System.EventHandler{System.Diagnostics.Tracing.EventCommandEventArgs}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Finalize\n  id: Finalize\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: EventSource.Finalize()\n  fullName: System.Diagnostics.Tracing.EventSource.Finalize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: ~EventSource ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)\n  id: GenerateManifest(System.Type,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: GenerateManifest(Type,String)\n  nameWithType: EventSource.GenerateManifest(Type,String)\n  fullName: System.Diagnostics.Tracing.EventSource.GenerateManifest(Type,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest);\n    parameters:\n    - id: eventSourceType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: assemblyPathToIncludeInManifest\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.GenerateManifest*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)\n  id: GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: GenerateManifest(Type,String,EventManifestOptions)\n  nameWithType: EventSource.GenerateManifest(Type,String,EventManifestOptions)\n  fullName: System.Diagnostics.Tracing.EventSource.GenerateManifest(Type,String,EventManifestOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest, System.Diagnostics.Tracing.EventManifestOptions flags);\n    parameters:\n    - id: eventSourceType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: assemblyPathToIncludeInManifest\n      type: System.String\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Diagnostics.Tracing.EventManifestOptions\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.GenerateManifest*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)\n  id: GetGuid(System.Type)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: GetGuid(Type)\n  nameWithType: EventSource.GetGuid(Type)\n  fullName: System.Diagnostics.Tracing.EventSource.GetGuid(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static Guid GetGuid (Type eventSourceType);\n    parameters:\n    - id: eventSourceType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.GetName(System.Type)\n  id: GetName(System.Type)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: GetName(Type)\n  nameWithType: EventSource.GetName(Type)\n  fullName: System.Diagnostics.Tracing.EventSource.GetName(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static string GetName (Type eventSourceType);\n    parameters:\n    - id: eventSourceType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.GetSources\n  id: GetSources\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: GetSources()\n  nameWithType: EventSource.GetSources()\n  fullName: System.Diagnostics.Tracing.EventSource.GetSources()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static System.Collections.Generic.IEnumerable<System.Diagnostics.Tracing.EventSource> GetSources ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Diagnostics.Tracing.EventSource}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.GetTrait(System.String)\n  id: GetTrait(System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: GetTrait(String)\n  nameWithType: EventSource.GetTrait(String)\n  fullName: System.Diagnostics.Tracing.EventSource.GetTrait(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public string GetTrait (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Guid\n  id: Guid\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Guid\n  nameWithType: EventSource.Guid\n  fullName: System.Diagnostics.Tracing.EventSource.Guid\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public Guid Guid { get; }\n    return:\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.IsEnabled\n  id: IsEnabled\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: IsEnabled()\n  nameWithType: EventSource.IsEnabled()\n  fullName: System.Diagnostics.Tracing.EventSource.IsEnabled()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public bool IsEnabled ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.IsEnabled*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)\n  id: IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: IsEnabled(EventLevel,EventKeywords)\n  nameWithType: EventSource.IsEnabled(EventLevel,EventKeywords)\n  fullName: System.Diagnostics.Tracing.EventSource.IsEnabled(EventLevel,EventKeywords)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords);\n    parameters:\n    - id: level\n      type: System.Diagnostics.Tracing.EventLevel\n      description: Parameter description to be filled\n    - id: keywords\n      type: System.Diagnostics.Tracing.EventKeywords\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.IsEnabled*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)\n  id: IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: IsEnabled(EventLevel,EventKeywords,EventChannel)\n  nameWithType: EventSource.IsEnabled(EventLevel,EventKeywords,EventChannel)\n  fullName: System.Diagnostics.Tracing.EventSource.IsEnabled(EventLevel,EventKeywords,EventChannel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords, System.Diagnostics.Tracing.EventChannel channel);\n    parameters:\n    - id: level\n      type: System.Diagnostics.Tracing.EventLevel\n      description: Parameter description to be filled\n    - id: keywords\n      type: System.Diagnostics.Tracing.EventKeywords\n      description: Parameter description to be filled\n    - id: channel\n      type: System.Diagnostics.Tracing.EventChannel\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.IsEnabled*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Name\n  id: Name\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Name\n  nameWithType: EventSource.Name\n  fullName: System.Diagnostics.Tracing.EventSource.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)\n  id: OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: OnEventCommand(EventCommandEventArgs)\n  nameWithType: EventSource.OnEventCommand(EventCommandEventArgs)\n  fullName: System.Diagnostics.Tracing.EventSource.OnEventCommand(EventCommandEventArgs)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected virtual void OnEventCommand (System.Diagnostics.Tracing.EventCommandEventArgs command);\n    parameters:\n    - id: command\n      type: System.Diagnostics.Tracing.EventCommandEventArgs\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})\n  id: SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: SendCommand(EventSource,EventCommand,IDictionary<String,String>)\n  nameWithType: EventSource.SendCommand(EventSource,EventCommand,IDictionary<String,String>)\n  fullName: System.Diagnostics.Tracing.EventSource.SendCommand(EventSource,EventCommand,IDictionary<String,String>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static void SendCommand (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary<string,string> commandArguments);\n    parameters:\n    - id: eventSource\n      type: System.Diagnostics.Tracing.EventSource\n      description: Parameter description to be filled\n    - id: command\n      type: System.Diagnostics.Tracing.EventCommand\n      description: Parameter description to be filled\n    - id: commandArguments\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)\n  id: SetCurrentThreadActivityId(System.Guid)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: SetCurrentThreadActivityId(Guid)\n  nameWithType: EventSource.SetCurrentThreadActivityId(Guid)\n  fullName: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static void SetCurrentThreadActivityId (Guid activityId);\n    parameters:\n    - id: activityId\n      type: System.Guid\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)\n  id: SetCurrentThreadActivityId(System.Guid,System.Guid@)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: SetCurrentThreadActivityId(Guid,Guid)\n  nameWithType: EventSource.SetCurrentThreadActivityId(Guid,Guid)\n  fullName: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(Guid,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public static void SetCurrentThreadActivityId (Guid activityId, out Guid oldActivityThatWillContinue);\n    parameters:\n    - id: activityId\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: oldActivityThatWillContinue\n      type: System.Guid\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Settings\n  id: Settings\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Settings\n  nameWithType: EventSource.Settings\n  fullName: System.Diagnostics.Tracing.EventSource.Settings\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public System.Diagnostics.Tracing.EventSourceSettings Settings { get; }\n    return:\n      type: System.Diagnostics.Tracing.EventSourceSettings\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.ToString\n  id: ToString\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: EventSource.ToString()\n  fullName: System.Diagnostics.Tracing.EventSource.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Write(System.String)\n  id: Write(System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: EventSource.Write(String)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void Write (string eventName);\n    parameters:\n    - id: eventName\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.Write*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)\n  id: Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Write(String,EventSourceOptions)\n  nameWithType: EventSource.Write(String,EventSourceOptions)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,EventSourceOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void Write (string eventName, System.Diagnostics.Tracing.EventSourceOptions options);\n    parameters:\n    - id: eventName\n      type: System.String\n      description: Parameter description to be filled\n    - id: options\n      type: System.Diagnostics.Tracing.EventSourceOptions\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.Write*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)\n  id: Write``1(System.String,``0)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Write(String,T)\n  nameWithType: EventSource.Write(String,T)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void Write<T> (string eventName, T data);\n    parameters:\n    - id: eventName\n      type: System.String\n      description: Parameter description to be filled\n    - id: data\n      type: T\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.Write<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions,``0)\n  id: Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions,``0)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Write(String,EventSourceOptions,T)\n  nameWithType: EventSource.Write(String,EventSourceOptions,T)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,EventSourceOptions,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void Write<T> (string eventName, System.Diagnostics.Tracing.EventSourceOptions options, T data);\n    parameters:\n    - id: eventName\n      type: System.String\n      description: Parameter description to be filled\n    - id: options\n      type: System.Diagnostics.Tracing.EventSourceOptions\n      description: Parameter description to be filled\n    - id: data\n      type: T\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.Write<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions@,``0@)\n  id: Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions@,``0@)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Write(String,EventSourceOptions,T)\n  nameWithType: EventSource.Write(String,EventSourceOptions,T)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,EventSourceOptions,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void Write<T> (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref T data);\n    parameters:\n    - id: eventName\n      type: System.String\n      description: Parameter description to be filled\n    - id: options\n      type: System.Diagnostics.Tracing.EventSourceOptions\n      description: Parameter description to be filled\n    - id: data\n      type: T\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.Write<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)\n  id: Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: Write(String,EventSourceOptions,Guid,Guid,T)\n  nameWithType: EventSource.Write(String,EventSourceOptions,Guid,Guid,T)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,EventSourceOptions,Guid,Guid,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: public void Write<T> (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref Guid activityId, ref Guid relatedActivityId, ref T data);\n    parameters:\n    - id: eventName\n      type: System.String\n      description: Parameter description to be filled\n    - id: options\n      type: System.Diagnostics.Tracing.EventSourceOptions\n      description: Parameter description to be filled\n    - id: activityId\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: relatedActivityId\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: data\n      type: T\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.Write<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)\n  id: WriteEvent(System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32)\n  nameWithType: EventSource.WriteEvent(Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])\n  id: WriteEvent(System.Int32,System.Byte[])\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Byte[])\n  nameWithType: EventSource.WriteEvent(Int32,Byte[])\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, byte[] arg1);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)\n  id: WriteEvent(System.Int32,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, int arg1);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)\n  id: WriteEvent(System.Int32,System.Int64)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Int64)\n  nameWithType: EventSource.WriteEvent(Int32,Int64)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, long arg1);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])\n  id: WriteEvent(System.Int32,System.Object[])\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Object[])\n  nameWithType: EventSource.WriteEvent(Int32,Object[])\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, object[] args);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)\n  id: WriteEvent(System.Int32,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,String)\n  nameWithType: EventSource.WriteEvent(Int32,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, string arg1);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)\n  id: WriteEvent(System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Int32,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,Int32,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, int arg1, int arg2);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)\n  id: WriteEvent(System.Int32,System.Int32,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Int32,String)\n  nameWithType: EventSource.WriteEvent(Int32,Int32,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int32,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, int arg1, string arg2);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])\n  id: WriteEvent(System.Int32,System.Int64,System.Byte[])\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Int64,Byte[])\n  nameWithType: EventSource.WriteEvent(Int32,Int64,Byte[])\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, long arg1, byte[] arg2);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)\n  id: WriteEvent(System.Int32,System.Int64,System.Int64)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Int64,Int64)\n  nameWithType: EventSource.WriteEvent(Int32,Int64,Int64)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, long arg1, long arg2);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)\n  id: WriteEvent(System.Int32,System.Int64,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Int64,String)\n  nameWithType: EventSource.WriteEvent(Int32,Int64,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, long arg1, string arg2);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)\n  id: WriteEvent(System.Int32,System.String,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,String,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,String,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, string arg1, int arg2);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.String\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)\n  id: WriteEvent(System.Int32,System.String,System.Int64)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,String,Int64)\n  nameWithType: EventSource.WriteEvent(Int32,String,Int64)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, string arg1, long arg2);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.String\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)\n  id: WriteEvent(System.Int32,System.String,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,String,String)\n  nameWithType: EventSource.WriteEvent(Int32,String,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, string arg1, string arg2);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.String\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Int32,Int32,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,Int32,Int32,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, int arg1, int arg2, int arg3);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg3\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)\n  id: WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,Int64,Int64,Int64)\n  nameWithType: EventSource.WriteEvent(Int32,Int64,Int64,Int64)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64,Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, long arg1, long arg2, long arg3);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: arg3\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)\n  id: WriteEvent(System.Int32,System.String,System.Int32,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,String,Int32,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,String,Int32,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, string arg1, int arg2, int arg3);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.String\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg3\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)\n  id: WriteEvent(System.Int32,System.String,System.String,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEvent(Int32,String,String,String)\n  nameWithType: EventSource.WriteEvent(Int32,String,String,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEvent (int eventId, string arg1, string arg2, string arg3);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: arg1\n      type: System.String\n      description: Parameter description to be filled\n    - id: arg2\n      type: System.String\n      description: Parameter description to be filled\n    - id: arg3\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)\n  id: WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEventCore(Int32,Int32,EventSource+EventData*)\n  nameWithType: EventSource.WriteEventCore(Int32,Int32,EventSource+EventData*)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEventCore(Int32,Int32,EventSource+EventData*)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEventCore (int eventId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: eventDataCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: data\n      type: System.Diagnostics.Tracing.EventSource+EventData*\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])\n  id: WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEventWithRelatedActivityId(Int32,Guid,Object[])\n  nameWithType: EventSource.WriteEventWithRelatedActivityId(Int32,Guid,Object[])\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(Int32,Guid,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEventWithRelatedActivityId (int eventId, Guid relatedActivityId, object[] args);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: relatedActivityId\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)\n  id: WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)\n  parent: System.Diagnostics.Tracing.EventSource\n  langs:\n  - csharp\n  name: WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)\n  nameWithType: EventSource.WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.Tracing\n  syntax:\n    content: protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* relatedActivityId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: relatedActivityId\n      type: System.Guid*\n      description: Parameter description to be filled\n    - id: eventDataCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: data\n      type: System.Diagnostics.Tracing.EventSource+EventData*\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Tracing.EventSource.#ctor\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: EventSource()\n  nameWithType: EventSource.EventSource()\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource()\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: EventSource(Boolean)\n  nameWithType: EventSource.EventSource(Boolean)\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: EventSource(EventSourceSettings)\n  nameWithType: EventSource.EventSource(EventSourceSettings)\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(EventSourceSettings)\n- uid: System.Diagnostics.Tracing.EventSourceSettings\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSourceSettings\n  nameWithType: EventSourceSettings\n  fullName: System.Diagnostics.Tracing.EventSourceSettings\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: EventSource(String)\n  nameWithType: EventSource.EventSource(String)\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: EventSource(EventSourceSettings,String[])\n  nameWithType: EventSource.EventSource(EventSourceSettings,String[])\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(EventSourceSettings,String[])\n- uid: System.Diagnostics.Tracing.EventSourceSettings\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSourceSettings\n  nameWithType: EventSourceSettings\n  fullName: System.Diagnostics.Tracing.EventSourceSettings\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: EventSource(String,EventSourceSettings)\n  nameWithType: EventSource.EventSource(String,EventSourceSettings)\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(String,EventSourceSettings)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSourceSettings\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSourceSettings\n  nameWithType: EventSourceSettings\n  fullName: System.Diagnostics.Tracing.EventSourceSettings\n- uid: System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: EventSource(String,EventSourceSettings,String[])\n  nameWithType: EventSource.EventSource(String,EventSourceSettings,String[])\n  fullName: System.Diagnostics.Tracing.EventSource.EventSource(String,EventSourceSettings,String[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSourceSettings\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSourceSettings\n  nameWithType: EventSourceSettings\n  fullName: System.Diagnostics.Tracing.EventSourceSettings\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.Diagnostics.Tracing.EventSource.ConstructionException\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: ConstructionException\n  nameWithType: EventSource.ConstructionException\n  fullName: System.Diagnostics.Tracing.EventSource.ConstructionException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: CurrentThreadActivityId\n  nameWithType: EventSource.CurrentThreadActivityId\n  fullName: System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.Tracing.EventSource.Dispose\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Dispose()\n  nameWithType: EventSource.Dispose()\n  fullName: System.Diagnostics.Tracing.EventSource.Dispose()\n- uid: System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: EventSource.Dispose(Boolean)\n  fullName: System.Diagnostics.Tracing.EventSource.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Tracing.EventSource.EventCommandExecuted\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: EventCommandExecuted\n  nameWithType: EventSource.EventCommandExecuted\n  fullName: System.Diagnostics.Tracing.EventSource.EventCommandExecuted\n- uid: System.EventHandler{System.Diagnostics.Tracing.EventCommandEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<EventCommandEventArgs>\n  nameWithType: EventHandler<EventCommandEventArgs>\n  fullName: System.EventHandler<System.Diagnostics.Tracing.EventCommandEventArgs>\n- uid: System.Diagnostics.Tracing.EventSource.Finalize\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Finalize()\n  nameWithType: EventSource.Finalize()\n  fullName: System.Diagnostics.Tracing.EventSource.Finalize()\n- uid: System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: GenerateManifest(Type,String)\n  nameWithType: EventSource.GenerateManifest(Type,String)\n  fullName: System.Diagnostics.Tracing.EventSource.GenerateManifest(Type,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: GenerateManifest(Type,String,EventManifestOptions)\n  nameWithType: EventSource.GenerateManifest(Type,String,EventManifestOptions)\n  fullName: System.Diagnostics.Tracing.EventSource.GenerateManifest(Type,String,EventManifestOptions)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventManifestOptions\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventManifestOptions\n  nameWithType: EventManifestOptions\n  fullName: System.Diagnostics.Tracing.EventManifestOptions\n- uid: System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: GetGuid(Type)\n  nameWithType: EventSource.GetGuid(Type)\n  fullName: System.Diagnostics.Tracing.EventSource.GetGuid(Type)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Diagnostics.Tracing.EventSource.GetName(System.Type)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: GetName(Type)\n  nameWithType: EventSource.GetName(Type)\n  fullName: System.Diagnostics.Tracing.EventSource.GetName(Type)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Diagnostics.Tracing.EventSource.GetSources\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: GetSources()\n  nameWithType: EventSource.GetSources()\n  fullName: System.Diagnostics.Tracing.EventSource.GetSources()\n- uid: System.Collections.Generic.IEnumerable{System.Diagnostics.Tracing.EventSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<EventSource>\n  nameWithType: IEnumerable<EventSource>\n  fullName: System.Collections.Generic.IEnumerable<System.Diagnostics.Tracing.EventSource>\n- uid: System.Diagnostics.Tracing.EventSource.GetTrait(System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: GetTrait(String)\n  nameWithType: EventSource.GetTrait(String)\n  fullName: System.Diagnostics.Tracing.EventSource.GetTrait(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.Guid\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Guid\n  nameWithType: EventSource.Guid\n  fullName: System.Diagnostics.Tracing.EventSource.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.Tracing.EventSource.IsEnabled\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: IsEnabled()\n  nameWithType: EventSource.IsEnabled()\n  fullName: System.Diagnostics.Tracing.EventSource.IsEnabled()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: IsEnabled(EventLevel,EventKeywords)\n  nameWithType: EventSource.IsEnabled(EventLevel,EventKeywords)\n  fullName: System.Diagnostics.Tracing.EventSource.IsEnabled(EventLevel,EventKeywords)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Tracing.EventLevel\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventLevel\n  nameWithType: EventLevel\n  fullName: System.Diagnostics.Tracing.EventLevel\n- uid: System.Diagnostics.Tracing.EventKeywords\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventKeywords\n  nameWithType: EventKeywords\n  fullName: System.Diagnostics.Tracing.EventKeywords\n- uid: System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: IsEnabled(EventLevel,EventKeywords,EventChannel)\n  nameWithType: EventSource.IsEnabled(EventLevel,EventKeywords,EventChannel)\n  fullName: System.Diagnostics.Tracing.EventSource.IsEnabled(EventLevel,EventKeywords,EventChannel)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Tracing.EventLevel\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventLevel\n  nameWithType: EventLevel\n  fullName: System.Diagnostics.Tracing.EventLevel\n- uid: System.Diagnostics.Tracing.EventKeywords\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventKeywords\n  nameWithType: EventKeywords\n  fullName: System.Diagnostics.Tracing.EventKeywords\n- uid: System.Diagnostics.Tracing.EventChannel\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventChannel\n  nameWithType: EventChannel\n  fullName: System.Diagnostics.Tracing.EventChannel\n- uid: System.Diagnostics.Tracing.EventSource.Name\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Name\n  nameWithType: EventSource.Name\n  fullName: System.Diagnostics.Tracing.EventSource.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: OnEventCommand(EventCommandEventArgs)\n  nameWithType: EventSource.OnEventCommand(EventCommandEventArgs)\n  fullName: System.Diagnostics.Tracing.EventSource.OnEventCommand(EventCommandEventArgs)\n- uid: System.Diagnostics.Tracing.EventCommandEventArgs\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventCommandEventArgs\n  nameWithType: EventCommandEventArgs\n  fullName: System.Diagnostics.Tracing.EventCommandEventArgs\n- uid: System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: SendCommand(EventSource,EventCommand,IDictionary<String,String>)\n  nameWithType: EventSource.SendCommand(EventSource,EventCommand,IDictionary<String,String>)\n  fullName: System.Diagnostics.Tracing.EventSource.SendCommand(EventSource,EventCommand,IDictionary<String,String>)\n- uid: System.Diagnostics.Tracing.EventSource\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSource\n  nameWithType: EventSource\n  fullName: System.Diagnostics.Tracing.EventSource\n- uid: System.Diagnostics.Tracing.EventCommand\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventCommand\n  nameWithType: EventCommand\n  fullName: System.Diagnostics.Tracing.EventCommand\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n- uid: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: SetCurrentThreadActivityId(Guid)\n  nameWithType: EventSource.SetCurrentThreadActivityId(Guid)\n  fullName: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: SetCurrentThreadActivityId(Guid,Guid)\n  nameWithType: EventSource.SetCurrentThreadActivityId(Guid,Guid)\n  fullName: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(Guid,Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.Tracing.EventSource.Settings\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Settings\n  nameWithType: EventSource.Settings\n  fullName: System.Diagnostics.Tracing.EventSource.Settings\n- uid: System.Diagnostics.Tracing.EventSourceSettings\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSourceSettings\n  nameWithType: EventSourceSettings\n  fullName: System.Diagnostics.Tracing.EventSourceSettings\n- uid: System.Diagnostics.Tracing.EventSource.ToString\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: ToString()\n  nameWithType: EventSource.ToString()\n  fullName: System.Diagnostics.Tracing.EventSource.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.Write(System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Write(String)\n  nameWithType: EventSource.Write(String)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Write(String,EventSourceOptions)\n  nameWithType: EventSource.Write(String,EventSourceOptions)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,EventSourceOptions)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSourceOptions\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSourceOptions\n  nameWithType: EventSourceOptions\n  fullName: System.Diagnostics.Tracing.EventSourceOptions\n- uid: System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Write(String,T)\n  nameWithType: EventSource.Write(String,T)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,T)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions,``0)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Write(String,EventSourceOptions,T)\n  nameWithType: EventSource.Write(String,EventSourceOptions,T)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,EventSourceOptions,T)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSourceOptions\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSourceOptions\n  nameWithType: EventSourceOptions\n  fullName: System.Diagnostics.Tracing.EventSourceOptions\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions@,``0@)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Write(String,EventSourceOptions,T)\n  nameWithType: EventSource.Write(String,EventSourceOptions,T)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,EventSourceOptions,T)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSourceOptions\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSourceOptions\n  nameWithType: EventSourceOptions\n  fullName: System.Diagnostics.Tracing.EventSourceOptions\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.``0racing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: Write(String,EventSourceOptions,Guid,Guid,T)\n  nameWithType: EventSource.Write(String,EventSourceOptions,Guid,Guid,T)\n  fullName: System.Diagnostics.Tracing.EventSource.Write(String,EventSourceOptions,Guid,Guid,T)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSourceOptions\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventSourceOptions\n  nameWithType: EventSourceOptions\n  fullName: System.Diagnostics.Tracing.EventSourceOptions\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32)\n  nameWithType: EventSource.WriteEvent(Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Byte[])\n  nameWithType: EventSource.WriteEvent(Int32,Byte[])\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Byte[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Int64)\n  nameWithType: EventSource.WriteEvent(Int32,Int64)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Object[])\n  nameWithType: EventSource.WriteEvent(Int32,Object[])\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Object[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,String)\n  nameWithType: EventSource.WriteEvent(Int32,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Int32,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,Int32,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Int32,String)\n  nameWithType: EventSource.WriteEvent(Int32,Int32,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int32,String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Int64,Byte[])\n  nameWithType: EventSource.WriteEvent(Int32,Int64,Byte[])\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64,Byte[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Int64,Int64)\n  nameWithType: EventSource.WriteEvent(Int32,Int64,Int64)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64,Int64)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Int64,String)\n  nameWithType: EventSource.WriteEvent(Int32,Int64,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64,String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,String,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,String,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,String,Int64)\n  nameWithType: EventSource.WriteEvent(Int32,String,Int64)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,Int64)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,String,String)\n  nameWithType: EventSource.WriteEvent(Int32,String,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Int32,Int32,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,Int32,Int32,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int32,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,Int64,Int64,Int64)\n  nameWithType: EventSource.WriteEvent(Int32,Int64,Int64,Int64)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,Int64,Int64,Int64)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,String,Int32,Int32)\n  nameWithType: EventSource.WriteEvent(Int32,String,Int32,Int32)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEvent(Int32,String,String,String)\n  nameWithType: EventSource.WriteEvent(Int32,String,String,String)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEvent(Int32,String,String,String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEventCore(Int32,Int32,EventSource+EventData*)\n  nameWithType: EventSource.WriteEventCore(Int32,Int32,EventSource+EventData*)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEventCore(Int32,Int32,EventSource+EventData*)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEventWithRelatedActivityId(Int32,Guid,Object[])\n  nameWithType: EventSource.WriteEventWithRelatedActivityId(Int32,Guid,Object[])\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(Int32,Guid,Object[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource+EventData*)\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  name: WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)\n  nameWithType: EventSource.WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)\n  fullName: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventSource.Dispose*\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  nameWithType: EventSource.\n- uid: System.Diagnostics.Tracing.EventSource.GenerateManifest*\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  nameWithType: EventSource.\n- uid: System.Diagnostics.Tracing.EventSource.IsEnabled*\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  nameWithType: EventSource.\n- uid: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId*\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  nameWithType: EventSource.\n- uid: System.Diagnostics.Tracing.EventSource.Write*\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  nameWithType: EventSource.\n- uid: System.Diagnostics.Tracing.EventSource.Write<T>*\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  nameWithType: EventSource.\n- uid: System.Diagnostics.Tracing.EventSource.WriteEvent*\n  parent: System.Diagnostics.Tracing.EventSource\n  isExternal: false\n  nameWithType: EventSource.\n"}