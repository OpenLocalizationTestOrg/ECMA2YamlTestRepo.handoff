{"nodes":[{"pos":[605,610],"content":"IList","needQuote":true,"needEscape":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[1070,1081],"content":"Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Object)","pos":[0,11]}]},{"pos":[1370,1404],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1461,1495],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1658,1665],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[2077,2093],"content":"Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[2398,2432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2491,2525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2722,2737],"content":"IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Object)","pos":[0,15]}]},{"pos":[3038,3072],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3129,3163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3384,3404],"content":"Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Object)","pos":[0,20]}]},{"pos":[3725,3759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3821,3855],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4030,4041],"content":"IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[4315,4349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4522,4532],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[4803,4837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5026,5037],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[5340,5374],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5432,5466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5661,5675],"content":"Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"pos":[5974,6008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6205,6220],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[6519,6553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6729,6740],"content":"Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Object)","pos":[0,11]}]},{"pos":[6889,6894],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7008,7014],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7165,7172],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[7367,7383],"content":"Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[7544,7551],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7669,7675],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7843,7858],"content":"IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Object)","pos":[0,15]}]},{"pos":[8015,8020],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8134,8140],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8320,8340],"content":"Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Object)","pos":[0,20]}]},{"pos":[8507,8512],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8626,8632],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8789,8800],"content":"IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[8951,8958],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9116,9126],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[9275,9282],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9448,9459],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[9609,9615],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9730,9735],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9900,9914],"content":"Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"pos":[10070,10076],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10244,10259],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[10416,10421],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.IList\n  id: IList\n  children:\n  - System.Collections.IList.Add(System.Object)\n  - System.Collections.IList.Clear\n  - System.Collections.IList.Contains(System.Object)\n  - System.Collections.IList.IndexOf(System.Object)\n  - System.Collections.IList.Insert(System.Int32,System.Object)\n  - System.Collections.IList.IsFixedSize\n  - System.Collections.IList.IsReadOnly\n  - System.Collections.IList.Item(System.Int32)\n  - System.Collections.IList.Remove(System.Object)\n  - System.Collections.IList.RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n  type: Interface\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IList : System.Collections.ICollection\n  implements:\n  - System.Collections.ICollection\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.Add(System.Object)\n  id: Add(System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Add(Object)\n  nameWithType: IList.Add(Object)\n  fullName: System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public int Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.Clear\n  id: Clear\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: IList.Clear()\n  fullName: System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: IList.Contains(Object)\n  fullName: System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.IndexOf(System.Object)\n  id: IndexOf(System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: IndexOf(Object)\n  nameWithType: IList.IndexOf(Object)\n  fullName: System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public int IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.Insert(System.Int32,System.Object)\n  id: Insert(System.Int32,System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Insert(Int32,Object)\n  nameWithType: IList.Insert(Int32,Object)\n  fullName: System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.IsFixedSize\n  id: IsFixedSize\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: IsFixedSize\n  nameWithType: IList.IsFixedSize\n  fullName: System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.IsReadOnly\n  id: IsReadOnly\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: IList.IsReadOnly\n  fullName: System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: IList.Item(Int32)\n  fullName: System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public object this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: Remove(Object)\n  nameWithType: IList.Remove(Object)\n  fullName: System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IList.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Collections.IList\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: IList.RemoveAt(Int32)\n  fullName: System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Collections.IList.Add(System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Add(Object)\n  nameWithType: IList.Add(Object)\n  fullName: System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IList.Clear\n  parent: System.Collections.IList\n  isExternal: false\n  name: Clear()\n  nameWithType: IList.Clear()\n  fullName: System.Collections.IList.Clear()\n- uid: System.Collections.IList.Contains(System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: IList.Contains(Object)\n  fullName: System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IList.IndexOf(System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: IndexOf(Object)\n  nameWithType: IList.IndexOf(Object)\n  fullName: System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IList.Insert(System.Int32,System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Insert(Int32,Object)\n  nameWithType: IList.Insert(Int32,Object)\n  fullName: System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IList.IsFixedSize\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: IList.IsFixedSize\n  fullName: System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.IList.IsReadOnly\n  parent: System.Collections.IList\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IList.IsReadOnly\n  fullName: System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.IList.Item(System.Int32)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: IList.Item(Int32)\n  fullName: System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IList.Remove(System.Object)\n  parent: System.Collections.IList\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: IList.Remove(Object)\n  fullName: System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IList.RemoveAt(System.Int32)\n  parent: System.Collections.IList\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: IList.RemoveAt(Int32)\n  fullName: System.Collections.IList.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}