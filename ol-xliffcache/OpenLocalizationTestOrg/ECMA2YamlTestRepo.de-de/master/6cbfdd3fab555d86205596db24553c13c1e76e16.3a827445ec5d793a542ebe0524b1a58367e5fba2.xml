{"nodes":[{"pos":[3081,3090],"content":"SymWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"SymWriter","pos":[0,9]}]},{"pos":[4116,4127],"content":"SymWriter()","needQuote":true,"needEscape":true,"nodes":[{"content":"SymWriter()","pos":[0,11]}]},{"pos":[4616,4634],"content":"SymWriter(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SymWriter(Boolean)","pos":[0,18]}]},{"pos":[5004,5038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5233,5240],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[5703,5716],"content":"CloseMethod()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseMethod()","pos":[0,13]}]},{"pos":[6203,6219],"content":"CloseNamespace()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseNamespace()","pos":[0,16]}]},{"pos":[6735,6752],"content":"CloseScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseScope(Int32)","pos":[0,17]}]},{"pos":[7108,7142],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7457,7494],"content":"DefineDocument(String,Guid,Guid,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDocument(String,Guid,Guid,Guid)","pos":[0,37]}]},{"pos":[7989,8023],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8086,8120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8189,8223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8290,8324],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8421,8455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9044,9131],"content":"DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","pos":[0,87]}]},{"pos":[9857,9891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9952,9986],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10073,10107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10173,10207],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10304,10338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10399,10433],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10494,10528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10589,10623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11144,11228],"content":"DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","pos":[0,84]}]},{"pos":[11875,11909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11996,12030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12096,12130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12227,12261],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12322,12356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12417,12451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12512,12546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13117,13212],"content":"DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)","pos":[0,95]}]},{"pos":[13912,13946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14033,14067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14133,14167],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14264,14298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14359,14393],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14454,14488],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14549,14583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14650,14684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14749,14783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15300,15382],"content":"DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)","pos":[0,82]}]},{"pos":[16020,16054],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16145,16179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16243,16277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16374,16408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16469,16503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16564,16598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16659,16693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17176,17259],"content":"DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])","pos":[0,83]}]},{"pos":[17921,17955],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18020,18054],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18117,18151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18216,18250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18316,18350],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18418,18452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18651,18660],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[19223,19239],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[19584,19618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19881,19891],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[20341,20352],"content":"GetWriter()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetWriter()","pos":[0,11]}]},{"pos":[20771,20805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21098,21131],"content":"Initialize(IntPtr,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(IntPtr,String,Boolean)","pos":[0,33]}]},{"pos":[21553,21587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21652,21686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21754,21788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22025,22044],"content":"InitWriter(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"InitWriter(Boolean)","pos":[0,19]}]},{"pos":[22417,22451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22744,22767],"content":"OpenMethod(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenMethod(SymbolToken)","pos":[0,23]}]},{"pos":[23198,23232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23473,23494],"content":"OpenNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenNamespace(String)","pos":[0,21]}]},{"pos":[23855,23889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24120,24136],"content":"OpenScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenScope(Int32)","pos":[0,16]}]},{"pos":[24492,24526],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24583,24617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25160,25249],"content":"SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)","pos":[0,89]}]},{"pos":[25967,26001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26066,26100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26167,26201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26303,26337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26400,26434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26499,26533],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26824,26856],"content":"SetScopeRange(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetScopeRange(Int32,Int32,Int32)","pos":[0,32]}]},{"pos":[27273,27307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27374,27408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27473,27507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27866,27908],"content":"SetSymAttribute(SymbolToken,String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSymAttribute(SymbolToken,String,Byte[])","pos":[0,42]}]},{"pos":[28408,28442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28503,28537],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28598,28632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28885,28912],"content":"SetUnderlyingWriter(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetUnderlyingWriter(IntPtr)","pos":[0,27]}]},{"pos":[29315,29349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29656,29686],"content":"SetUserEntryPoint(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetUserEntryPoint(SymbolToken)","pos":[0,30]}]},{"pos":[30148,30182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30425,30447],"content":"UsingNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UsingNamespace(String)","pos":[0,22]}]},{"pos":[30819,30853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30995,31039],"content":"System.Diagnostics.SymbolStore.SymWriterBase","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Diagnostics.SymbolStore.SymWriterBase","pos":[0,44]}]},{"pos":[31173,31184],"content":"SymWriter()","needQuote":true,"needEscape":true,"nodes":[{"content":"SymWriter()","pos":[0,11]}]},{"pos":[31437,31455],"content":"SymWriter(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SymWriter(Boolean)","pos":[0,18]}]},{"pos":[31640,31647],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31832,31839],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[32074,32087],"content":"CloseMethod()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseMethod()","pos":[0,13]}]},{"pos":[32337,32353],"content":"CloseNamespace()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseNamespace()","pos":[0,16]}]},{"pos":[32619,32636],"content":"CloseScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseScope(Int32)","pos":[0,17]}]},{"pos":[32817,32822],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33063,33100],"content":"DefineDocument(String,Guid,Guid,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDocument(String,Guid,Guid,Guid)","pos":[0,37]}]},{"pos":[33385,33406],"content":"ISymbolDocumentWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocumentWriter","pos":[0,21]}]},{"pos":[33576,33582],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[33696,33700],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[33810,33814],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[33924,33928],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[34304,34391],"content":"DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","pos":[0,87]}]},{"pos":[34766,34777],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[34927,34933],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35080,35095],"content":"FieldAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldAttributes","pos":[0,15]}]},{"pos":[35238,35242],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[35412,35426],"content":"SymAddressKind","needQuote":true,"needEscape":true,"nodes":[{"content":"SymAddressKind","pos":[0,14]}]},{"pos":[35581,35586],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35699,35704],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35817,35822],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36166,36250],"content":"DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","pos":[0,84]}]},{"pos":[36566,36572],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36719,36734],"content":"FieldAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldAttributes","pos":[0,15]}]},{"pos":[36877,36881],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[37051,37065],"content":"SymAddressKind","needQuote":true,"needEscape":true,"nodes":[{"content":"SymAddressKind","pos":[0,14]}]},{"pos":[37220,37225],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37338,37343],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37456,37461],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37830,37925],"content":"DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)","pos":[0,95]}]},{"pos":[38263,38269],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38416,38431],"content":"FieldAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldAttributes","pos":[0,15]}]},{"pos":[38574,38578],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[38748,38762],"content":"SymAddressKind","needQuote":true,"needEscape":true,"nodes":[{"content":"SymAddressKind","pos":[0,14]}]},{"pos":[38917,38922],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39035,39040],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39153,39158],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39271,39276],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39389,39394],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39736,39818],"content":"DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)","pos":[0,82]}]},{"pos":[40130,40136],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[40287,40306],"content":"ParameterAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterAttributes","pos":[0,19]}]},{"pos":[40458,40463],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40633,40647],"content":"SymAddressKind","needQuote":true,"needEscape":true,"nodes":[{"content":"SymAddressKind","pos":[0,14]}]},{"pos":[40802,40807],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40920,40925],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41038,41043],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41368,41451],"content":"DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])","pos":[0,83]}]},{"pos":[41828,41849],"content":"ISymbolDocumentWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocumentWriter","pos":[0,21]}]},{"pos":[42018,42023],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42138,42143],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42258,42263],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42378,42383],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42498,42503],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42688,42697],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[42948,42964],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[43145,43152],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43340,43350],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[43589,43600],"content":"GetWriter()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetWriter()","pos":[0,11]}]},{"pos":[43886,43919],"content":"Initialize(IntPtr,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(IntPtr,String,Boolean)","pos":[0,33]}]},{"pos":[44133,44139],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[44255,44261],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44378,44385],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44591,44610],"content":"InitWriter(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"InitWriter(Boolean)","pos":[0,19]}]},{"pos":[44797,44804],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45038,45061],"content":"OpenMethod(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenMethod(SymbolToken)","pos":[0,23]}]},{"pos":[45308,45319],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[45559,45580],"content":"OpenNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenNamespace(String)","pos":[0,21]}]},{"pos":[45770,45776],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45977,45993],"content":"OpenScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenScope(Int32)","pos":[0,16]}]},{"pos":[46172,46177],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46290,46295],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46650,46739],"content":"SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)","pos":[0,89]}]},{"pos":[47128,47149],"content":"ISymbolDocumentWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocumentWriter","pos":[0,21]}]},{"pos":[47318,47323],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47436,47441],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47618,47639],"content":"ISymbolDocumentWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocumentWriter","pos":[0,21]}]},{"pos":[47808,47813],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47926,47931],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48160,48192],"content":"SetScopeRange(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetScopeRange(Int32,Int32,Int32)","pos":[0,32]}]},{"pos":[48403,48408],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48521,48526],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48639,48644],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48907,48949],"content":"SetSymAttribute(SymbolToken,String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSymAttribute(SymbolToken,String,Byte[])","pos":[0,42]}]},{"pos":[49234,49245],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[49395,49401],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[49515,49519],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[49729,49756],"content":"SetUnderlyingWriter(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetUnderlyingWriter(IntPtr)","pos":[0,27]}]},{"pos":[49958,49964],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[50203,50233],"content":"SetUserEntryPoint(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetUserEntryPoint(SymbolToken)","pos":[0,30]}]},{"pos":[50494,50505],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[50746,50768],"content":"UsingNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UsingNamespace(String)","pos":[0,22]}]},{"pos":[50960,50966],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymWriter\n  id: SymWriter\n  children:\n  - System.Diagnostics.SymbolStore.SymWriter.#ctor\n  - System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymWriter.Close\n  - System.Diagnostics.SymbolStore.SymWriter.CloseMethod\n  - System.Diagnostics.SymbolStore.SymWriter.CloseNamespace\n  - System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)\n  - System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  - System.Diagnostics.SymbolStore.SymWriter.Dispose\n  - System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymWriter.Finalize\n  - System.Diagnostics.SymbolStore.SymWriter.GetWriter\n  - System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)\n  - System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)\n  - System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)\n  - System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])\n  - System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)\n  - System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)\n  langs:\n  - csharp\n  name: SymWriter\n  nameWithType: SymWriter\n  fullName: System.Diagnostics.SymbolStore.SymWriter\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SymWriter : System.Diagnostics.SymbolStore.SymWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolWriter\n  inheritance:\n  - System.Object\n  - System.Diagnostics.SymbolStore.SymWriterBase\n  implements:\n  - System.Diagnostics.SymbolStore.ISymbolWriter\n  - System.IDisposable\n  inheritedMembers:\n  - System.Diagnostics.SymbolStore.SymWriterBase.{dtor}\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: SymWriter()\n  nameWithType: SymWriter.SymWriter()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()\n  type: Constructor\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public SymWriter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: SymWriter(Boolean)\n  nameWithType: SymWriter.SymWriter(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)\n  type: Constructor\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public SymWriter (bool noUnderlyingWriter);\n    parameters:\n    - id: noUnderlyingWriter\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.Close\n  id: Close\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: SymWriter.Close()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void Close ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod\n  id: CloseMethod\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: CloseMethod()\n  nameWithType: SymWriter.CloseMethod()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void CloseMethod ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace\n  id: CloseNamespace\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: CloseNamespace()\n  nameWithType: SymWriter.CloseNamespace()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void CloseNamespace ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)\n  id: CloseScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: CloseScope(Int32)\n  nameWithType: SymWriter.CloseScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void CloseScope (int endOffset);\n    parameters:\n    - id: endOffset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  id: DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: DefineDocument(String,Guid,Guid,Guid)\n  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);\n    parameters:\n    - id: url\n      type: System.String\n      description: Parameter description to be filled\n    - id: language\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: languageVendor\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: documentType\n      type: System.Guid\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  id: DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: addrKind\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: Parameter description to be filled\n    - id: addr1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr3\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  id: DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: addrKind\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: Parameter description to be filled\n    - id: addr1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr3\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: addrKind\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: Parameter description to be filled\n    - id: addr1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr3\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: startOffset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endOffset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  id: DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.ParameterAttributes\n      description: Parameter description to be filled\n    - id: sequence\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addrKind\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: Parameter description to be filled\n    - id: addr1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr3\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  id: DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: Parameter description to be filled\n    - id: offsets\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: lines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: columns\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: endLines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: endColumns\n      type: System.Int32[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose\n  id: Dispose\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SymWriter.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SymWriter.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize\n  id: Finalize\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: SymWriter.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: ~SymWriter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter\n  id: GetWriter\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: GetWriter()\n  nameWithType: SymWriter.GetWriter()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter* GetWriter ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter*\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)\n  id: Initialize(System.IntPtr,System.String,System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: Initialize(IntPtr,String,Boolean)\n  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void Initialize (IntPtr emitter, string filename, bool fFullBuild);\n    parameters:\n    - id: emitter\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: filename\n      type: System.String\n      description: Parameter description to be filled\n    - id: fFullBuild\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)\n  id: InitWriter(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: InitWriter(Boolean)\n  nameWithType: SymWriter.InitWriter(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void InitWriter (bool noUnderlyingWriter);\n    parameters:\n    - id: noUnderlyingWriter\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  id: OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: OpenMethod(SymbolToken)\n  nameWithType: SymWriter.OpenMethod(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)\n  id: OpenNamespace(System.String)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: OpenNamespace(String)\n  nameWithType: SymWriter.OpenNamespace(String)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void OpenNamespace (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)\n  id: OpenScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: OpenScope(Int32)\n  nameWithType: SymWriter.OpenScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual int OpenScope (int startOffset);\n    parameters:\n    - id: startOffset\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)\n  id: SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);\n    parameters:\n    - id: startDoc\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: Parameter description to be filled\n    - id: startLine\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: startColumn\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endDoc\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: Parameter description to be filled\n    - id: endLine\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endColumn\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)\n  id: SetScopeRange(System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: SetScopeRange(Int32,Int32,Int32)\n  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void SetScopeRange (int scopeID, int startOffset, int endOffset);\n    parameters:\n    - id: scopeID\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: startOffset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endOffset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])\n  id: SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: SetSymAttribute(SymbolToken,String,Byte[])\n  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)\n  id: SetUnderlyingWriter(System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: SetUnderlyingWriter(IntPtr)\n  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void SetUnderlyingWriter (IntPtr underlyingWriter);\n    parameters:\n    - id: underlyingWriter\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)\n  id: SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: SetUserEntryPoint(SymbolToken)\n  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);\n    parameters:\n    - id: entryMethod\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)\n  id: UsingNamespace(System.String)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  langs:\n  - csharp\n  name: UsingNamespace(String)\n  nameWithType: SymWriter.UsingNamespace(String)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void UsingNamespace (string fullName);\n    parameters:\n    - id: fullName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Diagnostics.SymbolStore.SymWriterBase\n  isExternal: false\n  name: System.Diagnostics.SymbolStore.SymWriterBase\n- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: SymWriter()\n  nameWithType: SymWriter.SymWriter()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()\n- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: SymWriter(Boolean)\n  nameWithType: SymWriter.SymWriter(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymWriter.Close\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: Close()\n  nameWithType: SymWriter.Close()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()\n- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: CloseMethod()\n  nameWithType: SymWriter.CloseMethod()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()\n- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: CloseNamespace()\n  nameWithType: SymWriter.CloseNamespace()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()\n- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: CloseScope(Int32)\n  nameWithType: SymWriter.CloseScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: DefineDocument(String,Guid,Guid,Guid)\n  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.ParameterAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterAttributes\n  nameWithType: ParameterAttributes\n  fullName: System.Reflection.ParameterAttributes\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymWriter.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()\n- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymWriter.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: Finalize()\n  nameWithType: SymWriter.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()\n- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: GetWriter()\n  nameWithType: SymWriter.GetWriter()\n  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()\n- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: Initialize(IntPtr,String,Boolean)\n  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: InitWriter(Boolean)\n  nameWithType: SymWriter.InitWriter(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: OpenMethod(SymbolToken)\n  nameWithType: SymWriter.OpenMethod(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: OpenNamespace(String)\n  nameWithType: SymWriter.OpenNamespace(String)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: OpenScope(Int32)\n  nameWithType: SymWriter.OpenScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: SetScopeRange(Int32,Int32,Int32)\n  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: SetSymAttribute(SymbolToken,String,Byte[])\n  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: SetUnderlyingWriter(IntPtr)\n  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: SetUserEntryPoint(SymbolToken)\n  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  name: UsingNamespace(String)\n  nameWithType: SymWriter.UsingNamespace(String)\n  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose*\n  parent: System.Diagnostics.SymbolStore.SymWriter\n  isExternal: false\n  nameWithType: SymWriter.\n"}