{"nodes":[{"pos":[3226,3230],"content":"Math","needQuote":true,"needEscape":true,"nodes":[{"content":"Math","pos":[0,4]}]},{"pos":[3846,3858],"content":"Abs(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Decimal)","pos":[0,12]}]},{"pos":[4136,4170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4229,4263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4455,4466],"content":"Abs(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Double)","pos":[0,11]}]},{"pos":[4739,4773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4831,4865],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5055,5065],"content":"Abs(Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Int16)","pos":[0,10]}]},{"pos":[5333,5367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5424,5458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5648,5658],"content":"Abs(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Int32)","pos":[0,10]}]},{"pos":[5922,5956],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6013,6047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6237,6247],"content":"Abs(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Int64)","pos":[0,10]}]},{"pos":[6513,6547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6604,6638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6828,6838],"content":"Abs(SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(SByte)","pos":[0,10]}]},{"pos":[7106,7140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7197,7231],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7423,7434],"content":"Abs(Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Single)","pos":[0,11]}]},{"pos":[7705,7739],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7797,7831],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8025,8037],"content":"Acos(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Acos(Double)","pos":[0,12]}]},{"pos":[8305,8339],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8397,8431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8596,8608],"content":"Asin(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Asin(Double)","pos":[0,12]}]},{"pos":[8876,8910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8968,9002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9167,9179],"content":"Atan(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Atan(Double)","pos":[0,12]}]},{"pos":[9447,9481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9539,9573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9768,9788],"content":"Atan2(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Atan2(Double,Double)","pos":[0,20]}]},{"pos":[10083,10117],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10175,10209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10267,10301],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10494,10513],"content":"BigMul(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"BigMul(Int32,Int32)","pos":[0,19]}]},{"pos":[10798,10832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10889,10923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10980,11014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11187,11203],"content":"Ceiling(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Ceiling(Decimal)","pos":[0,16]}]},{"pos":[11485,11519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11578,11612],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11816,11831],"content":"Ceiling(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Ceiling(Double)","pos":[0,15]}]},{"pos":[12108,12142],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12200,12234],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12430,12441],"content":"Cos(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cos(Double)","pos":[0,11]}]},{"pos":[12706,12740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12798,12832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12997,13009],"content":"Cosh(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cosh(Double)","pos":[0,12]}]},{"pos":[13285,13319],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13377,13411],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13632,13657],"content":"DivRem(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DivRem(Int32,Int32,Int32)","pos":[0,25]}]},{"pos":[13969,14003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14060,14094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14156,14190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14247,14281],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14534,14559],"content":"DivRem(Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"DivRem(Int64,Int64,Int64)","pos":[0,25]}]},{"pos":[14875,14909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14966,15000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15062,15096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15153,15187],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15348,15349],"content":"E","needQuote":true,"needEscape":true,"nodes":[{"content":"E","pos":[0,1]}]},{"pos":[15582,15616],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15779,15790],"content":"Exp(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exp(Double)","pos":[0,11]}]},{"pos":[16055,16089],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16147,16181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16350,16364],"content":"Floor(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Floor(Decimal)","pos":[0,14]}]},{"pos":[16640,16674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16733,16767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16965,16978],"content":"Floor(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Floor(Double)","pos":[0,13]}]},{"pos":[17249,17283],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17341,17375],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17617,17645],"content":"IEEERemainder(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"IEEERemainder(Double,Double)","pos":[0,28]}]},{"pos":[17964,17998],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18056,18090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18148,18182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18345,18356],"content":"Log(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Log(Double)","pos":[0,11]}]},{"pos":[18621,18655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18713,18747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18967,18985],"content":"Log(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Log(Double,Double)","pos":[0,18]}]},{"pos":[19280,19314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19378,19412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19470,19504],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19700,19713],"content":"Log10(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Log10(Double)","pos":[0,13]}]},{"pos":[19984,20018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20076,20110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20293,20307],"content":"Max(Byte,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Byte,Byte)","pos":[0,14]}]},{"pos":[20589,20623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20682,20716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20772,20806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21030,21050],"content":"Max(Decimal,Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Decimal,Decimal)","pos":[0,20]}]},{"pos":[21356,21390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21452,21486],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21545,21579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21799,21817],"content":"Max(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Double,Double)","pos":[0,18]}]},{"pos":[22115,22149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22210,22244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22302,22336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22552,22568],"content":"Max(Int16,Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Int16,Int16)","pos":[0,16]}]},{"pos":[22858,22892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22952,22986],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23043,23077],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23293,23309],"content":"Max(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Int32,Int32)","pos":[0,16]}]},{"pos":[23593,23627],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23687,23721],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23778,23812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24028,24044],"content":"Max(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Int64,Int64)","pos":[0,16]}]},{"pos":[24331,24365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24425,24459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24516,24550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24766,24782],"content":"Max(SByte,SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(SByte,SByte)","pos":[0,16]}]},{"pos":[25072,25106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25166,25200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25257,25291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25511,25529],"content":"Max(Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Single,Single)","pos":[0,18]}]},{"pos":[25824,25858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25919,25953],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26011,26045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26265,26283],"content":"Max(UInt16,UInt16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(UInt16,UInt16)","pos":[0,18]}]},{"pos":[26581,26615],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26676,26710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26768,26802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27022,27040],"content":"Max(UInt32,UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(UInt32,UInt32)","pos":[0,18]}]},{"pos":[27332,27366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27427,27461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27519,27553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27773,27791],"content":"Max(UInt64,UInt64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(UInt64,UInt64)","pos":[0,18]}]},{"pos":[28086,28120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28181,28215],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28273,28307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28519,28533],"content":"Min(Byte,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Byte,Byte)","pos":[0,14]}]},{"pos":[28815,28849],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28908,28942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28998,29032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29256,29276],"content":"Min(Decimal,Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Decimal,Decimal)","pos":[0,20]}]},{"pos":[29582,29616],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29678,29712],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29771,29805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30025,30043],"content":"Min(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Double,Double)","pos":[0,18]}]},{"pos":[30341,30375],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30436,30470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30528,30562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30778,30794],"content":"Min(Int16,Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Int16,Int16)","pos":[0,16]}]},{"pos":[31084,31118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31178,31212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31269,31303],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31519,31535],"content":"Min(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Int32,Int32)","pos":[0,16]}]},{"pos":[31819,31853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31913,31947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32004,32038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32254,32270],"content":"Min(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Int64,Int64)","pos":[0,16]}]},{"pos":[32557,32591],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32651,32685],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32742,32776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32992,33008],"content":"Min(SByte,SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(SByte,SByte)","pos":[0,16]}]},{"pos":[33298,33332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33392,33426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33483,33517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33737,33755],"content":"Min(Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Single,Single)","pos":[0,18]}]},{"pos":[34050,34084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34145,34179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34237,34271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34491,34509],"content":"Min(UInt16,UInt16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(UInt16,UInt16)","pos":[0,18]}]},{"pos":[34807,34841],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34902,34936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34994,35028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35248,35266],"content":"Min(UInt32,UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(UInt32,UInt32)","pos":[0,18]}]},{"pos":[35558,35592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35653,35687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35745,35779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35999,36017],"content":"Min(UInt64,UInt64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(UInt64,UInt64)","pos":[0,18]}]},{"pos":[36312,36346],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36407,36441],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36499,36533],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36693,36695],"content":"PI","needQuote":true,"needEscape":true,"nodes":[{"content":"PI","pos":[0,2]}]},{"pos":[36931,36965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37156,37174],"content":"Pow(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Pow(Double,Double)","pos":[0,18]}]},{"pos":[37463,37497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37555,37589],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37647,37681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37850,37864],"content":"Round(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Decimal)","pos":[0,14]}]},{"pos":[38140,38174],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38233,38267],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38465,38478],"content":"Round(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Double)","pos":[0,13]}]},{"pos":[38749,38783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38841,38875],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39101,39121],"content":"Round(Decimal,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Decimal,Int32)","pos":[0,20]}]},{"pos":[39423,39457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39521,39555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39614,39648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39896,39927],"content":"Round(Decimal,MidpointRounding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Decimal,MidpointRounding)","pos":[0,31]}]},{"pos":[40260,40294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40365,40399],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40458,40492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40716,40735],"content":"Round(Double,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Double,Int32)","pos":[0,19]}]},{"pos":[41038,41072],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41134,41168],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41226,41260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41506,41536],"content":"Round(Double,MidpointRounding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Double,MidpointRounding)","pos":[0,30]}]},{"pos":[41872,41906],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41977,42011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42069,42103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42377,42414],"content":"Round(Decimal,Int32,MidpointRounding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Decimal,Int32,MidpointRounding)","pos":[0,37]}]},{"pos":[42773,42807],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42871,42905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42976,43010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43069,43103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43375,43411],"content":"Round(Double,Int32,MidpointRounding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Double,Int32,MidpointRounding)","pos":[0,36]}]},{"pos":[43771,43805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43867,43901],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43972,44006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44064,44098],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44296,44309],"content":"Sign(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Decimal)","pos":[0,13]}]},{"pos":[44586,44620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44677,44711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44906,44918],"content":"Sign(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Double)","pos":[0,12]}]},{"pos":[45191,45225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45282,45316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45509,45520],"content":"Sign(Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Int16)","pos":[0,11]}]},{"pos":[45789,45823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45880,45914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46107,46118],"content":"Sign(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Int32)","pos":[0,11]}]},{"pos":[46385,46419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46476,46510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46703,46714],"content":"Sign(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Int64)","pos":[0,11]}]},{"pos":[46982,47016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47073,47107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47300,47311],"content":"Sign(SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(SByte)","pos":[0,11]}]},{"pos":[47580,47614],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47671,47705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47900,47912],"content":"Sign(Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Single)","pos":[0,12]}]},{"pos":[48184,48218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48275,48309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48502,48513],"content":"Sin(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sin(Double)","pos":[0,11]}]},{"pos":[48778,48812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48870,48904],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49069,49081],"content":"Sinh(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sinh(Double)","pos":[0,12]}]},{"pos":[49357,49391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49449,49483],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49648,49660],"content":"Sqrt(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sqrt(Double)","pos":[0,12]}]},{"pos":[49928,49962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50020,50054],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50217,50228],"content":"Tan(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Tan(Double)","pos":[0,11]}]},{"pos":[50493,50527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50585,50619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50784,50796],"content":"Tanh(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Tanh(Double)","pos":[0,12]}]},{"pos":[51072,51106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51164,51198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51373,51390],"content":"Truncate(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Truncate(Decimal)","pos":[0,17]}]},{"pos":[51675,51709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51768,51802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52009,52025],"content":"Truncate(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Truncate(Double)","pos":[0,16]}]},{"pos":[52305,52339],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52397,52431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52576,52589],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[52679,52691],"content":"Abs(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Decimal)","pos":[0,12]}]},{"pos":[52830,52837],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[52956,52963],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[53103,53114],"content":"Abs(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Double)","pos":[0,11]}]},{"pos":[53250,53256],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[53372,53378],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[53515,53525],"content":"Abs(Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Int16)","pos":[0,10]}]},{"pos":[53658,53663],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[53776,53781],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[53916,53926],"content":"Abs(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Int32)","pos":[0,10]}]},{"pos":[54059,54064],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54177,54182],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54317,54327],"content":"Abs(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Int64)","pos":[0,10]}]},{"pos":[54460,54465],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[54578,54583],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[54718,54728],"content":"Abs(SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(SByte)","pos":[0,10]}]},{"pos":[54861,54866],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[54979,54984],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[55120,55131],"content":"Abs(Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abs(Single)","pos":[0,11]}]},{"pos":[55267,55273],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[55389,55395],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[55534,55546],"content":"Acos(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Acos(Double)","pos":[0,12]}]},{"pos":[55684,55690],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[55806,55812],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[55951,55963],"content":"Asin(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Asin(Double)","pos":[0,12]}]},{"pos":[56101,56107],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[56223,56229],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[56368,56380],"content":"Atan(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Atan(Double)","pos":[0,12]}]},{"pos":[56518,56524],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[56640,56646],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[56800,56820],"content":"Atan2(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Atan2(Double,Double)","pos":[0,20]}]},{"pos":[56974,56980],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[57096,57102],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[57218,57224],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[57377,57396],"content":"BigMul(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"BigMul(Int32,Int32)","pos":[0,19]}]},{"pos":[57547,57552],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[57665,57670],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57783,57788],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57929,57945],"content":"Ceiling(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Ceiling(Decimal)","pos":[0,16]}]},{"pos":[58092,58099],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[58218,58225],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[58369,58384],"content":"Ceiling(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Ceiling(Double)","pos":[0,15]}]},{"pos":[58528,58534],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[58650,58656],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[58794,58805],"content":"Cos(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cos(Double)","pos":[0,11]}]},{"pos":[58941,58947],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[59063,59069],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[59208,59220],"content":"Cosh(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cosh(Double)","pos":[0,12]}]},{"pos":[59358,59364],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[59480,59486],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[59653,59678],"content":"DivRem(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DivRem(Int32,Int32,Int32)","pos":[0,25]}]},{"pos":[59841,59846],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59959,59964],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60077,60082],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60195,60200],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60365,60390],"content":"DivRem(Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"DivRem(Int64,Int64,Int64)","pos":[0,25]}]},{"pos":[60553,60558],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[60671,60676],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[60789,60794],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[60907,60912],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[61031,61032],"content":"E","needQuote":true,"needEscape":true,"nodes":[{"content":"E","pos":[0,1]}]},{"pos":[61148,61154],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[61292,61303],"content":"Exp(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exp(Double)","pos":[0,11]}]},{"pos":[61439,61445],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[61561,61567],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[61708,61722],"content":"Floor(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Floor(Decimal)","pos":[0,14]}]},{"pos":[61865,61872],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[61991,61998],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[62140,62153],"content":"Floor(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Floor(Double)","pos":[0,13]}]},{"pos":[62293,62299],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[62415,62421],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[62583,62611],"content":"IEEERemainder(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"IEEERemainder(Double,Double)","pos":[0,28]}]},{"pos":[62781,62787],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[62903,62909],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[63025,63031],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[63169,63180],"content":"Log(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Log(Double)","pos":[0,11]}]},{"pos":[63316,63322],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[63438,63444],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[63596,63614],"content":"Log(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Log(Double,Double)","pos":[0,18]}]},{"pos":[63764,63770],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[63886,63892],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[64008,64014],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[64154,64167],"content":"Log10(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Log10(Double)","pos":[0,13]}]},{"pos":[64307,64313],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[64429,64435],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[64583,64597],"content":"Max(Byte,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Byte,Byte)","pos":[0,14]}]},{"pos":[64737,64741],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[64851,64855],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[64965,64969],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[65119,65139],"content":"Max(Decimal,Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Decimal,Decimal)","pos":[0,20]}]},{"pos":[65294,65301],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[65420,65427],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[65546,65553],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[65707,65725],"content":"Max(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Double,Double)","pos":[0,18]}]},{"pos":[65875,65881],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[65997,66003],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[66119,66125],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[66275,66291],"content":"Max(Int16,Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Int16,Int16)","pos":[0,16]}]},{"pos":[66436,66441],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[66554,66559],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[66672,66677],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[66825,66841],"content":"Max(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Int32,Int32)","pos":[0,16]}]},{"pos":[66986,66991],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[67104,67109],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[67222,67227],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[67375,67391],"content":"Max(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Int64,Int64)","pos":[0,16]}]},{"pos":[67536,67541],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[67654,67659],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[67772,67777],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[67925,67941],"content":"Max(SByte,SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(SByte,SByte)","pos":[0,16]}]},{"pos":[68086,68091],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[68204,68209],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[68322,68327],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[68477,68495],"content":"Max(Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(Single,Single)","pos":[0,18]}]},{"pos":[68645,68651],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[68767,68773],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[68889,68895],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[69047,69065],"content":"Max(UInt16,UInt16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(UInt16,UInt16)","pos":[0,18]}]},{"pos":[69215,69221],"content":"UInt16","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[69337,69343],"content":"UInt16","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[69459,69465],"content":"UInt16","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[69617,69635],"content":"Max(UInt32,UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(UInt32,UInt32)","pos":[0,18]}]},{"pos":[69785,69791],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[69907,69913],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[70029,70035],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[70187,70205],"content":"Max(UInt64,UInt64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Max(UInt64,UInt64)","pos":[0,18]}]},{"pos":[70355,70361],"content":"UInt64","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[70477,70483],"content":"UInt64","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[70599,70605],"content":"UInt64","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[70753,70767],"content":"Min(Byte,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Byte,Byte)","pos":[0,14]}]},{"pos":[70907,70911],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[71021,71025],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[71135,71139],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[71289,71309],"content":"Min(Decimal,Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Decimal,Decimal)","pos":[0,20]}]},{"pos":[71464,71471],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[71590,71597],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[71716,71723],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[71877,71895],"content":"Min(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Double,Double)","pos":[0,18]}]},{"pos":[72045,72051],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[72167,72173],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[72289,72295],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[72445,72461],"content":"Min(Int16,Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Int16,Int16)","pos":[0,16]}]},{"pos":[72606,72611],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[72724,72729],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[72842,72847],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[72995,73011],"content":"Min(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Int32,Int32)","pos":[0,16]}]},{"pos":[73156,73161],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73274,73279],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73392,73397],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73545,73561],"content":"Min(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Int64,Int64)","pos":[0,16]}]},{"pos":[73706,73711],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[73824,73829],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[73942,73947],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[74095,74111],"content":"Min(SByte,SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(SByte,SByte)","pos":[0,16]}]},{"pos":[74256,74261],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[74374,74379],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[74492,74497],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[74647,74665],"content":"Min(Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(Single,Single)","pos":[0,18]}]},{"pos":[74815,74821],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[74937,74943],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[75059,75065],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[75217,75235],"content":"Min(UInt16,UInt16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(UInt16,UInt16)","pos":[0,18]}]},{"pos":[75385,75391],"content":"UInt16","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[75507,75513],"content":"UInt16","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[75629,75635],"content":"UInt16","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[75787,75805],"content":"Min(UInt32,UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(UInt32,UInt32)","pos":[0,18]}]},{"pos":[75955,75961],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[76077,76083],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[76199,76205],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[76357,76375],"content":"Min(UInt64,UInt64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Min(UInt64,UInt64)","pos":[0,18]}]},{"pos":[76525,76531],"content":"UInt64","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[76647,76653],"content":"UInt64","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[76769,76775],"content":"UInt64","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt64","pos":[0,6]}]},{"pos":[76897,76899],"content":"PI","needQuote":true,"needEscape":true,"nodes":[{"content":"PI","pos":[0,2]}]},{"pos":[77017,77023],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[77175,77193],"content":"Pow(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Pow(Double,Double)","pos":[0,18]}]},{"pos":[77343,77349],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[77465,77471],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[77587,77593],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[77734,77748],"content":"Round(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Decimal)","pos":[0,14]}]},{"pos":[77891,77898],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[78017,78024],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[78166,78179],"content":"Round(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Double)","pos":[0,13]}]},{"pos":[78319,78325],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[78441,78447],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[78601,78621],"content":"Round(Decimal,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Decimal,Int32)","pos":[0,20]}]},{"pos":[78776,78783],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[78902,78909],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[79026,79031],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[79194,79225],"content":"Round(Decimal,MidpointRounding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Decimal,MidpointRounding)","pos":[0,31]}]},{"pos":[79402,79409],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[79528,79535],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[79663,79679],"content":"MidpointRounding","needQuote":true,"needEscape":true,"nodes":[{"content":"MidpointRounding","pos":[0,16]}]},{"pos":[79852,79871],"content":"Round(Double,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Double,Int32)","pos":[0,19]}]},{"pos":[80023,80029],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[80145,80151],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[80266,80271],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[80433,80463],"content":"Round(Double,MidpointRounding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Double,MidpointRounding)","pos":[0,30]}]},{"pos":[80637,80643],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[80759,80765],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[80891,80907],"content":"MidpointRounding","needQuote":true,"needEscape":true,"nodes":[{"content":"MidpointRounding","pos":[0,16]}]},{"pos":[81105,81142],"content":"Round(Decimal,Int32,MidpointRounding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Decimal,Int32,MidpointRounding)","pos":[0,37]}]},{"pos":[81331,81338],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[81457,81464],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[81581,81586],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[81710,81726],"content":"MidpointRounding","needQuote":true,"needEscape":true,"nodes":[{"content":"MidpointRounding","pos":[0,16]}]},{"pos":[81923,81959],"content":"Round(Double,Int32,MidpointRounding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Round(Double,Int32,MidpointRounding)","pos":[0,36]}]},{"pos":[82145,82151],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[82267,82273],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[82388,82393],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82517,82533],"content":"MidpointRounding","needQuote":true,"needEscape":true,"nodes":[{"content":"MidpointRounding","pos":[0,16]}]},{"pos":[82693,82706],"content":"Sign(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Decimal)","pos":[0,13]}]},{"pos":[82845,82850],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82965,82972],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[83113,83125],"content":"Sign(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Double)","pos":[0,12]}]},{"pos":[83262,83267],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83381,83387],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[83525,83536],"content":"Sign(Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Int16)","pos":[0,11]}]},{"pos":[83671,83676],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83789,83794],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[83930,83941],"content":"Sign(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Int32)","pos":[0,11]}]},{"pos":[84076,84081],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84194,84199],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84335,84346],"content":"Sign(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Int64)","pos":[0,11]}]},{"pos":[84481,84486],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84599,84604],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[84740,84751],"content":"Sign(SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(SByte)","pos":[0,11]}]},{"pos":[84886,84891],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85004,85009],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[85146,85158],"content":"Sign(Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sign(Single)","pos":[0,12]}]},{"pos":[85295,85300],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85414,85420],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[85558,85569],"content":"Sin(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sin(Double)","pos":[0,11]}]},{"pos":[85705,85711],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[85827,85833],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[85972,85984],"content":"Sinh(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sinh(Double)","pos":[0,12]}]},{"pos":[86122,86128],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[86244,86250],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[86389,86401],"content":"Sqrt(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sqrt(Double)","pos":[0,12]}]},{"pos":[86539,86545],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[86661,86667],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[86805,86816],"content":"Tan(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Tan(Double)","pos":[0,11]}]},{"pos":[86952,86958],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[87074,87080],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[87219,87231],"content":"Tanh(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Tanh(Double)","pos":[0,12]}]},{"pos":[87369,87375],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[87491,87497],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[87641,87658],"content":"Truncate(Decimal)","needQuote":true,"needEscape":true,"nodes":[{"content":"Truncate(Decimal)","pos":[0,17]}]},{"pos":[87807,87814],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[87933,87940],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[88085,88101],"content":"Truncate(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Truncate(Double)","pos":[0,16]}]},{"pos":[88247,88253],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[88369,88375],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Math\n  id: Math\n  children:\n  - System.Math.Abs(System.Decimal)\n  - System.Math.Abs(System.Double)\n  - System.Math.Abs(System.Int16)\n  - System.Math.Abs(System.Int32)\n  - System.Math.Abs(System.Int64)\n  - System.Math.Abs(System.SByte)\n  - System.Math.Abs(System.Single)\n  - System.Math.Acos(System.Double)\n  - System.Math.Asin(System.Double)\n  - System.Math.Atan(System.Double)\n  - System.Math.Atan2(System.Double,System.Double)\n  - System.Math.BigMul(System.Int32,System.Int32)\n  - System.Math.Ceiling(System.Decimal)\n  - System.Math.Ceiling(System.Double)\n  - System.Math.Cos(System.Double)\n  - System.Math.Cosh(System.Double)\n  - System.Math.DivRem(System.Int32,System.Int32,System.Int32@)\n  - System.Math.DivRem(System.Int64,System.Int64,System.Int64@)\n  - System.Math.E\n  - System.Math.Exp(System.Double)\n  - System.Math.Floor(System.Decimal)\n  - System.Math.Floor(System.Double)\n  - System.Math.IEEERemainder(System.Double,System.Double)\n  - System.Math.Log(System.Double)\n  - System.Math.Log(System.Double,System.Double)\n  - System.Math.Log10(System.Double)\n  - System.Math.Max(System.Byte,System.Byte)\n  - System.Math.Max(System.Decimal,System.Decimal)\n  - System.Math.Max(System.Double,System.Double)\n  - System.Math.Max(System.Int16,System.Int16)\n  - System.Math.Max(System.Int32,System.Int32)\n  - System.Math.Max(System.Int64,System.Int64)\n  - System.Math.Max(System.SByte,System.SByte)\n  - System.Math.Max(System.Single,System.Single)\n  - System.Math.Max(System.UInt16,System.UInt16)\n  - System.Math.Max(System.UInt32,System.UInt32)\n  - System.Math.Max(System.UInt64,System.UInt64)\n  - System.Math.Min(System.Byte,System.Byte)\n  - System.Math.Min(System.Decimal,System.Decimal)\n  - System.Math.Min(System.Double,System.Double)\n  - System.Math.Min(System.Int16,System.Int16)\n  - System.Math.Min(System.Int32,System.Int32)\n  - System.Math.Min(System.Int64,System.Int64)\n  - System.Math.Min(System.SByte,System.SByte)\n  - System.Math.Min(System.Single,System.Single)\n  - System.Math.Min(System.UInt16,System.UInt16)\n  - System.Math.Min(System.UInt32,System.UInt32)\n  - System.Math.Min(System.UInt64,System.UInt64)\n  - System.Math.PI\n  - System.Math.Pow(System.Double,System.Double)\n  - System.Math.Round(System.Decimal)\n  - System.Math.Round(System.Double)\n  - System.Math.Round(System.Decimal,System.Int32)\n  - System.Math.Round(System.Decimal,System.MidpointRounding)\n  - System.Math.Round(System.Double,System.Int32)\n  - System.Math.Round(System.Double,System.MidpointRounding)\n  - System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)\n  - System.Math.Round(System.Double,System.Int32,System.MidpointRounding)\n  - System.Math.Sign(System.Decimal)\n  - System.Math.Sign(System.Double)\n  - System.Math.Sign(System.Int16)\n  - System.Math.Sign(System.Int32)\n  - System.Math.Sign(System.Int64)\n  - System.Math.Sign(System.SByte)\n  - System.Math.Sign(System.Single)\n  - System.Math.Sin(System.Double)\n  - System.Math.Sinh(System.Double)\n  - System.Math.Sqrt(System.Double)\n  - System.Math.Tan(System.Double)\n  - System.Math.Tanh(System.Double)\n  - System.Math.Truncate(System.Decimal)\n  - System.Math.Truncate(System.Double)\n  langs:\n  - csharp\n  name: Math\n  nameWithType: Math\n  fullName: System.Math\n  type: Class\n  syntax:\n    content: public static class Math\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Abs(System.Decimal)\n  id: Abs(System.Decimal)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Abs(Decimal)\n  nameWithType: Math.Abs(Decimal)\n  fullName: System.Math.Abs(Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Abs (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Abs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Abs(System.Double)\n  id: Abs(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Abs(Double)\n  nameWithType: Math.Abs(Double)\n  fullName: System.Math.Abs(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Abs (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Abs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Abs(System.Int16)\n  id: Abs(System.Int16)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Abs(Int16)\n  nameWithType: Math.Abs(Int16)\n  fullName: System.Math.Abs(Int16)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static short Abs (short value);\n    parameters:\n    - id: value\n      type: System.Int16\n      description: Parameter description to be filled\n    return:\n      type: System.Int16\n      description: Parameter description to be filled\n  overload: System.Math.Abs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Abs(System.Int32)\n  id: Abs(System.Int32)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Abs(Int32)\n  nameWithType: Math.Abs(Int32)\n  fullName: System.Math.Abs(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Abs (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Abs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Abs(System.Int64)\n  id: Abs(System.Int64)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Abs(Int64)\n  nameWithType: Math.Abs(Int64)\n  fullName: System.Math.Abs(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static long Abs (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Math.Abs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Abs(System.SByte)\n  id: Abs(System.SByte)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Abs(SByte)\n  nameWithType: Math.Abs(SByte)\n  fullName: System.Math.Abs(SByte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static sbyte Abs (sbyte value);\n    parameters:\n    - id: value\n      type: System.SByte\n      description: Parameter description to be filled\n    return:\n      type: System.SByte\n      description: Parameter description to be filled\n  overload: System.Math.Abs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Abs(System.Single)\n  id: Abs(System.Single)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Abs(Single)\n  nameWithType: Math.Abs(Single)\n  fullName: System.Math.Abs(Single)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static float Abs (float value);\n    parameters:\n    - id: value\n      type: System.Single\n      description: Parameter description to be filled\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Math.Abs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Acos(System.Double)\n  id: Acos(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Acos(Double)\n  nameWithType: Math.Acos(Double)\n  fullName: System.Math.Acos(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Acos (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Asin(System.Double)\n  id: Asin(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Asin(Double)\n  nameWithType: Math.Asin(Double)\n  fullName: System.Math.Asin(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Asin (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Atan(System.Double)\n  id: Atan(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Atan(Double)\n  nameWithType: Math.Atan(Double)\n  fullName: System.Math.Atan(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Atan (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Atan2(System.Double,System.Double)\n  id: Atan2(System.Double,System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Atan2(Double,Double)\n  nameWithType: Math.Atan2(Double,Double)\n  fullName: System.Math.Atan2(Double,Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Atan2 (double y, double x);\n    parameters:\n    - id: y\n      type: System.Double\n      description: Parameter description to be filled\n    - id: x\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.BigMul(System.Int32,System.Int32)\n  id: BigMul(System.Int32,System.Int32)\n  parent: System.Math\n  langs:\n  - csharp\n  name: BigMul(Int32,Int32)\n  nameWithType: Math.BigMul(Int32,Int32)\n  fullName: System.Math.BigMul(Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static long BigMul (int a, int b);\n    parameters:\n    - id: a\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: b\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Ceiling(System.Decimal)\n  id: Ceiling(System.Decimal)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Ceiling(Decimal)\n  nameWithType: Math.Ceiling(Decimal)\n  fullName: System.Math.Ceiling(Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Ceiling (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Ceiling*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Ceiling(System.Double)\n  id: Ceiling(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Ceiling(Double)\n  nameWithType: Math.Ceiling(Double)\n  fullName: System.Math.Ceiling(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Ceiling (double a);\n    parameters:\n    - id: a\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Ceiling*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Cos(System.Double)\n  id: Cos(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Cos(Double)\n  nameWithType: Math.Cos(Double)\n  fullName: System.Math.Cos(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Cos (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Cosh(System.Double)\n  id: Cosh(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Cosh(Double)\n  nameWithType: Math.Cosh(Double)\n  fullName: System.Math.Cosh(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Cosh (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.DivRem(System.Int32,System.Int32,System.Int32@)\n  id: DivRem(System.Int32,System.Int32,System.Int32@)\n  parent: System.Math\n  langs:\n  - csharp\n  name: DivRem(Int32,Int32,Int32)\n  nameWithType: Math.DivRem(Int32,Int32,Int32)\n  fullName: System.Math.DivRem(Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int DivRem (int a, int b, out int result);\n    parameters:\n    - id: a\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: b\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: result\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.DivRem*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.DivRem(System.Int64,System.Int64,System.Int64@)\n  id: DivRem(System.Int64,System.Int64,System.Int64@)\n  parent: System.Math\n  langs:\n  - csharp\n  name: DivRem(Int64,Int64,Int64)\n  nameWithType: Math.DivRem(Int64,Int64,Int64)\n  fullName: System.Math.DivRem(Int64,Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static long DivRem (long a, long b, out long result);\n    parameters:\n    - id: a\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: b\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: result\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Math.DivRem*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.E\n  id: E\n  parent: System.Math\n  langs:\n  - csharp\n  name: E\n  nameWithType: Math.E\n  fullName: System.Math.E\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public const double E = 2.71828182845905;\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Exp(System.Double)\n  id: Exp(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Exp(Double)\n  nameWithType: Math.Exp(Double)\n  fullName: System.Math.Exp(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Exp (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Floor(System.Decimal)\n  id: Floor(System.Decimal)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Floor(Decimal)\n  nameWithType: Math.Floor(Decimal)\n  fullName: System.Math.Floor(Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Floor (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Floor*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Floor(System.Double)\n  id: Floor(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Floor(Double)\n  nameWithType: Math.Floor(Double)\n  fullName: System.Math.Floor(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Floor (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Floor*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.IEEERemainder(System.Double,System.Double)\n  id: IEEERemainder(System.Double,System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: IEEERemainder(Double,Double)\n  nameWithType: Math.IEEERemainder(Double,Double)\n  fullName: System.Math.IEEERemainder(Double,Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double IEEERemainder (double x, double y);\n    parameters:\n    - id: x\n      type: System.Double\n      description: Parameter description to be filled\n    - id: y\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Log(System.Double)\n  id: Log(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Log(Double)\n  nameWithType: Math.Log(Double)\n  fullName: System.Math.Log(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Log (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Log*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Log(System.Double,System.Double)\n  id: Log(System.Double,System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Log(Double,Double)\n  nameWithType: Math.Log(Double,Double)\n  fullName: System.Math.Log(Double,Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Log (double a, double newBase);\n    parameters:\n    - id: a\n      type: System.Double\n      description: Parameter description to be filled\n    - id: newBase\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Log*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Log10(System.Double)\n  id: Log10(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Log10(Double)\n  nameWithType: Math.Log10(Double)\n  fullName: System.Math.Log10(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Log10 (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.Byte,System.Byte)\n  id: Max(System.Byte,System.Byte)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(Byte,Byte)\n  nameWithType: Math.Max(Byte,Byte)\n  fullName: System.Math.Max(Byte,Byte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static byte Max (byte val1, byte val2);\n    parameters:\n    - id: val1\n      type: System.Byte\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Byte\n      description: Parameter description to be filled\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.Decimal,System.Decimal)\n  id: Max(System.Decimal,System.Decimal)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(Decimal,Decimal)\n  nameWithType: Math.Max(Decimal,Decimal)\n  fullName: System.Math.Max(Decimal,Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Max (decimal val1, decimal val2);\n    parameters:\n    - id: val1\n      type: System.Decimal\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Decimal\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.Double,System.Double)\n  id: Max(System.Double,System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(Double,Double)\n  nameWithType: Math.Max(Double,Double)\n  fullName: System.Math.Max(Double,Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Max (double val1, double val2);\n    parameters:\n    - id: val1\n      type: System.Double\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.Int16,System.Int16)\n  id: Max(System.Int16,System.Int16)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(Int16,Int16)\n  nameWithType: Math.Max(Int16,Int16)\n  fullName: System.Math.Max(Int16,Int16)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static short Max (short val1, short val2);\n    parameters:\n    - id: val1\n      type: System.Int16\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Int16\n      description: Parameter description to be filled\n    return:\n      type: System.Int16\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.Int32,System.Int32)\n  id: Max(System.Int32,System.Int32)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(Int32,Int32)\n  nameWithType: Math.Max(Int32,Int32)\n  fullName: System.Math.Max(Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Max (int val1, int val2);\n    parameters:\n    - id: val1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.Int64,System.Int64)\n  id: Max(System.Int64,System.Int64)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(Int64,Int64)\n  nameWithType: Math.Max(Int64,Int64)\n  fullName: System.Math.Max(Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static long Max (long val1, long val2);\n    parameters:\n    - id: val1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.SByte,System.SByte)\n  id: Max(System.SByte,System.SByte)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(SByte,SByte)\n  nameWithType: Math.Max(SByte,SByte)\n  fullName: System.Math.Max(SByte,SByte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static sbyte Max (sbyte val1, sbyte val2);\n    parameters:\n    - id: val1\n      type: System.SByte\n      description: Parameter description to be filled\n    - id: val2\n      type: System.SByte\n      description: Parameter description to be filled\n    return:\n      type: System.SByte\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.Single,System.Single)\n  id: Max(System.Single,System.Single)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(Single,Single)\n  nameWithType: Math.Max(Single,Single)\n  fullName: System.Math.Max(Single,Single)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static float Max (float val1, float val2);\n    parameters:\n    - id: val1\n      type: System.Single\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Single\n      description: Parameter description to be filled\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.UInt16,System.UInt16)\n  id: Max(System.UInt16,System.UInt16)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(UInt16,UInt16)\n  nameWithType: Math.Max(UInt16,UInt16)\n  fullName: System.Math.Max(UInt16,UInt16)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ushort Max (ushort val1, ushort val2);\n    parameters:\n    - id: val1\n      type: System.UInt16\n      description: Parameter description to be filled\n    - id: val2\n      type: System.UInt16\n      description: Parameter description to be filled\n    return:\n      type: System.UInt16\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.UInt32,System.UInt32)\n  id: Max(System.UInt32,System.UInt32)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(UInt32,UInt32)\n  nameWithType: Math.Max(UInt32,UInt32)\n  fullName: System.Math.Max(UInt32,UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static uint Max (uint val1, uint val2);\n    parameters:\n    - id: val1\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: val2\n      type: System.UInt32\n      description: Parameter description to be filled\n    return:\n      type: System.UInt32\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Max(System.UInt64,System.UInt64)\n  id: Max(System.UInt64,System.UInt64)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Max(UInt64,UInt64)\n  nameWithType: Math.Max(UInt64,UInt64)\n  fullName: System.Math.Max(UInt64,UInt64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ulong Max (ulong val1, ulong val2);\n    parameters:\n    - id: val1\n      type: System.UInt64\n      description: Parameter description to be filled\n    - id: val2\n      type: System.UInt64\n      description: Parameter description to be filled\n    return:\n      type: System.UInt64\n      description: Parameter description to be filled\n  overload: System.Math.Max*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.Byte,System.Byte)\n  id: Min(System.Byte,System.Byte)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(Byte,Byte)\n  nameWithType: Math.Min(Byte,Byte)\n  fullName: System.Math.Min(Byte,Byte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static byte Min (byte val1, byte val2);\n    parameters:\n    - id: val1\n      type: System.Byte\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Byte\n      description: Parameter description to be filled\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.Decimal,System.Decimal)\n  id: Min(System.Decimal,System.Decimal)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(Decimal,Decimal)\n  nameWithType: Math.Min(Decimal,Decimal)\n  fullName: System.Math.Min(Decimal,Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Min (decimal val1, decimal val2);\n    parameters:\n    - id: val1\n      type: System.Decimal\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Decimal\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.Double,System.Double)\n  id: Min(System.Double,System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(Double,Double)\n  nameWithType: Math.Min(Double,Double)\n  fullName: System.Math.Min(Double,Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Min (double val1, double val2);\n    parameters:\n    - id: val1\n      type: System.Double\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.Int16,System.Int16)\n  id: Min(System.Int16,System.Int16)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(Int16,Int16)\n  nameWithType: Math.Min(Int16,Int16)\n  fullName: System.Math.Min(Int16,Int16)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static short Min (short val1, short val2);\n    parameters:\n    - id: val1\n      type: System.Int16\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Int16\n      description: Parameter description to be filled\n    return:\n      type: System.Int16\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.Int32,System.Int32)\n  id: Min(System.Int32,System.Int32)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(Int32,Int32)\n  nameWithType: Math.Min(Int32,Int32)\n  fullName: System.Math.Min(Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Min (int val1, int val2);\n    parameters:\n    - id: val1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.Int64,System.Int64)\n  id: Min(System.Int64,System.Int64)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(Int64,Int64)\n  nameWithType: Math.Min(Int64,Int64)\n  fullName: System.Math.Min(Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static long Min (long val1, long val2);\n    parameters:\n    - id: val1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.SByte,System.SByte)\n  id: Min(System.SByte,System.SByte)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(SByte,SByte)\n  nameWithType: Math.Min(SByte,SByte)\n  fullName: System.Math.Min(SByte,SByte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static sbyte Min (sbyte val1, sbyte val2);\n    parameters:\n    - id: val1\n      type: System.SByte\n      description: Parameter description to be filled\n    - id: val2\n      type: System.SByte\n      description: Parameter description to be filled\n    return:\n      type: System.SByte\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.Single,System.Single)\n  id: Min(System.Single,System.Single)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(Single,Single)\n  nameWithType: Math.Min(Single,Single)\n  fullName: System.Math.Min(Single,Single)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static float Min (float val1, float val2);\n    parameters:\n    - id: val1\n      type: System.Single\n      description: Parameter description to be filled\n    - id: val2\n      type: System.Single\n      description: Parameter description to be filled\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.UInt16,System.UInt16)\n  id: Min(System.UInt16,System.UInt16)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(UInt16,UInt16)\n  nameWithType: Math.Min(UInt16,UInt16)\n  fullName: System.Math.Min(UInt16,UInt16)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ushort Min (ushort val1, ushort val2);\n    parameters:\n    - id: val1\n      type: System.UInt16\n      description: Parameter description to be filled\n    - id: val2\n      type: System.UInt16\n      description: Parameter description to be filled\n    return:\n      type: System.UInt16\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.UInt32,System.UInt32)\n  id: Min(System.UInt32,System.UInt32)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(UInt32,UInt32)\n  nameWithType: Math.Min(UInt32,UInt32)\n  fullName: System.Math.Min(UInt32,UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static uint Min (uint val1, uint val2);\n    parameters:\n    - id: val1\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: val2\n      type: System.UInt32\n      description: Parameter description to be filled\n    return:\n      type: System.UInt32\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Min(System.UInt64,System.UInt64)\n  id: Min(System.UInt64,System.UInt64)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Min(UInt64,UInt64)\n  nameWithType: Math.Min(UInt64,UInt64)\n  fullName: System.Math.Min(UInt64,UInt64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ulong Min (ulong val1, ulong val2);\n    parameters:\n    - id: val1\n      type: System.UInt64\n      description: Parameter description to be filled\n    - id: val2\n      type: System.UInt64\n      description: Parameter description to be filled\n    return:\n      type: System.UInt64\n      description: Parameter description to be filled\n  overload: System.Math.Min*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.PI\n  id: PI\n  parent: System.Math\n  langs:\n  - csharp\n  name: PI\n  nameWithType: Math.PI\n  fullName: System.Math.PI\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public const double PI = 3.14159265358979;\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Pow(System.Double,System.Double)\n  id: Pow(System.Double,System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Pow(Double,Double)\n  nameWithType: Math.Pow(Double,Double)\n  fullName: System.Math.Pow(Double,Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Pow (double x, double y);\n    parameters:\n    - id: x\n      type: System.Double\n      description: Parameter description to be filled\n    - id: y\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Round(System.Decimal)\n  id: Round(System.Decimal)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Round(Decimal)\n  nameWithType: Math.Round(Decimal)\n  fullName: System.Math.Round(Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Round (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Round*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Round(System.Double)\n  id: Round(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Round(Double)\n  nameWithType: Math.Round(Double)\n  fullName: System.Math.Round(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Round (double a);\n    parameters:\n    - id: a\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Round*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Round(System.Decimal,System.Int32)\n  id: Round(System.Decimal,System.Int32)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Round(Decimal,Int32)\n  nameWithType: Math.Round(Decimal,Int32)\n  fullName: System.Math.Round(Decimal,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Round (decimal d, int decimals);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: Parameter description to be filled\n    - id: decimals\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Round*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Round(System.Decimal,System.MidpointRounding)\n  id: Round(System.Decimal,System.MidpointRounding)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Round(Decimal,MidpointRounding)\n  nameWithType: Math.Round(Decimal,MidpointRounding)\n  fullName: System.Math.Round(Decimal,MidpointRounding)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Round (decimal d, MidpointRounding mode);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: Parameter description to be filled\n    - id: mode\n      type: System.MidpointRounding\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Round*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Round(System.Double,System.Int32)\n  id: Round(System.Double,System.Int32)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Round(Double,Int32)\n  nameWithType: Math.Round(Double,Int32)\n  fullName: System.Math.Round(Double,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Round (double value, int digits);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    - id: digits\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Round*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Round(System.Double,System.MidpointRounding)\n  id: Round(System.Double,System.MidpointRounding)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Round(Double,MidpointRounding)\n  nameWithType: Math.Round(Double,MidpointRounding)\n  fullName: System.Math.Round(Double,MidpointRounding)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Round (double value, MidpointRounding mode);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    - id: mode\n      type: System.MidpointRounding\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Round*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)\n  id: Round(System.Decimal,System.Int32,System.MidpointRounding)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Round(Decimal,Int32,MidpointRounding)\n  nameWithType: Math.Round(Decimal,Int32,MidpointRounding)\n  fullName: System.Math.Round(Decimal,Int32,MidpointRounding)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Round (decimal d, int decimals, MidpointRounding mode);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: Parameter description to be filled\n    - id: decimals\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: mode\n      type: System.MidpointRounding\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Round*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Round(System.Double,System.Int32,System.MidpointRounding)\n  id: Round(System.Double,System.Int32,System.MidpointRounding)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Round(Double,Int32,MidpointRounding)\n  nameWithType: Math.Round(Double,Int32,MidpointRounding)\n  fullName: System.Math.Round(Double,Int32,MidpointRounding)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Round (double value, int digits, MidpointRounding mode);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    - id: digits\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: mode\n      type: System.MidpointRounding\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Round*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sign(System.Decimal)\n  id: Sign(System.Decimal)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sign(Decimal)\n  nameWithType: Math.Sign(Decimal)\n  fullName: System.Math.Sign(Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Sign (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Sign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sign(System.Double)\n  id: Sign(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sign(Double)\n  nameWithType: Math.Sign(Double)\n  fullName: System.Math.Sign(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Sign (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Sign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sign(System.Int16)\n  id: Sign(System.Int16)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sign(Int16)\n  nameWithType: Math.Sign(Int16)\n  fullName: System.Math.Sign(Int16)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Sign (short value);\n    parameters:\n    - id: value\n      type: System.Int16\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Sign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sign(System.Int32)\n  id: Sign(System.Int32)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sign(Int32)\n  nameWithType: Math.Sign(Int32)\n  fullName: System.Math.Sign(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Sign (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Sign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sign(System.Int64)\n  id: Sign(System.Int64)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sign(Int64)\n  nameWithType: Math.Sign(Int64)\n  fullName: System.Math.Sign(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Sign (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Sign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sign(System.SByte)\n  id: Sign(System.SByte)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sign(SByte)\n  nameWithType: Math.Sign(SByte)\n  fullName: System.Math.Sign(SByte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Sign (sbyte value);\n    parameters:\n    - id: value\n      type: System.SByte\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Sign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sign(System.Single)\n  id: Sign(System.Single)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sign(Single)\n  nameWithType: Math.Sign(Single)\n  fullName: System.Math.Sign(Single)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Sign (float value);\n    parameters:\n    - id: value\n      type: System.Single\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Math.Sign*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sin(System.Double)\n  id: Sin(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sin(Double)\n  nameWithType: Math.Sin(Double)\n  fullName: System.Math.Sin(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Sin (double a);\n    parameters:\n    - id: a\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sinh(System.Double)\n  id: Sinh(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sinh(Double)\n  nameWithType: Math.Sinh(Double)\n  fullName: System.Math.Sinh(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Sinh (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Sqrt(System.Double)\n  id: Sqrt(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Sqrt(Double)\n  nameWithType: Math.Sqrt(Double)\n  fullName: System.Math.Sqrt(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Sqrt (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Tan(System.Double)\n  id: Tan(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Tan(Double)\n  nameWithType: Math.Tan(Double)\n  fullName: System.Math.Tan(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Tan (double a);\n    parameters:\n    - id: a\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Tanh(System.Double)\n  id: Tanh(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Tanh(Double)\n  nameWithType: Math.Tanh(Double)\n  fullName: System.Math.Tanh(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Tanh (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Truncate(System.Decimal)\n  id: Truncate(System.Decimal)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Truncate(Decimal)\n  nameWithType: Math.Truncate(Decimal)\n  fullName: System.Math.Truncate(Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static decimal Truncate (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Math.Truncate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Math.Truncate(System.Double)\n  id: Truncate(System.Double)\n  parent: System.Math\n  langs:\n  - csharp\n  name: Truncate(Double)\n  nameWithType: Math.Truncate(Double)\n  fullName: System.Math.Truncate(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static double Truncate (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Math.Truncate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Math.Abs(System.Decimal)\n  parent: System.Math\n  isExternal: false\n  name: Abs(Decimal)\n  nameWithType: Math.Abs(Decimal)\n  fullName: System.Math.Abs(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Math.Abs(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Abs(Double)\n  nameWithType: Math.Abs(Double)\n  fullName: System.Math.Abs(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Abs(System.Int16)\n  parent: System.Math\n  isExternal: false\n  name: Abs(Int16)\n  nameWithType: Math.Abs(Int16)\n  fullName: System.Math.Abs(Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Math.Abs(System.Int32)\n  parent: System.Math\n  isExternal: false\n  name: Abs(Int32)\n  nameWithType: Math.Abs(Int32)\n  fullName: System.Math.Abs(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Math.Abs(System.Int64)\n  parent: System.Math\n  isExternal: false\n  name: Abs(Int64)\n  nameWithType: Math.Abs(Int64)\n  fullName: System.Math.Abs(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Math.Abs(System.SByte)\n  parent: System.Math\n  isExternal: false\n  name: Abs(SByte)\n  nameWithType: Math.Abs(SByte)\n  fullName: System.Math.Abs(SByte)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Math.Abs(System.Single)\n  parent: System.Math\n  isExternal: false\n  name: Abs(Single)\n  nameWithType: Math.Abs(Single)\n  fullName: System.Math.Abs(Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Math.Acos(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Acos(Double)\n  nameWithType: Math.Acos(Double)\n  fullName: System.Math.Acos(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Asin(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Asin(Double)\n  nameWithType: Math.Asin(Double)\n  fullName: System.Math.Asin(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Atan(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Atan(Double)\n  nameWithType: Math.Atan(Double)\n  fullName: System.Math.Atan(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Atan2(System.Double,System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Atan2(Double,Double)\n  nameWithType: Math.Atan2(Double,Double)\n  fullName: System.Math.Atan2(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.BigMul(System.Int32,System.Int32)\n  parent: System.Math\n  isExternal: false\n  name: BigMul(Int32,Int32)\n  nameWithType: Math.BigMul(Int32,Int32)\n  fullName: System.Math.BigMul(Int32,Int32)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Math.Ceiling(System.Decimal)\n  parent: System.Math\n  isExternal: false\n  name: Ceiling(Decimal)\n  nameWithType: Math.Ceiling(Decimal)\n  fullName: System.Math.Ceiling(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Math.Ceiling(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Ceiling(Double)\n  nameWithType: Math.Ceiling(Double)\n  fullName: System.Math.Ceiling(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Cos(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Cos(Double)\n  nameWithType: Math.Cos(Double)\n  fullName: System.Math.Cos(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Cosh(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Cosh(Double)\n  nameWithType: Math.Cosh(Double)\n  fullName: System.Math.Cosh(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.DivRem(System.Int32,System.Int32,System.Int32@)\n  parent: System.Math\n  isExternal: false\n  name: DivRem(Int32,Int32,Int32)\n  nameWithType: Math.DivRem(Int32,Int32,Int32)\n  fullName: System.Math.DivRem(Int32,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Math.DivRem(System.Int64,System.Int64,System.Int64@)\n  parent: System.Math\n  isExternal: false\n  name: DivRem(Int64,Int64,Int64)\n  nameWithType: Math.DivRem(Int64,Int64,Int64)\n  fullName: System.Math.DivRem(Int64,Int64,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Math.E\n  parent: System.Math\n  isExternal: false\n  name: E\n  nameWithType: Math.E\n  fullName: System.Math.E\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Exp(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Exp(Double)\n  nameWithType: Math.Exp(Double)\n  fullName: System.Math.Exp(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Floor(System.Decimal)\n  parent: System.Math\n  isExternal: false\n  name: Floor(Decimal)\n  nameWithType: Math.Floor(Decimal)\n  fullName: System.Math.Floor(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Math.Floor(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Floor(Double)\n  nameWithType: Math.Floor(Double)\n  fullName: System.Math.Floor(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.IEEERemainder(System.Double,System.Double)\n  parent: System.Math\n  isExternal: false\n  name: IEEERemainder(Double,Double)\n  nameWithType: Math.IEEERemainder(Double,Double)\n  fullName: System.Math.IEEERemainder(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Log(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Log(Double)\n  nameWithType: Math.Log(Double)\n  fullName: System.Math.Log(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Log(System.Double,System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Log(Double,Double)\n  nameWithType: Math.Log(Double,Double)\n  fullName: System.Math.Log(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Log10(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Log10(Double)\n  nameWithType: Math.Log10(Double)\n  fullName: System.Math.Log10(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Max(System.Byte,System.Byte)\n  parent: System.Math\n  isExternal: false\n  name: Max(Byte,Byte)\n  nameWithType: Math.Max(Byte,Byte)\n  fullName: System.Math.Max(Byte,Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Math.Max(System.Decimal,System.Decimal)\n  parent: System.Math\n  isExternal: false\n  name: Max(Decimal,Decimal)\n  nameWithType: Math.Max(Decimal,Decimal)\n  fullName: System.Math.Max(Decimal,Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Math.Max(System.Double,System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Max(Double,Double)\n  nameWithType: Math.Max(Double,Double)\n  fullName: System.Math.Max(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Max(System.Int16,System.Int16)\n  parent: System.Math\n  isExternal: false\n  name: Max(Int16,Int16)\n  nameWithType: Math.Max(Int16,Int16)\n  fullName: System.Math.Max(Int16,Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Math.Max(System.Int32,System.Int32)\n  parent: System.Math\n  isExternal: false\n  name: Max(Int32,Int32)\n  nameWithType: Math.Max(Int32,Int32)\n  fullName: System.Math.Max(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Math.Max(System.Int64,System.Int64)\n  parent: System.Math\n  isExternal: false\n  name: Max(Int64,Int64)\n  nameWithType: Math.Max(Int64,Int64)\n  fullName: System.Math.Max(Int64,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Math.Max(System.SByte,System.SByte)\n  parent: System.Math\n  isExternal: false\n  name: Max(SByte,SByte)\n  nameWithType: Math.Max(SByte,SByte)\n  fullName: System.Math.Max(SByte,SByte)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Math.Max(System.Single,System.Single)\n  parent: System.Math\n  isExternal: false\n  name: Max(Single,Single)\n  nameWithType: Math.Max(Single,Single)\n  fullName: System.Math.Max(Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Math.Max(System.UInt16,System.UInt16)\n  parent: System.Math\n  isExternal: false\n  name: Max(UInt16,UInt16)\n  nameWithType: Math.Max(UInt16,UInt16)\n  fullName: System.Math.Max(UInt16,UInt16)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.Math.Max(System.UInt32,System.UInt32)\n  parent: System.Math\n  isExternal: false\n  name: Max(UInt32,UInt32)\n  nameWithType: Math.Max(UInt32,UInt32)\n  fullName: System.Math.Max(UInt32,UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Math.Max(System.UInt64,System.UInt64)\n  parent: System.Math\n  isExternal: false\n  name: Max(UInt64,UInt64)\n  nameWithType: Math.Max(UInt64,UInt64)\n  fullName: System.Math.Max(UInt64,UInt64)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Math.Min(System.Byte,System.Byte)\n  parent: System.Math\n  isExternal: false\n  name: Min(Byte,Byte)\n  nameWithType: Math.Min(Byte,Byte)\n  fullName: System.Math.Min(Byte,Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Math.Min(System.Decimal,System.Decimal)\n  parent: System.Math\n  isExternal: false\n  name: Min(Decimal,Decimal)\n  nameWithType: Math.Min(Decimal,Decimal)\n  fullName: System.Math.Min(Decimal,Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Math.Min(System.Double,System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Min(Double,Double)\n  nameWithType: Math.Min(Double,Double)\n  fullName: System.Math.Min(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Min(System.Int16,System.Int16)\n  parent: System.Math\n  isExternal: false\n  name: Min(Int16,Int16)\n  nameWithType: Math.Min(Int16,Int16)\n  fullName: System.Math.Min(Int16,Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Math.Min(System.Int32,System.Int32)\n  parent: System.Math\n  isExternal: false\n  name: Min(Int32,Int32)\n  nameWithType: Math.Min(Int32,Int32)\n  fullName: System.Math.Min(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Math.Min(System.Int64,System.Int64)\n  parent: System.Math\n  isExternal: false\n  name: Min(Int64,Int64)\n  nameWithType: Math.Min(Int64,Int64)\n  fullName: System.Math.Min(Int64,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Math.Min(System.SByte,System.SByte)\n  parent: System.Math\n  isExternal: false\n  name: Min(SByte,SByte)\n  nameWithType: Math.Min(SByte,SByte)\n  fullName: System.Math.Min(SByte,SByte)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Math.Min(System.Single,System.Single)\n  parent: System.Math\n  isExternal: false\n  name: Min(Single,Single)\n  nameWithType: Math.Min(Single,Single)\n  fullName: System.Math.Min(Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Math.Min(System.UInt16,System.UInt16)\n  parent: System.Math\n  isExternal: false\n  name: Min(UInt16,UInt16)\n  nameWithType: Math.Min(UInt16,UInt16)\n  fullName: System.Math.Min(UInt16,UInt16)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.Math.Min(System.UInt32,System.UInt32)\n  parent: System.Math\n  isExternal: false\n  name: Min(UInt32,UInt32)\n  nameWithType: Math.Min(UInt32,UInt32)\n  fullName: System.Math.Min(UInt32,UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Math.Min(System.UInt64,System.UInt64)\n  parent: System.Math\n  isExternal: false\n  name: Min(UInt64,UInt64)\n  nameWithType: Math.Min(UInt64,UInt64)\n  fullName: System.Math.Min(UInt64,UInt64)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Math.PI\n  parent: System.Math\n  isExternal: false\n  name: PI\n  nameWithType: Math.PI\n  fullName: System.Math.PI\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Pow(System.Double,System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Pow(Double,Double)\n  nameWithType: Math.Pow(Double,Double)\n  fullName: System.Math.Pow(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Round(System.Decimal)\n  parent: System.Math\n  isExternal: false\n  name: Round(Decimal)\n  nameWithType: Math.Round(Decimal)\n  fullName: System.Math.Round(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Math.Round(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Round(Double)\n  nameWithType: Math.Round(Double)\n  fullName: System.Math.Round(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Round(System.Decimal,System.Int32)\n  parent: System.Math\n  isExternal: false\n  name: Round(Decimal,Int32)\n  nameWithType: Math.Round(Decimal,Int32)\n  fullName: System.Math.Round(Decimal,Int32)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Math.Round(System.Decimal,System.MidpointRounding)\n  parent: System.Math\n  isExternal: false\n  name: Round(Decimal,MidpointRounding)\n  nameWithType: Math.Round(Decimal,MidpointRounding)\n  fullName: System.Math.Round(Decimal,MidpointRounding)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.MidpointRounding\n  parent: System\n  isExternal: false\n  name: MidpointRounding\n  nameWithType: MidpointRounding\n  fullName: System.MidpointRounding\n- uid: System.Math.Round(System.Double,System.Int32)\n  parent: System.Math\n  isExternal: false\n  name: Round(Double,Int32)\n  nameWithType: Math.Round(Double,Int32)\n  fullName: System.Math.Round(Double,Int32)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Math.Round(System.Double,System.MidpointRounding)\n  parent: System.Math\n  isExternal: false\n  name: Round(Double,MidpointRounding)\n  nameWithType: Math.Round(Double,MidpointRounding)\n  fullName: System.Math.Round(Double,MidpointRounding)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.MidpointRounding\n  parent: System\n  isExternal: false\n  name: MidpointRounding\n  nameWithType: MidpointRounding\n  fullName: System.MidpointRounding\n- uid: System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)\n  parent: System.Math\n  isExternal: false\n  name: Round(Decimal,Int32,MidpointRounding)\n  nameWithType: Math.Round(Decimal,Int32,MidpointRounding)\n  fullName: System.Math.Round(Decimal,Int32,MidpointRounding)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.MidpointRounding\n  parent: System\n  isExternal: false\n  name: MidpointRounding\n  nameWithType: MidpointRounding\n  fullName: System.MidpointRounding\n- uid: System.Math.Round(System.Double,System.Int32,System.MidpointRounding)\n  parent: System.Math\n  isExternal: false\n  name: Round(Double,Int32,MidpointRounding)\n  nameWithType: Math.Round(Double,Int32,MidpointRounding)\n  fullName: System.Math.Round(Double,Int32,MidpointRounding)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.MidpointRounding\n  parent: System\n  isExternal: false\n  name: MidpointRounding\n  nameWithType: MidpointRounding\n  fullName: System.MidpointRounding\n- uid: System.Math.Sign(System.Decimal)\n  parent: System.Math\n  isExternal: false\n  name: Sign(Decimal)\n  nameWithType: Math.Sign(Decimal)\n  fullName: System.Math.Sign(Decimal)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Math.Sign(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Sign(Double)\n  nameWithType: Math.Sign(Double)\n  fullName: System.Math.Sign(Double)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Sign(System.Int16)\n  parent: System.Math\n  isExternal: false\n  name: Sign(Int16)\n  nameWithType: Math.Sign(Int16)\n  fullName: System.Math.Sign(Int16)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Math.Sign(System.Int32)\n  parent: System.Math\n  isExternal: false\n  name: Sign(Int32)\n  nameWithType: Math.Sign(Int32)\n  fullName: System.Math.Sign(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Math.Sign(System.Int64)\n  parent: System.Math\n  isExternal: false\n  name: Sign(Int64)\n  nameWithType: Math.Sign(Int64)\n  fullName: System.Math.Sign(Int64)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Math.Sign(System.SByte)\n  parent: System.Math\n  isExternal: false\n  name: Sign(SByte)\n  nameWithType: Math.Sign(SByte)\n  fullName: System.Math.Sign(SByte)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Math.Sign(System.Single)\n  parent: System.Math\n  isExternal: false\n  name: Sign(Single)\n  nameWithType: Math.Sign(Single)\n  fullName: System.Math.Sign(Single)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Math.Sin(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Sin(Double)\n  nameWithType: Math.Sin(Double)\n  fullName: System.Math.Sin(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Sinh(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Sinh(Double)\n  nameWithType: Math.Sinh(Double)\n  fullName: System.Math.Sinh(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Sqrt(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Sqrt(Double)\n  nameWithType: Math.Sqrt(Double)\n  fullName: System.Math.Sqrt(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Tan(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Tan(Double)\n  nameWithType: Math.Tan(Double)\n  fullName: System.Math.Tan(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Tanh(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Tanh(Double)\n  nameWithType: Math.Tanh(Double)\n  fullName: System.Math.Tanh(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Truncate(System.Decimal)\n  parent: System.Math\n  isExternal: false\n  name: Truncate(Decimal)\n  nameWithType: Math.Truncate(Decimal)\n  fullName: System.Math.Truncate(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Math.Truncate(System.Double)\n  parent: System.Math\n  isExternal: false\n  name: Truncate(Double)\n  nameWithType: Math.Truncate(Double)\n  fullName: System.Math.Truncate(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Math.Abs*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n- uid: System.Math.Ceiling*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n- uid: System.Math.DivRem*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n- uid: System.Math.Floor*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n- uid: System.Math.Log*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n- uid: System.Math.Max*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n- uid: System.Math.Min*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n- uid: System.Math.Round*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n- uid: System.Math.Sign*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n- uid: System.Math.Truncate*\n  parent: System.Math\n  isExternal: false\n  nameWithType: Math.\n"}