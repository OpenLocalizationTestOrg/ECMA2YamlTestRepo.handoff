{"nodes":[{"pos":[3427,3451],"content":"TextDecorationCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecorationCollection","pos":[0,24]}]},{"pos":[5674,5700],"content":"TextDecorationCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecorationCollection()","pos":[0,26]}]},{"pos":[6345,6398],"content":"TextDecorationCollection(IEnumerable<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>)","needQuote":true,"needEscape":true,"source":"TextDecorationCollection(IEnumerable<TextDecoration>)"},{"pos":[6960,6994],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7217,7248],"content":"TextDecorationCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecorationCollection(Int32)","pos":[0,31]}]},{"pos":[7639,7673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8004,8036],"content":"Add(IEnumerable<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Add(IEnumerable<TextDecoration>)"},{"pos":[8545,8579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8887,8906],"content":"Add(TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TextDecoration)","pos":[0,19]}]},{"pos":[9289,9323],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9573,9580],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[10024,10031],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[10401,10435],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10688,10708],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[11103,11137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11354,11373],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[11779,11813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12090,12122],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[12553,12587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12848,12872],"content":"Contains(TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TextDecoration)","pos":[0,24]}]},{"pos":[13270,13304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13363,13397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13684,13714],"content":"CopyTo(TextDecoration[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TextDecoration[],Int32)","pos":[0,30]}]},{"pos":[14137,14171],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14232,14266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14459,14464],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[14755,14789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15008,15028],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[15419,15453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15688,15707],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[16079,16113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16172,16206],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16471,16497],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[16910,16944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17233,17271],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[17720,17754],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17963,17978],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[18394,18428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18687,18710],"content":"IndexOf(TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(TextDecoration)","pos":[0,23]}]},{"pos":[19104,19138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19195,19229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19512,19540],"content":"Insert(Int32,TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,TextDecoration)","pos":[0,28]}]},{"pos":[19938,19972],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20050,20084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20303,20314],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[20678,20712],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20786,20820],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21077,21099],"content":"Remove(TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TextDecoration)","pos":[0,22]}]},{"pos":[21491,21525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21584,21618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21845,21860],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[22197,22231],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22588,22626],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[23054,23088],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23451,23491],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[24016,24050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24375,24425],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[24848,24882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24943,24977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25264,25309],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[25716,25750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26025,26064],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[26454,26488],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26773,26819],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[27262,27296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27579,27615],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[27991,28025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28082,28116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28409,28450],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[28842,28876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28935,28969],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29260,29300],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[29688,29722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29779,29813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30128,30173],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[30581,30615],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30677,30711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30980,31016],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[31396,31430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31697,31732],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[32109,32143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32426,32462],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[32871,32905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32963,32997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33286,33325],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[33711,33745],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34170,34233],"content":"TryRemove(IEnumerable<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>,TextDecorationCollection)","needQuote":true,"needEscape":true,"source":"TryRemove(IEnumerable<TextDecoration>,TextDecorationCollection)"},{"pos":[34862,34896],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34985,35019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35078,35112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35251,35292],"content":"System.Windows.Media.Animation.Animatable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.Animatable","pos":[0,41]}]},{"pos":[35424,35450],"content":"TextDecorationCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecorationCollection()","pos":[0,26]}]},{"pos":[35800,35853],"content":"TextDecorationCollection(IEnumerable<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>)","needQuote":true,"needEscape":true,"source":"TextDecorationCollection(IEnumerable<TextDecoration>)"},{"pos":[36197,36224],"content":"IEnumerable<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TextDecoration>"},{"pos":[36496,36527],"content":"TextDecorationCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecorationCollection(Int32)","pos":[0,31]}]},{"pos":[36750,36755],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37003,37035],"content":"Add(IEnumerable<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Add(IEnumerable<TextDecoration>)"},{"pos":[37337,37364],"content":"IEnumerable<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TextDecoration>"},{"pos":[37651,37670],"content":"Add(TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TextDecoration)","pos":[0,19]}]},{"pos":[37894,37908],"content":"TextDecoration","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecoration","pos":[0,14]}]},{"pos":[38113,38120],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[38361,38368],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[38578,38602],"content":"TextDecorationCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecorationCollection","pos":[0,24]}]},{"pos":[38857,38877],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[39097,39106],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39313,39332],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[39566,39590],"content":"TextDecorationCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecorationCollection","pos":[0,24]}]},{"pos":[39857,39889],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[40133,40142],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[40371,40395],"content":"Contains(TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TextDecoration)","pos":[0,24]}]},{"pos":[40606,40613],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40755,40769],"content":"TextDecoration","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecoration","pos":[0,14]}]},{"pos":[41021,41051],"content":"CopyTo(TextDecoration[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TextDecoration[],Int32)","pos":[0,30]}]},{"pos":[41297,41311],"content":"TextDecoration","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecoration","pos":[0,14]}]},{"pos":[41452,41457],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41636,41641],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[41812,41817],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42009,42029],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[42249,42258],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[42474,42493],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[42694,42701],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42820,42827],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43046,43072],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[43304,43313],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[43556,43594],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[43850,43859],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[44062,44077],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[44314,44349],"content":"TextDecorationCollection+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecorationCollection+Enumerator","pos":[0,35]}]},{"pos":[44629,44652],"content":"IndexOf(TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(TextDecoration)","pos":[0,23]}]},{"pos":[44859,44864],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45002,45016],"content":"TextDecoration","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecoration","pos":[0,14]}]},{"pos":[45266,45294],"content":"Insert(Int32,TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,TextDecoration)","pos":[0,28]}]},{"pos":[45511,45516],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45654,45668],"content":"TextDecoration","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecoration","pos":[0,14]}]},{"pos":[45886,45897],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[46105,46119],"content":"TextDecoration","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecoration","pos":[0,14]}]},{"pos":[46258,46263],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46474,46496],"content":"Remove(TextDecoration)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TextDecoration)","pos":[0,22]}]},{"pos":[46703,46710],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46852,46866],"content":"TextDecoration","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecoration","pos":[0,14]}]},{"pos":[47088,47103],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[47294,47299],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47553,47591],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[47830,47837],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[48098,48138],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[48456,48483],"content":"IEnumerator<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<TextDecoration>"},{"pos":[48800,48850],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[49111,49116],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[49229,49234],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49453,49498],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[49751,49758],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[49975,50014],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[50254,50260],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50480,50526],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[50809,50820],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[51061,51097],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[51330,51335],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[51449,51455],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51679,51720],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[51965,51972],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[52090,52096],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52319,52359],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[52600,52605],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52719,52725],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52960,53005],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[53256,53261],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53375,53381],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53593,53629],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[53864,53871],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54084,54119],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[54352,54359],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54580,54616],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[54850,54856],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54971,54976],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[55196,55235],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[55475,55481],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55778,55841],"content":"TryRemove(IEnumerable<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>,TextDecorationCollection)","needQuote":true,"needEscape":true,"source":"TryRemove(IEnumerable<TextDecoration>,TextDecorationCollection)"},{"pos":[56130,56137],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56331,56358],"content":"IEnumerable<ph id=\"ph1\">&lt;TextDecoration&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TextDecoration>"},{"pos":[56585,56609],"content":"TextDecorationCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TextDecorationCollection","pos":[0,24]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.TextDecorationCollection\n  id: TextDecorationCollection\n  children:\n  - System.Windows.TextDecorationCollection.#ctor\n  - System.Windows.TextDecorationCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})\n  - System.Windows.TextDecorationCollection.#ctor(System.Int32)\n  - System.Windows.TextDecorationCollection.Add(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})\n  - System.Windows.TextDecorationCollection.Add(System.Windows.TextDecoration)\n  - System.Windows.TextDecorationCollection.Clear\n  - System.Windows.TextDecorationCollection.Clone\n  - System.Windows.TextDecorationCollection.CloneCore(System.Windows.Freezable)\n  - System.Windows.TextDecorationCollection.CloneCurrentValue\n  - System.Windows.TextDecorationCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.TextDecorationCollection.Contains(System.Windows.TextDecoration)\n  - System.Windows.TextDecorationCollection.CopyTo(System.Windows.TextDecoration[],System.Int32)\n  - System.Windows.TextDecorationCollection.Count\n  - System.Windows.TextDecorationCollection.CreateInstanceCore\n  - System.Windows.TextDecorationCollection.FreezeCore(System.Boolean)\n  - System.Windows.TextDecorationCollection.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.TextDecorationCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.TextDecorationCollection.GetEnumerator\n  - System.Windows.TextDecorationCollection.IndexOf(System.Windows.TextDecoration)\n  - System.Windows.TextDecorationCollection.Insert(System.Int32,System.Windows.TextDecoration)\n  - System.Windows.TextDecorationCollection.Item(System.Int32)\n  - System.Windows.TextDecorationCollection.Remove(System.Windows.TextDecoration)\n  - System.Windows.TextDecorationCollection.RemoveAt(System.Int32)\n  - System.Windows.TextDecorationCollection.System#Collections#Generic#ICollection{System#Windows#TextDecoration}#IsReadOnly\n  - System.Windows.TextDecorationCollection.System#Collections#Generic#IEnumerable{System#Windows#TextDecoration}#GetEnumerator\n  - System.Windows.TextDecorationCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.TextDecorationCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.TextDecorationCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.TextDecorationCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.TextDecorationCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.TextDecorationCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.TextDecorationCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.TextDecorationCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.TextDecorationCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.TextDecorationCollection.System#Collections#IList#IsReadOnly\n  - System.Windows.TextDecorationCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.TextDecorationCollection.System#Collections#IList#Remove(System.Object)\n  - System.Windows.TextDecorationCollection.TryRemove(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration},System.Windows.TextDecorationCollection@)\n  langs:\n  - csharp\n  name: TextDecorationCollection\n  nameWithType: TextDecorationCollection\n  fullName: System.Windows.TextDecorationCollection\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.TextDecorationCollectionConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public sealed class TextDecorationCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection<System.Windows.TextDecoration>, System.Collections.Generic.IEnumerable<System.Windows.TextDecoration>, System.Collections.Generic.IList<System.Windows.TextDecoration>, System.Collections.IList\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.TextDecoration>\n  - System.Collections.Generic.IEnumerable<System.Windows.TextDecoration>\n  - System.Collections.Generic.IList<System.Windows.TextDecoration>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: TextDecorationCollection()\n  nameWithType: TextDecorationCollection.TextDecorationCollection()\n  fullName: System.Windows.TextDecorationCollection.TextDecorationCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public TextDecorationCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})'\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: TextDecorationCollection(IEnumerable<TextDecoration>)\n  nameWithType: TextDecorationCollection.TextDecorationCollection(IEnumerable<TextDecoration>)\n  fullName: System.Windows.TextDecorationCollection.TextDecorationCollection(IEnumerable<TextDecoration>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public TextDecorationCollection (System.Collections.Generic.IEnumerable<System.Windows.TextDecoration> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{System.Windows.TextDecoration}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: TextDecorationCollection(Int32)\n  nameWithType: TextDecorationCollection.TextDecorationCollection(Int32)\n  fullName: System.Windows.TextDecorationCollection.TextDecorationCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public TextDecorationCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.Add(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})\n  id: Add(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: Add(IEnumerable<TextDecoration>)\n  nameWithType: TextDecorationCollection.Add(IEnumerable<TextDecoration>)\n  fullName: System.Windows.TextDecorationCollection.Add(IEnumerable<TextDecoration>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void Add (System.Collections.Generic.IEnumerable<System.Windows.TextDecoration> textDecorations);\n    parameters:\n    - id: textDecorations\n      type: System.Collections.Generic.IEnumerable{System.Windows.TextDecoration}\n      description: Parameter description to be filled\n  overload: System.Windows.TextDecorationCollection.Add*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.Add(System.Windows.TextDecoration)\n  id: Add(System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: Add(TextDecoration)\n  nameWithType: TextDecorationCollection.Add(TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.Add(TextDecoration)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void Add (System.Windows.TextDecoration value);\n    parameters:\n    - id: value\n      type: System.Windows.TextDecoration\n      description: Parameter description to be filled\n  overload: System.Windows.TextDecorationCollection.Add*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.Clear\n  id: Clear\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TextDecorationCollection.Clear()\n  fullName: System.Windows.TextDecorationCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.Clone\n  id: Clone\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: TextDecorationCollection.Clone()\n  fullName: System.Windows.TextDecorationCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.TextDecorationCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.TextDecorationCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: TextDecorationCollection.CloneCore(Freezable)\n  fullName: System.Windows.TextDecorationCollection.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: TextDecorationCollection.CloneCurrentValue()\n  fullName: System.Windows.TextDecorationCollection.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.TextDecorationCollection CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.TextDecorationCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: TextDecorationCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.TextDecorationCollection.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.Contains(System.Windows.TextDecoration)\n  id: Contains(System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: Contains(TextDecoration)\n  nameWithType: TextDecorationCollection.Contains(TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.Contains(TextDecoration)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public bool Contains (System.Windows.TextDecoration value);\n    parameters:\n    - id: value\n      type: System.Windows.TextDecoration\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.CopyTo(System.Windows.TextDecoration[],System.Int32)\n  id: CopyTo(System.Windows.TextDecoration[],System.Int32)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: CopyTo(TextDecoration[],Int32)\n  nameWithType: TextDecorationCollection.CopyTo(TextDecoration[],Int32)\n  fullName: System.Windows.TextDecorationCollection.CopyTo(TextDecoration[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void CopyTo (System.Windows.TextDecoration[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.TextDecoration[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.Count\n  id: Count\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TextDecorationCollection.Count\n  fullName: System.Windows.TextDecorationCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: TextDecorationCollection.CreateInstanceCore()\n  fullName: System.Windows.TextDecorationCollection.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: TextDecorationCollection.FreezeCore(Boolean)\n  fullName: System.Windows.TextDecorationCollection.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: TextDecorationCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.TextDecorationCollection.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: TextDecorationCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.TextDecorationCollection.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TextDecorationCollection.GetEnumerator()\n  fullName: System.Windows.TextDecorationCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.TextDecorationCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.TextDecorationCollection.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.IndexOf(System.Windows.TextDecoration)\n  id: IndexOf(System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: IndexOf(TextDecoration)\n  nameWithType: TextDecorationCollection.IndexOf(TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.IndexOf(TextDecoration)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public int IndexOf (System.Windows.TextDecoration value);\n    parameters:\n    - id: value\n      type: System.Windows.TextDecoration\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.Insert(System.Int32,System.Windows.TextDecoration)\n  id: Insert(System.Int32,System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: Insert(Int32,TextDecoration)\n  nameWithType: TextDecorationCollection.Insert(Int32,TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.Insert(Int32,TextDecoration)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void Insert (int index, System.Windows.TextDecoration value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Windows.TextDecoration\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: TextDecorationCollection.Item(Int32)\n  fullName: System.Windows.TextDecorationCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.TextDecoration this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.TextDecoration\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.Remove(System.Windows.TextDecoration)\n  id: Remove(System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: Remove(TextDecoration)\n  nameWithType: TextDecorationCollection.Remove(TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.Remove(TextDecoration)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public bool Remove (System.Windows.TextDecoration value);\n    parameters:\n    - id: value\n      type: System.Windows.TextDecoration\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: TextDecorationCollection.RemoveAt(Int32)\n  fullName: System.Windows.TextDecorationCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#Generic#ICollection{System#Windows#TextDecoration}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Windows#TextDecoration}#IsReadOnly\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: TextDecorationCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.TextDecorationCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Windows.TextDecoration>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#Generic#IEnumerable{System#Windows#TextDecoration}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Windows#TextDecoration}#GetEnumerator\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: TextDecorationCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.TextDecorationCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Windows.TextDecoration> IEnumerable<TextDecoration>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.TextDecoration}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TextDecorationCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TextDecorationCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.TextDecorationCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TextDecorationCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.TextDecorationCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TextDecorationCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TextDecorationCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TextDecorationCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TextDecorationCollection.TryRemove(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration},System.Windows.TextDecorationCollection@)\n  id: TryRemove(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration},System.Windows.TextDecorationCollection@)\n  parent: System.Windows.TextDecorationCollection\n  langs:\n  - csharp\n  name: TryRemove(IEnumerable<TextDecoration>,TextDecorationCollection)\n  nameWithType: TextDecorationCollection.TryRemove(IEnumerable<TextDecoration>,TextDecorationCollection)\n  fullName: System.Windows.TextDecorationCollection.TryRemove(IEnumerable<TextDecoration>,TextDecorationCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public bool TryRemove (System.Collections.Generic.IEnumerable<System.Windows.TextDecoration> textDecorations, out System.Windows.TextDecorationCollection result);\n    parameters:\n    - id: textDecorations\n      type: System.Collections.Generic.IEnumerable{System.Windows.TextDecoration}\n      description: Parameter description to be filled\n    - id: result\n      type: System.Windows.TextDecorationCollection\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.TextDecorationCollection.#ctor\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: TextDecorationCollection()\n  nameWithType: TextDecorationCollection.TextDecorationCollection()\n  fullName: System.Windows.TextDecorationCollection.TextDecorationCollection()\n- uid: System.Windows.TextDecorationCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: TextDecorationCollection(IEnumerable<TextDecoration>)\n  nameWithType: TextDecorationCollection.TextDecorationCollection(IEnumerable<TextDecoration>)\n  fullName: System.Windows.TextDecorationCollection.TextDecorationCollection(IEnumerable<TextDecoration>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.TextDecoration}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TextDecoration>\n  nameWithType: IEnumerable<TextDecoration>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.TextDecoration>\n- uid: System.Windows.TextDecorationCollection.#ctor(System.Int32)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: TextDecorationCollection(Int32)\n  nameWithType: TextDecorationCollection.TextDecorationCollection(Int32)\n  fullName: System.Windows.TextDecorationCollection.TextDecorationCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TextDecorationCollection.Add(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: Add(IEnumerable<TextDecoration>)\n  nameWithType: TextDecorationCollection.Add(IEnumerable<TextDecoration>)\n  fullName: System.Windows.TextDecorationCollection.Add(IEnumerable<TextDecoration>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.TextDecoration}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TextDecoration>\n  nameWithType: IEnumerable<TextDecoration>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.TextDecoration>\n- uid: System.Windows.TextDecorationCollection.Add(System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: Add(TextDecoration)\n  nameWithType: TextDecorationCollection.Add(TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.Add(TextDecoration)\n- uid: System.Windows.TextDecoration\n  parent: System.Windows\n  isExternal: false\n  name: TextDecoration\n  nameWithType: TextDecoration\n  fullName: System.Windows.TextDecoration\n- uid: System.Windows.TextDecorationCollection.Clear\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: TextDecorationCollection.Clear()\n  fullName: System.Windows.TextDecorationCollection.Clear()\n- uid: System.Windows.TextDecorationCollection.Clone\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: TextDecorationCollection.Clone()\n  fullName: System.Windows.TextDecorationCollection.Clone()\n- uid: System.Windows.TextDecorationCollection\n  parent: System.Windows\n  isExternal: false\n  name: TextDecorationCollection\n  nameWithType: TextDecorationCollection\n  fullName: System.Windows.TextDecorationCollection\n- uid: System.Windows.TextDecorationCollection.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: TextDecorationCollection.CloneCore(Freezable)\n  fullName: System.Windows.TextDecorationCollection.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.TextDecorationCollection.CloneCurrentValue\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: TextDecorationCollection.CloneCurrentValue()\n  fullName: System.Windows.TextDecorationCollection.CloneCurrentValue()\n- uid: System.Windows.TextDecorationCollection\n  parent: System.Windows\n  isExternal: false\n  name: TextDecorationCollection\n  nameWithType: TextDecorationCollection\n  fullName: System.Windows.TextDecorationCollection\n- uid: System.Windows.TextDecorationCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: TextDecorationCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.TextDecorationCollection.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.TextDecorationCollection.Contains(System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: Contains(TextDecoration)\n  nameWithType: TextDecorationCollection.Contains(TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.Contains(TextDecoration)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TextDecoration\n  parent: System.Windows\n  isExternal: false\n  name: TextDecoration\n  nameWithType: TextDecoration\n  fullName: System.Windows.TextDecoration\n- uid: System.Windows.TextDecorationCollection.CopyTo(System.Windows.TextDecoration[],System.Int32)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: CopyTo(TextDecoration[],Int32)\n  nameWithType: TextDecorationCollection.CopyTo(TextDecoration[],Int32)\n  fullName: System.Windows.TextDecorationCollection.CopyTo(TextDecoration[],Int32)\n- uid: System.Windows.TextDecoration\n  parent: System.Windows\n  isExternal: false\n  name: TextDecoration\n  nameWithType: TextDecoration\n  fullName: System.Windows.TextDecoration[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TextDecorationCollection.Count\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: Count\n  nameWithType: TextDecorationCollection.Count\n  fullName: System.Windows.TextDecorationCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TextDecorationCollection.CreateInstanceCore\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: TextDecorationCollection.CreateInstanceCore()\n  fullName: System.Windows.TextDecorationCollection.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.TextDecorationCollection.FreezeCore(System.Boolean)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: TextDecorationCollection.FreezeCore(Boolean)\n  fullName: System.Windows.TextDecorationCollection.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TextDecorationCollection.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: TextDecorationCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.TextDecorationCollection.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.TextDecorationCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: TextDecorationCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.TextDecorationCollection.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.TextDecorationCollection.GetEnumerator\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TextDecorationCollection.GetEnumerator()\n  fullName: System.Windows.TextDecorationCollection.GetEnumerator()\n- uid: System.Windows.TextDecorationCollection.Enumerator\n  parent: System.Windows\n  isExternal: false\n  name: TextDecorationCollection+Enumerator\n  nameWithType: TextDecorationCollection+Enumerator\n  fullName: System.Windows.TextDecorationCollection+Enumerator\n- uid: System.Windows.TextDecorationCollection.IndexOf(System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: IndexOf(TextDecoration)\n  nameWithType: TextDecorationCollection.IndexOf(TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.IndexOf(TextDecoration)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TextDecoration\n  parent: System.Windows\n  isExternal: false\n  name: TextDecoration\n  nameWithType: TextDecoration\n  fullName: System.Windows.TextDecoration\n- uid: System.Windows.TextDecorationCollection.Insert(System.Int32,System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: Insert(Int32,TextDecoration)\n  nameWithType: TextDecorationCollection.Insert(Int32,TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.Insert(Int32,TextDecoration)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TextDecoration\n  parent: System.Windows\n  isExternal: false\n  name: TextDecoration\n  nameWithType: TextDecoration\n  fullName: System.Windows.TextDecoration\n- uid: System.Windows.TextDecorationCollection.Item(System.Int32)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: TextDecorationCollection.Item(Int32)\n  fullName: System.Windows.TextDecorationCollection.Item(Int32)\n- uid: System.Windows.TextDecoration\n  parent: System.Windows\n  isExternal: false\n  name: TextDecoration\n  nameWithType: TextDecoration\n  fullName: System.Windows.TextDecoration\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TextDecorationCollection.Remove(System.Windows.TextDecoration)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: Remove(TextDecoration)\n  nameWithType: TextDecorationCollection.Remove(TextDecoration)\n  fullName: System.Windows.TextDecorationCollection.Remove(TextDecoration)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TextDecoration\n  parent: System.Windows\n  isExternal: false\n  name: TextDecoration\n  nameWithType: TextDecoration\n  fullName: System.Windows.TextDecoration\n- uid: System.Windows.TextDecorationCollection.RemoveAt(System.Int32)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: TextDecorationCollection.RemoveAt(Int32)\n  fullName: System.Windows.TextDecorationCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TextDecorationCollection.System#Collections#Generic#ICollection{System#Windows#TextDecoration}#IsReadOnly\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: TextDecorationCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.TextDecorationCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TextDecorationCollection.System#Collections#Generic#IEnumerable{System#Windows#TextDecoration}#GetEnumerator\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: TextDecorationCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.TextDecorationCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.TextDecoration}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<TextDecoration>\n  nameWithType: IEnumerator<TextDecoration>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.TextDecoration>\n- uid: System.Windows.TextDecorationCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TextDecorationCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TextDecorationCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TextDecorationCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.TextDecorationCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TextDecorationCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TextDecorationCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.TextDecorationCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TextDecorationCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TextDecorationCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TextDecorationCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#IsReadOnly\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TextDecorationCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TextDecorationCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TextDecorationCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.TextDecorationCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TextDecorationCollection.TryRemove(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration},System.Windows.TextDecorationCollection@)\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  name: TryRemove(IEnumerable<TextDecoration>,TextDecorationCollection)\n  nameWithType: TextDecorationCollection.TryRemove(IEnumerable<TextDecoration>,TextDecorationCollection)\n  fullName: System.Windows.TextDecorationCollection.TryRemove(IEnumerable<TextDecoration>,TextDecorationCollection)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable{System.Windows.TextDecoration}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TextDecoration>\n  nameWithType: IEnumerable<TextDecoration>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.TextDecoration>\n- uid: System.Windows.TextDecorationCollection\n  parent: System.Windows\n  isExternal: false\n  name: TextDecorationCollection\n  nameWithType: TextDecorationCollection\n  fullName: System.Windows.TextDecorationCollection\n- uid: System.Windows.TextDecorationCollection.Add*\n  parent: System.Windows.TextDecorationCollection\n  isExternal: false\n  nameWithType: TextDecorationCollection.\n"}