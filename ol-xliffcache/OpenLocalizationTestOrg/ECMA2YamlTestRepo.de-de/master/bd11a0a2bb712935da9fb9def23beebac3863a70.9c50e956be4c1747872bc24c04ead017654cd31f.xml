{"nodes":[{"pos":[560,590],"content":"StrongNameSignatureInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameSignatureInformation","pos":[0,30]}]},{"pos":[1390,1403],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[1757,1791],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2028,2035],"content":"HResult","needQuote":true,"needEscape":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[2367,2401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2638,2645],"content":"IsValid","needQuote":true,"needEscape":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[2980,3014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3255,3264],"content":"PublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicKey","pos":[0,9]}]},{"pos":[3683,3717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3976,3994],"content":"VerificationResult","needQuote":true,"needEscape":true,"nodes":[{"content":"VerificationResult","pos":[0,18]}]},{"pos":[4456,4490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4601,4614],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[4794,4807],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[5021,5027],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[5250,5257],"content":"HResult","needQuote":true,"needEscape":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[5458,5463],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[5684,5691],"content":"IsValid","needQuote":true,"needEscape":true,"nodes":[{"content":"IsValid","pos":[0,7]}]},{"pos":[5894,5901],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6128,6137],"content":"PublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicKey","pos":[0,9]}]},{"pos":[6400,6419],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]},{"pos":[6701,6719],"content":"VerificationResult","needQuote":true,"needEscape":true,"nodes":[{"content":"VerificationResult","pos":[0,18]}]},{"pos":[7008,7035],"content":"SignatureVerificationResult","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureVerificationResult","pos":[0,27]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.StrongNameSignatureInformation\n  id: StrongNameSignatureInformation\n  children:\n  - System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm\n  - System.Security.Cryptography.StrongNameSignatureInformation.HResult\n  - System.Security.Cryptography.StrongNameSignatureInformation.IsValid\n  - System.Security.Cryptography.StrongNameSignatureInformation.PublicKey\n  - System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult\n  langs:\n  - csharp\n  name: StrongNameSignatureInformation\n  nameWithType: StrongNameSignatureInformation\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation\n  type: Class\n  syntax:\n    content: public sealed class StrongNameSignatureInformation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm\n  id: HashAlgorithm\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  langs:\n  - csharp\n  name: HashAlgorithm\n  nameWithType: StrongNameSignatureInformation.HashAlgorithm\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public string HashAlgorithm { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.HResult\n  id: HResult\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  langs:\n  - csharp\n  name: HResult\n  nameWithType: StrongNameSignatureInformation.HResult\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.HResult\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public int HResult { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.IsValid\n  id: IsValid\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  langs:\n  - csharp\n  name: IsValid\n  nameWithType: StrongNameSignatureInformation.IsValid\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.IsValid\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool IsValid { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.PublicKey\n  id: PublicKey\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  langs:\n  - csharp\n  name: PublicKey\n  nameWithType: StrongNameSignatureInformation.PublicKey\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.PublicKey\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.AsymmetricAlgorithm PublicKey { get; }\n    return:\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult\n  id: VerificationResult\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  langs:\n  - csharp\n  name: VerificationResult\n  nameWithType: StrongNameSignatureInformation.VerificationResult\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.SignatureVerificationResult VerificationResult { get; }\n    return:\n      type: System.Security.Cryptography.SignatureVerificationResult\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: StrongNameSignatureInformation.HashAlgorithm\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.HResult\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  isExternal: false\n  name: HResult\n  nameWithType: StrongNameSignatureInformation.HResult\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.HResult\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.IsValid\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  isExternal: false\n  name: IsValid\n  nameWithType: StrongNameSignatureInformation.IsValid\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.IsValid\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.PublicKey\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  isExternal: false\n  name: PublicKey\n  nameWithType: StrongNameSignatureInformation.PublicKey\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.PublicKey\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult\n  parent: System.Security.Cryptography.StrongNameSignatureInformation\n  isExternal: false\n  name: VerificationResult\n  nameWithType: StrongNameSignatureInformation.VerificationResult\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult\n- uid: System.Security.Cryptography.SignatureVerificationResult\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: SignatureVerificationResult\n  nameWithType: SignatureVerificationResult\n  fullName: System.Security.Cryptography.SignatureVerificationResult\n"}