{"nodes":[{"pos":[3230,3250],"content":"TextEffectCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffectCollection","pos":[0,20]}]},{"pos":[5380,5402],"content":"TextEffectCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffectCollection()","pos":[0,22]}]},{"pos":[6047,6092],"content":"TextEffectCollection(IEnumerable<ph id=\"ph1\">&lt;TextEffect&gt;</ph>)","needQuote":true,"needEscape":true,"source":"TextEffectCollection(IEnumerable<TextEffect>)"},{"pos":[6642,6676],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6903,6930],"content":"TextEffectCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffectCollection(Int32)","pos":[0,27]}]},{"pos":[7313,7347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7606,7621],"content":"Add(TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TextEffect)","pos":[0,15]}]},{"pos":[8004,8038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8235,8242],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[8694,8701],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[9079,9113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9370,9390],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[9789,9823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10044,10063],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[10477,10511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10792,10824],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[11259,11293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11562,11582],"content":"Contains(TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TextEffect)","pos":[0,20]}]},{"pos":[11980,12014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12073,12107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12402,12428],"content":"CopyTo(TextEffect[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TextEffect[],Int32)","pos":[0,26]}]},{"pos":[12851,12885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12946,12980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13177,13182],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[13477,13511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13734,13754],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[14149,14183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14422,14441],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[14817,14851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14910,14944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15213,15239],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[15656,15690],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15983,16021],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[16474,16508],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16721,16736],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[17160,17194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17461,17480],"content":"IndexOf(TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(TextEffect)","pos":[0,19]}]},{"pos":[17874,17908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17965,17999],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18290,18314],"content":"Insert(Int32,TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,TextEffect)","pos":[0,24]}]},{"pos":[18710,18744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18824,18858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19081,19092],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[19462,19496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19572,19606],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19871,19889],"content":"Remove(TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TextEffect)","pos":[0,18]}]},{"pos":[20281,20315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20374,20408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20639,20654],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[20995,21029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21394,21432],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[21866,21900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22271,22311],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[22840,22874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23203,23253],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[23680,23714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23775,23809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24100,24145],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[24556,24590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24869,24908],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[25302,25336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25625,25671],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[26118,26152],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26439,26475],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[26855,26889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26946,26980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27277,27318],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[27714,27748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27807,27841],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28136,28176],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[28568,28602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28659,28693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29012,29057],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[29469,29503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29565,29599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29872,29908],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[30292,30326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30597,30632],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[31013,31047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31334,31370],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[31783,31817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31875,31909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32202,32241],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[32631,32665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32804,32845],"content":"System.Windows.Media.Animation.Animatable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.Animatable","pos":[0,41]}]},{"pos":[32981,33003],"content":"TextEffectCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffectCollection()","pos":[0,22]}]},{"pos":[33349,33394],"content":"TextEffectCollection(IEnumerable<ph id=\"ph1\">&lt;TextEffect&gt;</ph>)","needQuote":true,"needEscape":true,"source":"TextEffectCollection(IEnumerable<TextEffect>)"},{"pos":[33722,33745],"content":"IEnumerable<ph id=\"ph1\">&lt;TextEffect&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TextEffect>"},{"pos":[34019,34046],"content":"TextEffectCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffectCollection(Int32)","pos":[0,27]}]},{"pos":[34259,34264],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34478,34493],"content":"Add(TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TextEffect)","pos":[0,15]}]},{"pos":[34715,34725],"content":"TextEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffect","pos":[0,10]}]},{"pos":[34932,34939],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[35182,35189],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[35405,35425],"content":"TextEffectCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffectCollection","pos":[0,20]}]},{"pos":[35682,35702],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[35920,35929],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[36140,36159],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[36399,36419],"content":"TextEffectCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffectCollection","pos":[0,20]}]},{"pos":[36688,36720],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[36962,36971],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[37206,37226],"content":"Contains(TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TextEffect)","pos":[0,20]}]},{"pos":[37427,37434],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37584,37594],"content":"TextEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffect","pos":[0,10]}]},{"pos":[37850,37876],"content":"CopyTo(TextEffect[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TextEffect[],Int32)","pos":[0,26]}]},{"pos":[38120,38130],"content":"TextEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffect","pos":[0,10]}]},{"pos":[38269,38274],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38457,38462],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[38631,38636],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38832,38852],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[39070,39079],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39299,39318],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[39517,39524],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39643,39650],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39873,39899],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[40129,40138],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[40385,40423],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[40677,40686],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[40893,40908],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[41151,41182],"content":"TextEffectCollection+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffectCollection+Enumerator","pos":[0,31]}]},{"pos":[41466,41485],"content":"IndexOf(TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(TextEffect)","pos":[0,19]}]},{"pos":[41682,41687],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41833,41843],"content":"TextEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffect","pos":[0,10]}]},{"pos":[42097,42121],"content":"Insert(Int32,TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,TextEffect)","pos":[0,24]}]},{"pos":[42328,42333],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42479,42489],"content":"TextEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffect","pos":[0,10]}]},{"pos":[42709,42720],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[42934,42944],"content":"TextEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffect","pos":[0,10]}]},{"pos":[43081,43086],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43303,43321],"content":"Remove(TextEffect)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TextEffect)","pos":[0,18]}]},{"pos":[43518,43525],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43675,43685],"content":"TextEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"TextEffect","pos":[0,10]}]},{"pos":[43909,43924],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[44113,44118],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[44378,44416],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[44653,44660],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44927,44967],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[45285,45308],"content":"IEnumerator<ph id=\"ph1\">&lt;TextEffect&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<TextEffect>"},{"pos":[45627,45677],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[45936,45941],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[46054,46059],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46282,46327],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[46578,46585],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46806,46845],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[47083,47089],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47313,47359],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[47640,47651],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[47896,47932],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[48163,48168],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48282,48288],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48516,48557],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[48800,48807],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[48925,48931],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49158,49198],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[49437,49442],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49556,49562],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49801,49846],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[50095,50100],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[50214,50220],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50436,50472],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[50705,50712],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50929,50964],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[51195,51202],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[51427,51463],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[51695,51701],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51816,51821],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52045,52084],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[52322,52328],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.TextEffectCollection\n  id: TextEffectCollection\n  children:\n  - System.Windows.Media.TextEffectCollection.#ctor\n  - System.Windows.Media.TextEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.TextEffect})\n  - System.Windows.Media.TextEffectCollection.#ctor(System.Int32)\n  - System.Windows.Media.TextEffectCollection.Add(System.Windows.Media.TextEffect)\n  - System.Windows.Media.TextEffectCollection.Clear\n  - System.Windows.Media.TextEffectCollection.Clone\n  - System.Windows.Media.TextEffectCollection.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.TextEffectCollection.CloneCurrentValue\n  - System.Windows.Media.TextEffectCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.TextEffectCollection.Contains(System.Windows.Media.TextEffect)\n  - System.Windows.Media.TextEffectCollection.CopyTo(System.Windows.Media.TextEffect[],System.Int32)\n  - System.Windows.Media.TextEffectCollection.Count\n  - System.Windows.Media.TextEffectCollection.CreateInstanceCore\n  - System.Windows.Media.TextEffectCollection.FreezeCore(System.Boolean)\n  - System.Windows.Media.TextEffectCollection.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.TextEffectCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.TextEffectCollection.GetEnumerator\n  - System.Windows.Media.TextEffectCollection.IndexOf(System.Windows.Media.TextEffect)\n  - System.Windows.Media.TextEffectCollection.Insert(System.Int32,System.Windows.Media.TextEffect)\n  - System.Windows.Media.TextEffectCollection.Item(System.Int32)\n  - System.Windows.Media.TextEffectCollection.Remove(System.Windows.Media.TextEffect)\n  - System.Windows.Media.TextEffectCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.TextEffectCollection.System#Collections#Generic#ICollection{System#Windows#Media#TextEffect}#IsReadOnly\n  - System.Windows.Media.TextEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#TextEffect}#GetEnumerator\n  - System.Windows.Media.TextEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.TextEffectCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Media.TextEffectCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.Media.TextEffectCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.TextEffectCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.TextEffectCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.TextEffectCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.TextEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.TextEffectCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Media.TextEffectCollection.System#Collections#IList#IsReadOnly\n  - System.Windows.Media.TextEffectCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.TextEffectCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: TextEffectCollection\n  nameWithType: TextEffectCollection\n  fullName: System.Windows.Media.TextEffectCollection\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public sealed class TextEffectCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection<System.Windows.Media.TextEffect>, System.Collections.Generic.IEnumerable<System.Windows.Media.TextEffect>, System.Collections.Generic.IList<System.Windows.Media.TextEffect>, System.Collections.IList\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.Media.TextEffect>\n  - System.Collections.Generic.IEnumerable<System.Windows.Media.TextEffect>\n  - System.Collections.Generic.IList<System.Windows.Media.TextEffect>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: TextEffectCollection()\n  nameWithType: TextEffectCollection.TextEffectCollection()\n  fullName: System.Windows.Media.TextEffectCollection.TextEffectCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public TextEffectCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.TextEffect})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.TextEffect})'\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: TextEffectCollection(IEnumerable<TextEffect>)\n  nameWithType: TextEffectCollection.TextEffectCollection(IEnumerable<TextEffect>)\n  fullName: System.Windows.Media.TextEffectCollection.TextEffectCollection(IEnumerable<TextEffect>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public TextEffectCollection (System.Collections.Generic.IEnumerable<System.Windows.Media.TextEffect> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{System.Windows.Media.TextEffect}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: TextEffectCollection(Int32)\n  nameWithType: TextEffectCollection.TextEffectCollection(Int32)\n  fullName: System.Windows.Media.TextEffectCollection.TextEffectCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public TextEffectCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.Add(System.Windows.Media.TextEffect)\n  id: Add(System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: Add(TextEffect)\n  nameWithType: TextEffectCollection.Add(TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.Add(TextEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Add (System.Windows.Media.TextEffect value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.TextEffect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TextEffectCollection.Clear()\n  fullName: System.Windows.Media.TextEffectCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.Clone\n  id: Clone\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: TextEffectCollection.Clone()\n  fullName: System.Windows.Media.TextEffectCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.TextEffectCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.TextEffectCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: TextEffectCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.TextEffectCollection.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: TextEffectCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.TextEffectCollection.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.TextEffectCollection CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.TextEffectCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: TextEffectCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.TextEffectCollection.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.Contains(System.Windows.Media.TextEffect)\n  id: Contains(System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: Contains(TextEffect)\n  nameWithType: TextEffectCollection.Contains(TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.Contains(TextEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Contains (System.Windows.Media.TextEffect value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.TextEffect\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.CopyTo(System.Windows.Media.TextEffect[],System.Int32)\n  id: CopyTo(System.Windows.Media.TextEffect[],System.Int32)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: CopyTo(TextEffect[],Int32)\n  nameWithType: TextEffectCollection.CopyTo(TextEffect[],Int32)\n  fullName: System.Windows.Media.TextEffectCollection.CopyTo(TextEffect[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void CopyTo (System.Windows.Media.TextEffect[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Media.TextEffect[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.Count\n  id: Count\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TextEffectCollection.Count\n  fullName: System.Windows.Media.TextEffectCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: TextEffectCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.TextEffectCollection.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: TextEffectCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.TextEffectCollection.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: TextEffectCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.TextEffectCollection.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: TextEffectCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.TextEffectCollection.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TextEffectCollection.GetEnumerator()\n  fullName: System.Windows.Media.TextEffectCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.TextEffectCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.Media.TextEffectCollection.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.IndexOf(System.Windows.Media.TextEffect)\n  id: IndexOf(System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: IndexOf(TextEffect)\n  nameWithType: TextEffectCollection.IndexOf(TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.IndexOf(TextEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int IndexOf (System.Windows.Media.TextEffect value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.TextEffect\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.Insert(System.Int32,System.Windows.Media.TextEffect)\n  id: Insert(System.Int32,System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: Insert(Int32,TextEffect)\n  nameWithType: TextEffectCollection.Insert(Int32,TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.Insert(Int32,TextEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Insert (int index, System.Windows.Media.TextEffect value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Windows.Media.TextEffect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: TextEffectCollection.Item(Int32)\n  fullName: System.Windows.Media.TextEffectCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.TextEffect this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.TextEffect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.Remove(System.Windows.Media.TextEffect)\n  id: Remove(System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: Remove(TextEffect)\n  nameWithType: TextEffectCollection.Remove(TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.Remove(TextEffect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Remove (System.Windows.Media.TextEffect value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.TextEffect\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: TextEffectCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.TextEffectCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#Generic#ICollection{System#Windows#Media#TextEffect}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Windows#Media#TextEffect}#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: TextEffectCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Windows.Media.TextEffect>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#TextEffect}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Windows#Media#TextEffect}#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: TextEffectCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Windows.Media.TextEffect> IEnumerable<TextEffect>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.Media.TextEffect}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TextEffectCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TextEffectCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TextEffectCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TextEffectCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TextEffectCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TextEffectCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TextEffectCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.TextEffectCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.TextEffectCollection.#ctor\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: TextEffectCollection()\n  nameWithType: TextEffectCollection.TextEffectCollection()\n  fullName: System.Windows.Media.TextEffectCollection.TextEffectCollection()\n- uid: System.Windows.Media.TextEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.TextEffect})\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: TextEffectCollection(IEnumerable<TextEffect>)\n  nameWithType: TextEffectCollection.TextEffectCollection(IEnumerable<TextEffect>)\n  fullName: System.Windows.Media.TextEffectCollection.TextEffectCollection(IEnumerable<TextEffect>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Media.TextEffect}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TextEffect>\n  nameWithType: IEnumerable<TextEffect>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Media.TextEffect>\n- uid: System.Windows.Media.TextEffectCollection.#ctor(System.Int32)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: TextEffectCollection(Int32)\n  nameWithType: TextEffectCollection.TextEffectCollection(Int32)\n  fullName: System.Windows.Media.TextEffectCollection.TextEffectCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextEffectCollection.Add(System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: Add(TextEffect)\n  nameWithType: TextEffectCollection.Add(TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.Add(TextEffect)\n- uid: System.Windows.Media.TextEffect\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffect\n  nameWithType: TextEffect\n  fullName: System.Windows.Media.TextEffect\n- uid: System.Windows.Media.TextEffectCollection.Clear\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: TextEffectCollection.Clear()\n  fullName: System.Windows.Media.TextEffectCollection.Clear()\n- uid: System.Windows.Media.TextEffectCollection.Clone\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: TextEffectCollection.Clone()\n  fullName: System.Windows.Media.TextEffectCollection.Clone()\n- uid: System.Windows.Media.TextEffectCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffectCollection\n  nameWithType: TextEffectCollection\n  fullName: System.Windows.Media.TextEffectCollection\n- uid: System.Windows.Media.TextEffectCollection.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: TextEffectCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.TextEffectCollection.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TextEffectCollection.CloneCurrentValue\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: TextEffectCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.TextEffectCollection.CloneCurrentValue()\n- uid: System.Windows.Media.TextEffectCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffectCollection\n  nameWithType: TextEffectCollection\n  fullName: System.Windows.Media.TextEffectCollection\n- uid: System.Windows.Media.TextEffectCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: TextEffectCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.TextEffectCollection.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TextEffectCollection.Contains(System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: Contains(TextEffect)\n  nameWithType: TextEffectCollection.Contains(TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.Contains(TextEffect)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextEffect\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffect\n  nameWithType: TextEffect\n  fullName: System.Windows.Media.TextEffect\n- uid: System.Windows.Media.TextEffectCollection.CopyTo(System.Windows.Media.TextEffect[],System.Int32)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: CopyTo(TextEffect[],Int32)\n  nameWithType: TextEffectCollection.CopyTo(TextEffect[],Int32)\n  fullName: System.Windows.Media.TextEffectCollection.CopyTo(TextEffect[],Int32)\n- uid: System.Windows.Media.TextEffect\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffect\n  nameWithType: TextEffect\n  fullName: System.Windows.Media.TextEffect[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextEffectCollection.Count\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: Count\n  nameWithType: TextEffectCollection.Count\n  fullName: System.Windows.Media.TextEffectCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextEffectCollection.CreateInstanceCore\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: TextEffectCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.TextEffectCollection.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TextEffectCollection.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: TextEffectCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.TextEffectCollection.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextEffectCollection.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: TextEffectCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.TextEffectCollection.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TextEffectCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: TextEffectCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.TextEffectCollection.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TextEffectCollection.GetEnumerator\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TextEffectCollection.GetEnumerator()\n  fullName: System.Windows.Media.TextEffectCollection.GetEnumerator()\n- uid: System.Windows.Media.TextEffectCollection.Enumerator\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffectCollection+Enumerator\n  nameWithType: TextEffectCollection+Enumerator\n  fullName: System.Windows.Media.TextEffectCollection+Enumerator\n- uid: System.Windows.Media.TextEffectCollection.IndexOf(System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: IndexOf(TextEffect)\n  nameWithType: TextEffectCollection.IndexOf(TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.IndexOf(TextEffect)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextEffect\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffect\n  nameWithType: TextEffect\n  fullName: System.Windows.Media.TextEffect\n- uid: System.Windows.Media.TextEffectCollection.Insert(System.Int32,System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: Insert(Int32,TextEffect)\n  nameWithType: TextEffectCollection.Insert(Int32,TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.Insert(Int32,TextEffect)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextEffect\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffect\n  nameWithType: TextEffect\n  fullName: System.Windows.Media.TextEffect\n- uid: System.Windows.Media.TextEffectCollection.Item(System.Int32)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: TextEffectCollection.Item(Int32)\n  fullName: System.Windows.Media.TextEffectCollection.Item(Int32)\n- uid: System.Windows.Media.TextEffect\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffect\n  nameWithType: TextEffect\n  fullName: System.Windows.Media.TextEffect\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextEffectCollection.Remove(System.Windows.Media.TextEffect)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: Remove(TextEffect)\n  nameWithType: TextEffectCollection.Remove(TextEffect)\n  fullName: System.Windows.Media.TextEffectCollection.Remove(TextEffect)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextEffect\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffect\n  nameWithType: TextEffect\n  fullName: System.Windows.Media.TextEffect\n- uid: System.Windows.Media.TextEffectCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: TextEffectCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.TextEffectCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#Generic#ICollection{System#Windows#Media#TextEffect}#IsReadOnly\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: TextEffectCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#TextEffect}#GetEnumerator\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: TextEffectCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.Media.TextEffect}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<TextEffect>\n  nameWithType: IEnumerator<TextEffect>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.Media.TextEffect>\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TextEffectCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TextEffectCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TextEffectCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TextEffectCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TextEffectCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TextEffectCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TextEffectCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextEffectCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.TextEffectCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TextEffectCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.TextEffectCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}