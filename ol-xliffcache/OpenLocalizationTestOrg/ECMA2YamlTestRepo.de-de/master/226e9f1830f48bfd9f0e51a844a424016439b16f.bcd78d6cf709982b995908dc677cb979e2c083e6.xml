{"nodes":[{"pos":[858,870],"content":"CornerRadius","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius","pos":[0,12]}]},{"pos":[1466,1486],"content":"CornerRadius(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius(Double)","pos":[0,20]}]},{"pos":[1838,1872],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2157,2198],"content":"CornerRadius(Double,Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius(Double,Double,Double,Double)","pos":[0,41]}]},{"pos":[2636,2670],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2735,2769],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2837,2871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2938,2972],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3151,3161],"content":"BottomLeft","needQuote":true,"needEscape":true,"nodes":[{"content":"BottomLeft","pos":[0,10]}]},{"pos":[3457,3491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3672,3683],"content":"BottomRight","needQuote":true,"needEscape":true,"nodes":[{"content":"BottomRight","pos":[0,11]}]},{"pos":[3982,4016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4217,4231],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4554,4588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4647,4681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4958,4978],"content":"Equals(CornerRadius)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CornerRadius)","pos":[0,20]}]},{"pos":[5357,5391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5450,5484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5713,5726],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[6041,6075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6370,6408],"content":"op_Equality(CornerRadius,CornerRadius)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CornerRadius,CornerRadius)","pos":[0,38]}]},{"pos":[6852,6886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6960,6994],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7053,7087],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7386,7426],"content":"op_Inequality(CornerRadius,CornerRadius)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CornerRadius,CornerRadius)","pos":[0,40]}]},{"pos":[7876,7910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7984,8018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8077,8111],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8284,8291],"content":"TopLeft","needQuote":true,"needEscape":true,"nodes":[{"content":"TopLeft","pos":[0,7]}]},{"pos":[8578,8612],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8787,8795],"content":"TopRight","needQuote":true,"needEscape":true,"nodes":[{"content":"TopRight","pos":[0,8]}]},{"pos":[9085,9119],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9294,9304],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9614,9648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9762,9778],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[9901,9921],"content":"CornerRadius(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius(Double)","pos":[0,20]}]},{"pos":[10099,10105],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[10319,10360],"content":"CornerRadius(Double,Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius(Double,Double,Double,Double)","pos":[0,41]}]},{"pos":[10580,10586],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[10702,10708],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[10824,10830],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[10946,10952],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[11114,11124],"content":"BottomLeft","needQuote":true,"needEscape":true,"nodes":[{"content":"BottomLeft","pos":[0,10]}]},{"pos":[11282,11288],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[11451,11462],"content":"BottomRight","needQuote":true,"needEscape":true,"nodes":[{"content":"BottomRight","pos":[0,11]}]},{"pos":[11622,11628],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[11801,11815],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11982,11989],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12107,12113],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12300,12320],"content":"Equals(CornerRadius)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CornerRadius)","pos":[0,20]}]},{"pos":[12499,12506],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12646,12658],"content":"CornerRadius","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius","pos":[0,12]}]},{"pos":[12841,12854],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[13017,13022],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13240,13278],"content":"op_Equality(CornerRadius,CornerRadius)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CornerRadius,CornerRadius)","pos":[0,38]}]},{"pos":[13493,13500],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13640,13652],"content":"CornerRadius","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius","pos":[0,12]}]},{"pos":[13810,13822],"content":"CornerRadius","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius","pos":[0,12]}]},{"pos":[14064,14104],"content":"op_Inequality(CornerRadius,CornerRadius)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CornerRadius,CornerRadius)","pos":[0,40]}]},{"pos":[14323,14330],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14470,14482],"content":"CornerRadius","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius","pos":[0,12]}]},{"pos":[14640,14652],"content":"CornerRadius","needQuote":true,"needEscape":true,"nodes":[{"content":"CornerRadius","pos":[0,12]}]},{"pos":[14831,14838],"content":"TopLeft","needQuote":true,"needEscape":true,"nodes":[{"content":"TopLeft","pos":[0,7]}]},{"pos":[14990,14996],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[15156,15164],"content":"TopRight","needQuote":true,"needEscape":true,"nodes":[{"content":"TopRight","pos":[0,8]}]},{"pos":[15318,15324],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[15484,15494],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15652,15658],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.CornerRadius\n  id: CornerRadius\n  children:\n  - System.Windows.CornerRadius.#ctor(System.Double)\n  - System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)\n  - System.Windows.CornerRadius.BottomLeft\n  - System.Windows.CornerRadius.BottomRight\n  - System.Windows.CornerRadius.Equals(System.Object)\n  - System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)\n  - System.Windows.CornerRadius.GetHashCode\n  - System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)\n  - System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)\n  - System.Windows.CornerRadius.TopLeft\n  - System.Windows.CornerRadius.TopRight\n  - System.Windows.CornerRadius.ToString\n  langs:\n  - csharp\n  name: CornerRadius\n  nameWithType: CornerRadius\n  fullName: System.Windows.CornerRadius\n  type: Struct\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.CornerRadiusConverter))]\n\n      public struct CornerRadius : IEquatable<System.Windows.CornerRadius>\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Windows.CornerRadius>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: CornerRadius(Double)\n  nameWithType: CornerRadius.CornerRadius(Double)\n  fullName: System.Windows.CornerRadius.CornerRadius(Double)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public CornerRadius (double uniformRadius);\n    parameters:\n    - id: uniformRadius\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: CornerRadius(Double,Double,Double,Double)\n  nameWithType: CornerRadius.CornerRadius(Double,Double,Double,Double)\n  fullName: System.Windows.CornerRadius.CornerRadius(Double,Double,Double,Double)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public CornerRadius (double topLeft, double topRight, double bottomRight, double bottomLeft);\n    parameters:\n    - id: topLeft\n      type: System.Double\n      description: Parameter description to be filled\n    - id: topRight\n      type: System.Double\n      description: Parameter description to be filled\n    - id: bottomRight\n      type: System.Double\n      description: Parameter description to be filled\n    - id: bottomLeft\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.BottomLeft\n  id: BottomLeft\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: BottomLeft\n  nameWithType: CornerRadius.BottomLeft\n  fullName: System.Windows.CornerRadius.BottomLeft\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public double BottomLeft { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.BottomRight\n  id: BottomRight\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: BottomRight\n  nameWithType: CornerRadius.BottomRight\n  fullName: System.Windows.CornerRadius.BottomRight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public double BottomRight { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CornerRadius.Equals(Object)\n  fullName: System.Windows.CornerRadius.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.CornerRadius.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)\n  id: Equals(System.Windows.CornerRadius)\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: Equals(CornerRadius)\n  nameWithType: CornerRadius.Equals(CornerRadius)\n  fullName: System.Windows.CornerRadius.Equals(CornerRadius)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public bool Equals (System.Windows.CornerRadius cornerRadius);\n    parameters:\n    - id: cornerRadius\n      type: System.Windows.CornerRadius\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.CornerRadius.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CornerRadius.GetHashCode()\n  fullName: System.Windows.CornerRadius.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)\n  id: op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: op_Equality(CornerRadius,CornerRadius)\n  nameWithType: CornerRadius.op_Equality(CornerRadius,CornerRadius)\n  fullName: System.Windows.CornerRadius.op_Equality(CornerRadius,CornerRadius)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_Equality (System.Windows.CornerRadius cr1, System.Windows.CornerRadius cr2);\n    parameters:\n    - id: cr1\n      type: System.Windows.CornerRadius\n      description: Parameter description to be filled\n    - id: cr2\n      type: System.Windows.CornerRadius\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)\n  id: op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: op_Inequality(CornerRadius,CornerRadius)\n  nameWithType: CornerRadius.op_Inequality(CornerRadius,CornerRadius)\n  fullName: System.Windows.CornerRadius.op_Inequality(CornerRadius,CornerRadius)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_Inequality (System.Windows.CornerRadius cr1, System.Windows.CornerRadius cr2);\n    parameters:\n    - id: cr1\n      type: System.Windows.CornerRadius\n      description: Parameter description to be filled\n    - id: cr2\n      type: System.Windows.CornerRadius\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.TopLeft\n  id: TopLeft\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: TopLeft\n  nameWithType: CornerRadius.TopLeft\n  fullName: System.Windows.CornerRadius.TopLeft\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public double TopLeft { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.TopRight\n  id: TopRight\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: TopRight\n  nameWithType: CornerRadius.TopRight\n  fullName: System.Windows.CornerRadius.TopRight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public double TopRight { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.CornerRadius.ToString\n  id: ToString\n  parent: System.Windows.CornerRadius\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CornerRadius.ToString()\n  fullName: System.Windows.CornerRadius.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.CornerRadius.#ctor(System.Double)\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: CornerRadius(Double)\n  nameWithType: CornerRadius.CornerRadius(Double)\n  fullName: System.Windows.CornerRadius.CornerRadius(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: CornerRadius(Double,Double,Double,Double)\n  nameWithType: CornerRadius.CornerRadius(Double,Double,Double,Double)\n  fullName: System.Windows.CornerRadius.CornerRadius(Double,Double,Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.CornerRadius.BottomLeft\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: BottomLeft\n  nameWithType: CornerRadius.BottomLeft\n  fullName: System.Windows.CornerRadius.BottomLeft\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.CornerRadius.BottomRight\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: BottomRight\n  nameWithType: CornerRadius.BottomRight\n  fullName: System.Windows.CornerRadius.BottomRight\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.CornerRadius.Equals(System.Object)\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CornerRadius.Equals(Object)\n  fullName: System.Windows.CornerRadius.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: Equals(CornerRadius)\n  nameWithType: CornerRadius.Equals(CornerRadius)\n  fullName: System.Windows.CornerRadius.Equals(CornerRadius)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.CornerRadius\n  parent: System.Windows\n  isExternal: false\n  name: CornerRadius\n  nameWithType: CornerRadius\n  fullName: System.Windows.CornerRadius\n- uid: System.Windows.CornerRadius.GetHashCode\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CornerRadius.GetHashCode()\n  fullName: System.Windows.CornerRadius.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: op_Equality(CornerRadius,CornerRadius)\n  nameWithType: CornerRadius.op_Equality(CornerRadius,CornerRadius)\n  fullName: System.Windows.CornerRadius.op_Equality(CornerRadius,CornerRadius)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.CornerRadius\n  parent: System.Windows\n  isExternal: false\n  name: CornerRadius\n  nameWithType: CornerRadius\n  fullName: System.Windows.CornerRadius\n- uid: System.Windows.CornerRadius\n  parent: System.Windows\n  isExternal: false\n  name: CornerRadius\n  nameWithType: CornerRadius\n  fullName: System.Windows.CornerRadius\n- uid: System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: op_Inequality(CornerRadius,CornerRadius)\n  nameWithType: CornerRadius.op_Inequality(CornerRadius,CornerRadius)\n  fullName: System.Windows.CornerRadius.op_Inequality(CornerRadius,CornerRadius)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.CornerRadius\n  parent: System.Windows\n  isExternal: false\n  name: CornerRadius\n  nameWithType: CornerRadius\n  fullName: System.Windows.CornerRadius\n- uid: System.Windows.CornerRadius\n  parent: System.Windows\n  isExternal: false\n  name: CornerRadius\n  nameWithType: CornerRadius\n  fullName: System.Windows.CornerRadius\n- uid: System.Windows.CornerRadius.TopLeft\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: TopLeft\n  nameWithType: CornerRadius.TopLeft\n  fullName: System.Windows.CornerRadius.TopLeft\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.CornerRadius.TopRight\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: TopRight\n  nameWithType: CornerRadius.TopRight\n  fullName: System.Windows.CornerRadius.TopRight\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.CornerRadius.ToString\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  name: ToString()\n  nameWithType: CornerRadius.ToString()\n  fullName: System.Windows.CornerRadius.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.CornerRadius.Equals*\n  parent: System.Windows.CornerRadius\n  isExternal: false\n  nameWithType: CornerRadius.\n"}