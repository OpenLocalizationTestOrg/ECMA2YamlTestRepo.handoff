{"nodes":[{"pos":[711,723],"content":"ITaskFactory","needQuote":true,"needEscape":true,"nodes":[{"content":"ITaskFactory","pos":[0,12]}]},{"pos":[1160,1178],"content":"CleanupTask(ITask)","needQuote":true,"needEscape":true,"nodes":[{"content":"CleanupTask(ITask)","pos":[0,18]}]},{"pos":[1576,1610],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1891,1915],"content":"CreateTask(IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTask(IBuildEngine)","pos":[0,24]}]},{"pos":[2401,2435],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2511,2545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2748,2759],"content":"FactoryName","needQuote":true,"needEscape":true,"nodes":[{"content":"FactoryName","pos":[0,11]}]},{"pos":[3079,3113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3328,3347],"content":"GetTaskParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTaskParameters()","pos":[0,19]}]},{"pos":[3770,3804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4335,4410],"content":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(String,IDictionary&lt;String,TaskPropertyInfo&gt;,String,IBuildEngine)","pos":[0,75],"source":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)"}]},{"pos":[5072,5106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5260,5294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5359,5393],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5497,5531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5590,5624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5821,5829],"content":"TaskType","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskType","pos":[0,8]}]},{"pos":[6136,6170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6400,6418],"content":"CleanupTask(ITask)","needQuote":true,"needEscape":true,"nodes":[{"content":"CleanupTask(ITask)","pos":[0,18]}]},{"pos":[6640,6645],"content":"ITask","needQuote":true,"needEscape":true,"nodes":[{"content":"ITask","pos":[0,5]}]},{"pos":[6886,6910],"content":"CreateTask(IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTask(IBuildEngine)","pos":[0,24]}]},{"pos":[7144,7149],"content":"ITask","needQuote":true,"needEscape":true,"nodes":[{"content":"ITask","pos":[0,5]}]},{"pos":[7326,7338],"content":"IBuildEngine","needQuote":true,"needEscape":true,"nodes":[{"content":"IBuildEngine","pos":[0,12]}]},{"pos":[7554,7565],"content":"FactoryName","needQuote":true,"needEscape":true,"nodes":[{"content":"FactoryName","pos":[0,11]}]},{"pos":[7736,7742],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7933,7952],"content":"GetTaskParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTaskParameters()","pos":[0,19]}]},{"pos":[8187,8203],"content":"TaskPropertyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskPropertyInfo","pos":[0,16]}]},{"pos":[8593,8668],"content":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(String,IDictionary&lt;String,TaskPropertyInfo&gt;,String,IBuildEngine)","pos":[0,75],"source":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)"}]},{"pos":[8968,8975],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9093,9099],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9318,9354],"content":"IDictionary<String,TaskPropertyInfo>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;String,TaskPropertyInfo&gt;","pos":[0,36],"source":"IDictionary<String,TaskPropertyInfo>"}]},{"pos":[9583,9589],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9749,9761],"content":"IBuildEngine","needQuote":true,"needEscape":true,"nodes":[{"content":"IBuildEngine","pos":[0,12]}]},{"pos":[9974,9982],"content":"TaskType","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskType","pos":[0,8]}]},{"pos":[10145,10149],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Framework.ITaskFactory\n  id: ITaskFactory\n  children:\n  - Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)\n  - Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  - Microsoft.Build.Framework.ITaskFactory.FactoryName\n  - Microsoft.Build.Framework.ITaskFactory.GetTaskParameters\n  - Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  - Microsoft.Build.Framework.ITaskFactory.TaskType\n  langs:\n  - csharp\n  name: ITaskFactory\n  nameWithType: ITaskFactory\n  fullName: Microsoft.Build.Framework.ITaskFactory\n  type: Interface\n  syntax:\n    content: public interface ITaskFactory\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)\n  id: CleanupTask(Microsoft.Build.Framework.ITask)\n  parent: Microsoft.Build.Framework.ITaskFactory\n  langs:\n  - csharp\n  name: CleanupTask(ITask)\n  nameWithType: ITaskFactory.CleanupTask(ITask)\n  fullName: Microsoft.Build.Framework.ITaskFactory.CleanupTask(ITask)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  syntax:\n    content: public void CleanupTask (Microsoft.Build.Framework.ITask task);\n    parameters:\n    - id: task\n      type: Microsoft.Build.Framework.ITask\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  id: CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Framework.ITaskFactory\n  langs:\n  - csharp\n  name: CreateTask(IBuildEngine)\n  nameWithType: ITaskFactory.CreateTask(IBuildEngine)\n  fullName: Microsoft.Build.Framework.ITaskFactory.CreateTask(IBuildEngine)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  syntax:\n    content: public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);\n    parameters:\n    - id: taskFactoryLoggingHost\n      type: Microsoft.Build.Framework.IBuildEngine\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.Build.Framework.ITask\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Framework.ITaskFactory.FactoryName\n  id: FactoryName\n  parent: Microsoft.Build.Framework.ITaskFactory\n  langs:\n  - csharp\n  name: FactoryName\n  nameWithType: ITaskFactory.FactoryName\n  fullName: Microsoft.Build.Framework.ITaskFactory.FactoryName\n  type: Property\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  syntax:\n    content: public string FactoryName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Framework.ITaskFactory.GetTaskParameters\n  id: GetTaskParameters\n  parent: Microsoft.Build.Framework.ITaskFactory\n  langs:\n  - csharp\n  name: GetTaskParameters()\n  nameWithType: ITaskFactory.GetTaskParameters()\n  fullName: Microsoft.Build.Framework.ITaskFactory.GetTaskParameters()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  syntax:\n    content: public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();\n    parameters: []\n    return:\n      type: Microsoft.Build.Framework.TaskPropertyInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  id: Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Framework.ITaskFactory\n  langs:\n  - csharp\n  name: Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  nameWithType: ITaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  fullName: Microsoft.Build.Framework.ITaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  syntax:\n    content: public bool Initialize (string taskName, System.Collections.Generic.IDictionary<string,Microsoft.Build.Framework.TaskPropertyInfo> parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);\n    parameters:\n    - id: taskName\n      type: System.String\n      description: Parameter description to be filled\n    - id: parameterGroup\n      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}\n      description: Parameter description to be filled\n    - id: taskBody\n      type: System.String\n      description: Parameter description to be filled\n    - id: taskFactoryLoggingHost\n      type: Microsoft.Build.Framework.IBuildEngine\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Framework.ITaskFactory.TaskType\n  id: TaskType\n  parent: Microsoft.Build.Framework.ITaskFactory\n  langs:\n  - csharp\n  name: TaskType\n  nameWithType: ITaskFactory.TaskType\n  fullName: Microsoft.Build.Framework.ITaskFactory.TaskType\n  type: Property\n  assemblies:\n  - Microsoft.Build.Framework\n  namespace: Microsoft.Build.Framework\n  syntax:\n    content: public Type TaskType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)\n  parent: Microsoft.Build.Framework.ITaskFactory\n  isExternal: false\n  name: CleanupTask(ITask)\n  nameWithType: ITaskFactory.CleanupTask(ITask)\n  fullName: Microsoft.Build.Framework.ITaskFactory.CleanupTask(ITask)\n- uid: Microsoft.Build.Framework.ITask\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITask\n  nameWithType: ITask\n  fullName: Microsoft.Build.Framework.ITask\n- uid: Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Framework.ITaskFactory\n  isExternal: false\n  name: CreateTask(IBuildEngine)\n  nameWithType: ITaskFactory.CreateTask(IBuildEngine)\n  fullName: Microsoft.Build.Framework.ITaskFactory.CreateTask(IBuildEngine)\n- uid: Microsoft.Build.Framework.ITask\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITask\n  nameWithType: ITask\n  fullName: Microsoft.Build.Framework.ITask\n- uid: Microsoft.Build.Framework.IBuildEngine\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: IBuildEngine\n  nameWithType: IBuildEngine\n  fullName: Microsoft.Build.Framework.IBuildEngine\n- uid: Microsoft.Build.Framework.ITaskFactory.FactoryName\n  parent: Microsoft.Build.Framework.ITaskFactory\n  isExternal: false\n  name: FactoryName\n  nameWithType: ITaskFactory.FactoryName\n  fullName: Microsoft.Build.Framework.ITaskFactory.FactoryName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Framework.ITaskFactory.GetTaskParameters\n  parent: Microsoft.Build.Framework.ITaskFactory\n  isExternal: false\n  name: GetTaskParameters()\n  nameWithType: ITaskFactory.GetTaskParameters()\n  fullName: Microsoft.Build.Framework.ITaskFactory.GetTaskParameters()\n- uid: Microsoft.Build.Framework.TaskPropertyInfo\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: TaskPropertyInfo\n  nameWithType: TaskPropertyInfo\n  fullName: Microsoft.Build.Framework.TaskPropertyInfo[]\n- uid: Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Framework.ITaskFactory\n  isExternal: false\n  name: Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  nameWithType: ITaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  fullName: Microsoft.Build.Framework.ITaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,TaskPropertyInfo>\n  nameWithType: IDictionary<String,TaskPropertyInfo>\n  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Framework.TaskPropertyInfo>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Framework.IBuildEngine\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: IBuildEngine\n  nameWithType: IBuildEngine\n  fullName: Microsoft.Build.Framework.IBuildEngine\n- uid: Microsoft.Build.Framework.ITaskFactory.TaskType\n  parent: Microsoft.Build.Framework.ITaskFactory\n  isExternal: false\n  name: TaskType\n  nameWithType: ITaskFactory.TaskType\n  fullName: Microsoft.Build.Framework.ITaskFactory.TaskType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n"}