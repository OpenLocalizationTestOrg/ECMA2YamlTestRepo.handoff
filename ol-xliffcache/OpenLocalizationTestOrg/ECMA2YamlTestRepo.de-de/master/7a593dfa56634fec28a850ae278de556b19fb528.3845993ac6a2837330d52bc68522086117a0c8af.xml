{"nodes":[{"pos":[473,486],"content":"PipeAuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAuditRule","pos":[0,13]}]},{"pos":[1916,1976],"content":"PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)","pos":[0,60]}]},{"pos":[2549,2583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2665,2699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2788,2822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3175,3224],"content":"PipeAuditRule(String,PipeAccessRights,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAuditRule(String,PipeAccessRights,AuditFlags)","pos":[0,49]}]},{"pos":[3708,3742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3824,3858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3947,3981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4176,4192],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]},{"pos":[4540,4574],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4711,4750],"content":"System.Security.AccessControl.AuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.AuditRule","pos":[0,39]}]},{"pos":[4981,5041],"content":"PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)","pos":[0,60]}]},{"pos":[5351,5368],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[5553,5569],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]},{"pos":[5764,5774],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[6055,6104],"content":"PipeAuditRule(String,PipeAccessRights,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAuditRule(String,PipeAccessRights,AuditFlags)","pos":[0,49]}]},{"pos":[6343,6349],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[6493,6509],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]},{"pos":[6704,6714],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[6917,6933],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]},{"pos":[7134,7150],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Pipes.PipeAuditRule\n  id: PipeAuditRule\n  children:\n  - System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  - System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  - System.IO.Pipes.PipeAuditRule.PipeAccessRights\n  langs:\n  - csharp\n  name: PipeAuditRule\n  nameWithType: PipeAuditRule\n  fullName: System.IO.Pipes.PipeAuditRule\n  type: Class\n  syntax:\n    content: 'public sealed class PipeAuditRule : System.Security.AccessControl.AuditRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AuditRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AuditRule.AuditFlags\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)'\n  parent: System.IO.Pipes.PipeAuditRule\n  langs:\n  - csharp\n  name: PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)\n  nameWithType: PipeAuditRule.PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)\n  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  syntax:\n    content: public PipeAuditRule (System.Security.Principal.IdentityReference identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: rights\n      type: System.IO.Pipes.PipeAccessRights\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)'\n  parent: System.IO.Pipes.PipeAuditRule\n  langs:\n  - csharp\n  name: PipeAuditRule(String,PipeAccessRights,AuditFlags)\n  nameWithType: PipeAuditRule.PipeAuditRule(String,PipeAccessRights,AuditFlags)\n  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(String,PipeAccessRights,AuditFlags)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  syntax:\n    content: public PipeAuditRule (string identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.String\n      description: Parameter description to be filled\n    - id: rights\n      type: System.IO.Pipes.PipeAccessRights\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Pipes.PipeAuditRule.PipeAccessRights\n  id: PipeAccessRights\n  parent: System.IO.Pipes.PipeAuditRule\n  langs:\n  - csharp\n  name: PipeAccessRights\n  nameWithType: PipeAuditRule.PipeAccessRights\n  fullName: System.IO.Pipes.PipeAuditRule.PipeAccessRights\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  syntax:\n    content: public System.IO.Pipes.PipeAccessRights PipeAccessRights { get; }\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: System.Security.AccessControl.AuditRule\n- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  parent: System.IO.Pipes.PipeAuditRule\n  isExternal: false\n  name: PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)\n  nameWithType: PipeAuditRule.PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)\n  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(IdentityReference,PipeAccessRights,AuditFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.IO.Pipes.PipeAccessRights\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)\n  parent: System.IO.Pipes.PipeAuditRule\n  isExternal: false\n  name: PipeAuditRule(String,PipeAccessRights,AuditFlags)\n  nameWithType: PipeAuditRule.PipeAuditRule(String,PipeAccessRights,AuditFlags)\n  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(String,PipeAccessRights,AuditFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Pipes.PipeAccessRights\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.IO.Pipes.PipeAuditRule.PipeAccessRights\n  parent: System.IO.Pipes.PipeAuditRule\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAuditRule.PipeAccessRights\n  fullName: System.IO.Pipes.PipeAuditRule.PipeAccessRights\n- uid: System.IO.Pipes.PipeAccessRights\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n"}