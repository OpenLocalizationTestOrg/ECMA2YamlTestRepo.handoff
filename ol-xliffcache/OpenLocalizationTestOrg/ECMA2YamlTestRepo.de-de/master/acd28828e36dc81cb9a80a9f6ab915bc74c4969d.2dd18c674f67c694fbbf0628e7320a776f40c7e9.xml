{"nodes":[{"pos":[2794,2803],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[5256,5267],"content":"FieldInfo()","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo()","pos":[0,11]}]},{"pos":[5680,5690],"content":"Attributes","needQuote":true,"needEscape":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[6024,6058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6259,6273],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6583,6617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6676,6710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6891,6902],"content":"FieldHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldHandle","pos":[0,11]}]},{"pos":[7216,7250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7427,7436],"content":"FieldType","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldType","pos":[0,9]}]},{"pos":[7716,7750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7999,8037],"content":"GetFieldFromHandle(RuntimeFieldHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFieldFromHandle(RuntimeFieldHandle)","pos":[0,38]}]},{"pos":[8458,8492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8564,8598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8957,9013],"content":"GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)","pos":[0,56]}]},{"pos":[9503,9537],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9618,9652],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9724,9758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9999,10012],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10314,10348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10559,10587],"content":"GetOptionalCustomModifiers()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOptionalCustomModifiers()","pos":[0,28]}]},{"pos":[10937,10971],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11168,11189],"content":"GetRawConstantValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRawConstantValue()","pos":[0,21]}]},{"pos":[11518,11552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11763,11791],"content":"GetRequiredCustomModifiers()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRequiredCustomModifiers()","pos":[0,28]}]},{"pos":[12141,12175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12380,12396],"content":"GetValue(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Object)","pos":[0,16]}]},{"pos":[12714,12748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12806,12840],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13073,13103],"content":"GetValueDirect(TypedReference)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValueDirect(TypedReference)","pos":[0,30]}]},{"pos":[13470,13504],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13562,13596],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13775,13785],"content":"IsAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAssembly","pos":[0,10]}]},{"pos":[14062,14096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14271,14279],"content":"IsFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamily","pos":[0,8]}]},{"pos":[14550,14584],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14781,14800],"content":"IsFamilyAndAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamilyAndAssembly","pos":[0,19]}]},{"pos":[15104,15138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15333,15351],"content":"IsFamilyOrAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamilyOrAssembly","pos":[0,18]}]},{"pos":[15652,15686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15865,15875],"content":"IsInitOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInitOnly","pos":[0,10]}]},{"pos":[16152,16186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16363,16372],"content":"IsLiteral","needQuote":true,"needEscape":true,"nodes":[{"content":"IsLiteral","pos":[0,9]}]},{"pos":[16646,16680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16869,16884],"content":"IsNotSerialized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsNotSerialized","pos":[0,15]}]},{"pos":[17176,17210],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17395,17408],"content":"IsPinvokeImpl","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPinvokeImpl","pos":[0,13]}]},{"pos":[17694,17728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17905,17914],"content":"IsPrivate","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrivate","pos":[0,9]}]},{"pos":[18188,18222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18397,18405],"content":"IsPublic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPublic","pos":[0,8]}]},{"pos":[18676,18710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18905,18923],"content":"IsSecurityCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityCritical","pos":[0,18]}]},{"pos":[19232,19266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19469,19491],"content":"IsSecuritySafeCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecuritySafeCritical","pos":[0,22]}]},{"pos":[19812,19846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20047,20068],"content":"IsSecurityTransparent","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityTransparent","pos":[0,21]}]},{"pos":[20386,20420],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20605,20618],"content":"IsSpecialName","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSpecialName","pos":[0,13]}]},{"pos":[20904,20938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21113,21121],"content":"IsStatic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsStatic","pos":[0,8]}]},{"pos":[21392,21426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21605,21615],"content":"MemberType","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberType","pos":[0,10]}]},{"pos":[21941,21975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22270,22302],"content":"op_Equality(FieldInfo,FieldInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FieldInfo,FieldInfo)","pos":[0,32]}]},{"pos":[22725,22759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22835,22869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22928,22962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23261,23295],"content":"op_Inequality(FieldInfo,FieldInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FieldInfo,FieldInfo)","pos":[0,34]}]},{"pos":[23724,23758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23834,23868],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23927,23961],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24194,24217],"content":"SetValue(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Object)","pos":[0,23]}]},{"pos":[24552,24586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24648,24682],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25143,25198],"content":"SetValue(Object,Object,BindingFlags,Binder,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Object,BindingFlags,Binder,CultureInfo)","pos":[0,55]}]},{"pos":[25724,25758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25820,25854],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25938,25972],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26046,26080],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26163,26197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26508,26545],"content":"SetValueDirect(TypedReference,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValueDirect(TypedReference,Object)","pos":[0,37]}]},{"pos":[26938,26972],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27034,27068],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27491,27580],"content":"System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,89]}]},{"pos":[28103,28137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28203,28237],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28300,28334],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28395,28429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28494,28528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28799,28850],"content":"System.Runtime.InteropServices._FieldInfo.GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.GetType()","pos":[0,51]}]},{"pos":[29219,29253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29618,29693],"content":"System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,75]}]},{"pos":[30156,30190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30251,30285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30349,30383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30704,30770],"content":"System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)","pos":[0,66]}]},{"pos":[31199,31233],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31724,31826],"content":"System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,102]}]},{"pos":[32438,32472],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32531,32565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32626,32660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32722,32756],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32824,32858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32925,32959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33026,33060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33125,33159],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33285,33313],"content":"System.Reflection.MemberInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Reflection.MemberInfo","pos":[0,28]}]},{"pos":[33421,33432],"content":"FieldInfo()","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo()","pos":[0,11]}]},{"pos":[33635,33645],"content":"Attributes","needQuote":true,"needEscape":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[33831,33846],"content":"FieldAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldAttributes","pos":[0,15]}]},{"pos":[34048,34062],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[34226,34233],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34351,34357],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34520,34531],"content":"FieldHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldHandle","pos":[0,11]}]},{"pos":[34700,34718],"content":"RuntimeFieldHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeFieldHandle","pos":[0,18]}]},{"pos":[34903,34912],"content":"FieldType","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldType","pos":[0,9]}]},{"pos":[35063,35067],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[35260,35298],"content":"GetFieldFromHandle(RuntimeFieldHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFieldFromHandle(RuntimeFieldHandle)","pos":[0,38]}]},{"pos":[35534,35543],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[35688,35706],"content":"RuntimeFieldHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeFieldHandle","pos":[0,18]}]},{"pos":[35952,36008],"content":"GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)","pos":[0,56]}]},{"pos":[36280,36289],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[36434,36452],"content":"RuntimeFieldHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeFieldHandle","pos":[0,18]}]},{"pos":[36603,36620],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[36805,36818],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[36978,36983],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37159,37187],"content":"GetOptionalCustomModifiers()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOptionalCustomModifiers()","pos":[0,28]}]},{"pos":[37376,37380],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[37549,37570],"content":"GetRawConstantValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRawConstantValue()","pos":[0,21]}]},{"pos":[37747,37753],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37931,37959],"content":"GetRequiredCustomModifiers()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRequiredCustomModifiers()","pos":[0,28]}]},{"pos":[38148,38152],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[38325,38341],"content":"GetValue(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Object)","pos":[0,16]}]},{"pos":[38508,38514],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38630,38636],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38825,38855],"content":"GetValueDirect(TypedReference)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValueDirect(TypedReference)","pos":[0,30]}]},{"pos":[39050,39056],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39180,39194],"content":"TypedReference","needQuote":true,"needEscape":true,"nodes":[{"content":"TypedReference","pos":[0,14]}]},{"pos":[39372,39382],"content":"IsAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAssembly","pos":[0,10]}]},{"pos":[39538,39545],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39707,39715],"content":"IsFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamily","pos":[0,8]}]},{"pos":[39867,39874],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40047,40066],"content":"IsFamilyAndAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamilyAndAssembly","pos":[0,19]}]},{"pos":[40240,40247],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40419,40437],"content":"IsFamilyOrAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamilyOrAssembly","pos":[0,18]}]},{"pos":[40609,40616],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40780,40790],"content":"IsInitOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInitOnly","pos":[0,10]}]},{"pos":[40946,40953],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41116,41125],"content":"IsLiteral","needQuote":true,"needEscape":true,"nodes":[{"content":"IsLiteral","pos":[0,9]}]},{"pos":[41279,41286],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41455,41470],"content":"IsNotSerialized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsNotSerialized","pos":[0,15]}]},{"pos":[41636,41643],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41810,41823],"content":"IsPinvokeImpl","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPinvokeImpl","pos":[0,13]}]},{"pos":[41985,41992],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42155,42164],"content":"IsPrivate","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrivate","pos":[0,9]}]},{"pos":[42318,42325],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42487,42495],"content":"IsPublic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPublic","pos":[0,8]}]},{"pos":[42647,42654],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42826,42844],"content":"IsSecurityCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityCritical","pos":[0,18]}]},{"pos":[43016,43023],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43199,43221],"content":"IsSecuritySafeCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecuritySafeCritical","pos":[0,22]}]},{"pos":[43401,43408],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43583,43604],"content":"IsSecurityTransparent","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityTransparent","pos":[0,21]}]},{"pos":[43782,43789],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43956,43969],"content":"IsSpecialName","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSpecialName","pos":[0,13]}]},{"pos":[44131,44138],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44300,44308],"content":"IsStatic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsStatic","pos":[0,8]}]},{"pos":[44460,44467],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44631,44641],"content":"MemberType","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberType","pos":[0,10]}]},{"pos":[44823,44834],"content":"MemberTypes","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberTypes","pos":[0,11]}]},{"pos":[45075,45107],"content":"op_Equality(FieldInfo,FieldInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FieldInfo,FieldInfo)","pos":[0,32]}]},{"pos":[45307,45314],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45457,45466],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[45624,45633],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[45872,45906],"content":"op_Inequality(FieldInfo,FieldInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FieldInfo,FieldInfo)","pos":[0,34]}]},{"pos":[46110,46117],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46260,46269],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[46427,46436],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[46642,46665],"content":"SetValue(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Object)","pos":[0,23]}]},{"pos":[46846,46852],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46968,46974],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47252,47307],"content":"SetValue(Object,Object,BindingFlags,Binder,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Object,BindingFlags,Binder,CultureInfo)","pos":[0,55]}]},{"pos":[47552,47558],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47674,47680],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47824,47836],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[47997,48003],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[48163,48174],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[48401,48438],"content":"SetValueDirect(TypedReference,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValueDirect(TypedReference,Object)","pos":[0,37]}]},{"pos":[48655,48669],"content":"TypedReference","needQuote":true,"needEscape":true,"nodes":[{"content":"TypedReference","pos":[0,14]}]},{"pos":[48801,48807],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49084,49173],"content":"System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,89]}]},{"pos":[49484,49488],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[49600,49606],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[49722,49728],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[49844,49850],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[49966,49972],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[50173,50224],"content":"System.Runtime.InteropServices._FieldInfo.GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.GetType()","pos":[0,51]}]},{"pos":[50459,50463],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[50707,50782],"content":"System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,75]}]},{"pos":[51067,51073],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[51189,51195],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[51311,51317],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[51543,51609],"content":"System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)","pos":[0,66]}]},{"pos":[51876,51882],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[52193,52295],"content":"System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,102]}]},{"pos":[52634,52640],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[52754,52758],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[52870,52876],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[52991,52996],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[53110,53116],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[53232,53238],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[53354,53360],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[53476,53482],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.FieldInfo\n  id: FieldInfo\n  children:\n  - System.Reflection.FieldInfo.#ctor\n  - System.Reflection.FieldInfo.Attributes\n  - System.Reflection.FieldInfo.Equals(System.Object)\n  - System.Reflection.FieldInfo.FieldHandle\n  - System.Reflection.FieldInfo.FieldType\n  - System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)\n  - System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)\n  - System.Reflection.FieldInfo.GetHashCode\n  - System.Reflection.FieldInfo.GetOptionalCustomModifiers\n  - System.Reflection.FieldInfo.GetRawConstantValue\n  - System.Reflection.FieldInfo.GetRequiredCustomModifiers\n  - System.Reflection.FieldInfo.GetValue(System.Object)\n  - System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)\n  - System.Reflection.FieldInfo.IsAssembly\n  - System.Reflection.FieldInfo.IsFamily\n  - System.Reflection.FieldInfo.IsFamilyAndAssembly\n  - System.Reflection.FieldInfo.IsFamilyOrAssembly\n  - System.Reflection.FieldInfo.IsInitOnly\n  - System.Reflection.FieldInfo.IsLiteral\n  - System.Reflection.FieldInfo.IsNotSerialized\n  - System.Reflection.FieldInfo.IsPinvokeImpl\n  - System.Reflection.FieldInfo.IsPrivate\n  - System.Reflection.FieldInfo.IsPublic\n  - System.Reflection.FieldInfo.IsSecurityCritical\n  - System.Reflection.FieldInfo.IsSecuritySafeCritical\n  - System.Reflection.FieldInfo.IsSecurityTransparent\n  - System.Reflection.FieldInfo.IsSpecialName\n  - System.Reflection.FieldInfo.IsStatic\n  - System.Reflection.FieldInfo.MemberType\n  - System.Reflection.FieldInfo.op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)\n  - System.Reflection.FieldInfo.op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)\n  - System.Reflection.FieldInfo.SetValue(System.Object,System.Object)\n  - System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\n  - System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)\n  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType\n  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  langs:\n  - csharp\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._FieldInfo))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class FieldInfo : System.Reflection.MemberInfo, System.Runtime.InteropServices._FieldInfo\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  implements:\n  - System.Runtime.InteropServices._FieldInfo\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.DeclaringType\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Module\n  - System.Reflection.MemberInfo.Name\n  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.ReflectedType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.#ctor\n  id: '#ctor'\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: FieldInfo()\n  nameWithType: FieldInfo.FieldInfo()\n  fullName: System.Reflection.FieldInfo.FieldInfo()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected FieldInfo ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.Attributes\n  id: Attributes\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: FieldInfo.Attributes\n  fullName: System.Reflection.FieldInfo.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.FieldAttributes Attributes { get; }\n    return:\n      type: System.Reflection.FieldAttributes\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FieldInfo.Equals(Object)\n  fullName: System.Reflection.FieldInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.FieldHandle\n  id: FieldHandle\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: FieldHandle\n  nameWithType: FieldInfo.FieldHandle\n  fullName: System.Reflection.FieldInfo.FieldHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract RuntimeFieldHandle FieldHandle { get; }\n    return:\n      type: System.RuntimeFieldHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.FieldType\n  id: FieldType\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: FieldType\n  nameWithType: FieldInfo.FieldType\n  fullName: System.Reflection.FieldInfo.FieldType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type FieldType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)\n  id: GetFieldFromHandle(System.RuntimeFieldHandle)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: GetFieldFromHandle(RuntimeFieldHandle)\n  nameWithType: FieldInfo.GetFieldFromHandle(RuntimeFieldHandle)\n  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(RuntimeFieldHandle)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.FieldInfo GetFieldFromHandle (RuntimeFieldHandle handle);\n    parameters:\n    - id: handle\n      type: System.RuntimeFieldHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.FieldInfo.GetFieldFromHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)\n  id: GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)\n  nameWithType: FieldInfo.GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)\n  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.FieldInfo GetFieldFromHandle (RuntimeFieldHandle handle, RuntimeTypeHandle declaringType);\n    parameters:\n    - id: handle\n      type: System.RuntimeFieldHandle\n      description: Parameter description to be filled\n    - id: declaringType\n      type: System.RuntimeTypeHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.FieldInfo.GetFieldFromHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FieldInfo.GetHashCode()\n  fullName: System.Reflection.FieldInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.GetOptionalCustomModifiers\n  id: GetOptionalCustomModifiers\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: GetOptionalCustomModifiers()\n  nameWithType: FieldInfo.GetOptionalCustomModifiers()\n  fullName: System.Reflection.FieldInfo.GetOptionalCustomModifiers()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GetOptionalCustomModifiers ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.GetRawConstantValue\n  id: GetRawConstantValue\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: GetRawConstantValue()\n  nameWithType: FieldInfo.GetRawConstantValue()\n  fullName: System.Reflection.FieldInfo.GetRawConstantValue()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual object GetRawConstantValue ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.GetRequiredCustomModifiers\n  id: GetRequiredCustomModifiers\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: GetRequiredCustomModifiers()\n  nameWithType: FieldInfo.GetRequiredCustomModifiers()\n  fullName: System.Reflection.FieldInfo.GetRequiredCustomModifiers()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GetRequiredCustomModifiers ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.GetValue(System.Object)\n  id: GetValue(System.Object)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: GetValue(Object)\n  nameWithType: FieldInfo.GetValue(Object)\n  fullName: System.Reflection.FieldInfo.GetValue(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract object GetValue (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)\n  id: GetValueDirect(System.TypedReference)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: GetValueDirect(TypedReference)\n  nameWithType: FieldInfo.GetValueDirect(TypedReference)\n  fullName: System.Reflection.FieldInfo.GetValueDirect(TypedReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual object GetValueDirect (TypedReference obj);\n    parameters:\n    - id: obj\n      type: System.TypedReference\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsAssembly\n  id: IsAssembly\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsAssembly\n  nameWithType: FieldInfo.IsAssembly\n  fullName: System.Reflection.FieldInfo.IsAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsAssembly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsFamily\n  id: IsFamily\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsFamily\n  nameWithType: FieldInfo.IsFamily\n  fullName: System.Reflection.FieldInfo.IsFamily\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsFamily { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsFamilyAndAssembly\n  id: IsFamilyAndAssembly\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsFamilyAndAssembly\n  nameWithType: FieldInfo.IsFamilyAndAssembly\n  fullName: System.Reflection.FieldInfo.IsFamilyAndAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsFamilyAndAssembly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsFamilyOrAssembly\n  id: IsFamilyOrAssembly\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsFamilyOrAssembly\n  nameWithType: FieldInfo.IsFamilyOrAssembly\n  fullName: System.Reflection.FieldInfo.IsFamilyOrAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsFamilyOrAssembly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsInitOnly\n  id: IsInitOnly\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsInitOnly\n  nameWithType: FieldInfo.IsInitOnly\n  fullName: System.Reflection.FieldInfo.IsInitOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsInitOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsLiteral\n  id: IsLiteral\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsLiteral\n  nameWithType: FieldInfo.IsLiteral\n  fullName: System.Reflection.FieldInfo.IsLiteral\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsLiteral { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsNotSerialized\n  id: IsNotSerialized\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsNotSerialized\n  nameWithType: FieldInfo.IsNotSerialized\n  fullName: System.Reflection.FieldInfo.IsNotSerialized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsNotSerialized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsPinvokeImpl\n  id: IsPinvokeImpl\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsPinvokeImpl\n  nameWithType: FieldInfo.IsPinvokeImpl\n  fullName: System.Reflection.FieldInfo.IsPinvokeImpl\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsPinvokeImpl { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsPrivate\n  id: IsPrivate\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsPrivate\n  nameWithType: FieldInfo.IsPrivate\n  fullName: System.Reflection.FieldInfo.IsPrivate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsPrivate { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsPublic\n  id: IsPublic\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsPublic\n  nameWithType: FieldInfo.IsPublic\n  fullName: System.Reflection.FieldInfo.IsPublic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsPublic { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsSecurityCritical\n  id: IsSecurityCritical\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsSecurityCritical\n  nameWithType: FieldInfo.IsSecurityCritical\n  fullName: System.Reflection.FieldInfo.IsSecurityCritical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsSecurityCritical { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsSecuritySafeCritical\n  id: IsSecuritySafeCritical\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsSecuritySafeCritical\n  nameWithType: FieldInfo.IsSecuritySafeCritical\n  fullName: System.Reflection.FieldInfo.IsSecuritySafeCritical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsSecuritySafeCritical { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsSecurityTransparent\n  id: IsSecurityTransparent\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsSecurityTransparent\n  nameWithType: FieldInfo.IsSecurityTransparent\n  fullName: System.Reflection.FieldInfo.IsSecurityTransparent\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsSecurityTransparent { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsSpecialName\n  id: IsSpecialName\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: FieldInfo.IsSpecialName\n  fullName: System.Reflection.FieldInfo.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.IsStatic\n  id: IsStatic\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: IsStatic\n  nameWithType: FieldInfo.IsStatic\n  fullName: System.Reflection.FieldInfo.IsStatic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsStatic { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.MemberType\n  id: MemberType\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: FieldInfo.MemberType\n  fullName: System.Reflection.FieldInfo.MemberType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)\n  id: op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: op_Equality(FieldInfo,FieldInfo)\n  nameWithType: FieldInfo.op_Equality(FieldInfo,FieldInfo)\n  fullName: System.Reflection.FieldInfo.op_Equality(FieldInfo,FieldInfo)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static bool op_Equality (System.Reflection.FieldInfo left, System.Reflection.FieldInfo right);\n    parameters:\n    - id: left\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n    - id: right\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)\n  id: op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: op_Inequality(FieldInfo,FieldInfo)\n  nameWithType: FieldInfo.op_Inequality(FieldInfo,FieldInfo)\n  fullName: System.Reflection.FieldInfo.op_Inequality(FieldInfo,FieldInfo)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.FieldInfo left, System.Reflection.FieldInfo right);\n    parameters:\n    - id: left\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n    - id: right\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object)\n  id: SetValue(System.Object,System.Object)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: SetValue(Object,Object)\n  nameWithType: FieldInfo.SetValue(Object,Object)\n  fullName: System.Reflection.FieldInfo.SetValue(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public void SetValue (object obj, object value);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Reflection.FieldInfo.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\n  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  nameWithType: FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  fullName: System.Reflection.FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.FieldInfo.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)\n  id: SetValueDirect(System.TypedReference,System.Object)\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: SetValueDirect(TypedReference,Object)\n  nameWithType: FieldInfo.SetValueDirect(TypedReference,Object)\n  fullName: System.Reflection.FieldInfo.SetValueDirect(TypedReference,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual void SetValueDirect (TypedReference obj, object value);\n    parameters:\n    - id: obj\n      type: System.TypedReference\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _FieldInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: rgszNames\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: cNames\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: rgDispId\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType\n  id: System#Runtime#InteropServices#_FieldInfo#GetType\n  isEii: true\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._FieldInfo.GetType()\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType()\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: Type _FieldInfo.GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _FieldInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _FieldInfo.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.FieldInfo\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _FieldInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: wFlags\n      type: System.Int16\n      description: Parameter description to be filled\n    - id: pDispParams\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pVarResult\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: puArgErr\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Reflection.MemberInfo\n  isExternal: false\n  name: System.Reflection.MemberInfo\n- uid: System.Reflection.FieldInfo.#ctor\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: FieldInfo()\n  nameWithType: FieldInfo.FieldInfo()\n  fullName: System.Reflection.FieldInfo.FieldInfo()\n- uid: System.Reflection.FieldInfo.Attributes\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: FieldInfo.Attributes\n  fullName: System.Reflection.FieldInfo.Attributes\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Reflection.FieldInfo.Equals(System.Object)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FieldInfo.Equals(Object)\n  fullName: System.Reflection.FieldInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.FieldInfo.FieldHandle\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: FieldHandle\n  nameWithType: FieldInfo.FieldHandle\n  fullName: System.Reflection.FieldInfo.FieldHandle\n- uid: System.RuntimeFieldHandle\n  parent: System\n  isExternal: false\n  name: RuntimeFieldHandle\n  nameWithType: RuntimeFieldHandle\n  fullName: System.RuntimeFieldHandle\n- uid: System.Reflection.FieldInfo.FieldType\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: FieldType\n  nameWithType: FieldInfo.FieldType\n  fullName: System.Reflection.FieldInfo.FieldType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: GetFieldFromHandle(RuntimeFieldHandle)\n  nameWithType: FieldInfo.GetFieldFromHandle(RuntimeFieldHandle)\n  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(RuntimeFieldHandle)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.RuntimeFieldHandle\n  parent: System\n  isExternal: false\n  name: RuntimeFieldHandle\n  nameWithType: RuntimeFieldHandle\n  fullName: System.RuntimeFieldHandle\n- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)\n  nameWithType: FieldInfo.GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)\n  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.RuntimeFieldHandle\n  parent: System\n  isExternal: false\n  name: RuntimeFieldHandle\n  nameWithType: RuntimeFieldHandle\n  fullName: System.RuntimeFieldHandle\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.Reflection.FieldInfo.GetHashCode\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FieldInfo.GetHashCode()\n  fullName: System.Reflection.FieldInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.FieldInfo.GetOptionalCustomModifiers\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: GetOptionalCustomModifiers()\n  nameWithType: FieldInfo.GetOptionalCustomModifiers()\n  fullName: System.Reflection.FieldInfo.GetOptionalCustomModifiers()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.FieldInfo.GetRawConstantValue\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: GetRawConstantValue()\n  nameWithType: FieldInfo.GetRawConstantValue()\n  fullName: System.Reflection.FieldInfo.GetRawConstantValue()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.FieldInfo.GetRequiredCustomModifiers\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: GetRequiredCustomModifiers()\n  nameWithType: FieldInfo.GetRequiredCustomModifiers()\n  fullName: System.Reflection.FieldInfo.GetRequiredCustomModifiers()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.FieldInfo.GetValue(System.Object)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: GetValue(Object)\n  nameWithType: FieldInfo.GetValue(Object)\n  fullName: System.Reflection.FieldInfo.GetValue(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: GetValueDirect(TypedReference)\n  nameWithType: FieldInfo.GetValueDirect(TypedReference)\n  fullName: System.Reflection.FieldInfo.GetValueDirect(TypedReference)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n- uid: System.Reflection.FieldInfo.IsAssembly\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsAssembly\n  nameWithType: FieldInfo.IsAssembly\n  fullName: System.Reflection.FieldInfo.IsAssembly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsFamily\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsFamily\n  nameWithType: FieldInfo.IsFamily\n  fullName: System.Reflection.FieldInfo.IsFamily\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsFamilyAndAssembly\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: FieldInfo.IsFamilyAndAssembly\n  fullName: System.Reflection.FieldInfo.IsFamilyAndAssembly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsFamilyOrAssembly\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: FieldInfo.IsFamilyOrAssembly\n  fullName: System.Reflection.FieldInfo.IsFamilyOrAssembly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsInitOnly\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsInitOnly\n  nameWithType: FieldInfo.IsInitOnly\n  fullName: System.Reflection.FieldInfo.IsInitOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsLiteral\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsLiteral\n  nameWithType: FieldInfo.IsLiteral\n  fullName: System.Reflection.FieldInfo.IsLiteral\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsNotSerialized\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsNotSerialized\n  nameWithType: FieldInfo.IsNotSerialized\n  fullName: System.Reflection.FieldInfo.IsNotSerialized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsPinvokeImpl\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsPinvokeImpl\n  nameWithType: FieldInfo.IsPinvokeImpl\n  fullName: System.Reflection.FieldInfo.IsPinvokeImpl\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsPrivate\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsPrivate\n  nameWithType: FieldInfo.IsPrivate\n  fullName: System.Reflection.FieldInfo.IsPrivate\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsPublic\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: FieldInfo.IsPublic\n  fullName: System.Reflection.FieldInfo.IsPublic\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsSecurityCritical\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsSecurityCritical\n  nameWithType: FieldInfo.IsSecurityCritical\n  fullName: System.Reflection.FieldInfo.IsSecurityCritical\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsSecuritySafeCritical\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsSecuritySafeCritical\n  nameWithType: FieldInfo.IsSecuritySafeCritical\n  fullName: System.Reflection.FieldInfo.IsSecuritySafeCritical\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsSecurityTransparent\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsSecurityTransparent\n  nameWithType: FieldInfo.IsSecurityTransparent\n  fullName: System.Reflection.FieldInfo.IsSecurityTransparent\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsSpecialName\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: FieldInfo.IsSpecialName\n  fullName: System.Reflection.FieldInfo.IsSpecialName\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.IsStatic\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: IsStatic\n  nameWithType: FieldInfo.IsStatic\n  fullName: System.Reflection.FieldInfo.IsStatic\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo.MemberType\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: FieldInfo.MemberType\n  fullName: System.Reflection.FieldInfo.MemberType\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Reflection.FieldInfo.op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: op_Equality(FieldInfo,FieldInfo)\n  nameWithType: FieldInfo.op_Equality(FieldInfo,FieldInfo)\n  fullName: System.Reflection.FieldInfo.op_Equality(FieldInfo,FieldInfo)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.FieldInfo.op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: op_Inequality(FieldInfo,FieldInfo)\n  nameWithType: FieldInfo.op_Inequality(FieldInfo,FieldInfo)\n  fullName: System.Reflection.FieldInfo.op_Inequality(FieldInfo,FieldInfo)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: SetValue(Object,Object)\n  nameWithType: FieldInfo.SetValue(Object,Object)\n  fullName: System.Reflection.FieldInfo.SetValue(Object,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  nameWithType: FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n  fullName: System.Reflection.FieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: SetValueDirect(TypedReference,Object)\n  nameWithType: FieldInfo.SetValueDirect(TypedReference,Object)\n  fullName: System.Reflection.FieldInfo.SetValueDirect(TypedReference,Object)\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._FieldInfo.GetType()\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType()\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.FieldInfo.GetFieldFromHandle*\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  nameWithType: FieldInfo.\n- uid: System.Reflection.FieldInfo.SetValue*\n  parent: System.Reflection.FieldInfo\n  isExternal: false\n  nameWithType: FieldInfo.\n"}