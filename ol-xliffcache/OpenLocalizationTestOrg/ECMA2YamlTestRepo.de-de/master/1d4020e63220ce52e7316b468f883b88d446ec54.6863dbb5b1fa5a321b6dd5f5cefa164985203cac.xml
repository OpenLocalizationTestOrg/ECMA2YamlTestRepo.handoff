{"nodes":[{"pos":[715,745],"content":"AsymmetricSignatureDeformatter","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricSignatureDeformatter","pos":[0,30]}]},{"pos":[1599,1631],"content":"AsymmetricSignatureDeformatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricSignatureDeformatter()","pos":[0,32]}]},{"pos":[2277,2301],"content":"SetHashAlgorithm(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHashAlgorithm(String)","pos":[0,24]}]},{"pos":[2713,2747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3082,3109],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[3586,3620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3931,3961],"content":"VerifySignature(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(Byte[],Byte[])","pos":[0,30]}]},{"pos":[4405,4439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4508,4542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4601,4635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5093,5130],"content":"VerifySignature(HashAlgorithm,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(HashAlgorithm,Byte[])","pos":[0,37]}]},{"pos":[5646,5680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5749,5783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5842,5876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6076,6089],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[6261,6293],"content":"AsymmetricSignatureDeformatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricSignatureDeformatter()","pos":[0,32]}]},{"pos":[6676,6700],"content":"SetHashAlgorithm(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHashAlgorithm(String)","pos":[0,24]}]},{"pos":[6936,6942],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7214,7241],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[7540,7559],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]},{"pos":[7867,7897],"content":"VerifySignature(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(Byte[],Byte[])","pos":[0,30]}]},{"pos":[8146,8153],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8269,8273],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8385,8389],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8676,8713],"content":"VerifySignature(HashAlgorithm,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(HashAlgorithm,Byte[])","pos":[0,37]}]},{"pos":[8976,8983],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9152,9165],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[9315,9319],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  id: AsymmetricSignatureDeformatter\n  children:\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])\n  langs:\n  - csharp\n  name: AsymmetricSignatureDeformatter\n  nameWithType: AsymmetricSignatureDeformatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class AsymmetricSignatureDeformatter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  langs:\n  - csharp\n  name: AsymmetricSignatureDeformatter()\n  nameWithType: AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected AsymmetricSignatureDeformatter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)\n  id: SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  langs:\n  - csharp\n  name: SetHashAlgorithm(String)\n  nameWithType: AsymmetricSignatureDeformatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract void SetHashAlgorithm (string strName);\n    parameters:\n    - id: strName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  id: VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  langs:\n  - csharp\n  name: VerifySignature(Byte[],Byte[])\n  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rgbSignature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])\n  id: VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  langs:\n  - csharp\n  name: VerifySignature(HashAlgorithm,Byte[])\n  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual bool VerifySignature (System.Security.Cryptography.HashAlgorithm hash, byte[] rgbSignature);\n    parameters:\n    - id: hash\n      type: System.Security.Cryptography.HashAlgorithm\n      description: Parameter description to be filled\n    - id: rgbSignature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  isExternal: false\n  name: AsymmetricSignatureDeformatter()\n  nameWithType: AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.AsymmetricSignatureDeformatter()\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  isExternal: false\n  name: SetHashAlgorithm(String)\n  nameWithType: AsymmetricSignatureDeformatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  isExternal: false\n  name: VerifySignature(Byte[],Byte[])\n  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(Byte[],Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  isExternal: false\n  name: VerifySignature(HashAlgorithm,Byte[])\n  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm,Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.HashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: HashAlgorithm\n  fullName: System.Security.Cryptography.HashAlgorithm\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature*\n  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  isExternal: false\n  nameWithType: AsymmetricSignatureDeformatter.\n"}