{"nodes":[{"pos":[823,851],"content":"RSAPKCS1KeyExchangeFormatter","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAPKCS1KeyExchangeFormatter","pos":[0,28]}]},{"pos":[1812,1842],"content":"RSAPKCS1KeyExchangeFormatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAPKCS1KeyExchangeFormatter()","pos":[0,30]}]},{"pos":[2521,2570],"content":"RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)","pos":[0,49]}]},{"pos":[3100,3134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3417,3442],"content":"CreateKeyExchange(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[])","pos":[0,25]}]},{"pos":[3855,3889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3947,3981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4377,4407],"content":"CreateKeyExchange(Byte[],Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[],Type)","pos":[0,30]}]},{"pos":[4847,4881],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4946,4980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5038,5072],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5400,5410],"content":"Parameters","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[5757,5791],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6016,6019],"content":"Rng","needQuote":true,"needEscape":true,"nodes":[{"content":"Rng","pos":[0,3]}]},{"pos":[6422,6456],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6787,6814],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[7287,7321],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7478,7537],"content":"System.Security.Cryptography.AsymmetricKeyExchangeFormatter","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.AsymmetricKeyExchangeFormatter","pos":[0,59]}]},{"pos":[7705,7735],"content":"RSAPKCS1KeyExchangeFormatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAPKCS1KeyExchangeFormatter()","pos":[0,30]}]},{"pos":[8130,8179],"content":"RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)","pos":[0,49]}]},{"pos":[8518,8537],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]},{"pos":[8829,8854],"content":"CreateKeyExchange(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[])","pos":[0,25]}]},{"pos":[9086,9090],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9202,9206],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9460,9490],"content":"CreateKeyExchange(Byte[],Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[],Type)","pos":[0,30]}]},{"pos":[9732,9736],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9848,9852],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9964,9968],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[10186,10196],"content":"Parameters","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[10400,10406],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10621,10624],"content":"Rng","needQuote":true,"needEscape":true,"nodes":[{"content":"Rng","pos":[0,3]}]},{"pos":[10873,10894],"content":"RandomNumberGenerator","needQuote":true,"needEscape":true,"nodes":[{"content":"RandomNumberGenerator","pos":[0,21]}]},{"pos":[11214,11241],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[11536,11555],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  id: RSAPKCS1KeyExchangeFormatter\n  children:\n  - System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.#ctor\n  - System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  - System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  - System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Parameters\n  - System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Rng\n  - System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  langs:\n  - csharp\n  name: RSAPKCS1KeyExchangeFormatter\n  nameWithType: RSAPKCS1KeyExchangeFormatter\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class RSAPKCS1KeyExchangeFormatter : System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  langs:\n  - csharp\n  name: RSAPKCS1KeyExchangeFormatter()\n  nameWithType: RSAPKCS1KeyExchangeFormatter.RSAPKCS1KeyExchangeFormatter()\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.RSAPKCS1KeyExchangeFormatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RSAPKCS1KeyExchangeFormatter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  langs:\n  - csharp\n  name: RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)\n  nameWithType: RSAPKCS1KeyExchangeFormatter.RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RSAPKCS1KeyExchangeFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  id: CreateKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  langs:\n  - csharp\n  name: CreateKeyExchange(Byte[])\n  nameWithType: RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(Byte[])\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] CreateKeyExchange (byte[] rgbData);\n    parameters:\n    - id: rgbData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  id: CreateKeyExchange(System.Byte[],System.Type)\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  langs:\n  - csharp\n  name: CreateKeyExchange(Byte[],Type)\n  nameWithType: RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] CreateKeyExchange (byte[] rgbData, Type symAlgType);\n    parameters:\n    - id: rgbData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: symAlgType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Parameters\n  id: Parameters\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: RSAPKCS1KeyExchangeFormatter.Parameters\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Parameters\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string Parameters { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Rng\n  id: Rng\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  langs:\n  - csharp\n  name: Rng\n  nameWithType: RSAPKCS1KeyExchangeFormatter.Rng\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Rng\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.RandomNumberGenerator Rng { get; set; }\n    return:\n      type: System.Security.Cryptography.RandomNumberGenerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: RSAPKCS1KeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.#ctor\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  isExternal: false\n  name: RSAPKCS1KeyExchangeFormatter()\n  nameWithType: RSAPKCS1KeyExchangeFormatter.RSAPKCS1KeyExchangeFormatter()\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.RSAPKCS1KeyExchangeFormatter()\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  isExternal: false\n  name: RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)\n  nameWithType: RSAPKCS1KeyExchangeFormatter.RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.RSAPKCS1KeyExchangeFormatter(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  isExternal: false\n  name: CreateKeyExchange(Byte[])\n  nameWithType: RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(Byte[])\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  isExternal: false\n  name: CreateKeyExchange(Byte[],Type)\n  nameWithType: RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Parameters\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  isExternal: false\n  name: Parameters\n  nameWithType: RSAPKCS1KeyExchangeFormatter.Parameters\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Parameters\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Rng\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  isExternal: false\n  name: Rng\n  nameWithType: RSAPKCS1KeyExchangeFormatter.Rng\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.Rng\n- uid: System.Security.Cryptography.RandomNumberGenerator\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RandomNumberGenerator\n  nameWithType: RandomNumberGenerator\n  fullName: System.Security.Cryptography.RandomNumberGenerator\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: RSAPKCS1KeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter.CreateKeyExchange*\n  parent: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter\n  isExternal: false\n  nameWithType: RSAPKCS1KeyExchangeFormatter.\n"}