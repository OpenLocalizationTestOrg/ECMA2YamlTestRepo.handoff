{"nodes":[{"pos":[1266,1288],"content":"KeyContainerPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermission","pos":[0,22]}]},{"pos":[2875,2926],"content":"KeyContainerPermission(KeyContainerPermissionFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermission(KeyContainerPermissionFlags)","pos":[0,51]}]},{"pos":[3458,3492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3799,3838],"content":"KeyContainerPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermission(PermissionState)","pos":[0,39]}]},{"pos":[4322,4356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4815,4902],"content":"KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])","pos":[0,87]}]},{"pos":[5582,5616],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5733,5767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5998,6011],"content":"AccessEntries","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessEntries","pos":[0,13]}]},{"pos":[6467,6501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6714,6720],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[7086,7120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7335,7340],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[7740,7774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8059,8083],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[8527,8561],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8842,8864],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[9303,9337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9409,9443],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9726,9749],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[10168,10202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10261,10295],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10528,10544],"content":"IsUnrestricted()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsUnrestricted()","pos":[0,16]}]},{"pos":[10895,10929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11144,11151],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[11528,11562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11835,11853],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[12280,12314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12386,12420],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12554,12590],"content":"System.Security.CodeAccessPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.CodeAccessPermission","pos":[0,36]}]},{"pos":[12801,12852],"content":"KeyContainerPermission(KeyContainerPermissionFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermission(KeyContainerPermissionFlags)","pos":[0,51]}]},{"pos":[13188,13215],"content":"KeyContainerPermissionFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionFlags","pos":[0,27]}]},{"pos":[13526,13565],"content":"KeyContainerPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermission(PermissionState)","pos":[0,39]}]},{"pos":[13865,13880],"content":"PermissionState","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionState","pos":[0,15]}]},{"pos":[14243,14330],"content":"KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])","pos":[0,87]}]},{"pos":[14738,14765],"content":"KeyContainerPermissionFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionFlags","pos":[0,27]}]},{"pos":[15013,15046],"content":"KeyContainerPermissionAccessEntry","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionAccessEntry","pos":[0,33]}]},{"pos":[15334,15347],"content":"AccessEntries","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessEntries","pos":[0,13]}]},{"pos":[15623,15666],"content":"KeyContainerPermissionAccessEntryCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionAccessEntryCollection","pos":[0,43]}]},{"pos":[15963,15969],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[16175,16186],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[16408,16413],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[16657,16684],"content":"KeyContainerPermissionFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionFlags","pos":[0,27]}]},{"pos":[16985,17009],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[17255,17270],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[17533,17555],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[17793,17804],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[17962,17973],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[18229,18252],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[18470,18477],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18618,18629],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[18860,18876],"content":"IsUnrestricted()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsUnrestricted()","pos":[0,16]}]},{"pos":[19080,19087],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19292,19299],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[19511,19526],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[19785,19803],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[20033,20044],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[20202,20213],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.KeyContainerPermission\n  id: KeyContainerPermission\n  children:\n  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])\n  - System.Security.Permissions.KeyContainerPermission.AccessEntries\n  - System.Security.Permissions.KeyContainerPermission.Copy\n  - System.Security.Permissions.KeyContainerPermission.Flags\n  - System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.KeyContainerPermission.IsUnrestricted\n  - System.Security.Permissions.KeyContainerPermission.ToXml\n  - System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: KeyContainerPermission\n  nameWithType: KeyContainerPermission\n  fullName: System.Security.Permissions.KeyContainerPermission\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class KeyContainerPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: KeyContainerPermission(KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: KeyContainerPermission(PermissionState)\n  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)\n  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public KeyContainerPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])\n  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])'\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])\n  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])\n  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags, System.Security.Permissions.KeyContainerPermissionAccessEntry[] accessList);\n    parameters:\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: Parameter description to be filled\n    - id: accessList\n      type: System.Security.Permissions.KeyContainerPermissionAccessEntry[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries\n  id: AccessEntries\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: AccessEntries\n  nameWithType: KeyContainerPermission.AccessEntries\n  fullName: System.Security.Permissions.KeyContainerPermission.AccessEntries\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionAccessEntryCollection AccessEntries { get; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: KeyContainerPermission.Copy()\n  fullName: System.Security.Permissions.KeyContainerPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.Flags\n  id: Flags\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: KeyContainerPermission.Flags\n  fullName: System.Security.Permissions.KeyContainerPermission.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: KeyContainerPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.KeyContainerPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: KeyContainerPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.KeyContainerPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: KeyContainerPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.KeyContainerPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: KeyContainerPermission.ToXml()\n  fullName: System.Security.Permissions.KeyContainerPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: KeyContainerPermission.Union(IPermission)\n  fullName: System.Security.Permissions.KeyContainerPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: KeyContainerPermission(KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: KeyContainerPermission(PermissionState)\n  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)\n  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])\n  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])\n  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry\n  nameWithType: KeyContainerPermissionAccessEntry\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry[]\n- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: AccessEntries\n  nameWithType: KeyContainerPermission.AccessEntries\n  fullName: System.Security.Permissions.KeyContainerPermission.AccessEntries\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionAccessEntryCollection\n  nameWithType: KeyContainerPermissionAccessEntryCollection\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection\n- uid: System.Security.Permissions.KeyContainerPermission.Copy\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: KeyContainerPermission.Copy()\n  fullName: System.Security.Permissions.KeyContainerPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.KeyContainerPermission.Flags\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermission.Flags\n  fullName: System.Security.Permissions.KeyContainerPermission.Flags\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: KeyContainerPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.KeyContainerPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: KeyContainerPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.KeyContainerPermission.Intersect(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: KeyContainerPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.KeyContainerPermission.IsUnrestricted()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.KeyContainerPermission.ToXml\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: KeyContainerPermission.ToXml()\n  fullName: System.Security.Permissions.KeyContainerPermission.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.KeyContainerPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: KeyContainerPermission.Union(IPermission)\n  fullName: System.Security.Permissions.KeyContainerPermission.Union(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n"}