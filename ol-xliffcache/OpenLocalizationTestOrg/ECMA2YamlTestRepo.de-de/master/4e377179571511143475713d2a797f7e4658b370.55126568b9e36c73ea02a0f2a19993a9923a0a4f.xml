{"nodes":[{"pos":[4263,4269],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[5003,5024],"content":"ApplicationPartitions","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationPartitions","pos":[0,21]}]},{"pos":[5514,5548],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5985,6049],"content":"CreateLocalSideOfTrustRelationship(String,TrustDirection,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateLocalSideOfTrustRelationship(String,TrustDirection,String)","pos":[0,64]}]},{"pos":[6649,6683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6791,6825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6895,6929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7384,7430],"content":"CreateTrustRelationship(Forest,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTrustRelationship(Forest,TrustDirection)","pos":[0,46]}]},{"pos":[8028,8062],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8170,8204],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8501,8543],"content":"DeleteLocalSideOfTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteLocalSideOfTrustRelationship(String)","pos":[0,42]}]},{"pos":[9010,9044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9387,9418],"content":"DeleteTrustRelationship(Forest)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteTrustRelationship(Forest)","pos":[0,31]}]},{"pos":[9919,9953],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10166,10175],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[10770,10786],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[11162,11196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11478,11485],"content":"Domains","needQuote":true,"needEscape":true,"nodes":[{"content":"Domains","pos":[0,7]}]},{"pos":[11905,11939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12204,12239],"content":"FindAllDiscoverableGlobalCatalogs()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDiscoverableGlobalCatalogs()","pos":[0,35]}]},{"pos":[12767,12801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13191,13232],"content":"FindAllDiscoverableGlobalCatalogs(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDiscoverableGlobalCatalogs(String)","pos":[0,41]}]},{"pos":[13740,13774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13883,13917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14253,14276],"content":"FindAllGlobalCatalogs()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllGlobalCatalogs()","pos":[0,23]}]},{"pos":[14768,14802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15156,15185],"content":"FindAllGlobalCatalogs(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllGlobalCatalogs(String)","pos":[0,29]}]},{"pos":[15657,15691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15800,15834],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16150,16169],"content":"FindGlobalCatalog()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindGlobalCatalog()","pos":[0,19]}]},{"pos":[16629,16663],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17089,17122],"content":"FindGlobalCatalog(LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindGlobalCatalog(LocatorOptions)","pos":[0,33]}]},{"pos":[17671,17705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17804,17838],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18180,18205],"content":"FindGlobalCatalog(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindGlobalCatalog(String)","pos":[0,25]}]},{"pos":[18655,18689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18788,18822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19276,19316],"content":"FindGlobalCatalog(String,LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindGlobalCatalog(String,LocatorOptions)","pos":[0,40]}]},{"pos":[19858,19892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19995,20029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20128,20162],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20460,20470],"content":"ForestMode","needQuote":true,"needEscape":true,"nodes":[{"content":"ForestMode","pos":[0,10]}]},{"pos":[20887,20921],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21150,21165],"content":"ForestModeLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"ForestModeLevel","pos":[0,15]}]},{"pos":[21510,21544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21791,21817],"content":"GetAllTrustRelationships()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAllTrustRelationships()","pos":[0,26]}]},{"pos":[22348,22382],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22613,22631],"content":"GetCurrentForest()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentForest()","pos":[0,18]}]},{"pos":[23081,23115],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23450,23477],"content":"GetForest(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetForest(DirectoryContext)","pos":[0,27]}]},{"pos":[24016,24050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24142,24176],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24469,24509],"content":"GetSelectiveAuthenticationStatus(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSelectiveAuthenticationStatus(String)","pos":[0,40]}]},{"pos":[24970,25004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25063,25097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25368,25397],"content":"GetSidFilteringStatus(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSidFilteringStatus(String)","pos":[0,29]}]},{"pos":[25825,25859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25918,25952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26221,26249],"content":"GetTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTrustRelationship(String)","pos":[0,28]}]},{"pos":[26745,26779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26899,26933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27160,27174],"content":"GlobalCatalogs","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalogs","pos":[0,14]}]},{"pos":[27629,27663],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27870,27874],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[28190,28224],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28453,28468],"content":"NamingRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"NamingRoleOwner","pos":[0,15]}]},{"pos":[28912,28946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29299,29335],"content":"RaiseForestFunctionality(ForestMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"RaiseForestFunctionality(ForestMode)","pos":[0,36]}]},{"pos":[29851,29885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30170,30206],"content":"RaiseForestFunctionalityLevel(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RaiseForestFunctionalityLevel(Int32)","pos":[0,36]}]},{"pos":[30640,30674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31017,31048],"content":"RepairTrustRelationship(Forest)","needQuote":true,"needEscape":true,"nodes":[{"content":"RepairTrustRelationship(Forest)","pos":[0,31]}]},{"pos":[31549,31583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31802,31812],"content":"RootDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"RootDomain","pos":[0,10]}]},{"pos":[32221,32255],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32466,32472],"content":"Schema","needQuote":true,"needEscape":true,"nodes":[{"content":"Schema","pos":[0,6]}]},{"pos":[32899,32933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33162,33177],"content":"SchemaRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"SchemaRoleOwner","pos":[0,15]}]},{"pos":[33621,33655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33978,34026],"content":"SetSelectiveAuthenticationStatus(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSelectiveAuthenticationStatus(String,Boolean)","pos":[0,48]}]},{"pos":[34516,34550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34614,34648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34949,34986],"content":"SetSidFilteringStatus(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSidFilteringStatus(String,Boolean)","pos":[0,37]}]},{"pos":[35443,35477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35541,35575],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35784,35789],"content":"Sites","needQuote":true,"needEscape":true,"nodes":[{"content":"Sites","pos":[0,5]}]},{"pos":[36215,36249],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36464,36474],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[36827,36861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37186,37235],"content":"UpdateLocalSideOfTrustRelationship(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateLocalSideOfTrustRelationship(String,String)","pos":[0,49]}]},{"pos":[37741,37775],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37848,37882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38415,38479],"content":"UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)","pos":[0,64]}]},{"pos":[39090,39124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39240,39274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39347,39381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39932,39978],"content":"UpdateTrustRelationship(Forest,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateTrustRelationship(Forest,TrustDirection)","pos":[0,46]}]},{"pos":[40584,40618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40734,40768],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41059,41098],"content":"VerifyOutboundTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyOutboundTrustRelationship(String)","pos":[0,39]}]},{"pos":[41556,41590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42045,42091],"content":"VerifyTrustRelationship(Forest,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyTrustRelationship(Forest,TrustDirection)","pos":[0,46]}]},{"pos":[42689,42723],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42831,42865],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42976,42989],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[43153,43174],"content":"ApplicationPartitions","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationPartitions","pos":[0,21]}]},{"pos":[43460,43490],"content":"ApplicationPartitionCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationPartitionCollection","pos":[0,30]}]},{"pos":[43883,43947],"content":"CreateLocalSideOfTrustRelationship(String,TrustDirection,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateLocalSideOfTrustRelationship(String,TrustDirection,String)","pos":[0,64]}]},{"pos":[44227,44233],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44425,44439],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]},{"pos":[44605,44611],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44931,44977],"content":"CreateTrustRelationship(Forest,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTrustRelationship(Forest,TrustDirection)","pos":[0,46]}]},{"pos":[45289,45295],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[45521,45535],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]},{"pos":[45826,45868],"content":"DeleteLocalSideOfTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteLocalSideOfTrustRelationship(String)","pos":[0,42]}]},{"pos":[46104,46110],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[46374,46405],"content":"DeleteTrustRelationship(Forest)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteTrustRelationship(Forest)","pos":[0,31]}]},{"pos":[46687,46693],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[46926,46935],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[47204,47220],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[47405,47412],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47613,47620],"content":"Domains","needQuote":true,"needEscape":true,"nodes":[{"content":"Domains","pos":[0,7]}]},{"pos":[47864,47880],"content":"DomainCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainCollection","pos":[0,16]}]},{"pos":[48159,48194],"content":"FindAllDiscoverableGlobalCatalogs()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDiscoverableGlobalCatalogs()","pos":[0,35]}]},{"pos":[48501,48524],"content":"GlobalCatalogCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalogCollection","pos":[0,23]}]},{"pos":[48832,48873],"content":"FindAllDiscoverableGlobalCatalogs(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDiscoverableGlobalCatalogs(String)","pos":[0,41]}]},{"pos":[49192,49215],"content":"GlobalCatalogCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalogCollection","pos":[0,23]}]},{"pos":[49399,49405],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[49618,49641],"content":"FindAllGlobalCatalogs()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllGlobalCatalogs()","pos":[0,23]}]},{"pos":[49924,49947],"content":"GlobalCatalogCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalogCollection","pos":[0,23]}]},{"pos":[50243,50272],"content":"FindAllGlobalCatalogs(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllGlobalCatalogs(String)","pos":[0,29]}]},{"pos":[50567,50590],"content":"GlobalCatalogCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalogCollection","pos":[0,23]}]},{"pos":[50774,50780],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[50989,51008],"content":"FindGlobalCatalog()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindGlobalCatalog()","pos":[0,19]}]},{"pos":[51273,51286],"content":"GlobalCatalog","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalog","pos":[0,13]}]},{"pos":[51600,51633],"content":"FindGlobalCatalog(LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindGlobalCatalog(LocatorOptions)","pos":[0,33]}]},{"pos":[51926,51939],"content":"GlobalCatalog","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalog","pos":[0,13]}]},{"pos":[52179,52193],"content":"LocatorOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"LocatorOptions","pos":[0,14]}]},{"pos":[52467,52492],"content":"FindGlobalCatalog(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindGlobalCatalog(String)","pos":[0,25]}]},{"pos":[52769,52782],"content":"GlobalCatalog","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalog","pos":[0,13]}]},{"pos":[52946,52952],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53232,53272],"content":"FindGlobalCatalog(String,LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindGlobalCatalog(String,LocatorOptions)","pos":[0,40]}]},{"pos":[53579,53592],"content":"GlobalCatalog","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalog","pos":[0,13]}]},{"pos":[53756,53762],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53954,53968],"content":"LocatorOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"LocatorOptions","pos":[0,14]}]},{"pos":[54220,54230],"content":"ForestMode","needQuote":true,"needEscape":true,"nodes":[{"content":"ForestMode","pos":[0,10]}]},{"pos":[54474,54484],"content":"ForestMode","needQuote":true,"needEscape":true,"nodes":[{"content":"ForestMode","pos":[0,10]}]},{"pos":[54733,54748],"content":"ForestModeLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"ForestModeLevel","pos":[0,15]}]},{"pos":[54929,54934],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[55148,55174],"content":"GetAllTrustRelationships()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAllTrustRelationships()","pos":[0,26]}]},{"pos":[55478,55516],"content":"TrustRelationshipInformationCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustRelationshipInformationCollection","pos":[0,38]}]},{"pos":[55822,55840],"content":"GetCurrentForest()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentForest()","pos":[0,18]}]},{"pos":[56096,56102],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[56396,56423],"content":"GetForest(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetForest(DirectoryContext)","pos":[0,27]}]},{"pos":[56697,56703],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[56931,56947],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[57240,57280],"content":"GetSelectiveAuthenticationStatus(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSelectiveAuthenticationStatus(String)","pos":[0,40]}]},{"pos":[57513,57520],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57638,57644],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[57872,57901],"content":"GetSidFilteringStatus(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSidFilteringStatus(String)","pos":[0,29]}]},{"pos":[58112,58119],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58237,58243],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[58470,58498],"content":"GetTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTrustRelationship(String)","pos":[0,28]}]},{"pos":[58802,58836],"content":"ForestTrustRelationshipInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"ForestTrustRelationshipInformation","pos":[0,34]}]},{"pos":[59042,59048],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59254,59268],"content":"GlobalCatalogs","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalogs","pos":[0,14]}]},{"pos":[59533,59556],"content":"GlobalCatalogCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalogCollection","pos":[0,23]}]},{"pos":[59820,59824],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[59984,59990],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[60197,60212],"content":"NamingRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"NamingRoleOwner","pos":[0,15]}]},{"pos":[60472,60488],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[60811,60847],"content":"RaiseForestFunctionality(ForestMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"RaiseForestFunctionality(ForestMode)","pos":[0,36]}]},{"pos":[61143,61153],"content":"ForestMode","needQuote":true,"needEscape":true,"nodes":[{"content":"ForestMode","pos":[0,10]}]},{"pos":[61430,61466],"content":"RaiseForestFunctionalityLevel(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RaiseForestFunctionalityLevel(Int32)","pos":[0,36]}]},{"pos":[61689,61694],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61956,61987],"content":"RepairTrustRelationship(Forest)","needQuote":true,"needEscape":true,"nodes":[{"content":"RepairTrustRelationship(Forest)","pos":[0,31]}]},{"pos":[62269,62275],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[62511,62521],"content":"RootDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"RootDomain","pos":[0,10]}]},{"pos":[62761,62767],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[62999,63005],"content":"Schema","needQuote":true,"needEscape":true,"nodes":[{"content":"Schema","pos":[0,6]}]},{"pos":[63252,63273],"content":"ActiveDirectorySchema","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveDirectorySchema","pos":[0,21]}]},{"pos":[63544,63559],"content":"SchemaRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"SchemaRoleOwner","pos":[0,15]}]},{"pos":[63819,63835],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[64143,64191],"content":"SetSelectiveAuthenticationStatus(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSelectiveAuthenticationStatus(String,Boolean)","pos":[0,48]}]},{"pos":[64439,64445],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[64562,64569],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[64814,64851],"content":"SetSidFilteringStatus(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSidFilteringStatus(String,Boolean)","pos":[0,37]}]},{"pos":[65077,65083],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[65200,65207],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[65406,65411],"content":"Sites","needQuote":true,"needEscape":true,"nodes":[{"content":"Sites","pos":[0,5]}]},{"pos":[65657,65679],"content":"ReadOnlySiteCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlySiteCollection","pos":[0,22]}]},{"pos":[65945,65955],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[66127,66133],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[66388,66437],"content":"UpdateLocalSideOfTrustRelationship(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateLocalSideOfTrustRelationship(String,String)","pos":[0,49]}]},{"pos":[66687,66693],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[66809,66815],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67126,67190],"content":"UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)","pos":[0,64]}]},{"pos":[67470,67476],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67668,67682],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]},{"pos":[67848,67854],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[68174,68220],"content":"UpdateTrustRelationship(Forest,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateTrustRelationship(Forest,TrustDirection)","pos":[0,46]}]},{"pos":[68532,68538],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[68764,68778],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]},{"pos":[69066,69105],"content":"VerifyOutboundTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyOutboundTrustRelationship(String)","pos":[0,39]}]},{"pos":[69335,69341],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[69661,69707],"content":"VerifyTrustRelationship(Forest,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyTrustRelationship(Forest,TrustDirection)","pos":[0,46]}]},{"pos":[70019,70025],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[70251,70265],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  id: Forest\n  children:\n  - System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n  - System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  - System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  - System.DirectoryServices.ActiveDirectory.Forest.Dispose\n  - System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Forest.Domains\n  - System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs\n  - System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs\n  - System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog\n  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n  - System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n  - System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships\n  - System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest\n  - System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  - System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n  - System.DirectoryServices.ActiveDirectory.Forest.Name\n  - System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)\n  - System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)\n  - System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  - System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n  - System.DirectoryServices.ActiveDirectory.Forest.Schema\n  - System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Forest.Sites\n  - System.DirectoryServices.ActiveDirectory.Forest.ToString\n  - System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  - System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  langs:\n  - csharp\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n  type: Class\n  syntax:\n    content: 'public class Forest : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n  id: ApplicationPartitions\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: ApplicationPartitions\n  nameWithType: Forest.ApplicationPartitions\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  id: CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void CreateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n    - id: trustPassword\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: CreateTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.CreateTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(Forest,TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: Parameter description to be filled\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)\n  id: DeleteLocalSideOfTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: DeleteLocalSideOfTrustRelationship(String)\n  nameWithType: Forest.DeleteLocalSideOfTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void DeleteLocalSideOfTrustRelationship (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  id: DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: DeleteTrustRelationship(Forest)\n  nameWithType: Forest.DeleteTrustRelationship(Forest)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(Forest)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose\n  id: Dispose\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Forest.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.Forest.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Forest.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: protected void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains\n  id: Domains\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Domains\n  nameWithType: Forest.Domains\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Domains\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainCollection Domains { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs\n  id: FindAllDiscoverableGlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindAllDiscoverableGlobalCatalogs()\n  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)\n  id: FindAllDiscoverableGlobalCatalogs(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindAllDiscoverableGlobalCatalogs(String)\n  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs\n  id: FindAllGlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindAllGlobalCatalogs()\n  nameWithType: Forest.FindAllGlobalCatalogs()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)\n  id: FindAllGlobalCatalogs(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindAllGlobalCatalogs(String)\n  nameWithType: Forest.FindAllGlobalCatalogs(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog\n  id: FindGlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindGlobalCatalog()\n  nameWithType: Forest.FindGlobalCatalog()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindGlobalCatalog(LocatorOptions)\n  nameWithType: Forest.FindGlobalCatalog(LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)\n  id: FindGlobalCatalog(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindGlobalCatalog(String)\n  nameWithType: Forest.FindGlobalCatalog(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: FindGlobalCatalog(String,LocatorOptions)\n  nameWithType: Forest.FindGlobalCatalog(String,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String,LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n  id: ForestMode\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: ForestMode\n  nameWithType: Forest.ForestMode\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ForestMode ForestMode { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ForestMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n  id: ForestModeLevel\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: ForestModeLevel\n  nameWithType: Forest.ForestModeLevel\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public int ForestModeLevel { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships\n  id: GetAllTrustRelationships\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetAllTrustRelationships()\n  nameWithType: Forest.GetAllTrustRelationships()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest\n  id: GetCurrentForest\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetCurrentForest()\n  nameWithType: Forest.GetCurrentForest()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  id: GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetForest(DirectoryContext)\n  nameWithType: Forest.GetForest(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetForest(DirectoryContext)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Forest GetForest (System.DirectoryServices.ActiveDirectory.DirectoryContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)\n  id: GetSelectiveAuthenticationStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetSelectiveAuthenticationStatus(String)\n  nameWithType: Forest.GetSelectiveAuthenticationStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public bool GetSelectiveAuthenticationStatus (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)\n  id: GetSidFilteringStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetSidFilteringStatus(String)\n  nameWithType: Forest.GetSidFilteringStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public bool GetSidFilteringStatus (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)\n  id: GetTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GetTrustRelationship(String)\n  nameWithType: Forest.GetTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n  id: GlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: GlobalCatalogs\n  nameWithType: Forest.GlobalCatalogs\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Name\n  id: Name\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Name\n  nameWithType: Forest.Name\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Name\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n  id: NamingRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: NamingRoleOwner\n  nameWithType: Forest.NamingRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)\n  id: RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: RaiseForestFunctionality(ForestMode)\n  nameWithType: Forest.RaiseForestFunctionality(ForestMode)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(ForestMode)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void RaiseForestFunctionality (System.DirectoryServices.ActiveDirectory.ForestMode forestMode);\n    parameters:\n    - id: forestMode\n      type: System.DirectoryServices.ActiveDirectory.ForestMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)\n  id: RaiseForestFunctionalityLevel(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: RaiseForestFunctionalityLevel(Int32)\n  nameWithType: Forest.RaiseForestFunctionalityLevel(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void RaiseForestFunctionalityLevel (int forestMode);\n    parameters:\n    - id: forestMode\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  id: RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: RepairTrustRelationship(Forest)\n  nameWithType: Forest.RepairTrustRelationship(Forest)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(Forest)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n  id: RootDomain\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: RootDomain\n  nameWithType: Forest.RootDomain\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.Domain RootDomain { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema\n  id: Schema\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Schema\n  nameWithType: Forest.Schema\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Schema\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n  id: SchemaRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: SchemaRoleOwner\n  nameWithType: Forest.SchemaRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  id: SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: SetSelectiveAuthenticationStatus(String,Boolean)\n  nameWithType: Forest.SetSelectiveAuthenticationStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(String,Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void SetSelectiveAuthenticationStatus (string targetForestName, bool enable);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n    - id: enable\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)\n  id: SetSidFilteringStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: SetSidFilteringStatus(String,Boolean)\n  nameWithType: Forest.SetSidFilteringStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(String,Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void SetSidFilteringStatus (string targetForestName, bool enable);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n    - id: enable\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites\n  id: Sites\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: Sites\n  nameWithType: Forest.Sites\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Sites\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString\n  id: ToString\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Forest.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ToString()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  id: UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: UpdateLocalSideOfTrustRelationship(String,String)\n  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void UpdateLocalSideOfTrustRelationship (string targetForestName, string newTrustPassword);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n    - id: newTrustPassword\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  id: UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void UpdateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n    - id: newTrustDirection\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n    - id: newTrustPassword\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: UpdateTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.UpdateTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(Forest,TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: Parameter description to be filled\n    - id: newTrustDirection\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)\n  id: VerifyOutboundTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: VerifyOutboundTrustRelationship(String)\n  nameWithType: Forest.VerifyOutboundTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void VerifyOutboundTrustRelationship (string targetForestName);\n    parameters:\n    - id: targetForestName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  langs:\n  - csharp\n  name: VerifyTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.VerifyTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(Forest,TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);\n    parameters:\n    - id: targetForest\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: Parameter description to be filled\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ApplicationPartitions\n  nameWithType: Forest.ApplicationPartitions\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions\n- uid: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ApplicationPartitionCollection\n  nameWithType: ApplicationPartitionCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: CreateTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.CreateTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(Forest,TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: DeleteLocalSideOfTrustRelationship(String)\n  nameWithType: Forest.DeleteLocalSideOfTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: DeleteTrustRelationship(Forest)\n  nameWithType: Forest.DeleteTrustRelationship(Forest)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(Forest)\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Dispose()\n  nameWithType: Forest.Dispose()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose()\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Forest.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Domains\n  nameWithType: Forest.Domains\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Domains\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainCollection\n  nameWithType: DomainCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllDiscoverableGlobalCatalogs()\n  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs()\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalogCollection\n  nameWithType: GlobalCatalogCollection\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllDiscoverableGlobalCatalogs(String)\n  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(String)\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalogCollection\n  nameWithType: GlobalCatalogCollection\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllGlobalCatalogs()\n  nameWithType: Forest.FindAllGlobalCatalogs()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs()\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalogCollection\n  nameWithType: GlobalCatalogCollection\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindAllGlobalCatalogs(String)\n  nameWithType: Forest.FindAllGlobalCatalogs(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(String)\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalogCollection\n  nameWithType: GlobalCatalogCollection\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindGlobalCatalog()\n  nameWithType: Forest.FindGlobalCatalog()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog()\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalog\n  nameWithType: GlobalCatalog\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindGlobalCatalog(LocatorOptions)\n  nameWithType: Forest.FindGlobalCatalog(LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalog\n  nameWithType: GlobalCatalog\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: LocatorOptions\n  nameWithType: LocatorOptions\n  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindGlobalCatalog(String)\n  nameWithType: Forest.FindGlobalCatalog(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String)\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalog\n  nameWithType: GlobalCatalog\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: FindGlobalCatalog(String,LocatorOptions)\n  nameWithType: Forest.FindGlobalCatalog(String,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String,LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalog\n  nameWithType: GlobalCatalog\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: LocatorOptions\n  nameWithType: LocatorOptions\n  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ForestMode\n  nameWithType: Forest.ForestMode\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestMode\n- uid: System.DirectoryServices.ActiveDirectory.ForestMode\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ForestMode\n  nameWithType: ForestMode\n  fullName: System.DirectoryServices.ActiveDirectory.ForestMode\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ForestModeLevel\n  nameWithType: Forest.ForestModeLevel\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetAllTrustRelationships()\n  nameWithType: Forest.GetAllTrustRelationships()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships()\n- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustRelationshipInformationCollection\n  nameWithType: TrustRelationshipInformationCollection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetCurrentForest()\n  nameWithType: Forest.GetCurrentForest()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest()\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetForest(DirectoryContext)\n  nameWithType: Forest.GetForest(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetForest(DirectoryContext)\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetSelectiveAuthenticationStatus(String)\n  nameWithType: Forest.GetSelectiveAuthenticationStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetSidFilteringStatus(String)\n  nameWithType: Forest.GetSidFilteringStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GetTrustRelationship(String)\n  nameWithType: Forest.GetTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(String)\n- uid: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ForestTrustRelationshipInformation\n  nameWithType: ForestTrustRelationshipInformation\n  fullName: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: GlobalCatalogs\n  nameWithType: Forest.GlobalCatalogs\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalogCollection\n  nameWithType: GlobalCatalogCollection\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Name\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Name\n  nameWithType: Forest.Name\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: NamingRoleOwner\n  nameWithType: Forest.NamingRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RaiseForestFunctionality(ForestMode)\n  nameWithType: Forest.RaiseForestFunctionality(ForestMode)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(ForestMode)\n- uid: System.DirectoryServices.ActiveDirectory.ForestMode\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ForestMode\n  nameWithType: ForestMode\n  fullName: System.DirectoryServices.ActiveDirectory.ForestMode\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RaiseForestFunctionalityLevel(Int32)\n  nameWithType: Forest.RaiseForestFunctionalityLevel(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RepairTrustRelationship(Forest)\n  nameWithType: Forest.RepairTrustRelationship(Forest)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(Forest)\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: RootDomain\n  nameWithType: Forest.RootDomain\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.RootDomain\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Schema\n  nameWithType: Forest.Schema\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Schema\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectorySchema\n  nameWithType: ActiveDirectorySchema\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: SchemaRoleOwner\n  nameWithType: Forest.SchemaRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: SetSelectiveAuthenticationStatus(String,Boolean)\n  nameWithType: Forest.SetSelectiveAuthenticationStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: SetSidFilteringStatus(String,Boolean)\n  nameWithType: Forest.SetSidFilteringStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: Sites\n  nameWithType: Forest.Sites\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.Sites\n- uid: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReadOnlySiteCollection\n  nameWithType: ReadOnlySiteCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: ToString()\n  nameWithType: Forest.ToString()\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship(String,String)\n  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: UpdateTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.UpdateTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(Forest,TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: VerifyOutboundTrustRelationship(String)\n  nameWithType: Forest.VerifyOutboundTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  name: VerifyTrustRelationship(Forest,TrustDirection)\n  nameWithType: Forest.VerifyTrustRelationship(Forest,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(Forest,TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  nameWithType: Forest.\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  nameWithType: Forest.\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  nameWithType: Forest.\n- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  nameWithType: Forest.\n- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Forest\n  isExternal: false\n  nameWithType: Forest.\n"}