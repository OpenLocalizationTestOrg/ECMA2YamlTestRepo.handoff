### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.ProjectPropertyInstance
  id: ProjectPropertyInstance
  children:
  - Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue
  - Microsoft.Build.Execution.ProjectPropertyInstance.IsImmutable
  - Microsoft.Build.Execution.ProjectPropertyInstance.Name
  - Microsoft.Build.Execution.ProjectPropertyInstance.System#IEquatable{Microsoft#Build#Execution#ProjectPropertyInstance}#Equals(Microsoft.Build.Execution.ProjectPropertyInstance)
  - Microsoft.Build.Execution.ProjectPropertyInstance.ToString
  langs:
  - csharp
  name: ProjectPropertyInstance
  nameWithType: ProjectPropertyInstance
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance
  type: Class
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{name}={escapedValue}")]

      public class ProjectPropertyInstance : IEquatable<Microsoft.Build.Execution.ProjectPropertyInstance>
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<Microsoft.Build.Execution.ProjectPropertyInstance>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue
  id: EvaluatedValue
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  langs:
  - csharp
  name: EvaluatedValue
  nameWithType: ProjectPropertyInstance.EvaluatedValue
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public string EvaluatedValue { get; set; }
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.IsImmutable
  id: IsImmutable
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  langs:
  - csharp
  name: IsImmutable
  nameWithType: ProjectPropertyInstance.IsImmutable
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.IsImmutable
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public virtual bool IsImmutable { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.Name
  id: Name
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  langs:
  - csharp
  name: Name
  nameWithType: ProjectPropertyInstance.Name
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.Name
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.System#IEquatable{Microsoft#Build#Execution#ProjectPropertyInstance}#Equals(Microsoft.Build.Execution.ProjectPropertyInstance)
  id: System#IEquatable{Microsoft#Build#Execution#ProjectPropertyInstance}#Equals(Microsoft.Build.Execution.ProjectPropertyInstance)
  isEii: true
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  langs:
  - csharp
  name: System.IEquatable(ProjectPropertyInstance)
  nameWithType: ProjectPropertyInstance.System.IEquatable(ProjectPropertyInstance)
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.System.IEquatable(ProjectPropertyInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: bool IEquatable<ProjectPropertyInstance>.Equals (Microsoft.Build.Execution.ProjectPropertyInstance other);
    parameters:
    - id: other
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.ToString
  id: ToString
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  langs:
  - csharp
  name: ToString()
  nameWithType: ProjectPropertyInstance.ToString()
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.ToString()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  isExternal: false
  name: EvaluatedValue
  nameWithType: ProjectPropertyInstance.EvaluatedValue
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.IsImmutable
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  isExternal: false
  name: IsImmutable
  nameWithType: ProjectPropertyInstance.IsImmutable
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.IsImmutable
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.Name
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  isExternal: false
  name: Name
  nameWithType: ProjectPropertyInstance.Name
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.System#IEquatable{Microsoft#Build#Execution#ProjectPropertyInstance}#Equals(Microsoft.Build.Execution.ProjectPropertyInstance)
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  isExternal: false
  name: System.IEquatable(ProjectPropertyInstance)
  nameWithType: ProjectPropertyInstance.System.IEquatable(ProjectPropertyInstance)
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.System.IEquatable(ProjectPropertyInstance)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Execution.ProjectPropertyInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectPropertyInstance
  nameWithType: ProjectPropertyInstance
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance
- uid: Microsoft.Build.Execution.ProjectPropertyInstance.ToString
  parent: Microsoft.Build.Execution.ProjectPropertyInstance
  isExternal: false
  name: ToString()
  nameWithType: ProjectPropertyInstance.ToString()
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
