{"nodes":[{"pos":[853,867],"content":"CriticalHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"CriticalHandle","pos":[0,14]}]},{"pos":[1821,1843],"content":"CriticalHandle(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"CriticalHandle(IntPtr)","pos":[0,22]}]},{"pos":[2237,2271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2476,2483],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[2947,2956],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[3525,3541],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[3905,3939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4217,4227],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[4693,4699],"content":"handle","needQuote":true,"needEscape":true,"nodes":[{"content":"handle","pos":[0,6]}]},{"pos":[4993,5027],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5238,5246],"content":"IsClosed","needQuote":true,"needEscape":true,"nodes":[{"content":"IsClosed","pos":[0,8]}]},{"pos":[5553,5587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5800,5809],"content":"IsInvalid","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]},{"pos":[6128,6162],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6383,6398],"content":"ReleaseHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[6748,6782],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7025,7042],"content":"SetHandle(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHandle(IntPtr)","pos":[0,17]}]},{"pos":[7397,7431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7662,7682],"content":"SetHandleAsInvalid()","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHandleAsInvalid()","pos":[0,20]}]},{"pos":[8133,8192],"content":"System.Runtime.ConstrainedExecution.CriticalFinalizerObject","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.ConstrainedExecution.CriticalFinalizerObject","pos":[0,59]}]},{"pos":[8351,8373],"content":"CriticalHandle(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"CriticalHandle(IntPtr)","pos":[0,22]}]},{"pos":[8575,8581],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[8774,8781],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[9032,9041],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[9312,9328],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[9519,9526],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9724,9734],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[9990,9996],"content":"handle","needQuote":true,"needEscape":true,"nodes":[{"content":"handle","pos":[0,6]}]},{"pos":[10166,10172],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[10368,10376],"content":"IsClosed","needQuote":true,"needEscape":true,"nodes":[{"content":"IsClosed","pos":[0,8]}]},{"pos":[10551,10558],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10757,10766],"content":"IsInvalid","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]},{"pos":[10943,10950],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11153,11168],"content":"ReleaseHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[11357,11364],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11578,11595],"content":"SetHandle(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHandle(IntPtr)","pos":[0,17]}]},{"pos":[11787,11793],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[11999,12019],"content":"SetHandleAsInvalid()","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHandleAsInvalid()","pos":[0,20]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.CriticalHandle\n  id: CriticalHandle\n  children:\n  - System.Runtime.InteropServices.CriticalHandle.#ctor(System.IntPtr)\n  - System.Runtime.InteropServices.CriticalHandle.Close\n  - System.Runtime.InteropServices.CriticalHandle.Dispose\n  - System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)\n  - System.Runtime.InteropServices.CriticalHandle.Finalize\n  - System.Runtime.InteropServices.CriticalHandle.handle\n  - System.Runtime.InteropServices.CriticalHandle.IsClosed\n  - System.Runtime.InteropServices.CriticalHandle.IsInvalid\n  - System.Runtime.InteropServices.CriticalHandle.ReleaseHandle\n  - System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)\n  - System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid\n  langs:\n  - csharp\n  name: CriticalHandle\n  nameWithType: CriticalHandle\n  fullName: System.Runtime.InteropServices.CriticalHandle\n  type: Class\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public abstract class CriticalHandle : System.Runtime.ConstrainedExecution.CriticalFinalizerObject, IDisposable\n  inheritance:\n  - System.Object\n  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.#ctor(System.IntPtr)\n  id: '#ctor(System.IntPtr)'\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: CriticalHandle(IntPtr)\n  nameWithType: CriticalHandle.CriticalHandle(IntPtr)\n  fullName: System.Runtime.InteropServices.CriticalHandle.CriticalHandle(IntPtr)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: protected CriticalHandle (IntPtr invalidHandleValue);\n    parameters:\n    - id: invalidHandleValue\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.Close\n  id: Close\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: CriticalHandle.Close()\n  fullName: System.Runtime.InteropServices.CriticalHandle.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public void Close ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.Dispose\n  id: Dispose\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: CriticalHandle.Dispose()\n  fullName: System.Runtime.InteropServices.CriticalHandle.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Runtime.InteropServices.CriticalHandle.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: CriticalHandle.Dispose(Boolean)\n  fullName: System.Runtime.InteropServices.CriticalHandle.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Runtime.InteropServices.CriticalHandle.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.Finalize\n  id: Finalize\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: CriticalHandle.Finalize()\n  fullName: System.Runtime.InteropServices.CriticalHandle.Finalize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: ~CriticalHandle ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.handle\n  id: handle\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: handle\n  nameWithType: CriticalHandle.handle\n  fullName: System.Runtime.InteropServices.CriticalHandle.handle\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: protected IntPtr handle;\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.IsClosed\n  id: IsClosed\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: CriticalHandle.IsClosed\n  fullName: System.Runtime.InteropServices.CriticalHandle.IsClosed\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public bool IsClosed { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.IsInvalid\n  id: IsInvalid\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: IsInvalid\n  nameWithType: CriticalHandle.IsInvalid\n  fullName: System.Runtime.InteropServices.CriticalHandle.IsInvalid\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public abstract bool IsInvalid { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.ReleaseHandle\n  id: ReleaseHandle\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: ReleaseHandle()\n  nameWithType: CriticalHandle.ReleaseHandle()\n  fullName: System.Runtime.InteropServices.CriticalHandle.ReleaseHandle()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: protected abstract bool ReleaseHandle ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)\n  id: SetHandle(System.IntPtr)\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: SetHandle(IntPtr)\n  nameWithType: CriticalHandle.SetHandle(IntPtr)\n  fullName: System.Runtime.InteropServices.CriticalHandle.SetHandle(IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: protected void SetHandle (IntPtr handle);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid\n  id: SetHandleAsInvalid\n  parent: System.Runtime.InteropServices.CriticalHandle\n  langs:\n  - csharp\n  name: SetHandleAsInvalid()\n  nameWithType: CriticalHandle.SetHandleAsInvalid()\n  fullName: System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public void SetHandleAsInvalid ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  isExternal: false\n  name: System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n- uid: System.Runtime.InteropServices.CriticalHandle.#ctor(System.IntPtr)\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: CriticalHandle(IntPtr)\n  nameWithType: CriticalHandle.CriticalHandle(IntPtr)\n  fullName: System.Runtime.InteropServices.CriticalHandle.CriticalHandle(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.CriticalHandle.Close\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: Close()\n  nameWithType: CriticalHandle.Close()\n  fullName: System.Runtime.InteropServices.CriticalHandle.Close()\n- uid: System.Runtime.InteropServices.CriticalHandle.Dispose\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: Dispose()\n  nameWithType: CriticalHandle.Dispose()\n  fullName: System.Runtime.InteropServices.CriticalHandle.Dispose()\n- uid: System.Runtime.InteropServices.CriticalHandle.Dispose(System.Boolean)\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CriticalHandle.Dispose(Boolean)\n  fullName: System.Runtime.InteropServices.CriticalHandle.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.CriticalHandle.Finalize\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: Finalize()\n  nameWithType: CriticalHandle.Finalize()\n  fullName: System.Runtime.InteropServices.CriticalHandle.Finalize()\n- uid: System.Runtime.InteropServices.CriticalHandle.handle\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: handle\n  nameWithType: CriticalHandle.handle\n  fullName: System.Runtime.InteropServices.CriticalHandle.handle\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.CriticalHandle.IsClosed\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: IsClosed\n  nameWithType: CriticalHandle.IsClosed\n  fullName: System.Runtime.InteropServices.CriticalHandle.IsClosed\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.CriticalHandle.IsInvalid\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: IsInvalid\n  nameWithType: CriticalHandle.IsInvalid\n  fullName: System.Runtime.InteropServices.CriticalHandle.IsInvalid\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.CriticalHandle.ReleaseHandle\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: ReleaseHandle()\n  nameWithType: CriticalHandle.ReleaseHandle()\n  fullName: System.Runtime.InteropServices.CriticalHandle.ReleaseHandle()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.CriticalHandle.SetHandle(System.IntPtr)\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: SetHandle(IntPtr)\n  nameWithType: CriticalHandle.SetHandle(IntPtr)\n  fullName: System.Runtime.InteropServices.CriticalHandle.SetHandle(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  name: SetHandleAsInvalid()\n  nameWithType: CriticalHandle.SetHandleAsInvalid()\n  fullName: System.Runtime.InteropServices.CriticalHandle.SetHandleAsInvalid()\n- uid: System.Runtime.InteropServices.CriticalHandle.Dispose*\n  parent: System.Runtime.InteropServices.CriticalHandle\n  isExternal: false\n  nameWithType: CriticalHandle.\n"}