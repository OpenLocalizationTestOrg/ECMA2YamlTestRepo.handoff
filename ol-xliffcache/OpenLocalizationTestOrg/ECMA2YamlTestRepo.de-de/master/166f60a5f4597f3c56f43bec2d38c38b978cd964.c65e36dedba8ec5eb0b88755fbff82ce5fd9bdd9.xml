{"nodes":[{"pos":[665,674],"content":"CustomAce","needQuote":true,"needEscape":true,"nodes":[{"content":"CustomAce","pos":[0,9]}]},{"pos":[2456,2490],"content":"CustomAce(AceType,AceFlags,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CustomAce(AceType,AceFlags,Byte[])","pos":[0,34]}]},{"pos":[2976,3010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3097,3131],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3194,3228],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3435,3447],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[3760,3794],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4059,4086],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[4479,4513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4575,4609],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4810,4821],"content":"GetOpaque()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOpaque()","pos":[0,11]}]},{"pos":[5136,5170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5383,5398],"content":"MaxOpaqueLength","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxOpaqueLength","pos":[0,15]}]},{"pos":[5716,5750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5957,5969],"content":"OpaqueLength","needQuote":true,"needEscape":true,"nodes":[{"content":"OpaqueLength","pos":[0,12]}]},{"pos":[6273,6307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6538,6555],"content":"SetOpaque(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetOpaque(Byte[])","pos":[0,17]}]},{"pos":[6895,6929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7067,7107],"content":"System.Security.AccessControl.GenericAce","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.GenericAce","pos":[0,40]}]},{"pos":[7331,7365],"content":"CustomAce(AceType,AceFlags,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CustomAce(AceType,AceFlags,Byte[])","pos":[0,34]}]},{"pos":[7627,7634],"content":"AceType","needQuote":true,"needEscape":true,"nodes":[{"content":"AceType","pos":[0,7]}]},{"pos":[7823,7831],"content":"AceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AceFlags","pos":[0,8]}]},{"pos":[7972,7976],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8162,8174],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[8344,8349],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8564,8591],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[8790,8794],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8907,8912],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9095,9106],"content":"GetOpaque()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOpaque()","pos":[0,11]}]},{"pos":[9273,9277],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9466,9481],"content":"MaxOpaqueLength","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxOpaqueLength","pos":[0,15]}]},{"pos":[9657,9662],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9848,9860],"content":"OpaqueLength","needQuote":true,"needEscape":true,"nodes":[{"content":"OpaqueLength","pos":[0,12]}]},{"pos":[10030,10035],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10233,10250],"content":"SetOpaque(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetOpaque(Byte[])","pos":[0,17]}]},{"pos":[10429,10433],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CustomAce\n  id: CustomAce\n  children:\n  - System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])\n  - System.Security.AccessControl.CustomAce.BinaryLength\n  - System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.CustomAce.GetOpaque\n  - System.Security.AccessControl.CustomAce.MaxOpaqueLength\n  - System.Security.AccessControl.CustomAce.OpaqueLength\n  - System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])\n  langs:\n  - csharp\n  name: CustomAce\n  nameWithType: CustomAce\n  fullName: System.Security.AccessControl.CustomAce\n  type: Class\n  syntax:\n    content: 'public sealed class CustomAce : System.Security.AccessControl.GenericAce'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAce\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])\n  id: '#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])'\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: CustomAce(AceType,AceFlags,Byte[])\n  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])\n  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public CustomAce (System.Security.AccessControl.AceType type, System.Security.AccessControl.AceFlags flags, byte[] opaque);\n    parameters:\n    - id: type\n      type: System.Security.AccessControl.AceType\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AceFlags\n      description: Parameter description to be filled\n    - id: opaque\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CustomAce.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: CustomAce.BinaryLength\n  fullName: System.Security.AccessControl.CustomAce.BinaryLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CustomAce.GetOpaque\n  id: GetOpaque\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: GetOpaque()\n  nameWithType: CustomAce.GetOpaque()\n  fullName: System.Security.AccessControl.CustomAce.GetOpaque()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public byte[] GetOpaque ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength\n  id: MaxOpaqueLength\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: MaxOpaqueLength\n  nameWithType: CustomAce.MaxOpaqueLength\n  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public static readonly int MaxOpaqueLength;\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CustomAce.OpaqueLength\n  id: OpaqueLength\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: OpaqueLength\n  nameWithType: CustomAce.OpaqueLength\n  fullName: System.Security.AccessControl.CustomAce.OpaqueLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public int OpaqueLength { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])\n  id: SetOpaque(System.Byte[])\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: SetOpaque(Byte[])\n  nameWithType: CustomAce.SetOpaque(Byte[])\n  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void SetOpaque (byte[] opaque);\n    parameters:\n    - id: opaque\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: System.Security.AccessControl.GenericAce\n- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: CustomAce(AceType,AceFlags,Byte[])\n  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])\n  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])\n- uid: System.Security.AccessControl.AceType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceType\n  nameWithType: AceType\n  fullName: System.Security.AccessControl.AceType\n- uid: System.Security.AccessControl.AceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceFlags\n  nameWithType: AceFlags\n  fullName: System.Security.AccessControl.AceFlags\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.AccessControl.CustomAce.BinaryLength\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: CustomAce.BinaryLength\n  fullName: System.Security.AccessControl.CustomAce.BinaryLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CustomAce.GetOpaque\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: GetOpaque()\n  nameWithType: CustomAce.GetOpaque()\n  fullName: System.Security.AccessControl.CustomAce.GetOpaque()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: MaxOpaqueLength\n  nameWithType: CustomAce.MaxOpaqueLength\n  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CustomAce.OpaqueLength\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: OpaqueLength\n  nameWithType: CustomAce.OpaqueLength\n  fullName: System.Security.AccessControl.CustomAce.OpaqueLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: SetOpaque(Byte[])\n  nameWithType: CustomAce.SetOpaque(Byte[])\n  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n"}