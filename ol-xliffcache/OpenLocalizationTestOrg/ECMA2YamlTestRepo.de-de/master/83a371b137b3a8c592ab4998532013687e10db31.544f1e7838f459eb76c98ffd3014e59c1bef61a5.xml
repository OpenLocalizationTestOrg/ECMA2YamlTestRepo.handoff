{"nodes":[{"pos":[889,901],"content":"AuditRule<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"AuditRule<T>"},{"pos":[1161,1195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2402,2443],"content":"AuditRule(IdentityReference,T,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(IdentityReference,T,AuditFlags)","pos":[0,41]}]},{"pos":[2966,3000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3051,3085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3174,3208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3525,3555],"content":"AuditRule(String,T,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(String,T,AuditFlags)","pos":[0,30]}]},{"pos":[3989,4023],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4074,4108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4197,4231],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4796,4871],"content":"AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)","pos":[0,75]}]},{"pos":[5592,5626],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5677,5711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5817,5851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5957,5991],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6080,6114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6619,6683],"content":"AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)","pos":[0,64]}]},{"pos":[7315,7349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7400,7434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7540,7574],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7680,7714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7803,7837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8036,8042],"content":"Rights","needQuote":true,"needEscape":true,"nodes":[{"content":"Rights","pos":[0,6]}]},{"pos":[8321,8355],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8492,8531],"content":"System.Security.AccessControl.AuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.AuditRule","pos":[0,39]}]},{"pos":[8756,8797],"content":"AuditRule(IdentityReference,T,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(IdentityReference,T,AuditFlags)","pos":[0,41]}]},{"pos":[9081,9098],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[9238,9239],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[9388,9398],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[9673,9703],"content":"AuditRule(String,T,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(String,T,AuditFlags)","pos":[0,30]}]},{"pos":[9916,9922],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10021,10022],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[10171,10181],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[10580,10655],"content":"AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)","pos":[0,75]}]},{"pos":[11007,11024],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[11164,11165],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[11320,11336],"content":"InheritanceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[11551,11567],"content":"PropagationFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[11776,11786],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[12155,12219],"content":"AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)","pos":[0,64]}]},{"pos":[12500,12506],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12605,12606],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[12761,12777],"content":"InheritanceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[12992,13008],"content":"PropagationFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[13217,13227],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[13444,13450],"content":"Rights","needQuote":true,"needEscape":true,"nodes":[{"content":"Rights","pos":[0,6]}]},{"pos":[13598,13599],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.AuditRule`1\n  id: AuditRule`1\n  children:\n  - System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.AuditRule`1.Rights\n  langs:\n  - csharp\n  name: AuditRule<T>\n  nameWithType: AuditRule<T>\n  fullName: System.Security.AccessControl.AuditRule<T>\n  type: Class\n  syntax:\n    content: 'public class AuditRule<T> : System.Security.AccessControl.AuditRule where T : struct'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AuditRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AuditRule.AuditFlags\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: AuditRule(IdentityReference,T,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(IdentityReference,T,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(IdentityReference,T,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AuditRule (System.Security.Principal.IdentityReference identity, T rights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: rights\n      type: T\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: AuditRule(String,T,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(String,T,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(String,T,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AuditRule (string identity, T rights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.String\n      description: Parameter description to be filled\n    - id: rights\n      type: T\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AuditRule (System.Security.Principal.IdentityReference identity, T rights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: rights\n      type: T\n      description: Parameter description to be filled\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Parameter description to be filled\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AuditRule (string identity, T rights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.String\n      description: Parameter description to be filled\n    - id: rights\n      type: T\n      description: Parameter description to be filled\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Parameter description to be filled\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.AuditRule`1.Rights\n  id: Rights\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: Rights\n  nameWithType: AuditRule<T>.Rights\n  fullName: System.Security.AccessControl.AuditRule<T>.Rights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public T Rights { get; }\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule(IdentityReference,T,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(IdentityReference,T,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(IdentityReference,T,AuditFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule(String,T,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(String,T,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(String,T,AuditFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.AuditRule`1.Rights\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: Rights\n  nameWithType: AuditRule<T>.Rights\n  fullName: System.Security.AccessControl.AuditRule<T>.Rights\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n"}