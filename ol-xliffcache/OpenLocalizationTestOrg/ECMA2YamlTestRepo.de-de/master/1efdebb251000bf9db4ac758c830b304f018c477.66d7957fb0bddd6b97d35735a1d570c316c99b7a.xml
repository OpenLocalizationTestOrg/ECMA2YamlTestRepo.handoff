{"nodes":[{"pos":[648,671],"content":"DSASignatureDeformatter","needQuote":true,"needEscape":true,"nodes":[{"content":"DSASignatureDeformatter","pos":[0,23]}]},{"pos":[1745,1770],"content":"DSASignatureDeformatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"DSASignatureDeformatter()","pos":[0,25]}]},{"pos":[2414,2458],"content":"DSASignatureDeformatter(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"DSASignatureDeformatter(AsymmetricAlgorithm)","pos":[0,44]}]},{"pos":[2963,2997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3268,3292],"content":"SetHashAlgorithm(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHashAlgorithm(String)","pos":[0,24]}]},{"pos":[3690,3724],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4045,4072],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[4535,4569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4866,4896],"content":"VerifySignature(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(Byte[],Byte[])","pos":[0,30]}]},{"pos":[5326,5360],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5429,5463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5522,5556],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5713,5772],"content":"System.Security.Cryptography.AsymmetricSignatureDeformatter","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.AsymmetricSignatureDeformatter","pos":[0,59]}]},{"pos":[5930,5955],"content":"DSASignatureDeformatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"DSASignatureDeformatter()","pos":[0,25]}]},{"pos":[6320,6364],"content":"DSASignatureDeformatter(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"DSASignatureDeformatter(AsymmetricAlgorithm)","pos":[0,44]}]},{"pos":[6683,6702],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]},{"pos":[6983,7007],"content":"SetHashAlgorithm(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHashAlgorithm(String)","pos":[0,24]}]},{"pos":[7229,7235],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7493,7520],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[7805,7824],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]},{"pos":[8118,8148],"content":"VerifySignature(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(Byte[],Byte[])","pos":[0,30]}]},{"pos":[8383,8390],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8506,8510],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8622,8626],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DSASignatureDeformatter\n  id: DSASignatureDeformatter\n  children:\n  - System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  - System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  - System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  langs:\n  - csharp\n  name: DSASignatureDeformatter\n  nameWithType: DSASignatureDeformatter\n  fullName: System.Security.Cryptography.DSASignatureDeformatter\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class DSASignatureDeformatter : System.Security.Cryptography.AsymmetricSignatureDeformatter\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: DSASignatureDeformatter()\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public DSASignatureDeformatter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: DSASignatureDeformatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public DSASignatureDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  id: SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void SetHashAlgorithm (string strName);\n    parameters:\n    - id: strName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  id: VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: VerifySignature(Byte[],Byte[])\n  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rgbSignature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  isExternal: false\n  name: System.Security.Cryptography.AsymmetricSignatureDeformatter\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: DSASignatureDeformatter()\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter()\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: DSASignatureDeformatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: VerifySignature(Byte[],Byte[])\n  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(Byte[],Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n"}