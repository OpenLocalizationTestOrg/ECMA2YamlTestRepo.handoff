{"nodes":[{"pos":[658,666],"content":"Keyboard","needQuote":true,"needEscape":true,"nodes":[{"content":"Keyboard","pos":[0,8]}]},{"pos":[1338,1348],"content":"Keyboard()","needQuote":true,"needEscape":true,"nodes":[{"content":"Keyboard()","pos":[0,10]}]},{"pos":[1812,1822],"content":"AltKeyDown","needQuote":true,"needEscape":true,"nodes":[{"content":"AltKeyDown","pos":[0,10]}]},{"pos":[2134,2168],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2365,2373],"content":"CapsLock","needQuote":true,"needEscape":true,"nodes":[{"content":"CapsLock","pos":[0,8]}]},{"pos":[2679,2713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2916,2927],"content":"CtrlKeyDown","needQuote":true,"needEscape":true,"nodes":[{"content":"CtrlKeyDown","pos":[0,11]}]},{"pos":[3242,3276],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3471,3478],"content":"NumLock","needQuote":true,"needEscape":true,"nodes":[{"content":"NumLock","pos":[0,7]}]},{"pos":[3781,3815],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4016,4026],"content":"ScrollLock","needQuote":true,"needEscape":true,"nodes":[{"content":"ScrollLock","pos":[0,10]}]},{"pos":[4338,4372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4599,4615],"content":"SendKeys(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SendKeys(String)","pos":[0,16]}]},{"pos":[4959,4993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5311,5335],"content":"SendKeys(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SendKeys(String,Boolean)","pos":[0,24]}]},{"pos":[5706,5740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5802,5836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6102,6114],"content":"ShiftKeyDown","needQuote":true,"needEscape":true,"nodes":[{"content":"ShiftKeyDown","pos":[0,12]}]},{"pos":[6432,6466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6577,6590],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[6720,6730],"content":"Keyboard()","needQuote":true,"needEscape":true,"nodes":[{"content":"Keyboard()","pos":[0,10]}]},{"pos":[6963,6973],"content":"AltKeyDown","needQuote":true,"needEscape":true,"nodes":[{"content":"AltKeyDown","pos":[0,10]}]},{"pos":[7139,7146],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7330,7338],"content":"CapsLock","needQuote":true,"needEscape":true,"nodes":[{"content":"CapsLock","pos":[0,8]}]},{"pos":[7500,7507],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7694,7705],"content":"CtrlKeyDown","needQuote":true,"needEscape":true,"nodes":[{"content":"CtrlKeyDown","pos":[0,11]}]},{"pos":[7873,7880],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8063,8070],"content":"NumLock","needQuote":true,"needEscape":true,"nodes":[{"content":"NumLock","pos":[0,7]}]},{"pos":[8230,8237],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8423,8433],"content":"ScrollLock","needQuote":true,"needEscape":true,"nodes":[{"content":"ScrollLock","pos":[0,10]}]},{"pos":[8599,8606],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8805,8821],"content":"SendKeys(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SendKeys(String)","pos":[0,16]}]},{"pos":[8998,9004],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9216,9240],"content":"SendKeys(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SendKeys(String,Boolean)","pos":[0,24]}]},{"pos":[9433,9439],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9556,9563],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9751,9763],"content":"ShiftKeyDown","needQuote":true,"needEscape":true,"nodes":[{"content":"ShiftKeyDown","pos":[0,12]}]},{"pos":[9933,9940],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Devices.Keyboard\n  id: Keyboard\n  children:\n  - Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  - Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  - Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  - Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  - Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  - Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  - Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  langs:\n  - csharp\n  name: Keyboard\n  nameWithType: Keyboard\n  fullName: Microsoft.VisualBasic.Devices.Keyboard\n  type: Class\n  syntax:\n    content: public class Keyboard\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: Keyboard()\n  nameWithType: Keyboard.Keyboard()\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public Keyboard ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  id: AltKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: AltKeyDown\n  nameWithType: Keyboard.AltKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public bool AltKeyDown { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  id: CapsLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: CapsLock\n  nameWithType: Keyboard.CapsLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public bool CapsLock { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  id: CtrlKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: CtrlKeyDown\n  nameWithType: Keyboard.CtrlKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public bool CtrlKeyDown { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  id: NumLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: NumLock\n  nameWithType: Keyboard.NumLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public bool NumLock { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  id: ScrollLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: ScrollLock\n  nameWithType: Keyboard.ScrollLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public bool ScrollLock { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  id: SendKeys(System.String)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: SendKeys(String)\n  nameWithType: Keyboard.SendKeys(String)\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public void SendKeys (string keys);\n    parameters:\n    - id: keys\n      type: System.String\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  id: SendKeys(System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: SendKeys(String,Boolean)\n  nameWithType: Keyboard.SendKeys(String,Boolean)\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public void SendKeys (string keys, bool wait);\n    parameters:\n    - id: keys\n      type: System.String\n      description: Parameter description to be filled\n    - id: wait\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  id: ShiftKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: ShiftKeyDown\n  nameWithType: Keyboard.ShiftKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public bool ShiftKeyDown { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: Keyboard()\n  nameWithType: Keyboard.Keyboard()\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()\n- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: AltKeyDown\n  nameWithType: Keyboard.AltKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CapsLock\n  nameWithType: Keyboard.CapsLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CtrlKeyDown\n  nameWithType: Keyboard.CtrlKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: NumLock\n  nameWithType: Keyboard.NumLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ScrollLock\n  nameWithType: Keyboard.ScrollLock\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: SendKeys(String)\n  nameWithType: Keyboard.SendKeys(String)\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: SendKeys(String,Boolean)\n  nameWithType: Keyboard.SendKeys(String,Boolean)\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ShiftKeyDown\n  nameWithType: Keyboard.ShiftKeyDown\n  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  nameWithType: Keyboard.\n"}