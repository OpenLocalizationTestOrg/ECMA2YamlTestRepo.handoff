{"nodes":[{"pos":[1793,1805],"content":"StreamReader","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader","pos":[0,12]}]},{"pos":[2933,2953],"content":"StreamReader(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream)","pos":[0,20]}]},{"pos":[3281,3315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3506,3526],"content":"StreamReader(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String)","pos":[0,20]}]},{"pos":[3837,3871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4098,4126],"content":"StreamReader(Stream,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Boolean)","pos":[0,28]}]},{"pos":[4509,4543],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4633,4667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4906,4935],"content":"StreamReader(Stream,Encoding)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Encoding)","pos":[0,29]}]},{"pos":[5312,5346],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5418,5452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5673,5701],"content":"StreamReader(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String,Boolean)","pos":[0,28]}]},{"pos":[6067,6101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6191,6225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6458,6487],"content":"StreamReader(String,Encoding)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String,Encoding)","pos":[0,29]}]},{"pos":[6847,6881],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6953,6987],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7256,7293],"content":"StreamReader(Stream,Encoding,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Encoding,Boolean)","pos":[0,37]}]},{"pos":[7725,7759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7831,7865],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7955,7989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8252,8289],"content":"StreamReader(String,Encoding,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String,Encoding,Boolean)","pos":[0,37]}]},{"pos":[8704,8738],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8810,8844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8934,8968],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9263,9306],"content":"StreamReader(Stream,Encoding,Boolean,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Encoding,Boolean,Int32)","pos":[0,43]}]},{"pos":[9766,9800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9872,9906],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9996,10030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10096,10130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10419,10462],"content":"StreamReader(String,Encoding,Boolean,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String,Encoding,Boolean,Int32)","pos":[0,43]}]},{"pos":[10905,10939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11011,11045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11135,11169],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11235,11269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11594,11645],"content":"StreamReader(Stream,Encoding,Boolean,Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Encoding,Boolean,Int32,Boolean)","pos":[0,51]}]},{"pos":[12137,12171],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12243,12277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12367,12401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12467,12501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12568,12602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12771,12781],"content":"BaseStream","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseStream","pos":[0,10]}]},{"pos":[13070,13104],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13263,13270],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[13667,13682],"content":"CurrentEncoding","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentEncoding","pos":[0,15]}]},{"pos":[13994,14028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14215,14236],"content":"DiscardBufferedData()","needQuote":true,"needEscape":true,"nodes":[{"content":"DiscardBufferedData()","pos":[0,21]}]},{"pos":[14682,14698],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[15017,15051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15222,15233],"content":"EndOfStream","needQuote":true,"needEscape":true,"nodes":[{"content":"EndOfStream","pos":[0,11]}]},{"pos":[15503,15537],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15978,16012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16169,16175],"content":"Peek()","needQuote":true,"needEscape":true,"nodes":[{"content":"Peek()","pos":[0,6]}]},{"pos":[16446,16480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16637,16643],"content":"Read()","needQuote":true,"needEscape":true,"nodes":[{"content":"Read()","pos":[0,6]}]},{"pos":[16914,16948],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17228,17252],"content":"Read(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Char[],Int32,Int32)","pos":[0,24]}]},{"pos":[17597,17631],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17692,17726],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17787,17821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17878,17912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18202,18231],"content":"ReadAsync(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadAsync(Char[],Int32,Int32)","pos":[0,29]}]},{"pos":[18620,18654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18715,18749],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18810,18844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18930,18964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19213,19242],"content":"ReadBlock(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadBlock(Char[],Int32,Int32)","pos":[0,29]}]},{"pos":[19602,19636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19697,19731],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19792,19826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19883,19917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20176,20210],"content":"ReadBlockAsync(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadBlockAsync(Char[],Int32,Int32)","pos":[0,34]}]},{"pos":[20614,20648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20709,20743],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20804,20838],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20924,20958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21123,21133],"content":"ReadLine()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadLine()","pos":[0,10]}]},{"pos":[21420,21454],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21629,21644],"content":"ReadLineAsync()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadLineAsync()","pos":[0,15]}]},{"pos":[22004,22038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22205,22216],"content":"ReadToEnd()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadToEnd()","pos":[0,11]}]},{"pos":[22506,22540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22717,22733],"content":"ReadToEndAsync()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadToEndAsync()","pos":[0,16]}]},{"pos":[23096,23130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23248,23268],"content":"System.IO.TextReader","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IO.TextReader","pos":[0,20]}]},{"pos":[23384,23404],"content":"StreamReader(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream)","pos":[0,20]}]},{"pos":[23583,23589],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[23754,23774],"content":"StreamReader(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String)","pos":[0,20]}]},{"pos":[23947,23953],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24133,24161],"content":"StreamReader(Stream,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Boolean)","pos":[0,28]}]},{"pos":[24356,24362],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[24482,24489],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24677,24706],"content":"StreamReader(Stream,Encoding)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Encoding)","pos":[0,29]}]},{"pos":[24903,24909],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[25040,25048],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[25234,25262],"content":"StreamReader(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String,Boolean)","pos":[0,28]}]},{"pos":[25451,25457],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25574,25581],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25766,25795],"content":"StreamReader(String,Encoding)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String,Encoding)","pos":[0,29]}]},{"pos":[25986,25992],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26120,26128],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[26338,26375],"content":"StreamReader(Stream,Encoding,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Encoding,Boolean)","pos":[0,37]}]},{"pos":[26588,26594],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[26725,26733],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[26859,26866],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27066,27103],"content":"StreamReader(String,Encoding,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String,Encoding,Boolean)","pos":[0,37]}]},{"pos":[27310,27316],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27444,27452],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[27578,27585],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27801,27844],"content":"StreamReader(Stream,Encoding,Boolean,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Encoding,Boolean,Int32)","pos":[0,43]}]},{"pos":[28069,28075],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[28206,28214],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[28340,28347],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28464,28469],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28678,28721],"content":"StreamReader(String,Encoding,Boolean,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(String,Encoding,Boolean,Int32)","pos":[0,43]}]},{"pos":[28940,28946],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29074,29082],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[29208,29215],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29332,29337],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29564,29615],"content":"StreamReader(Stream,Encoding,Boolean,Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader(Stream,Encoding,Boolean,Int32,Boolean)","pos":[0,51]}]},{"pos":[29856,29862],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[29993,30001],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[30127,30134],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30251,30256],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30371,30378],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30532,30542],"content":"BaseStream","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseStream","pos":[0,10]}]},{"pos":[30701,30707],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[30857,30864],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[31052,31067],"content":"CurrentEncoding","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentEncoding","pos":[0,15]}]},{"pos":[31242,31250],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[31420,31441],"content":"DiscardBufferedData()","needQuote":true,"needEscape":true,"nodes":[{"content":"DiscardBufferedData()","pos":[0,21]}]},{"pos":[31665,31681],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[31847,31854],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32009,32020],"content":"EndOfStream","needQuote":true,"needEscape":true,"nodes":[{"content":"EndOfStream","pos":[0,11]}]},{"pos":[32176,32183],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32488,32500],"content":"StreamReader","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamReader","pos":[0,12]}]},{"pos":[32661,32667],"content":"Peek()","needQuote":true,"needEscape":true,"nodes":[{"content":"Peek()","pos":[0,6]}]},{"pos":[32811,32816],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32960,32966],"content":"Read()","needQuote":true,"needEscape":true,"nodes":[{"content":"Read()","pos":[0,6]}]},{"pos":[33110,33115],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33300,33324],"content":"Read(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Char[],Int32,Int32)","pos":[0,24]}]},{"pos":[33504,33509],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33621,33625],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[33738,33743],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33856,33861],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34051,34080],"content":"ReadAsync(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadAsync(Char[],Int32,Int32)","pos":[0,29]}]},{"pos":[34315,34326],"content":"Task<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Int32>"},{"pos":[34473,34477],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[34590,34595],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34708,34713],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34903,34932],"content":"ReadBlock(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadBlock(Char[],Int32,Int32)","pos":[0,29]}]},{"pos":[35122,35127],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35239,35243],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[35356,35361],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35474,35479],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35674,35708],"content":"ReadBlockAsync(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadBlockAsync(Char[],Int32,Int32)","pos":[0,34]}]},{"pos":[35953,35964],"content":"Task<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Int32>"},{"pos":[36111,36115],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[36228,36233],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36346,36351],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36499,36509],"content":"ReadLine()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadLine()","pos":[0,10]}]},{"pos":[36662,36668],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36823,36838],"content":"ReadLineAsync()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadLineAsync()","pos":[0,15]}]},{"pos":[37046,37058],"content":"Task<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<String>"},{"pos":[37244,37255],"content":"ReadToEnd()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadToEnd()","pos":[0,11]}]},{"pos":[37410,37416],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37572,37588],"content":"ReadToEndAsync()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadToEndAsync()","pos":[0,16]}]},{"pos":[37798,37810],"content":"Task<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<String>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.StreamReader\n  id: StreamReader\n  children:\n  - System.IO.StreamReader.#ctor(System.IO.Stream)\n  - System.IO.StreamReader.#ctor(System.String)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  - System.IO.StreamReader.#ctor(System.String,System.Boolean)\n  - System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  - System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)\n  - System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)\n  - System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)\n  - System.IO.StreamReader.BaseStream\n  - System.IO.StreamReader.Close\n  - System.IO.StreamReader.CurrentEncoding\n  - System.IO.StreamReader.DiscardBufferedData\n  - System.IO.StreamReader.Dispose(System.Boolean)\n  - System.IO.StreamReader.EndOfStream\n  - System.IO.StreamReader.Null\n  - System.IO.StreamReader.Peek\n  - System.IO.StreamReader.Read\n  - System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)\n  - System.IO.StreamReader.ReadLine\n  - System.IO.StreamReader.ReadLineAsync\n  - System.IO.StreamReader.ReadToEnd\n  - System.IO.StreamReader.ReadToEndAsync\n  langs:\n  - csharp\n  name: StreamReader\n  nameWithType: StreamReader\n  fullName: System.IO.StreamReader\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class StreamReader : System.IO.TextReader\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.IO.TextReader\n  implements: []\n  inheritedMembers:\n  - System.IO.TextReader.Dispose\n  - System.IO.TextReader.Synchronized(System.IO.TextReader)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream)\n  nameWithType: StreamReader.StreamReader(Stream)\n  fullName: System.IO.StreamReader.StreamReader(Stream)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String)\n  nameWithType: StreamReader.StreamReader(String)\n  fullName: System.IO.StreamReader.StreamReader(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream,Boolean)\n  nameWithType: StreamReader.StreamReader(Stream,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, bool detectEncodingFromByteOrderMarks);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream,Encoding)\n  nameWithType: StreamReader.StreamReader(Stream,Encoding)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Encoding)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: encoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String,Boolean)\n  nameWithType: StreamReader.StreamReader(String,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(String,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (string path, bool detectEncodingFromByteOrderMarks);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)\n  id: '#ctor(System.String,System.Text.Encoding)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String,Encoding)\n  nameWithType: StreamReader.StreamReader(String,Encoding)\n  fullName: System.IO.StreamReader.StreamReader(String,Encoding)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (string path, System.Text.Encoding encoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: encoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream,Encoding,Boolean)\n  nameWithType: StreamReader.StreamReader(Stream,Encoding,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Encoding,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: encoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  id: '#ctor(System.String,System.Text.Encoding,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String,Encoding,Boolean)\n  nameWithType: StreamReader.StreamReader(String,Encoding,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(String,Encoding,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (string path, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: encoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream,Encoding,Boolean,Int32)\n  nameWithType: StreamReader.StreamReader(Stream,Encoding,Boolean,Int32)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Encoding,Boolean,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: encoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bufferSize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)\n  id: '#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(String,Encoding,Boolean,Int32)\n  nameWithType: StreamReader.StreamReader(String,Encoding,Boolean,Int32)\n  fullName: System.IO.StreamReader.StreamReader(String,Encoding,Boolean,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (string path, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: encoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bufferSize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)'\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: StreamReader(Stream,Encoding,Boolean,Int32,Boolean)\n  nameWithType: StreamReader.StreamReader(Stream,Encoding,Boolean,Int32,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Encoding,Boolean,Int32,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: encoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: detectEncodingFromByteOrderMarks\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bufferSize\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: leaveOpen\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.BaseStream\n  id: BaseStream\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: StreamReader.BaseStream\n  fullName: System.IO.StreamReader.BaseStream\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.Close\n  id: Close\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: StreamReader.Close()\n  fullName: System.IO.StreamReader.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.CurrentEncoding\n  id: CurrentEncoding\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: CurrentEncoding\n  nameWithType: StreamReader.CurrentEncoding\n  fullName: System.IO.StreamReader.CurrentEncoding\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual System.Text.Encoding CurrentEncoding { get; }\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.DiscardBufferedData\n  id: DiscardBufferedData\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: DiscardBufferedData()\n  nameWithType: StreamReader.DiscardBufferedData()\n  fullName: System.IO.StreamReader.DiscardBufferedData()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public void DiscardBufferedData ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: StreamReader.Dispose(Boolean)\n  fullName: System.IO.StreamReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.EndOfStream\n  id: EndOfStream\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: EndOfStream\n  nameWithType: StreamReader.EndOfStream\n  fullName: System.IO.StreamReader.EndOfStream\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public bool EndOfStream { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.Null\n  id: Null\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Null\n  nameWithType: StreamReader.Null\n  fullName: System.IO.StreamReader.Null\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public static readonly System.IO.StreamReader Null;\n    return:\n      type: System.IO.StreamReader\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.Peek\n  id: Peek\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Peek()\n  nameWithType: StreamReader.Peek()\n  fullName: System.IO.StreamReader.Peek()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override int Peek ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.Read\n  id: Read\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: StreamReader.Read()\n  fullName: System.IO.StreamReader.Read()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override int Read ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.IO.StreamReader.Read*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)\n  id: Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: Read(Char[],Int32,Int32)\n  nameWithType: StreamReader.Read(Char[],Int32,Int32)\n  fullName: System.IO.StreamReader.Read(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override int Read (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.IO.StreamReader.Read*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)\n  id: ReadAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadAsync(Char[],Int32,Int32)\n  nameWithType: StreamReader.ReadAsync(Char[],Int32,Int32)\n  fullName: System.IO.StreamReader.ReadAsync(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override System.Threading.Tasks.Task<int> ReadAsync (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)\n  id: ReadBlock(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadBlock(Char[],Int32,Int32)\n  nameWithType: StreamReader.ReadBlock(Char[],Int32,Int32)\n  fullName: System.IO.StreamReader.ReadBlock(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override int ReadBlock (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)\n  id: ReadBlockAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadBlockAsync(Char[],Int32,Int32)\n  nameWithType: StreamReader.ReadBlockAsync(Char[],Int32,Int32)\n  fullName: System.IO.StreamReader.ReadBlockAsync(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override System.Threading.Tasks.Task<int> ReadBlockAsync (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.ReadLine\n  id: ReadLine\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadLine()\n  nameWithType: StreamReader.ReadLine()\n  fullName: System.IO.StreamReader.ReadLine()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override string ReadLine ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.ReadLineAsync\n  id: ReadLineAsync\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadLineAsync()\n  nameWithType: StreamReader.ReadLineAsync()\n  fullName: System.IO.StreamReader.ReadLineAsync()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override System.Threading.Tasks.Task<string> ReadLineAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.ReadToEnd\n  id: ReadToEnd\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadToEnd()\n  nameWithType: StreamReader.ReadToEnd()\n  fullName: System.IO.StreamReader.ReadToEnd()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override string ReadToEnd ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.StreamReader.ReadToEndAsync\n  id: ReadToEndAsync\n  parent: System.IO.StreamReader\n  langs:\n  - csharp\n  name: ReadToEndAsync()\n  nameWithType: StreamReader.ReadToEndAsync()\n  fullName: System.IO.StreamReader.ReadToEndAsync()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public override System.Threading.Tasks.Task<string> ReadToEndAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.IO.TextReader\n  isExternal: false\n  name: System.IO.TextReader\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream)\n  nameWithType: StreamReader.StreamReader(Stream)\n  fullName: System.IO.StreamReader.StreamReader(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.StreamReader.#ctor(System.String)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String)\n  nameWithType: StreamReader.StreamReader(String)\n  fullName: System.IO.StreamReader.StreamReader(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream,Boolean)\n  nameWithType: StreamReader.StreamReader(Stream,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Boolean)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream,Encoding)\n  nameWithType: StreamReader.StreamReader(Stream,Encoding)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Encoding)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.StreamReader.#ctor(System.String,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String,Boolean)\n  nameWithType: StreamReader.StreamReader(String,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String,Encoding)\n  nameWithType: StreamReader.StreamReader(String,Encoding)\n  fullName: System.IO.StreamReader.StreamReader(String,Encoding)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream,Encoding,Boolean)\n  nameWithType: StreamReader.StreamReader(Stream,Encoding,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Encoding,Boolean)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String,Encoding,Boolean)\n  nameWithType: StreamReader.StreamReader(String,Encoding,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(String,Encoding,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream,Encoding,Boolean,Int32)\n  nameWithType: StreamReader.StreamReader(Stream,Encoding,Boolean,Int32)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Encoding,Boolean,Int32)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(String,Encoding,Boolean,Int32)\n  nameWithType: StreamReader.StreamReader(String,Encoding,Boolean,Int32)\n  fullName: System.IO.StreamReader.StreamReader(String,Encoding,Boolean,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: StreamReader(Stream,Encoding,Boolean,Int32,Boolean)\n  nameWithType: StreamReader.StreamReader(Stream,Encoding,Boolean,Int32,Boolean)\n  fullName: System.IO.StreamReader.StreamReader(Stream,Encoding,Boolean,Int32,Boolean)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.StreamReader.BaseStream\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: BaseStream\n  nameWithType: StreamReader.BaseStream\n  fullName: System.IO.StreamReader.BaseStream\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.StreamReader.Close\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Close()\n  nameWithType: StreamReader.Close()\n  fullName: System.IO.StreamReader.Close()\n- uid: System.IO.StreamReader.CurrentEncoding\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: CurrentEncoding\n  nameWithType: StreamReader.CurrentEncoding\n  fullName: System.IO.StreamReader.CurrentEncoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.StreamReader.DiscardBufferedData\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: DiscardBufferedData()\n  nameWithType: StreamReader.DiscardBufferedData()\n  fullName: System.IO.StreamReader.DiscardBufferedData()\n- uid: System.IO.StreamReader.Dispose(System.Boolean)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: StreamReader.Dispose(Boolean)\n  fullName: System.IO.StreamReader.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.StreamReader.EndOfStream\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: EndOfStream\n  nameWithType: StreamReader.EndOfStream\n  fullName: System.IO.StreamReader.EndOfStream\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.StreamReader.Null\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Null\n  nameWithType: StreamReader.Null\n  fullName: System.IO.StreamReader.Null\n- uid: System.IO.StreamReader\n  parent: System.IO\n  isExternal: false\n  name: StreamReader\n  nameWithType: StreamReader\n  fullName: System.IO.StreamReader\n- uid: System.IO.StreamReader.Peek\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Peek()\n  nameWithType: StreamReader.Peek()\n  fullName: System.IO.StreamReader.Peek()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamReader.Read\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Read()\n  nameWithType: StreamReader.Read()\n  fullName: System.IO.StreamReader.Read()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: Read(Char[],Int32,Int32)\n  nameWithType: StreamReader.Read(Char[],Int32,Int32)\n  fullName: System.IO.StreamReader.Read(Char[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadAsync(Char[],Int32,Int32)\n  nameWithType: StreamReader.ReadAsync(Char[],Int32,Int32)\n  fullName: System.IO.StreamReader.ReadAsync(Char[],Int32,Int32)\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadBlock(Char[],Int32,Int32)\n  nameWithType: StreamReader.ReadBlock(Char[],Int32,Int32)\n  fullName: System.IO.StreamReader.ReadBlock(Char[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadBlockAsync(Char[],Int32,Int32)\n  nameWithType: StreamReader.ReadBlockAsync(Char[],Int32,Int32)\n  fullName: System.IO.StreamReader.ReadBlockAsync(Char[],Int32,Int32)\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.StreamReader.ReadLine\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadLine()\n  nameWithType: StreamReader.ReadLine()\n  fullName: System.IO.StreamReader.ReadLine()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.StreamReader.ReadLineAsync\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadLineAsync()\n  nameWithType: StreamReader.ReadLineAsync()\n  fullName: System.IO.StreamReader.ReadLineAsync()\n- uid: System.Threading.Tasks.Task{System.String}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<String>\n  nameWithType: Task<String>\n  fullName: System.Threading.Tasks.Task<System.String>\n- uid: System.IO.StreamReader.ReadToEnd\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadToEnd()\n  nameWithType: StreamReader.ReadToEnd()\n  fullName: System.IO.StreamReader.ReadToEnd()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.StreamReader.ReadToEndAsync\n  parent: System.IO.StreamReader\n  isExternal: false\n  name: ReadToEndAsync()\n  nameWithType: StreamReader.ReadToEndAsync()\n  fullName: System.IO.StreamReader.ReadToEndAsync()\n- uid: System.Threading.Tasks.Task{System.String}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<String>\n  nameWithType: Task<String>\n  fullName: System.Threading.Tasks.Task<System.String>\n- uid: System.IO.StreamReader.Read*\n  parent: System.IO.StreamReader\n  isExternal: false\n  nameWithType: StreamReader.\n"}