{"nodes":[{"pos":[571,587],"content":"DbJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbJoinExpression","pos":[0,16]}]},{"pos":[4431,4458],"content":"Accept(DbExpressionVisitor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept(DbExpressionVisitor)","pos":[0,27]}]},{"pos":[4937,4971],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5300,5340],"content":"Accept(DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Accept(DbExpressionVisitor<TResultType>)"},{"pos":[5880,5914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5970,6004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6231,6244],"content":"JoinCondition","needQuote":true,"needEscape":true,"nodes":[{"content":"JoinCondition","pos":[0,13]}]},{"pos":[6652,6686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6895,6899],"content":"Left","needQuote":true,"needEscape":true,"nodes":[{"content":"Left","pos":[0,4]}]},{"pos":[7294,7328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7539,7544],"content":"Right","needQuote":true,"needEscape":true,"nodes":[{"content":"Right","pos":[0,5]}]},{"pos":[7942,7976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8118,8162],"content":"System.Data.Common.CommandTrees.DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Data.Common.CommandTrees.DbExpression","pos":[0,44]}]},{"pos":[8366,8393],"content":"Accept(DbExpressionVisitor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept(DbExpressionVisitor)","pos":[0,27]}]},{"pos":[8673,8692],"content":"DbExpressionVisitor","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionVisitor","pos":[0,19]}]},{"pos":[9001,9041],"content":"Accept(DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Accept(DbExpressionVisitor<TResultType>)"},{"pos":[9277,9288],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[9472,9504],"content":"DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>","needQuote":true,"needEscape":true,"source":"DbExpressionVisitor<TResultType>"},{"pos":[9788,9801],"content":"JoinCondition","needQuote":true,"needEscape":true,"nodes":[{"content":"JoinCondition","pos":[0,13]}]},{"pos":[10046,10058],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[10293,10297],"content":"Left","needQuote":true,"needEscape":true,"nodes":[{"content":"Left","pos":[0,4]}]},{"pos":[10531,10550],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[10800,10805],"content":"Right","needQuote":true,"needEscape":true,"nodes":[{"content":"Right","pos":[0,5]}]},{"pos":[11041,11060],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  id: DbJoinExpression\n  children:\n  - System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  - System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition\n  - System.Data.Common.CommandTrees.DbJoinExpression.Left\n  - System.Data.Common.CommandTrees.DbJoinExpression.Right\n  langs:\n  - csharp\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n  type: Class\n  syntax:\n    content: 'public sealed class DbJoinExpression : System.Data.Common.CommandTrees.DbExpression'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpression\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbJoinExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.Accept(DbExpressionVisitor)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbJoinExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.Accept(DbExpressionVisitor<TResultType>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition\n  id: JoinCondition\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  langs:\n  - csharp\n  name: JoinCondition\n  nameWithType: DbJoinExpression.JoinCondition\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression JoinCondition { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.Left\n  id: Left\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  langs:\n  - csharp\n  name: Left\n  nameWithType: DbJoinExpression.Left\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.Left\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpressionBinding Left { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.Right\n  id: Right\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  langs:\n  - csharp\n  name: Right\n  nameWithType: DbJoinExpression.Right\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.Right\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpressionBinding Right { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbJoinExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.Accept(DbExpressionVisitor)\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor\n  nameWithType: DbExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbJoinExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.Accept(DbExpressionVisitor<TResultType>)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  isExternal: false\n  name: JoinCondition\n  nameWithType: DbJoinExpression.JoinCondition\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.Left\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  isExternal: false\n  name: Left\n  nameWithType: DbJoinExpression.Left\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.Left\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbJoinExpression.Right\n  parent: System.Data.Common.CommandTrees.DbJoinExpression\n  isExternal: false\n  name: Right\n  nameWithType: DbJoinExpression.Right\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression.Right\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n"}