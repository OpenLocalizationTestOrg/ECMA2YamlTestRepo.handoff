{"nodes":[{"pos":[3883,3899],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[5189,5207],"content":"DomainController()","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController()","pos":[0,18]}]},{"pos":[5811,5840],"content":"CheckReplicationConsistency()","needQuote":true,"needEscape":true,"nodes":[{"content":"CheckReplicationConsistency()","pos":[0,29]}]},{"pos":[6451,6462],"content":"CurrentTime","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentTime","pos":[0,11]}]},{"pos":[6823,6857],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7122,7138],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[7543,7577],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7808,7814],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[8231,8265],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8522,8543],"content":"EnableGlobalCatalog()","needQuote":true,"needEscape":true,"nodes":[{"content":"EnableGlobalCatalog()","pos":[0,21]}]},{"pos":[9037,9071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9306,9316],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[9968,9993],"content":"FindAll(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAll(DirectoryContext)","pos":[0,25]}]},{"pos":[10566,10600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10712,10746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11204,11236],"content":"FindAll(DirectoryContext,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAll(DirectoryContext,String)","pos":[0,32]}]},{"pos":[11840,11874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11939,11973],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12085,12119],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12549,12574],"content":"FindOne(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext)","pos":[0,25]}]},{"pos":[13137,13171],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13273,13307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13849,13889],"content":"FindOne(DirectoryContext,LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext,LocatorOptions)","pos":[0,40]}]},{"pos":[14544,14578],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14681,14715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14817,14851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15309,15341],"content":"FindOne(DirectoryContext,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext,String)","pos":[0,32]}]},{"pos":[15935,15969],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16034,16068],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16170,16204],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16774,16821],"content":"FindOne(DirectoryContext,String,LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext,String,LocatorOptions)","pos":[0,47]}]},{"pos":[17507,17541],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17606,17640],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17743,17777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17879,17913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18223,18229],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[18646,18680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18951,18979],"content":"GetAllReplicationNeighbors()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAllReplicationNeighbors()","pos":[0,28]}]},{"pos":[19527,19561],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19820,19842],"content":"GetDirectorySearcher()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDirectorySearcher()","pos":[0,22]}]},{"pos":[20315,20349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20724,20761],"content":"GetDomainController(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDomainController(DirectoryContext)","pos":[0,37]}]},{"pos":[21360,21394],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21496,21530],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21813,21847],"content":"GetReplicationConnectionFailures()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationConnectionFailures()","pos":[0,34]}]},{"pos":[22411,22445],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22736,22765],"content":"GetReplicationCursors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationCursors(String)","pos":[0,29]}]},{"pos":[23272,23306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23419,23453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23746,23776],"content":"GetReplicationMetadata(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationMetadata(String)","pos":[0,30]}]},{"pos":[24295,24329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24449,24483],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24778,24809],"content":"GetReplicationNeighbors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationNeighbors(String)","pos":[0,31]}]},{"pos":[25324,25358],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25473,25507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25794,25830],"content":"GetReplicationOperationInformation()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationOperationInformation()","pos":[0,36]}]},{"pos":[26406,26440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26697,26716],"content":"HighestCommittedUsn","needQuote":true,"needEscape":true,"nodes":[{"content":"HighestCommittedUsn","pos":[0,19]}]},{"pos":[27094,27128],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27383,27401],"content":"InboundConnections","needQuote":true,"needEscape":true,"nodes":[{"content":"InboundConnections","pos":[0,18]}]},{"pos":[27913,27947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28184,28193],"content":"IPAddress","needQuote":true,"needEscape":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"pos":[28553,28587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28836,28853],"content":"IsGlobalCatalog()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsGlobalCatalog()","pos":[0,17]}]},{"pos":[29245,29279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29516,29525],"content":"OSVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"OSVersion","pos":[0,9]}]},{"pos":[29876,29910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30167,30186],"content":"OutboundConnections","needQuote":true,"needEscape":true,"nodes":[{"content":"OutboundConnections","pos":[0,19]}]},{"pos":[30701,30735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30964,30969],"content":"Roles","needQuote":true,"needEscape":true,"nodes":[{"content":"Roles","pos":[0,5]}]},{"pos":[31429,31463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31842,31881],"content":"SeizeRoleOwnership(ActiveDirectoryRole)","needQuote":true,"needEscape":true,"nodes":[{"content":"SeizeRoleOwnership(ActiveDirectoryRole)","pos":[0,39]}]},{"pos":[32423,32457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32692,32700],"content":"SiteName","needQuote":true,"needEscape":true,"nodes":[{"content":"SiteName","pos":[0,8]}]},{"pos":[33057,33091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33362,33388],"content":"SyncFromAllServersCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncFromAllServersCallback","pos":[0,26]}]},{"pos":[33903,33937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34370,34429],"content":"SyncReplicaFromAllServers(String,SyncFromAllServersOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncReplicaFromAllServers(String,SyncFromAllServersOptions)","pos":[0,59]}]},{"pos":[35012,35046],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35163,35197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35516,35552],"content":"SyncReplicaFromServer(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncReplicaFromServer(String,String)","pos":[0,36]}]},{"pos":[36030,36064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36133,36167],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36552,36594],"content":"TransferRoleOwnership(ActiveDirectoryRole)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransferRoleOwnership(ActiveDirectoryRole)","pos":[0,42]}]},{"pos":[37145,37179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37490,37529],"content":"TriggerSyncReplicaFromNeighbors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerSyncReplicaFromNeighbors(String)","pos":[0,39]}]},{"pos":[38002,38036],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38190,38246],"content":"System.DirectoryServices.ActiveDirectory.DirectoryServer","needQuote":true,"needEscape":true,"nodes":[{"content":"System.DirectoryServices.ActiveDirectory.DirectoryServer","pos":[0,56]}]},{"pos":[38414,38432],"content":"DomainController()","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController()","pos":[0,18]}]},{"pos":[38763,38792],"content":"CheckReplicationConsistency()","needQuote":true,"needEscape":true,"nodes":[{"content":"CheckReplicationConsistency()","pos":[0,29]}]},{"pos":[39129,39140],"content":"CurrentTime","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentTime","pos":[0,11]}]},{"pos":[39336,39344],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[39583,39599],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[39804,39811],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40031,40037],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[40289,40295],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[40560,40581],"content":"EnableGlobalCatalog()","needQuote":true,"needEscape":true,"nodes":[{"content":"EnableGlobalCatalog()","pos":[0,21]}]},{"pos":[40870,40883],"content":"GlobalCatalog","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalCatalog","pos":[0,13]}]},{"pos":[41151,41161],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[41515,41540],"content":"FindAll(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAll(DirectoryContext)","pos":[0,25]}]},{"pos":[41850,41876],"content":"DomainControllerCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainControllerCollection","pos":[0,26]}]},{"pos":[42144,42160],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[42506,42538],"content":"FindAll(DirectoryContext,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAll(DirectoryContext,String)","pos":[0,32]}]},{"pos":[42862,42888],"content":"DomainControllerCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainControllerCollection","pos":[0,26]}]},{"pos":[43156,43172],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[43342,43348],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[43626,43651],"content":"FindOne(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext)","pos":[0,25]}]},{"pos":[43951,43967],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[44215,44231],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[44619,44659],"content":"FindOne(DirectoryContext,LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext,LocatorOptions)","pos":[0,40]}]},{"pos":[44989,45005],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[45253,45269],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[45515,45529],"content":"LocatorOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"LocatorOptions","pos":[0,14]}]},{"pos":[45871,45903],"content":"FindOne(DirectoryContext,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext,String)","pos":[0,32]}]},{"pos":[46217,46233],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[46481,46497],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[46667,46673],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[47021,47068],"content":"FindOne(DirectoryContext,String,LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext,String,LocatorOptions)","pos":[0,47]}]},{"pos":[47412,47428],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[47676,47692],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[47862,47868],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[48060,48074],"content":"LocatorOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"LocatorOptions","pos":[0,14]}]},{"pos":[48342,48348],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[48600,48606],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[48878,48906],"content":"GetAllReplicationNeighbors()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAllReplicationNeighbors()","pos":[0,28]}]},{"pos":[49225,49254],"content":"ReplicationNeighborCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationNeighborCollection","pos":[0,29]}]},{"pos":[49566,49588],"content":"GetDirectorySearcher()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDirectorySearcher()","pos":[0,22]}]},{"pos":[49851,49868],"content":"DirectorySearcher","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectorySearcher","pos":[0,17]}]},{"pos":[50198,50235],"content":"GetDomainController(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDomainController(DirectoryContext)","pos":[0,37]}]},{"pos":[50559,50575],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[50823,50839],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[51137,51171],"content":"GetReplicationConnectionFailures()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationConnectionFailures()","pos":[0,34]}]},{"pos":[51501,51529],"content":"ReplicationFailureCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationFailureCollection","pos":[0,28]}]},{"pos":[51855,51884],"content":"GetReplicationCursors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationCursors(String)","pos":[0,29]}]},{"pos":[52203,52230],"content":"ReplicationCursorCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationCursorCollection","pos":[0,27]}]},{"pos":[52422,52428],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52677,52707],"content":"GetReplicationMetadata(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationMetadata(String)","pos":[0,30]}]},{"pos":[53035,53069],"content":"ActiveDirectoryReplicationMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveDirectoryReplicationMetadata","pos":[0,34]}]},{"pos":[53275,53281],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53531,53562],"content":"GetReplicationNeighbors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationNeighbors(String)","pos":[0,31]}]},{"pos":[53887,53916],"content":"ReplicationNeighborCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationNeighborCollection","pos":[0,29]}]},{"pos":[54112,54118],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[54364,54400],"content":"GetReplicationOperationInformation()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationOperationInformation()","pos":[0,36]}]},{"pos":[54737,54768],"content":"ReplicationOperationInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationOperationInformation","pos":[0,31]}]},{"pos":[55083,55102],"content":"HighestCommittedUsn","needQuote":true,"needEscape":true,"nodes":[{"content":"HighestCommittedUsn","pos":[0,19]}]},{"pos":[55311,55316],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[55544,55562],"content":"InboundConnections","needQuote":true,"needEscape":true,"nodes":[{"content":"InboundConnections","pos":[0,18]}]},{"pos":[55863,55894],"content":"ReplicationConnectionCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationConnectionCollection","pos":[0,31]}]},{"pos":[56199,56208],"content":"IPAddress","needQuote":true,"needEscape":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"pos":[56398,56404],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[56631,56648],"content":"IsGlobalCatalog()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsGlobalCatalog()","pos":[0,17]}]},{"pos":[56855,56862],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57085,57094],"content":"OSVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"OSVersion","pos":[0,9]}]},{"pos":[57284,57290],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[57521,57540],"content":"OutboundConnections","needQuote":true,"needEscape":true,"nodes":[{"content":"OutboundConnections","pos":[0,19]}]},{"pos":[57843,57874],"content":"ReplicationConnectionCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationConnectionCollection","pos":[0,31]}]},{"pos":[58175,58180],"content":"Roles","needQuote":true,"needEscape":true,"nodes":[{"content":"Roles","pos":[0,5]}]},{"pos":[58453,58482],"content":"ActiveDirectoryRoleCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveDirectoryRoleCollection","pos":[0,29]}]},{"pos":[58854,58893],"content":"SeizeRoleOwnership(ActiveDirectoryRole)","needQuote":true,"needEscape":true,"nodes":[{"content":"SeizeRoleOwnership(ActiveDirectoryRole)","pos":[0,39]}]},{"pos":[59224,59243],"content":"ActiveDirectoryRole","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveDirectoryRole","pos":[0,19]}]},{"pos":[59523,59531],"content":"SiteName","needQuote":true,"needEscape":true,"nodes":[{"content":"SiteName","pos":[0,8]}]},{"pos":[59719,59725],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59963,59989],"content":"SyncFromAllServersCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncFromAllServersCallback","pos":[0,26]}]},{"pos":[60293,60311],"content":"SyncUpdateCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncUpdateCallback","pos":[0,18]}]},{"pos":[60688,60747],"content":"SyncReplicaFromAllServers(String,SyncFromAllServersOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncReplicaFromAllServers(String,SyncFromAllServersOptions)","pos":[0,59]}]},{"pos":[61037,61043],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61246,61271],"content":"SyncFromAllServersOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncFromAllServersOptions","pos":[0,25]}]},{"pos":[61605,61641],"content":"SyncReplicaFromServer(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncReplicaFromServer(String,String)","pos":[0,36]}]},{"pos":[61885,61891],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[62007,62013],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[62308,62350],"content":"TransferRoleOwnership(ActiveDirectoryRole)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransferRoleOwnership(ActiveDirectoryRole)","pos":[0,42]}]},{"pos":[62687,62706],"content":"ActiveDirectoryRole","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveDirectoryRole","pos":[0,19]}]},{"pos":[63024,63063],"content":"TriggerSyncReplicaFromNeighbors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerSyncReplicaFromNeighbors(String)","pos":[0,39]}]},{"pos":[63313,63319],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  id: DomainController\n  children:\n  - System.DirectoryServices.ActiveDirectory.DomainController.#ctor\n  - System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency\n  - System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime\n  - System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.DomainController.Domain\n  - System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog\n  - System.DirectoryServices.ActiveDirectory.DomainController.Finalize\n  - System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  - System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.DomainController.Forest\n  - System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors\n  - System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher\n  - System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures\n  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)\n  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)\n  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)\n  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation\n  - System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn\n  - System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections\n  - System.DirectoryServices.ActiveDirectory.DomainController.IPAddress\n  - System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog\n  - System.DirectoryServices.ActiveDirectory.DomainController.OSVersion\n  - System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections\n  - System.DirectoryServices.ActiveDirectory.DomainController.Roles\n  - System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)\n  - System.DirectoryServices.ActiveDirectory.DomainController.SiteName\n  - System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback\n  - System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  - System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)\n  - System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)\n  - System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)\n  langs:\n  - csharp\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n  type: Class\n  syntax:\n    content: 'public class DomainController : System.DirectoryServices.ActiveDirectory.DirectoryServer'\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer\n  implements: []\n  inheritedMembers:\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Name\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: DomainController()\n  nameWithType: DomainController.DomainController()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.DomainController()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: protected DomainController ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency\n  id: CheckReplicationConsistency\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: CheckReplicationConsistency()\n  nameWithType: DomainController.CheckReplicationConsistency()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override void CheckReplicationConsistency ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime\n  id: CurrentTime\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: CurrentTime\n  nameWithType: DomainController.CurrentTime\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public DateTime CurrentTime { get; }\n    return:\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DomainController.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain\n  id: Domain\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: Domain\n  nameWithType: DomainController.Domain\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Domain\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.Domain Domain { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog\n  id: EnableGlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: EnableGlobalCatalog()\n  nameWithType: DomainController.EnableGlobalCatalog()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public virtual System.DirectoryServices.ActiveDirectory.GlobalCatalog EnableGlobalCatalog ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize\n  id: Finalize\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: DomainController.Finalize()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Finalize()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: ~DomainController ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: FindAll(DirectoryContext)\n  nameWithType: DomainController.FindAll(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: FindAll(DirectoryContext,String)\n  nameWithType: DomainController.FindAll(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: FindOne(DirectoryContext)\n  nameWithType: DomainController.FindOne(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: FindOne(DirectoryContext,LocatorOptions)\n  nameWithType: DomainController.FindOne(DirectoryContext,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: FindOne(DirectoryContext,String)\n  nameWithType: DomainController.FindOne(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: FindOne(DirectoryContext,String,LocatorOptions)\n  nameWithType: DomainController.FindOne(DirectoryContext,String,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String,LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest\n  id: Forest\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: Forest\n  nameWithType: DomainController.Forest\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Forest\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors\n  id: GetAllReplicationNeighbors\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: GetAllReplicationNeighbors()\n  nameWithType: DomainController.GetAllReplicationNeighbors()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher\n  id: GetDirectorySearcher\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: GetDirectorySearcher()\n  nameWithType: DomainController.GetDirectorySearcher()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public virtual System.DirectoryServices.DirectorySearcher GetDirectorySearcher ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.DirectorySearcher\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  id: GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: GetDomainController(DirectoryContext)\n  nameWithType: DomainController.GetDomainController(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(DirectoryContext)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.DomainController GetDomainController (System.DirectoryServices.ActiveDirectory.DirectoryContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures\n  id: GetReplicationConnectionFailures\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: GetReplicationConnectionFailures()\n  nameWithType: DomainController.GetReplicationConnectionFailures()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)\n  id: GetReplicationCursors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: GetReplicationCursors(String)\n  nameWithType: DomainController.GetReplicationCursors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)\n  id: GetReplicationMetadata(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: GetReplicationMetadata(String)\n  nameWithType: DomainController.GetReplicationMetadata(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata (string objectPath);\n    parameters:\n    - id: objectPath\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)\n  id: GetReplicationNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: GetReplicationNeighbors(String)\n  nameWithType: DomainController.GetReplicationNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation\n  id: GetReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: GetReplicationOperationInformation()\n  nameWithType: DomainController.GetReplicationOperationInformation()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn\n  id: HighestCommittedUsn\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: HighestCommittedUsn\n  nameWithType: DomainController.HighestCommittedUsn\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public long HighestCommittedUsn { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections\n  id: InboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: InboundConnections\n  nameWithType: DomainController.InboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress\n  id: IPAddress\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: IPAddress\n  nameWithType: DomainController.IPAddress\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override string IPAddress { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog\n  id: IsGlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: IsGlobalCatalog()\n  nameWithType: DomainController.IsGlobalCatalog()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public virtual bool IsGlobalCatalog ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion\n  id: OSVersion\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: OSVersion\n  nameWithType: DomainController.OSVersion\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public string OSVersion { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections\n  id: OutboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: OutboundConnections\n  nameWithType: DomainController.OutboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles\n  id: Roles\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: Roles\n  nameWithType: DomainController.Roles\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Roles\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection Roles { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)\n  id: SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: SeizeRoleOwnership(ActiveDirectoryRole)\n  nameWithType: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(ActiveDirectoryRole)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void SeizeRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);\n    parameters:\n    - id: role\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName\n  id: SiteName\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: SiteName\n  nameWithType: DomainController.SiteName\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SiteName\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override string SiteName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback\n  id: SyncFromAllServersCallback\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: SyncFromAllServersCallback\n  nameWithType: DomainController.SyncFromAllServersCallback\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback { get; set; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  id: SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  nameWithType: DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override void SyncReplicaFromAllServers (string partition, System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n    - id: options\n      type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)\n  id: SyncReplicaFromServer(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: SyncReplicaFromServer(String,String)\n  nameWithType: DomainController.SyncReplicaFromServer(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override void SyncReplicaFromServer (string partition, string sourceServer);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n    - id: sourceServer\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)\n  id: TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: TransferRoleOwnership(ActiveDirectoryRole)\n  nameWithType: DomainController.TransferRoleOwnership(ActiveDirectoryRole)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(ActiveDirectoryRole)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void TransferRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);\n    parameters:\n    - id: role\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)\n  id: TriggerSyncReplicaFromNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  langs:\n  - csharp\n  name: TriggerSyncReplicaFromNeighbors(String)\n  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override void TriggerSyncReplicaFromNeighbors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: System.DirectoryServices.ActiveDirectory.DirectoryServer\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: DomainController()\n  nameWithType: DomainController.DomainController()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.DomainController()\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: CheckReplicationConsistency()\n  nameWithType: DomainController.CheckReplicationConsistency()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency()\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: CurrentTime\n  nameWithType: DomainController.CurrentTime\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DomainController.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: Domain\n  nameWithType: DomainController.Domain\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Domain\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: EnableGlobalCatalog()\n  nameWithType: DomainController.EnableGlobalCatalog()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog()\n- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: GlobalCatalog\n  nameWithType: GlobalCatalog\n  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: Finalize()\n  nameWithType: DomainController.Finalize()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Finalize()\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: FindAll(DirectoryContext)\n  nameWithType: DomainController.FindAll(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext)\n- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainControllerCollection\n  nameWithType: DomainControllerCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: FindAll(DirectoryContext,String)\n  nameWithType: DomainController.FindAll(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext,String)\n- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainControllerCollection\n  nameWithType: DomainControllerCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: FindOne(DirectoryContext)\n  nameWithType: DomainController.FindOne(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext)\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: FindOne(DirectoryContext,LocatorOptions)\n  nameWithType: DomainController.FindOne(DirectoryContext,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: LocatorOptions\n  nameWithType: LocatorOptions\n  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: FindOne(DirectoryContext,String)\n  nameWithType: DomainController.FindOne(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String)\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: FindOne(DirectoryContext,String,LocatorOptions)\n  nameWithType: DomainController.FindOne(DirectoryContext,String,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String,LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: LocatorOptions\n  nameWithType: LocatorOptions\n  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: Forest\n  nameWithType: DomainController.Forest\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Forest\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: GetAllReplicationNeighbors()\n  nameWithType: DomainController.GetAllReplicationNeighbors()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationNeighborCollection\n  nameWithType: ReplicationNeighborCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: GetDirectorySearcher()\n  nameWithType: DomainController.GetDirectorySearcher()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher()\n- uid: System.DirectoryServices.DirectorySearcher\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectorySearcher\n  nameWithType: DirectorySearcher\n  fullName: System.DirectoryServices.DirectorySearcher\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: GetDomainController(DirectoryContext)\n  nameWithType: DomainController.GetDomainController(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(DirectoryContext)\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: GetReplicationConnectionFailures()\n  nameWithType: DomainController.GetReplicationConnectionFailures()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationFailureCollection\n  nameWithType: ReplicationFailureCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: GetReplicationCursors(String)\n  nameWithType: DomainController.GetReplicationCursors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(String)\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationCursorCollection\n  nameWithType: ReplicationCursorCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: GetReplicationMetadata(String)\n  nameWithType: DomainController.GetReplicationMetadata(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(String)\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryReplicationMetadata\n  nameWithType: ActiveDirectoryReplicationMetadata\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: GetReplicationNeighbors(String)\n  nameWithType: DomainController.GetReplicationNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(String)\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationNeighborCollection\n  nameWithType: ReplicationNeighborCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: GetReplicationOperationInformation()\n  nameWithType: DomainController.GetReplicationOperationInformation()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationOperationInformation\n  nameWithType: ReplicationOperationInformation\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: HighestCommittedUsn\n  nameWithType: DomainController.HighestCommittedUsn\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: InboundConnections\n  nameWithType: DomainController.InboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationConnectionCollection\n  nameWithType: ReplicationConnectionCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: IPAddress\n  nameWithType: DomainController.IPAddress\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: IsGlobalCatalog()\n  nameWithType: DomainController.IsGlobalCatalog()\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: OSVersion\n  nameWithType: DomainController.OSVersion\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: OutboundConnections\n  nameWithType: DomainController.OutboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationConnectionCollection\n  nameWithType: ReplicationConnectionCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: Roles\n  nameWithType: DomainController.Roles\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Roles\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryRoleCollection\n  nameWithType: ActiveDirectoryRoleCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: SeizeRoleOwnership(ActiveDirectoryRole)\n  nameWithType: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(ActiveDirectoryRole)\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryRole\n  nameWithType: ActiveDirectoryRole\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: SiteName\n  nameWithType: DomainController.SiteName\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SiteName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: SyncFromAllServersCallback\n  nameWithType: DomainController.SyncFromAllServersCallback\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback\n- uid: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: SyncUpdateCallback\n  nameWithType: SyncUpdateCallback\n  fullName: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  nameWithType: DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: SyncFromAllServersOptions\n  nameWithType: SyncFromAllServersOptions\n  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: SyncReplicaFromServer(String,String)\n  nameWithType: DomainController.SyncReplicaFromServer(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: TransferRoleOwnership(ActiveDirectoryRole)\n  nameWithType: DomainController.TransferRoleOwnership(ActiveDirectoryRole)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(ActiveDirectoryRole)\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryRole\n  nameWithType: ActiveDirectoryRole\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  name: TriggerSyncReplicaFromNeighbors(String)\n  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  nameWithType: DomainController.\n- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*\n  parent: System.DirectoryServices.ActiveDirectory.DomainController\n  isExternal: false\n  nameWithType: DomainController.\n"}