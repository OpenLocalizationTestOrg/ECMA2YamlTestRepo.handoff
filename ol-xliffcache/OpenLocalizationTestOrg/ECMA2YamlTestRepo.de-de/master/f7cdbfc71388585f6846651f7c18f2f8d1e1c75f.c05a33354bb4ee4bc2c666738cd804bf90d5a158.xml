{"nodes":[{"pos":[827,837],"content":"FontFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily","pos":[0,10]}]},{"pos":[1683,1695],"content":"FontFamily()","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily()","pos":[0,12]}]},{"pos":[2154,2172],"content":"FontFamily(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily(String)","pos":[0,18]}]},{"pos":[2515,2549],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2780,2802],"content":"FontFamily(Uri,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily(Uri,String)","pos":[0,22]}]},{"pos":[3160,3194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3261,3295],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3478,3486],"content":"Baseline","needQuote":true,"needEscape":true,"nodes":[{"content":"Baseline","pos":[0,8]}]},{"pos":[3779,3813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3994,4001],"content":"BaseUri","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseUri","pos":[0,7]}]},{"pos":[4280,4314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4523,4537],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4859,4893],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4952,4986],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5173,5183],"content":"FamilyMaps","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyMaps","pos":[0,10]}]},{"pos":[5546,5580],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5769,5780],"content":"FamilyNames","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyNames","pos":[0,11]}]},{"pos":[6164,6198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6395,6410],"content":"FamilyTypefaces","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypefaces","pos":[0,15]}]},{"pos":[6790,6824],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7013,7026],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7344,7378],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7569,7583],"content":"GetTypefaces()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTypefaces()","pos":[0,14]}]},{"pos":[8018,8052],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8241,8252],"content":"LineSpacing","needQuote":true,"needEscape":true,"nodes":[{"content":"LineSpacing","pos":[0,11]}]},{"pos":[8554,8588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8767,8773],"content":"Source","needQuote":true,"needEscape":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[9055,9089],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9272,9282],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9595,9629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9740,9753],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[9869,9881],"content":"FontFamily()","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily()","pos":[0,12]}]},{"pos":[10109,10127],"content":"FontFamily(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily(String)","pos":[0,18]}]},{"pos":[10303,10309],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10500,10522],"content":"FontFamily(Uri,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily(Uri,String)","pos":[0,22]}]},{"pos":[10702,10705],"content":"Uri","needQuote":true,"needEscape":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[10815,10821],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10989,10997],"content":"Baseline","needQuote":true,"needEscape":true,"nodes":[{"content":"Baseline","pos":[0,8]}]},{"pos":[11153,11159],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[11326,11333],"content":"BaseUri","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseUri","pos":[0,7]}]},{"pos":[11483,11486],"content":"Uri","needQuote":true,"needEscape":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[11661,11675],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11844,11851],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11969,11975],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12145,12155],"content":"FamilyMaps","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyMaps","pos":[0,10]}]},{"pos":[12360,12383],"content":"FontFamilyMapCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamilyMapCollection","pos":[0,23]}]},{"pos":[12602,12613],"content":"FamilyNames","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyNames","pos":[0,11]}]},{"pos":[12829,12861],"content":"LanguageSpecificStringDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"LanguageSpecificStringDictionary","pos":[0,32]}]},{"pos":[13102,13117],"content":"FamilyTypefaces","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypefaces","pos":[0,15]}]},{"pos":[13333,13357],"content":"FamilyTypefaceCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypefaceCollection","pos":[0,24]}]},{"pos":[13578,13591],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[13756,13761],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13931,13945],"content":"GetTypefaces()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTypefaces()","pos":[0,14]}]},{"pos":[14189,14210],"content":"ICollection<ph id=\"ph1\">&lt;Typeface&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<Typeface>"},{"pos":[14452,14463],"content":"LineSpacing","needQuote":true,"needEscape":true,"nodes":[{"content":"LineSpacing","pos":[0,11]}]},{"pos":[14625,14631],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[14797,14803],"content":"Source","needQuote":true,"needEscape":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[14955,14961],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15129,15139],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15299,15305],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.FontFamily\n  id: FontFamily\n  children:\n  - System.Windows.Media.FontFamily.#ctor\n  - System.Windows.Media.FontFamily.#ctor(System.String)\n  - System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)\n  - System.Windows.Media.FontFamily.Baseline\n  - System.Windows.Media.FontFamily.BaseUri\n  - System.Windows.Media.FontFamily.Equals(System.Object)\n  - System.Windows.Media.FontFamily.FamilyMaps\n  - System.Windows.Media.FontFamily.FamilyNames\n  - System.Windows.Media.FontFamily.FamilyTypefaces\n  - System.Windows.Media.FontFamily.GetHashCode\n  - System.Windows.Media.FontFamily.GetTypefaces\n  - System.Windows.Media.FontFamily.LineSpacing\n  - System.Windows.Media.FontFamily.Source\n  - System.Windows.Media.FontFamily.ToString\n  langs:\n  - csharp\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Windows.Media.FontFamily\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.Font)]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))]\n\n      public class FontFamily\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: FontFamily()\n  nameWithType: FontFamily.FontFamily()\n  fullName: System.Windows.Media.FontFamily.FontFamily()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public FontFamily ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: FontFamily(String)\n  nameWithType: FontFamily.FontFamily(String)\n  fullName: System.Windows.Media.FontFamily.FontFamily(String)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public FontFamily (string familyName);\n    parameters:\n    - id: familyName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)\n  id: '#ctor(System.Uri,System.String)'\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: FontFamily(Uri,String)\n  nameWithType: FontFamily.FontFamily(Uri,String)\n  fullName: System.Windows.Media.FontFamily.FontFamily(Uri,String)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public FontFamily (Uri baseUri, string familyName);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: Parameter description to be filled\n    - id: familyName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.Baseline\n  id: Baseline\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: Baseline\n  nameWithType: FontFamily.Baseline\n  fullName: System.Windows.Media.FontFamily.Baseline\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double Baseline { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.BaseUri\n  id: BaseUri\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: BaseUri\n  nameWithType: FontFamily.BaseUri\n  fullName: System.Windows.Media.FontFamily.BaseUri\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public Uri BaseUri { get; }\n    return:\n      type: System.Uri\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FontFamily.Equals(Object)\n  fullName: System.Windows.Media.FontFamily.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.FamilyMaps\n  id: FamilyMaps\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: FamilyMaps\n  nameWithType: FontFamily.FamilyMaps\n  fullName: System.Windows.Media.FontFamily.FamilyMaps\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }\n    return:\n      type: System.Windows.Media.FontFamilyMapCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.FamilyNames\n  id: FamilyNames\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: FamilyNames\n  nameWithType: FontFamily.FamilyNames\n  fullName: System.Windows.Media.FontFamily.FamilyNames\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }\n    return:\n      type: System.Windows.Media.LanguageSpecificStringDictionary\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.FamilyTypefaces\n  id: FamilyTypefaces\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: FamilyTypefaces\n  nameWithType: FontFamily.FamilyTypefaces\n  fullName: System.Windows.Media.FontFamily.FamilyTypefaces\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }\n    return:\n      type: System.Windows.Media.FamilyTypefaceCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FontFamily.GetHashCode()\n  fullName: System.Windows.Media.FontFamily.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.GetTypefaces\n  id: GetTypefaces\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: GetTypefaces()\n  nameWithType: FontFamily.GetTypefaces()\n  fullName: System.Windows.Media.FontFamily.GetTypefaces()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Windows.Media.Typeface> GetTypefaces ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{System.Windows.Media.Typeface}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.LineSpacing\n  id: LineSpacing\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: LineSpacing\n  nameWithType: FontFamily.LineSpacing\n  fullName: System.Windows.Media.FontFamily.LineSpacing\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double LineSpacing { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.Source\n  id: Source\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: Source\n  nameWithType: FontFamily.Source\n  fullName: System.Windows.Media.FontFamily.Source\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public string Source { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamily.ToString\n  id: ToString\n  parent: System.Windows.Media.FontFamily\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: FontFamily.ToString()\n  fullName: System.Windows.Media.FontFamily.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.FontFamily.#ctor\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: FontFamily()\n  nameWithType: FontFamily.FontFamily()\n  fullName: System.Windows.Media.FontFamily.FontFamily()\n- uid: System.Windows.Media.FontFamily.#ctor(System.String)\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: FontFamily(String)\n  nameWithType: FontFamily.FontFamily(String)\n  fullName: System.Windows.Media.FontFamily.FontFamily(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: FontFamily(Uri,String)\n  nameWithType: FontFamily.FontFamily(Uri,String)\n  fullName: System.Windows.Media.FontFamily.FontFamily(Uri,String)\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.FontFamily.Baseline\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: Baseline\n  nameWithType: FontFamily.Baseline\n  fullName: System.Windows.Media.FontFamily.Baseline\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.FontFamily.BaseUri\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: BaseUri\n  nameWithType: FontFamily.BaseUri\n  fullName: System.Windows.Media.FontFamily.BaseUri\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Windows.Media.FontFamily.Equals(System.Object)\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FontFamily.Equals(Object)\n  fullName: System.Windows.Media.FontFamily.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FontFamily.FamilyMaps\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: FamilyMaps\n  nameWithType: FontFamily.FamilyMaps\n  fullName: System.Windows.Media.FontFamily.FamilyMaps\n- uid: System.Windows.Media.FontFamilyMapCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamilyMapCollection\n  nameWithType: FontFamilyMapCollection\n  fullName: System.Windows.Media.FontFamilyMapCollection\n- uid: System.Windows.Media.FontFamily.FamilyNames\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: FamilyNames\n  nameWithType: FontFamily.FamilyNames\n  fullName: System.Windows.Media.FontFamily.FamilyNames\n- uid: System.Windows.Media.LanguageSpecificStringDictionary\n  parent: System.Windows.Media\n  isExternal: false\n  name: LanguageSpecificStringDictionary\n  nameWithType: LanguageSpecificStringDictionary\n  fullName: System.Windows.Media.LanguageSpecificStringDictionary\n- uid: System.Windows.Media.FontFamily.FamilyTypefaces\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: FamilyTypefaces\n  nameWithType: FontFamily.FamilyTypefaces\n  fullName: System.Windows.Media.FontFamily.FamilyTypefaces\n- uid: System.Windows.Media.FamilyTypefaceCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: FamilyTypefaceCollection\n  nameWithType: FamilyTypefaceCollection\n  fullName: System.Windows.Media.FamilyTypefaceCollection\n- uid: System.Windows.Media.FontFamily.GetHashCode\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FontFamily.GetHashCode()\n  fullName: System.Windows.Media.FontFamily.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FontFamily.GetTypefaces\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: GetTypefaces()\n  nameWithType: FontFamily.GetTypefaces()\n  fullName: System.Windows.Media.FontFamily.GetTypefaces()\n- uid: System.Collections.Generic.ICollection{System.Windows.Media.Typeface}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<Typeface>\n  nameWithType: ICollection<Typeface>\n  fullName: System.Collections.Generic.ICollection<System.Windows.Media.Typeface>\n- uid: System.Windows.Media.FontFamily.LineSpacing\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: LineSpacing\n  nameWithType: FontFamily.LineSpacing\n  fullName: System.Windows.Media.FontFamily.LineSpacing\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.FontFamily.Source\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: Source\n  nameWithType: FontFamily.Source\n  fullName: System.Windows.Media.FontFamily.Source\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.FontFamily.ToString\n  parent: System.Windows.Media.FontFamily\n  isExternal: false\n  name: ToString()\n  nameWithType: FontFamily.ToString()\n  fullName: System.Windows.Media.FontFamily.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}