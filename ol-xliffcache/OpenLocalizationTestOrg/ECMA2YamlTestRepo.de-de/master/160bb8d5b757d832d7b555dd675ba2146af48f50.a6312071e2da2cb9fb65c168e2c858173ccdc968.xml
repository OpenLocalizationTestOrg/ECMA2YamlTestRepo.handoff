{"nodes":[{"pos":[1149,1167],"content":"EnumerableQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"EnumerableQuery<T>"},{"pos":[1530,1564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2313,2344],"content":"EnumerableQuery(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"EnumerableQuery(IEnumerable<T>)"},{"pos":[2773,2807],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3054,3081],"content":"EnumerableQuery(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"EnumerableQuery(Expression)","pos":[0,27]}]},{"pos":[3489,3523],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3810,3850],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[4282,4316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4581,4627],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[5047,5081],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5326,5360],"content":"System.Linq.IQueryable.ElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryable.ElementType","pos":[0,34]}]},{"pos":[5708,5742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5985,6018],"content":"System.Linq.IQueryable.Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryable.Expression","pos":[0,33]}]},{"pos":[6416,6450],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6689,6720],"content":"System.Linq.IQueryable.Provider","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryable.Provider","pos":[0,31]}]},{"pos":[7096,7130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7455,7505],"content":"System.Linq.IQueryProvider.CreateQuery(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryProvider.CreateQuery(Expression)","pos":[0,50]}]},{"pos":[7981,8015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8082,8116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8451,8501],"content":"System.Linq.IQueryProvider.CreateQuery(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryProvider.CreateQuery(Expression)","pos":[0,50]}]},{"pos":[8983,9017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9087,9121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9438,9484],"content":"System.Linq.IQueryProvider.Execute(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryProvider.Execute(Expression)","pos":[0,46]}]},{"pos":[9932,9966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10024,10058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10385,10431],"content":"System.Linq.IQueryProvider.Execute(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryProvider.Execute(Expression)","pos":[0,46]}]},{"pos":[10877,10911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10957,10991],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11170,11180],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11486,11520],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11645,11672],"content":"System.Linq.EnumerableQuery","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.EnumerableQuery","pos":[0,27]}]},{"pos":[11826,11857],"content":"EnumerableQuery(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"EnumerableQuery(IEnumerable<T>)"},{"pos":[12113,12127],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[12360,12387],"content":"EnumerableQuery(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"EnumerableQuery(Expression)","pos":[0,27]}]},{"pos":[12626,12636],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[12872,12912],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[13186,13200],"content":"IEnumerator<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<T>"},{"pos":[13436,13482],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[13750,13761],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[13973,14007],"content":"System.Linq.IQueryable.ElementType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryable.ElementType","pos":[0,34]}]},{"pos":[14220,14224],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[14409,14442],"content":"System.Linq.IQueryable.Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryable.Expression","pos":[0,33]}]},{"pos":[14693,14703],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[14915,14946],"content":"System.Linq.IQueryable.Provider","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryable.Provider","pos":[0,31]}]},{"pos":[15173,15187],"content":"IQueryProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueryProvider","pos":[0,14]}]},{"pos":[15438,15488],"content":"System.Linq.IQueryProvider.CreateQuery(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryProvider.CreateQuery(Expression)","pos":[0,50]}]},{"pos":[15749,15759],"content":"IQueryable","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueryable","pos":[0,10]}]},{"pos":[15926,15936],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[16196,16246],"content":"System.Linq.IQueryProvider.CreateQuery(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryProvider.CreateQuery(Expression)","pos":[0,50]}]},{"pos":[16510,16523],"content":"IQueryable<ph id=\"ph1\">&lt;S&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<S>"},{"pos":[16696,16706],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[16957,17003],"content":"System.Linq.IQueryProvider.Execute(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryProvider.Execute(Expression)","pos":[0,46]}]},{"pos":[17242,17248],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17402,17412],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[17668,17714],"content":"System.Linq.IQueryProvider.Execute(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.IQueryProvider.Execute(Expression)","pos":[0,46]}]},{"pos":[17936,17937],"content":"S","needQuote":true,"needEscape":true,"nodes":[{"content":"S","pos":[0,1]}]},{"pos":[18074,18084],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[18273,18283],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[18450,18456],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.EnumerableQuery`1\n  id: EnumerableQuery`1\n  children:\n  - System.Linq.EnumerableQuery`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  - System.Linq.EnumerableQuery`1.#ctor(System.Linq.Expressions.Expression)\n  - System.Linq.EnumerableQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Linq.EnumerableQuery`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Linq.EnumerableQuery`1.System#Linq#IQueryable#ElementType\n  - System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Expression\n  - System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Provider\n  - System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)\n  - System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery``1(``0ystem.Linq.Expressions.Expression)\n  - System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)\n  - System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute``1(``0ystem.Linq.Expressions.Expression)\n  - System.Linq.EnumerableQuery`1.ToString\n  langs:\n  - csharp\n  name: EnumerableQuery<T>\n  nameWithType: EnumerableQuery<T>\n  fullName: System.Linq.EnumerableQuery<T>\n  type: Class\n  syntax:\n    content: 'public class EnumerableQuery<T> : System.Linq.EnumerableQuery, System.Collections.Generic.IEnumerable<T>, System.Linq.IOrderedQueryable<T>, System.Linq.IQueryable<T>, System.Linq.IQueryProvider'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.Linq.EnumerableQuery\n  implements:\n  - System.Collections.Generic.IEnumerable<T>\n  - System.Linq.IOrderedQueryable<T>\n  - System.Linq.IQueryable<T>\n  - System.Linq.IQueryProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  id: '#ctor(System.Collections.Generic.IEnumerable`1)'\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: EnumerableQuery(IEnumerable<T>)\n  nameWithType: EnumerableQuery<T>.EnumerableQuery(IEnumerable<T>)\n  fullName: System.Linq.EnumerableQuery<T>.EnumerableQuery(IEnumerable<T>)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public EnumerableQuery (System.Collections.Generic.IEnumerable<T> enumerable);\n    parameters:\n    - id: enumerable\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.#ctor(System.Linq.Expressions.Expression)\n  id: '#ctor(System.Linq.Expressions.Expression)'\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: EnumerableQuery(Expression)\n  nameWithType: EnumerableQuery<T>.EnumerableQuery(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.EnumerableQuery(Expression)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public EnumerableQuery (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  isEii: true\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: EnumerableQuery<T>.System.Collections.Generic.IEnumerable()\n  fullName: System.Linq.EnumerableQuery<T>.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: EnumerableQuery<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Linq.EnumerableQuery<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryable#ElementType\n  id: System#Linq#IQueryable#ElementType\n  isEii: true\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryable.ElementType\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryable.ElementType\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryable.ElementType\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: Type System.Linq.IQueryable.ElementType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Expression\n  id: System#Linq#IQueryable#Expression\n  isEii: true\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryable.Expression\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryable.Expression\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryable.Expression\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Provider\n  id: System#Linq#IQueryable#Provider\n  isEii: true\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryable.Provider\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryable.Provider\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryable.Provider\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }\n    return:\n      type: System.Linq.IQueryProvider\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)\n  id: System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)\n  isEii: true\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryProvider.CreateQuery(Expression)\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: System.Linq.IQueryable IQueryProvider.CreateQuery (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery``1(``0ystem.Linq.Expressions.Expression)\n  id: System#Linq#IQueryProvider#CreateQuery``1(``0ystem.Linq.Expressions.Expression)\n  isEii: true\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryProvider.CreateQuery(Expression)\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: System.Linq.IQueryable<S> IQueryProvider.CreateQuery<S> (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{S}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)\n  id: System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)\n  isEii: true\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryProvider.Execute(Expression)\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryProvider.Execute(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryProvider.Execute(Expression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: object IQueryProvider.Execute (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute``1(``0ystem.Linq.Expressions.Expression)\n  id: System#Linq#IQueryProvider#Execute``1(``0ystem.Linq.Expressions.Expression)\n  isEii: true\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: System.Linq.IQueryProvider.Execute(Expression)\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryProvider.Execute(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryProvider.Execute(Expression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: S IQueryProvider.Execute<S> (System.Linq.Expressions.Expression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n    return:\n      type: S\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.EnumerableQuery`1.ToString\n  id: ToString\n  parent: System.Linq.EnumerableQuery`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: EnumerableQuery<T>.ToString()\n  fullName: System.Linq.EnumerableQuery<T>.ToString()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Linq.EnumerableQuery\n  isExternal: false\n  name: System.Linq.EnumerableQuery\n- uid: System.Linq.EnumerableQuery`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: EnumerableQuery(IEnumerable<T>)\n  nameWithType: EnumerableQuery<T>.EnumerableQuery(IEnumerable<T>)\n  fullName: System.Linq.EnumerableQuery<T>.EnumerableQuery(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Linq.EnumerableQuery`1.#ctor(System.Linq.Expressions.Expression)\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: EnumerableQuery(Expression)\n  nameWithType: EnumerableQuery<T>.EnumerableQuery(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.EnumerableQuery(Expression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.EnumerableQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: EnumerableQuery<T>.System.Collections.Generic.IEnumerable()\n  fullName: System.Linq.EnumerableQuery<T>.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Linq.EnumerableQuery`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: EnumerableQuery<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Linq.EnumerableQuery<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryable#ElementType\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: System.Linq.IQueryable.ElementType\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryable.ElementType\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryable.ElementType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Expression\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: System.Linq.IQueryable.Expression\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryable.Expression\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryable.Expression\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Provider\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: System.Linq.IQueryable.Provider\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryable.Provider\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryable.Provider\n- uid: System.Linq.IQueryProvider\n  parent: System.Linq\n  isExternal: false\n  name: IQueryProvider\n  nameWithType: IQueryProvider\n  fullName: System.Linq.IQueryProvider\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.CreateQuery(Expression)\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryProvider.CreateQuery(Expression)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery``1(``0ystem.Linq.Expressions.Expression)\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.CreateQuery(Expression)\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryProvider.CreateQuery(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryProvider.CreateQuery(Expression)\n- uid: System.Linq.IQueryable{S}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<S>\n  nameWithType: IQueryable<S>\n  fullName: System.Linq.IQueryable<S>\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.Execute(Expression)\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryProvider.Execute(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryProvider.Execute(Expression)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute``1(``0ystem.Linq.Expressions.Expression)\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: System.Linq.IQueryProvider.Execute(Expression)\n  nameWithType: EnumerableQuery<T>.System.Linq.IQueryProvider.Execute(Expression)\n  fullName: System.Linq.EnumerableQuery<T>.System.Linq.IQueryProvider.Execute(Expression)\n- uid: S\n  parent: ''\n  isExternal: true\n  name: S\n  nameWithType: S\n  fullName: S\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.EnumerableQuery`1.ToString\n  parent: System.Linq.EnumerableQuery`1\n  isExternal: false\n  name: ToString()\n  nameWithType: EnumerableQuery<T>.ToString()\n  fullName: System.Linq.EnumerableQuery<T>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}