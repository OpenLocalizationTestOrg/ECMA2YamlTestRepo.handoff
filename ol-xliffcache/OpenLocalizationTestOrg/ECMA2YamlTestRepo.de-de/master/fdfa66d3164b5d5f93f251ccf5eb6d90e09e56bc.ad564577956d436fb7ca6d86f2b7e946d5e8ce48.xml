{"nodes":[{"pos":[500,523],"content":"CaseInsensitiveComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"CaseInsensitiveComparer","pos":[0,23]}]},{"pos":[1364,1389],"content":"CaseInsensitiveComparer()","needQuote":true,"needEscape":true,"nodes":[{"content":"CaseInsensitiveComparer()","pos":[0,25]}]},{"pos":[1961,1997],"content":"CaseInsensitiveComparer(CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"CaseInsensitiveComparer(CultureInfo)","pos":[0,36]}]},{"pos":[2442,2476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2737,2759],"content":"Compare(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(Object,Object)","pos":[0,22]}]},{"pos":[3112,3146],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3204,3238],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3295,3329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3532,3539],"content":"Default","needQuote":true,"needEscape":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[3910,3944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4165,4181],"content":"DefaultInvariant","needQuote":true,"needEscape":true,"nodes":[{"content":"DefaultInvariant","pos":[0,16]}]},{"pos":[4579,4613],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4724,4737],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[4875,4900],"content":"CaseInsensitiveComparer()","needQuote":true,"needEscape":true,"nodes":[{"content":"CaseInsensitiveComparer()","pos":[0,25]}]},{"pos":[5219,5255],"content":"CaseInsensitiveComparer(CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"CaseInsensitiveComparer(CultureInfo)","pos":[0,36]}]},{"pos":[5524,5535],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[5777,5799],"content":"Compare(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(Object,Object)","pos":[0,22]}]},{"pos":[6006,6011],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6125,6131],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6247,6253],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6442,6449],"content":"Default","needQuote":true,"needEscape":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[6668,6691],"content":"CaseInsensitiveComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"CaseInsensitiveComparer","pos":[0,23]}]},{"pos":[6935,6951],"content":"DefaultInvariant","needQuote":true,"needEscape":true,"nodes":[{"content":"DefaultInvariant","pos":[0,16]}]},{"pos":[7188,7211],"content":"CaseInsensitiveComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"CaseInsensitiveComparer","pos":[0,23]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.CaseInsensitiveComparer\n  id: CaseInsensitiveComparer\n  children:\n  - System.Collections.CaseInsensitiveComparer.#ctor\n  - System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)\n  - System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)\n  - System.Collections.CaseInsensitiveComparer.Default\n  - System.Collections.CaseInsensitiveComparer.DefaultInvariant\n  langs:\n  - csharp\n  name: CaseInsensitiveComparer\n  nameWithType: CaseInsensitiveComparer\n  fullName: System.Collections.CaseInsensitiveComparer\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CaseInsensitiveComparer : System.Collections.IComparer\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IComparer\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CaseInsensitiveComparer.#ctor\n  id: '#ctor'\n  parent: System.Collections.CaseInsensitiveComparer\n  langs:\n  - csharp\n  name: CaseInsensitiveComparer()\n  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer()\n  fullName: System.Collections.CaseInsensitiveComparer.CaseInsensitiveComparer()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public CaseInsensitiveComparer ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)\n  id: '#ctor(System.Globalization.CultureInfo)'\n  parent: System.Collections.CaseInsensitiveComparer\n  langs:\n  - csharp\n  name: CaseInsensitiveComparer(CultureInfo)\n  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)\n  fullName: System.Collections.CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);\n    parameters:\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)\n  id: Compare(System.Object,System.Object)\n  parent: System.Collections.CaseInsensitiveComparer\n  langs:\n  - csharp\n  name: Compare(Object,Object)\n  nameWithType: CaseInsensitiveComparer.Compare(Object,Object)\n  fullName: System.Collections.CaseInsensitiveComparer.Compare(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public int Compare (object a, object b);\n    parameters:\n    - id: a\n      type: System.Object\n      description: Parameter description to be filled\n    - id: b\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CaseInsensitiveComparer.Default\n  id: Default\n  parent: System.Collections.CaseInsensitiveComparer\n  langs:\n  - csharp\n  name: Default\n  nameWithType: CaseInsensitiveComparer.Default\n  fullName: System.Collections.CaseInsensitiveComparer.Default\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public static System.Collections.CaseInsensitiveComparer Default { get; }\n    return:\n      type: System.Collections.CaseInsensitiveComparer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CaseInsensitiveComparer.DefaultInvariant\n  id: DefaultInvariant\n  parent: System.Collections.CaseInsensitiveComparer\n  langs:\n  - csharp\n  name: DefaultInvariant\n  nameWithType: CaseInsensitiveComparer.DefaultInvariant\n  fullName: System.Collections.CaseInsensitiveComparer.DefaultInvariant\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }\n    return:\n      type: System.Collections.CaseInsensitiveComparer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.CaseInsensitiveComparer.#ctor\n  parent: System.Collections.CaseInsensitiveComparer\n  isExternal: false\n  name: CaseInsensitiveComparer()\n  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer()\n  fullName: System.Collections.CaseInsensitiveComparer.CaseInsensitiveComparer()\n- uid: System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)\n  parent: System.Collections.CaseInsensitiveComparer\n  isExternal: false\n  name: CaseInsensitiveComparer(CultureInfo)\n  nameWithType: CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)\n  fullName: System.Collections.CaseInsensitiveComparer.CaseInsensitiveComparer(CultureInfo)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)\n  parent: System.Collections.CaseInsensitiveComparer\n  isExternal: false\n  name: Compare(Object,Object)\n  nameWithType: CaseInsensitiveComparer.Compare(Object,Object)\n  fullName: System.Collections.CaseInsensitiveComparer.Compare(Object,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CaseInsensitiveComparer.Default\n  parent: System.Collections.CaseInsensitiveComparer\n  isExternal: false\n  name: Default\n  nameWithType: CaseInsensitiveComparer.Default\n  fullName: System.Collections.CaseInsensitiveComparer.Default\n- uid: System.Collections.CaseInsensitiveComparer\n  parent: System.Collections\n  isExternal: false\n  name: CaseInsensitiveComparer\n  nameWithType: CaseInsensitiveComparer\n  fullName: System.Collections.CaseInsensitiveComparer\n- uid: System.Collections.CaseInsensitiveComparer.DefaultInvariant\n  parent: System.Collections.CaseInsensitiveComparer\n  isExternal: false\n  name: DefaultInvariant\n  nameWithType: CaseInsensitiveComparer.DefaultInvariant\n  fullName: System.Collections.CaseInsensitiveComparer.DefaultInvariant\n- uid: System.Collections.CaseInsensitiveComparer\n  parent: System.Collections\n  isExternal: false\n  name: CaseInsensitiveComparer\n  nameWithType: CaseInsensitiveComparer\n  fullName: System.Collections.CaseInsensitiveComparer\n"}