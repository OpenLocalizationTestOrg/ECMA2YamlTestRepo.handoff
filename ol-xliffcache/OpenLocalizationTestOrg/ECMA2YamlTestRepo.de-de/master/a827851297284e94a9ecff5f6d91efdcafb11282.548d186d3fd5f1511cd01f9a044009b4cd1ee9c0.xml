{"nodes":[{"pos":[1326,1359],"content":"KeyContainerPermissionAccessEntry","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionAccessEntry","pos":[0,33]}]},{"pos":[2353,2429],"content":"KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)","pos":[0,76]}]},{"pos":[3091,3125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3229,3263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3644,3713],"content":"KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)","pos":[0,69]}]},{"pos":[4308,4342],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4446,4480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4969,5064],"content":"KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)","pos":[0,95]}]},{"pos":[5772,5806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5875,5909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5977,6011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6084,6118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6181,6215],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6319,6353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6622,6636],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7010,7044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7103,7137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7374,7379],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[7806,7840],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8089,8102],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8472,8506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8765,8781],"content":"KeyContainerName","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerName","pos":[0,16]}]},{"pos":[9150,9184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9425,9432],"content":"KeySpec","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySpec","pos":[0,7]}]},{"pos":[9770,9804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10047,10055],"content":"KeyStore","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyStore","pos":[0,8]}]},{"pos":[10400,10434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10685,10697],"content":"ProviderName","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderName","pos":[0,12]}]},{"pos":[11054,11088],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11339,11351],"content":"ProviderType","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderType","pos":[0,12]}]},{"pos":[11704,11738],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11849,11862],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[12138,12214],"content":"KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)","pos":[0,76]}]},{"pos":[12610,12623],"content":"CspParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"CspParameters","pos":[0,13]}]},{"pos":[12838,12865],"content":"KeyContainerPermissionFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionFlags","pos":[0,27]}]},{"pos":[13224,13293],"content":"KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)","pos":[0,69]}]},{"pos":[13624,13630],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13809,13836],"content":"KeyContainerPermissionFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionFlags","pos":[0,27]}]},{"pos":[14249,14344],"content":"KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)","pos":[0,95]}]},{"pos":[14727,14733],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14849,14855],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14970,14975],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15089,15095],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15210,15215],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15392,15419],"content":"KeyContainerPermissionFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionFlags","pos":[0,27]}]},{"pos":[15723,15737],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15959,15966],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16084,16090],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16315,16320],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[16586,16613],"content":"KeyContainerPermissionFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerPermissionFlags","pos":[0,27]}]},{"pos":[16907,16920],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17138,17143],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17377,17393],"content":"KeyContainerName","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyContainerName","pos":[0,16]}]},{"pos":[17618,17624],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[17851,17858],"content":"KeySpec","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySpec","pos":[0,7]}]},{"pos":[18064,18069],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18295,18303],"content":"KeyStore","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyStore","pos":[0,8]}]},{"pos":[18512,18518],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18750,18762],"content":"ProviderName","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderName","pos":[0,12]}]},{"pos":[18979,18985],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19217,19229],"content":"ProviderType","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderType","pos":[0,12]}]},{"pos":[19445,19450],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  id: KeyContainerPermissionAccessEntry\n  children:\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry\n  nameWithType: KeyContainerPermissionAccessEntry\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class KeyContainerPermissionAccessEntry\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public KeyContainerPermissionAccessEntry (System.Security.Cryptography.CspParameters parameters, System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.CspParameters\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public KeyContainerPermissionAccessEntry (string keyContainerName, System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: keyContainerName\n      type: System.String\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  id: '#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)'\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public KeyContainerPermissionAccessEntry (string keyStore, string providerName, int providerType, string keyContainerName, int keySpec, System.Security.Permissions.KeyContainerPermissionFlags flags);\n    parameters:\n    - id: keyStore\n      type: System.String\n      description: Parameter description to be filled\n    - id: providerName\n      type: System.String\n      description: Parameter description to be filled\n    - id: providerType\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: keyContainerName\n      type: System.String\n      description: Parameter description to be filled\n    - id: keySpec\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  id: Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: KeyContainerPermissionAccessEntry.Flags\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  id: KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public string KeyContainerName { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  id: KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAccessEntry.KeySpec\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public int KeySpec { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  id: KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAccessEntry.KeyStore\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public string KeyStore { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  id: ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderName\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public string ProviderName { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  id: ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  langs:\n  - csharp\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderType\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public int ProviderType { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermissionAccessEntry.Flags\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAccessEntry.KeySpec\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAccessEntry.KeyStore\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderName\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry\n  isExternal: false\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAccessEntry.ProviderType\n  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}