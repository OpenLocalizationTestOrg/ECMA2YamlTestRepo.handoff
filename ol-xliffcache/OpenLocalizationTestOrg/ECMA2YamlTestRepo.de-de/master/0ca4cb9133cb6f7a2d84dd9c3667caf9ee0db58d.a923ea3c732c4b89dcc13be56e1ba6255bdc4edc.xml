{"nodes":[{"pos":[611,614],"content":"Row","needQuote":true,"needEscape":true,"nodes":[{"content":"Row","pos":[0,3]}]},{"pos":[1734,1806],"content":"Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Row(KeyValuePair&lt;String,DbExpression&gt;,KeyValuePair&lt;String,DbExpression&gt;)","pos":[0,72],"source":"Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)"}]},{"pos":[2579,2613],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2768,2802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3145,3161],"content":"op_Implicit(Row)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit(Row)","pos":[0,16]}]},{"pos":[3669,3703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3792,3826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4061,4075],"content":"ToExpression()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToExpression()","pos":[0,14]}]},{"pos":[4528,4562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4673,4686],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5049,5121],"content":"Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Row(KeyValuePair&lt;String,DbExpression&gt;,KeyValuePair&lt;String,DbExpression&gt;)","pos":[0,72],"source":"Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)"}]},{"pos":[5526,5559],"content":"KeyValuePair<String,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,DbExpression&gt;","pos":[0,33],"source":"KeyValuePair<String,DbExpression>"}]},{"pos":[5894,5927],"content":"KeyValuePair<String,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,DbExpression&gt;","pos":[0,33],"source":"KeyValuePair<String,DbExpression>"}]},{"pos":[6312,6328],"content":"op_Implicit(Row)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit(Row)","pos":[0,16]}]},{"pos":[6571,6583],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[6819,6822],"content":"Row","needQuote":true,"needEscape":true,"nodes":[{"content":"Row","pos":[0,3]}]},{"pos":[7075,7089],"content":"ToExpression()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToExpression()","pos":[0,14]}]},{"pos":[7339,7362],"content":"DbNewInstanceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNewInstanceExpression","pos":[0,23]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  id: Row\n  children:\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  langs:\n  - csharp\n  name: Row\n  nameWithType: Row\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  type: Class\n  syntax:\n    content: public sealed class Row\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  id: '#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])'\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  langs:\n  - csharp\n  name: Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  nameWithType: Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public Row (System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> columnValue, System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>[] columnValues);\n    parameters:\n    - id: columnValue\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: columnValues\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)\n  id: op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  langs:\n  - csharp\n  name: op_Implicit(Row)\n  nameWithType: Row.op_Implicit(Row)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(Row)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (System.Data.Common.CommandTrees.ExpressionBuilder.Row row);\n    parameters:\n    - id: row\n      type: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  id: ToExpression\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  langs:\n  - csharp\n  name: ToExpression()\n  nameWithType: Row.ToExpression()\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbNewInstanceExpression ToExpression ();\n    parameters: []\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  nameWithType: Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.Row(KeyValuePair<String,DbExpression>,KeyValuePair<String,DbExpression>)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,DbExpression>\n  nameWithType: KeyValuePair<String,DbExpression>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,DbExpression>\n  nameWithType: KeyValuePair<String,DbExpression>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>[]\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: op_Implicit(Row)\n  nameWithType: Row.op_Implicit(Row)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(Row)\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder\n  isExternal: false\n  name: Row\n  nameWithType: Row\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: ToExpression()\n  nameWithType: Row.ToExpression()\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression()\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n"}