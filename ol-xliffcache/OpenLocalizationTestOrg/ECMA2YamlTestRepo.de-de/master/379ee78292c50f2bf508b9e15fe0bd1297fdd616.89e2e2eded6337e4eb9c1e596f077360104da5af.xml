{"nodes":[{"pos":[818,828],"content":"Literal<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Literal<T>"},{"pos":[1241,1275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3038,3047],"content":"Literal()","needQuote":true,"needEscape":true,"nodes":[{"content":"Literal()","pos":[0,9]}]},{"pos":[3510,3520],"content":"Literal(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Literal(T)","pos":[0,10]}]},{"pos":[3836,3870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4159,4194],"content":"CacheMetadata(CodeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(CodeActivityMetadata)","pos":[0,35]}]},{"pos":[4658,4692],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5005,5048],"content":"CanConvertToString(IValueSerializerContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertToString(IValueSerializerContext)","pos":[0,43]}]},{"pos":[5533,5567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5626,5660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5967,6007],"content":"ConvertToString(IValueSerializerContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertToString(IValueSerializerContext)","pos":[0,40]}]},{"pos":[6485,6519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6577,6611],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6886,6914],"content":"Execute(CodeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(CodeActivityContext)","pos":[0,28]}]},{"pos":[7351,7385],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7431,7465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7688,7710],"content":"ShouldSerializeValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"ShouldSerializeValue()","pos":[0,22]}]},{"pos":[8068,8102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8301,8311],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8643,8677],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8870,8875],"content":"Value","needQuote":true,"needEscape":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[9161,9195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9325,9358],"content":"System.Activities.CodeActivity<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"System.Activities.CodeActivity<T>"},{"pos":[9490,9499],"content":"Literal()","needQuote":true,"needEscape":true,"nodes":[{"content":"Literal()","pos":[0,9]}]},{"pos":[9735,9745],"content":"Literal(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Literal(T)","pos":[0,10]}]},{"pos":[9897,9898],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[10110,10145],"content":"CacheMetadata(CodeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(CodeActivityMetadata)","pos":[0,35]}]},{"pos":[10400,10420],"content":"CodeActivityMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeActivityMetadata","pos":[0,20]}]},{"pos":[10700,10743],"content":"CanConvertToString(IValueSerializerContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertToString(IValueSerializerContext)","pos":[0,43]}]},{"pos":[10979,10986],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11150,11173],"content":"IValueSerializerContext","needQuote":true,"needEscape":true,"nodes":[{"content":"IValueSerializerContext","pos":[0,23]}]},{"pos":[11460,11500],"content":"ConvertToString(IValueSerializerContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertToString(IValueSerializerContext)","pos":[0,40]}]},{"pos":[11729,11735],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11897,11920],"content":"IValueSerializerContext","needQuote":true,"needEscape":true,"nodes":[{"content":"IValueSerializerContext","pos":[0,23]}]},{"pos":[12191,12219],"content":"Execute(CodeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(CodeActivityContext)","pos":[0,28]}]},{"pos":[12407,12408],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[12542,12561],"content":"CodeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeActivityContext","pos":[0,19]}]},{"pos":[12794,12816],"content":"ShouldSerializeValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"ShouldSerializeValue()","pos":[0,22]}]},{"pos":[13010,13017],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13203,13213],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13382,13388],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13569,13574],"content":"Value","needQuote":true,"needEscape":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[13716,13717],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.Literal`1\n  id: Literal`1\n  children:\n  - System.Activities.Expressions.Literal`1.#ctor\n  - System.Activities.Expressions.Literal`1.#ctor(`0)\n  - System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  - System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  - System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  - System.Activities.Expressions.Literal`1.ToString\n  - System.Activities.Expressions.Literal`1.Value\n  langs:\n  - csharp\n  name: Literal<T>\n  nameWithType: Literal<T>\n  fullName: System.Activities.Expressions.Literal<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerStepThrough]\n\n      [System.Windows.Markup.ContentProperty(\"Value\")]\n\n      public sealed class Literal<T> : System.Activities.CodeActivity<T>, System.Activities.XamlIntegration.IValueSerializableExpression\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements:\n  - System.Activities.XamlIntegration.IValueSerializableExpression\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Expressions.Literal`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Literal()\n  nameWithType: Literal<T>.Literal()\n  fullName: System.Activities.Expressions.Literal<T>.Literal()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public Literal ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Expressions.Literal`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Literal(T)\n  nameWithType: Literal<T>.Literal(T)\n  fullName: System.Activities.Expressions.Literal<T>.Literal(T)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public Literal (T value);\n    parameters:\n    - id: value\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Literal<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.Literal<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.CanConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.Literal<T>.CanConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public bool CanConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  id: ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.ConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.Literal<T>.ConvertToString(IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public string ConvertToString (System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: Literal<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.Literal<T>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override T Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  id: ShouldSerializeValue\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: ShouldSerializeValue()\n  nameWithType: Literal<T>.ShouldSerializeValue()\n  fullName: System.Activities.Expressions.Literal<T>.ShouldSerializeValue()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public bool ShouldSerializeValue ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Expressions.Literal`1.ToString\n  id: ToString\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Literal<T>.ToString()\n  fullName: System.Activities.Expressions.Literal<T>.ToString()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Expressions.Literal`1.Value\n  id: Value\n  parent: System.Activities.Expressions.Literal`1\n  langs:\n  - csharp\n  name: Value\n  nameWithType: Literal<T>.Value\n  fullName: System.Activities.Expressions.Literal<T>.Value\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public T Value { get; set; }\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.CodeActivity`1\n  isExternal: false\n  name: System.Activities.CodeActivity<T>\n- uid: System.Activities.Expressions.Literal`1.#ctor\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Literal()\n  nameWithType: Literal<T>.Literal()\n  fullName: System.Activities.Expressions.Literal<T>.Literal()\n- uid: System.Activities.Expressions.Literal`1.#ctor(`0)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Literal(T)\n  nameWithType: Literal<T>.Literal(T)\n  fullName: System.Activities.Expressions.Literal<T>.Literal(T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.Expressions.Literal`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: Literal<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.Literal<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: CanConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.CanConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.Literal<T>.CanConvertToString(IValueSerializerContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Markup.IValueSerializerContext\n  parent: System.Windows.Markup\n  isExternal: true\n  name: IValueSerializerContext\n  nameWithType: IValueSerializerContext\n  fullName: System.Windows.Markup.IValueSerializerContext\n- uid: System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ConvertToString(IValueSerializerContext)\n  nameWithType: Literal<T>.ConvertToString(IValueSerializerContext)\n  fullName: System.Activities.Expressions.Literal<T>.ConvertToString(IValueSerializerContext)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.IValueSerializerContext\n  parent: System.Windows.Markup\n  isExternal: true\n  name: IValueSerializerContext\n  nameWithType: IValueSerializerContext\n  fullName: System.Windows.Markup.IValueSerializerContext\n- uid: System.Activities.Expressions.Literal`1.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: Literal<T>.Execute(CodeActivityContext)\n  fullName: System.Activities.Expressions.Literal<T>.Execute(CodeActivityContext)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Expressions.Literal`1.ShouldSerializeValue\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ShouldSerializeValue()\n  nameWithType: Literal<T>.ShouldSerializeValue()\n  fullName: System.Activities.Expressions.Literal<T>.ShouldSerializeValue()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Expressions.Literal`1.ToString\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: ToString()\n  nameWithType: Literal<T>.ToString()\n  fullName: System.Activities.Expressions.Literal<T>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.Literal`1.Value\n  parent: System.Activities.Expressions.Literal`1\n  isExternal: false\n  name: Value\n  nameWithType: Literal<T>.Value\n  fullName: System.Activities.Expressions.Literal<T>.Value\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n"}