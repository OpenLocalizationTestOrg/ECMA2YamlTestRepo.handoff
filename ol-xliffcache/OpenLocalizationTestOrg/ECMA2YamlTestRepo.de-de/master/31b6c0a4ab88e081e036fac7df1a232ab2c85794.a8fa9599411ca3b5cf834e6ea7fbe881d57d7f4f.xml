{"nodes":[{"pos":[784,806],"content":"PixelFormatChannelMask","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelFormatChannelMask","pos":[0,22]}]},{"pos":[1280,1294],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[1644,1678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1737,1771],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2216,2269],"content":"Equals(PixelFormatChannelMask,PixelFormatChannelMask)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(PixelFormatChannelMask,PixelFormatChannelMask)","pos":[0,53]}]},{"pos":[2815,2849],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2941,2975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3034,3068],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3345,3358],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3700,3734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3933,3937],"content":"Mask","needQuote":true,"needEscape":true,"nodes":[{"content":"Mask","pos":[0,4]}]},{"pos":[4301,4335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4726,4784],"content":"op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)","pos":[0,58]}]},{"pos":[5347,5381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5473,5507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5566,5600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5995,6055],"content":"op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)","pos":[0,60]}]},{"pos":[6624,6658],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6750,6784],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6843,6877],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6991,7007],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[7163,7177],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7370,7377],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7495,7501],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7780,7833],"content":"Equals(PixelFormatChannelMask,PixelFormatChannelMask)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(PixelFormatChannelMask,PixelFormatChannelMask)","pos":[0,53]}]},{"pos":[8104,8111],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8273,8295],"content":"PixelFormatChannelMask","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelFormatChannelMask","pos":[0,22]}]},{"pos":[8501,8523],"content":"PixelFormatChannelMask","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelFormatChannelMask","pos":[0,22]}]},{"pos":[8764,8777],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8966,8971],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9157,9161],"content":"Mask","needQuote":true,"needEscape":true,"nodes":[{"content":"Mask","pos":[0,4]}]},{"pos":[9385,9396],"content":"IList<ph id=\"ph1\">&lt;Byte&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<Byte>"},{"pos":[9717,9775],"content":"op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)","pos":[0,58]}]},{"pos":[10056,10063],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10225,10247],"content":"PixelFormatChannelMask","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelFormatChannelMask","pos":[0,22]}]},{"pos":[10453,10475],"content":"PixelFormatChannelMask","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelFormatChannelMask","pos":[0,22]}]},{"pos":[10807,10867],"content":"op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)","pos":[0,60]}]},{"pos":[11152,11159],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11321,11343],"content":"PixelFormatChannelMask","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelFormatChannelMask","pos":[0,22]}]},{"pos":[11549,11571],"content":"PixelFormatChannelMask","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelFormatChannelMask","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.PixelFormatChannelMask\n  id: PixelFormatChannelMask\n  children:\n  - System.Windows.Media.PixelFormatChannelMask.Equals(System.Object)\n  - System.Windows.Media.PixelFormatChannelMask.Equals(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  - System.Windows.Media.PixelFormatChannelMask.GetHashCode\n  - System.Windows.Media.PixelFormatChannelMask.Mask\n  - System.Windows.Media.PixelFormatChannelMask.op_Equality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  - System.Windows.Media.PixelFormatChannelMask.op_Inequality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  langs:\n  - csharp\n  name: PixelFormatChannelMask\n  nameWithType: PixelFormatChannelMask\n  fullName: System.Windows.Media.PixelFormatChannelMask\n  type: Struct\n  syntax:\n    content: public struct PixelFormatChannelMask\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: PixelFormatChannelMask.Equals(Object)\n  fullName: System.Windows.Media.PixelFormatChannelMask.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.PixelFormatChannelMask.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  id: Equals(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static bool Equals (System.Windows.Media.PixelFormatChannelMask left, System.Windows.Media.PixelFormatChannelMask right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.PixelFormatChannelMask.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PixelFormatChannelMask.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: PixelFormatChannelMask.GetHashCode()\n  fullName: System.Windows.Media.PixelFormatChannelMask.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PixelFormatChannelMask.Mask\n  id: Mask\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: Mask\n  nameWithType: PixelFormatChannelMask.Mask\n  fullName: System.Windows.Media.PixelFormatChannelMask.Mask\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Collections.Generic.IList<byte> Mask { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Byte}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Equality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  id: op_Equality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static bool op_Equality (System.Windows.Media.PixelFormatChannelMask left, System.Windows.Media.PixelFormatChannelMask right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Inequality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  id: op_Inequality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  langs:\n  - csharp\n  name: op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Media.PixelFormatChannelMask left, System.Windows.Media.PixelFormatChannelMask right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.Media.PixelFormatChannelMask\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals(System.Object)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PixelFormatChannelMask.Equals(Object)\n  fullName: System.Windows.Media.PixelFormatChannelMask.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.Equals(PixelFormatChannelMask,PixelFormatChannelMask)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PixelFormatChannelMask\n  parent: System.Windows.Media\n  isExternal: false\n  name: PixelFormatChannelMask\n  nameWithType: PixelFormatChannelMask\n  fullName: System.Windows.Media.PixelFormatChannelMask\n- uid: System.Windows.Media.PixelFormatChannelMask\n  parent: System.Windows.Media\n  isExternal: false\n  name: PixelFormatChannelMask\n  nameWithType: PixelFormatChannelMask\n  fullName: System.Windows.Media.PixelFormatChannelMask\n- uid: System.Windows.Media.PixelFormatChannelMask.GetHashCode\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PixelFormatChannelMask.GetHashCode()\n  fullName: System.Windows.Media.PixelFormatChannelMask.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.PixelFormatChannelMask.Mask\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: Mask\n  nameWithType: PixelFormatChannelMask.Mask\n  fullName: System.Windows.Media.PixelFormatChannelMask.Mask\n- uid: System.Collections.Generic.IList{System.Byte}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<Byte>\n  nameWithType: IList<Byte>\n  fullName: System.Collections.Generic.IList<System.Byte>\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Equality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.op_Equality(PixelFormatChannelMask,PixelFormatChannelMask)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PixelFormatChannelMask\n  parent: System.Windows.Media\n  isExternal: false\n  name: PixelFormatChannelMask\n  nameWithType: PixelFormatChannelMask\n  fullName: System.Windows.Media.PixelFormatChannelMask\n- uid: System.Windows.Media.PixelFormatChannelMask\n  parent: System.Windows.Media\n  isExternal: false\n  name: PixelFormatChannelMask\n  nameWithType: PixelFormatChannelMask\n  fullName: System.Windows.Media.PixelFormatChannelMask\n- uid: System.Windows.Media.PixelFormatChannelMask.op_Inequality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  name: op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  nameWithType: PixelFormatChannelMask.op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n  fullName: System.Windows.Media.PixelFormatChannelMask.op_Inequality(PixelFormatChannelMask,PixelFormatChannelMask)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PixelFormatChannelMask\n  parent: System.Windows.Media\n  isExternal: false\n  name: PixelFormatChannelMask\n  nameWithType: PixelFormatChannelMask\n  fullName: System.Windows.Media.PixelFormatChannelMask\n- uid: System.Windows.Media.PixelFormatChannelMask\n  parent: System.Windows.Media\n  isExternal: false\n  name: PixelFormatChannelMask\n  nameWithType: PixelFormatChannelMask\n  fullName: System.Windows.Media.PixelFormatChannelMask\n- uid: System.Windows.Media.PixelFormatChannelMask.Equals*\n  parent: System.Windows.Media.PixelFormatChannelMask\n  isExternal: false\n  nameWithType: PixelFormatChannelMask.\n"}