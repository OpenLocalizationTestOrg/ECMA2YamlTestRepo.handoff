{"nodes":[{"pos":[1122,1134],"content":"TripleDESCng","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDESCng","pos":[0,12]}]},{"pos":[3375,3389],"content":"TripleDESCng()","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDESCng()","pos":[0,14]}]},{"pos":[3889,3909],"content":"TripleDESCng(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDESCng(String)","pos":[0,20]}]},{"pos":[4267,4301],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4612,4644],"content":"TripleDESCng(String,CngProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDESCng(String,CngProvider)","pos":[0,32]}]},{"pos":[5077,5111],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5203,5237],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5642,5692],"content":"TripleDESCng(String,CngProvider,CngKeyOpenOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDESCng(String,CngProvider,CngKeyOpenOptions)","pos":[0,50]}]},{"pos":[6221,6255],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6347,6381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6482,6516],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6733,6750],"content":"CreateDecryptor()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDecryptor()","pos":[0,17]}]},{"pos":[7170,7204],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7550,7580],"content":"CreateDecryptor(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDecryptor(Byte[],Byte[])","pos":[0,30]}]},{"pos":[8023,8057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8119,8153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8243,8277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8565,8582],"content":"CreateEncryptor()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateEncryptor()","pos":[0,17]}]},{"pos":[9002,9036],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9382,9412],"content":"CreateEncryptor(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateEncryptor(Byte[],Byte[])","pos":[0,30]}]},{"pos":[9855,9889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9951,9985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10075,10109],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10413,10429],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[10789,10823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11030,11042],"content":"GenerateIV()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateIV()","pos":[0,12]}]},{"pos":[11525,11538],"content":"GenerateKey()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey()","pos":[0,13]}]},{"pos":[12008,12011],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[12313,12347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12548,12555],"content":"KeySize","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySize","pos":[0,7]}]},{"pos":[12865,12899],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13035,13073],"content":"System.Security.Cryptography.TripleDES","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.TripleDES","pos":[0,38]}]},{"pos":[13209,13223],"content":"TripleDESCng()","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDESCng()","pos":[0,14]}]},{"pos":[13487,13507],"content":"TripleDESCng(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDESCng(String)","pos":[0,20]}]},{"pos":[13699,13705],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13946,13978],"content":"TripleDESCng(String,CngProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDESCng(String,CngProvider)","pos":[0,32]}]},{"pos":[14194,14200],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14365,14376],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[14696,14746],"content":"TripleDESCng(String,CngProvider,CngKeyOpenOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDESCng(String,CngProvider,CngKeyOpenOptions)","pos":[0,50]}]},{"pos":[14998,15004],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15169,15180],"content":"CngProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProvider","pos":[0,11]}]},{"pos":[15383,15400],"content":"CngKeyOpenOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyOpenOptions","pos":[0,17]}]},{"pos":[15639,15656],"content":"CreateDecryptor()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDecryptor()","pos":[0,17]}]},{"pos":[15896,15912],"content":"ICryptoTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"ICryptoTransform","pos":[0,16]}]},{"pos":[16178,16208],"content":"CreateDecryptor(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDecryptor(Byte[],Byte[])","pos":[0,30]}]},{"pos":[16474,16490],"content":"ICryptoTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"ICryptoTransform","pos":[0,16]}]},{"pos":[16646,16650],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[16762,16766],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[16959,16976],"content":"CreateEncryptor()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateEncryptor()","pos":[0,17]}]},{"pos":[17216,17232],"content":"ICryptoTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"ICryptoTransform","pos":[0,16]}]},{"pos":[17498,17528],"content":"CreateEncryptor(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateEncryptor(Byte[],Byte[])","pos":[0,30]}]},{"pos":[17794,17810],"content":"ICryptoTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"ICryptoTransform","pos":[0,16]}]},{"pos":[17966,17970],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[18082,18086],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[18287,18303],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[18488,18495],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18687,18699],"content":"GenerateIV()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateIV()","pos":[0,12]}]},{"pos":[18950,18963],"content":"GenerateKey()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey()","pos":[0,13]}]},{"pos":[19208,19211],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[19367,19371],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[19556,19563],"content":"KeySize","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySize","pos":[0,7]}]},{"pos":[19728,19733],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.TripleDESCng\n  id: TripleDESCng\n  children:\n  - System.Security.Cryptography.TripleDESCng.#ctor\n  - System.Security.Cryptography.TripleDESCng.#ctor(System.String)\n  - System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)\n  - System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)\n  - System.Security.Cryptography.TripleDESCng.CreateDecryptor\n  - System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.TripleDESCng.CreateEncryptor\n  - System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.TripleDESCng.Dispose(System.Boolean)\n  - System.Security.Cryptography.TripleDESCng.GenerateIV\n  - System.Security.Cryptography.TripleDESCng.GenerateKey\n  - System.Security.Cryptography.TripleDESCng.Key\n  - System.Security.Cryptography.TripleDESCng.KeySize\n  langs:\n  - csharp\n  name: TripleDESCng\n  nameWithType: TripleDESCng\n  fullName: System.Security.Cryptography.TripleDESCng\n  type: Class\n  syntax:\n    content: 'public sealed class TripleDESCng : System.Security.Cryptography.TripleDES'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.TripleDES\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  - System.Security.Cryptography.TripleDES.Create\n  - System.Security.Cryptography.TripleDES.Create(System.String)\n  - System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: TripleDESCng()\n  nameWithType: TripleDESCng.TripleDESCng()\n  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public TripleDESCng ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: TripleDESCng(String)\n  nameWithType: TripleDESCng.TripleDESCng(String)\n  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public TripleDESCng (string keyName);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)\n  id: '#ctor(System.String,System.Security.Cryptography.CngProvider)'\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: TripleDESCng(String,CngProvider)\n  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider)\n  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public TripleDESCng (string keyName, System.Security.Cryptography.CngProvider provider);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.Security.Cryptography.CngProvider\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)\n  id: '#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)'\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: TripleDESCng(String,CngProvider,CngKeyOpenOptions)\n  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)\n  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public TripleDESCng (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);\n    parameters:\n    - id: keyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.Security.Cryptography.CngProvider\n      description: Parameter description to be filled\n    - id: openOptions\n      type: System.Security.Cryptography.CngKeyOpenOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor\n  id: CreateDecryptor\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: CreateDecryptor()\n  nameWithType: TripleDESCng.CreateDecryptor()\n  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.TripleDESCng.CreateDecryptor*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: TripleDESCng.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rgbIV\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.TripleDESCng.CreateDecryptor*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor\n  id: CreateEncryptor\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: CreateEncryptor()\n  nameWithType: TripleDESCng.CreateEncryptor()\n  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.TripleDESCng.CreateEncryptor*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: TripleDESCng.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rgbIV\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.TripleDESCng.CreateEncryptor*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: TripleDESCng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.TripleDESCng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: TripleDESCng.GenerateIV()\n  fullName: System.Security.Cryptography.TripleDESCng.GenerateIV()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: TripleDESCng.GenerateKey()\n  fullName: System.Security.Cryptography.TripleDESCng.GenerateKey()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.Key\n  id: Key\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: Key\n  nameWithType: TripleDESCng.Key\n  fullName: System.Security.Cryptography.TripleDESCng.Key\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDESCng.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.TripleDESCng\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: TripleDESCng.KeySize\n  fullName: System.Security.Cryptography.TripleDESCng.KeySize\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: System.Security.Cryptography.TripleDES\n- uid: System.Security.Cryptography.TripleDESCng.#ctor\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: TripleDESCng()\n  nameWithType: TripleDESCng.TripleDESCng()\n  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng()\n- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String)\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: TripleDESCng(String)\n  nameWithType: TripleDESCng.TripleDESCng(String)\n  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: TripleDESCng(String,CngProvider)\n  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider)\n  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: TripleDESCng(String,CngProvider,CngKeyOpenOptions)\n  nameWithType: TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)\n  fullName: System.Security.Cryptography.TripleDESCng.TripleDESCng(String,CngProvider,CngKeyOpenOptions)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngProvider\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProvider\n  nameWithType: CngProvider\n  fullName: System.Security.Cryptography.CngProvider\n- uid: System.Security.Cryptography.CngKeyOpenOptions\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyOpenOptions\n  nameWithType: CngKeyOpenOptions\n  fullName: System.Security.Cryptography.CngKeyOpenOptions\n- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: TripleDESCng.CreateDecryptor()\n  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: TripleDESCng.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.TripleDESCng.CreateDecryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: TripleDESCng.CreateEncryptor()\n  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: TripleDESCng.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.TripleDESCng.CreateEncryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.TripleDESCng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: TripleDESCng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.TripleDESCng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.TripleDESCng.GenerateIV\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: TripleDESCng.GenerateIV()\n  fullName: System.Security.Cryptography.TripleDESCng.GenerateIV()\n- uid: System.Security.Cryptography.TripleDESCng.GenerateKey\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: TripleDESCng.GenerateKey()\n  fullName: System.Security.Cryptography.TripleDESCng.GenerateKey()\n- uid: System.Security.Cryptography.TripleDESCng.Key\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: Key\n  nameWithType: TripleDESCng.Key\n  fullName: System.Security.Cryptography.TripleDESCng.Key\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.TripleDESCng.KeySize\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  name: KeySize\n  nameWithType: TripleDESCng.KeySize\n  fullName: System.Security.Cryptography.TripleDESCng.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.TripleDESCng.CreateDecryptor*\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  nameWithType: TripleDESCng.\n- uid: System.Security.Cryptography.TripleDESCng.CreateEncryptor*\n  parent: System.Security.Cryptography.TripleDESCng\n  isExternal: false\n  nameWithType: TripleDESCng.\n"}