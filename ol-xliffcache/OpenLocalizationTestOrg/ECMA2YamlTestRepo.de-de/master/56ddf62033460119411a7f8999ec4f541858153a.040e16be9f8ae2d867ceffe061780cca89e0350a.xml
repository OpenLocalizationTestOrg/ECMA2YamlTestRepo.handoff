{"nodes":[{"pos":[441,448],"content":"SHA1Cng","needQuote":true,"needEscape":true,"nodes":[{"content":"SHA1Cng","pos":[0,7]}]},{"pos":[2487,2496],"content":"SHA1Cng()","needQuote":true,"needEscape":true,"nodes":[{"content":"SHA1Cng()","pos":[0,9]}]},{"pos":[2965,2981],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[3331,3365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3640,3668],"content":"HashCore(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashCore(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[4061,4095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4158,4192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4254,4288],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4483,4494],"content":"HashFinal()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashFinal()","pos":[0,11]}]},{"pos":[4818,4852],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5049,5061],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]},{"pos":[5456,5489],"content":"System.Security.Cryptography.SHA1","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.SHA1","pos":[0,33]}]},{"pos":[5615,5624],"content":"SHA1Cng()","needQuote":true,"needEscape":true,"nodes":[{"content":"SHA1Cng()","pos":[0,9]}]},{"pos":[5861,5877],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[6052,6059],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6280,6308],"content":"HashCore(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashCore(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[6504,6508],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[6621,6626],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6739,6744],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6921,6932],"content":"HashFinal()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashFinal()","pos":[0,11]}]},{"pos":[7094,7098],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[7276,7288],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.SHA1Cng\n  id: SHA1Cng\n  children:\n  - System.Security.Cryptography.SHA1Cng.#ctor\n  - System.Security.Cryptography.SHA1Cng.Dispose(System.Boolean)\n  - System.Security.Cryptography.SHA1Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA1Cng.HashFinal\n  - System.Security.Cryptography.SHA1Cng.Initialize\n  langs:\n  - csharp\n  name: SHA1Cng\n  nameWithType: SHA1Cng\n  fullName: System.Security.Cryptography.SHA1Cng\n  type: Class\n  syntax:\n    content: 'public sealed class SHA1Cng : System.Security.Cryptography.SHA1'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  - System.Security.Cryptography.SHA1\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA1.Create\n  - System.Security.Cryptography.SHA1.Create(System.String)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.SHA1Cng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: SHA1Cng()\n  nameWithType: SHA1Cng.SHA1Cng()\n  fullName: System.Security.Cryptography.SHA1Cng.SHA1Cng()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public SHA1Cng ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.SHA1Cng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SHA1Cng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.SHA1Cng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.SHA1Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  id: HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA1Cng.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA1Cng.HashCore(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void HashCore (byte[] array, int ibStart, int cbSize);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: ibStart\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cbSize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.SHA1Cng.HashFinal\n  id: HashFinal\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: HashFinal()\n  nameWithType: SHA1Cng.HashFinal()\n  fullName: System.Security.Cryptography.SHA1Cng.HashFinal()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashFinal ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.SHA1Cng.Initialize\n  id: Initialize\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: SHA1Cng.Initialize()\n  fullName: System.Security.Cryptography.SHA1Cng.Initialize()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void Initialize ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.SHA1\n  isExternal: false\n  name: System.Security.Cryptography.SHA1\n- uid: System.Security.Cryptography.SHA1Cng.#ctor\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: SHA1Cng()\n  nameWithType: SHA1Cng.SHA1Cng()\n  fullName: System.Security.Cryptography.SHA1Cng.SHA1Cng()\n- uid: System.Security.Cryptography.SHA1Cng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SHA1Cng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.SHA1Cng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.SHA1Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA1Cng.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA1Cng.HashCore(Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.SHA1Cng.HashFinal\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: HashFinal()\n  nameWithType: SHA1Cng.HashFinal()\n  fullName: System.Security.Cryptography.SHA1Cng.HashFinal()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.SHA1Cng.Initialize\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: Initialize()\n  nameWithType: SHA1Cng.Initialize()\n  fullName: System.Security.Cryptography.SHA1Cng.Initialize()\n"}