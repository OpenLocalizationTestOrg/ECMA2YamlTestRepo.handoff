{"nodes":[{"pos":[598,617],"content":"CryptoKeyAccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule","pos":[0,19]}]},{"pos":[2169,2241],"content":"CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)","pos":[0,72]}]},{"pos":[2909,2943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3047,3081],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3176,3210],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3643,3704],"content":"CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)","pos":[0,61]}]},{"pos":[4283,4317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4421,4455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4550,4584],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4817,4832],"content":"CryptoKeyRights","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyRights","pos":[0,15]}]},{"pos":[5240,5274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5412,5452],"content":"System.Security.AccessControl.AccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.AccessRule","pos":[0,40]}]},{"pos":[5743,5815],"content":"CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)","pos":[0,72]}]},{"pos":[6175,6192],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[6404,6419],"content":"CryptoKeyRights","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyRights","pos":[0,15]}]},{"pos":[6633,6650],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[7005,7066],"content":"CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)","pos":[0,61]}]},{"pos":[7355,7361],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7532,7547],"content":"CryptoKeyRights","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyRights","pos":[0,15]}]},{"pos":[7761,7778],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[8034,8049],"content":"CryptoKeyRights","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyRights","pos":[0,15]}]},{"pos":[8301,8316],"content":"CryptoKeyRights","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyRights","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CryptoKeyAccessRule\n  id: CryptoKeyAccessRule\n  children:\n  - System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.String,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights\n  langs:\n  - csharp\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule\n  type: Class\n  syntax:\n    content: 'public sealed class CryptoKeyAccessRule : System.Security.AccessControl.AccessRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AccessRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AccessRule.AccessControlType\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  langs:\n  - csharp\n  name: CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)\n  nameWithType: CryptoKeyAccessRule.CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public CryptoKeyAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.CryptoKeyRights cryptoKeyRights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: cryptoKeyRights\n      type: System.Security.AccessControl.CryptoKeyRights\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.String,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.String,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  langs:\n  - csharp\n  name: CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)\n  nameWithType: CryptoKeyAccessRule.CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public CryptoKeyAccessRule (string identity, System.Security.AccessControl.CryptoKeyRights cryptoKeyRights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: Parameter description to be filled\n    - id: cryptoKeyRights\n      type: System.Security.AccessControl.CryptoKeyRights\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights\n  id: CryptoKeyRights\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  langs:\n  - csharp\n  name: CryptoKeyRights\n  nameWithType: CryptoKeyAccessRule.CryptoKeyRights\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public System.Security.AccessControl.CryptoKeyRights CryptoKeyRights { get; }\n    return:\n      type: System.Security.AccessControl.CryptoKeyRights\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.AccessRule\n  isExternal: false\n  name: System.Security.AccessControl.AccessRule\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  isExternal: false\n  name: CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)\n  nameWithType: CryptoKeyAccessRule.CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyAccessRule(IdentityReference,CryptoKeyRights,AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Security.AccessControl.CryptoKeyRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyRights\n  nameWithType: CryptoKeyRights\n  fullName: System.Security.AccessControl.CryptoKeyRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.#ctor(System.String,System.Security.AccessControl.CryptoKeyRights,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  isExternal: false\n  name: CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)\n  nameWithType: CryptoKeyAccessRule.CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyAccessRule(String,CryptoKeyRights,AccessControlType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.CryptoKeyRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyRights\n  nameWithType: CryptoKeyRights\n  fullName: System.Security.AccessControl.CryptoKeyRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights\n  parent: System.Security.AccessControl.CryptoKeyAccessRule\n  isExternal: false\n  name: CryptoKeyRights\n  nameWithType: CryptoKeyAccessRule.CryptoKeyRights\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule.CryptoKeyRights\n- uid: System.Security.AccessControl.CryptoKeyRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyRights\n  nameWithType: CryptoKeyRights\n  fullName: System.Security.AccessControl.CryptoKeyRights\n"}