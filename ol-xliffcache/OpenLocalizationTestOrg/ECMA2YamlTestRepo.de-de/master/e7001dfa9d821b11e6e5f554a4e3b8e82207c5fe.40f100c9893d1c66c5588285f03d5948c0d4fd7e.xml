{"nodes":[{"pos":[866,899],"content":"Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>","needQuote":true,"needEscape":true,"nodes":[{"content":"Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;","pos":[0,33],"source":"Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>"}]},{"pos":[1238,1272],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1305,1339],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1372,1406],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1439,1473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1506,1540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1573,1607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1640,1674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1710,1744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2295,2328],"content":"Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)","needQuote":true,"needEscape":true,"nodes":[{"content":"Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)","pos":[0,33]}]},{"pos":[2753,2787],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2838,2872],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2923,2957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3008,3042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3093,3127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3178,3212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3263,3297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3350,3384],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3559,3573],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3909,3943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4002,4036],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4191,4204],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[4532,4566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4709,4714],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[4988,5022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5165,5170],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[5444,5478],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5621,5626],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[5900,5934],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6077,6082],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[6356,6390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6533,6538],"content":"Item5","needQuote":true,"needEscape":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[6812,6846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6989,6994],"content":"Item6","needQuote":true,"needEscape":true,"nodes":[{"content":"Item6","pos":[0,5]}]},{"pos":[7268,7302],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7445,7450],"content":"Item7","needQuote":true,"needEscape":true,"nodes":[{"content":"Item7","pos":[0,5]}]},{"pos":[7724,7758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7899,7903],"content":"Rest","needQuote":true,"needEscape":true,"nodes":[{"content":"Rest","pos":[0,4]}]},{"pos":[8180,8214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8549,8617],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[9112,9146],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9226,9260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9317,9351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9694,9766],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[10274,10308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10396,10430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10489,10523],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10848,10918],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[11438,11472],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11529,11563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11796,11832],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[12210,12244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12301,12335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12484,12494],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12817,12851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12962,12975],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[13082,13115],"content":"Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)","needQuote":true,"needEscape":true,"nodes":[{"content":"Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)","pos":[0,33]}]},{"pos":[13337,13339],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[13424,13426],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[13511,13513],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[13598,13600],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[13685,13687],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[13772,13774],"content":"T6","needQuote":true,"needEscape":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[13859,13861],"content":"T7","needQuote":true,"needEscape":true,"nodes":[{"content":"T7","pos":[0,2]}]},{"pos":[13949,13954],"content":"TRest","needQuote":true,"needEscape":true,"nodes":[{"content":"TRest","pos":[0,5]}]},{"pos":[14092,14106],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14307,14314],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14432,14438],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14575,14588],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14785,14790],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14919,14924],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[15090,15092],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[15208,15213],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[15379,15381],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[15497,15502],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[15668,15670],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[15786,15791],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[15957,15959],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[16075,16080],"content":"Item5","needQuote":true,"needEscape":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[16246,16248],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[16364,16369],"content":"Item6","needQuote":true,"needEscape":true,"nodes":[{"content":"Item6","pos":[0,5]}]},{"pos":[16535,16537],"content":"T6","needQuote":true,"needEscape":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[16653,16658],"content":"Item7","needQuote":true,"needEscape":true,"nodes":[{"content":"Item7","pos":[0,5]}]},{"pos":[16824,16826],"content":"T7","needQuote":true,"needEscape":true,"nodes":[{"content":"T7","pos":[0,2]}]},{"pos":[16941,16945],"content":"Rest","needQuote":true,"needEscape":true,"nodes":[{"content":"Rest","pos":[0,4]}]},{"pos":[17112,17117],"content":"TRest","needQuote":true,"needEscape":true,"nodes":[{"content":"TRest","pos":[0,5]}]},{"pos":[17328,17396],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[17703,17708],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17822,17828],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17971,17980],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[18222,18294],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[18611,18618],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18736,18742],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18893,18910],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[19159,19229],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[19540,19545],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19694,19711],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[19914,19950],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[20193,20198],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20312,20318],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20452,20462],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20654,20660],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Tuple`8\n  id: Tuple`8\n  children:\n  - System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  - System.Tuple`8.Equals(System.Object)\n  - System.Tuple`8.GetHashCode\n  - System.Tuple`8.Item1\n  - System.Tuple`8.Item2\n  - System.Tuple`8.Item3\n  - System.Tuple`8.Item4\n  - System.Tuple`8.Item5\n  - System.Tuple`8.Item6\n  - System.Tuple`8.Item7\n  - System.Tuple`8.Rest\n  - System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  - System.Tuple`8.ToString\n  langs:\n  - csharp\n  name: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  type: Class\n  syntax:\n    content: 'public class Tuple<T1,T2,T3,T4,T5,T6,T7,TRest> : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: Parameter description to be filled\n    - id: T2\n      description: Parameter description to be filled\n    - id: T3\n      description: Parameter description to be filled\n    - id: T4\n      description: Parameter description to be filled\n    - id: T5\n      description: Parameter description to be filled\n    - id: T6\n      description: Parameter description to be filled\n    - id: T7\n      description: Parameter description to be filled\n    - id: TRest\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  id: '#ctor(`0,`1,`2,`3,`4,`5,`6,`7)'\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n    - id: item5\n      type: T5\n      description: Parameter description to be filled\n    - id: item6\n      type: T6\n      description: Parameter description to be filled\n    - id: item7\n      type: T7\n      description: Parameter description to be filled\n    - id: rest\n      type: TRest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.GetHashCode\n  id: GetHashCode\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.Item1\n  id: Item1\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T1 Item1 { get; }\n    return:\n      type: T1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.Item2\n  id: Item2\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T2 Item2 { get; }\n    return:\n      type: T2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.Item3\n  id: Item3\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item3\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T3 Item3 { get; }\n    return:\n      type: T3\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.Item4\n  id: Item4\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item4\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T4 Item4 { get; }\n    return:\n      type: T4\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.Item5\n  id: Item5\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item5\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T5 Item5 { get; }\n    return:\n      type: T5\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.Item6\n  id: Item6\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item6\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T6 Item6 { get; }\n    return:\n      type: T6\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.Item7\n  id: Item7\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Item7\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T7 Item7 { get; }\n    return:\n      type: T7\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.Rest\n  id: Rest\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: Rest\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public TRest Rest { get; }\n    return:\n      type: TRest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo(Object)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Tuple`8.ToString\n  id: ToString\n  parent: System.Tuple`8\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  parent: System.Tuple`8\n  isExternal: false\n  name: Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Tuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: T6\n  parent: ''\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: T7\n  parent: ''\n  isExternal: true\n  name: T7\n  nameWithType: T7\n  fullName: T7\n- uid: TRest\n  parent: ''\n  isExternal: true\n  name: TRest\n  nameWithType: TRest\n  fullName: TRest\n- uid: System.Tuple`8.Equals(System.Object)\n  parent: System.Tuple`8\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Tuple`8.GetHashCode\n  parent: System.Tuple`8\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Tuple`8.Item1\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item1\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.Tuple`8.Item2\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item2\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: System.Tuple`8.Item3\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item3\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: System.Tuple`8.Item4\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item4\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: System.Tuple`8.Item5\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item5\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: System.Tuple`8.Item6\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item6\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n- uid: T6\n  parent: ''\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: System.Tuple`8.Item7\n  parent: System.Tuple`8\n  isExternal: false\n  name: Item7\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n- uid: T7\n  parent: ''\n  isExternal: true\n  name: T7\n  nameWithType: T7\n  fullName: T7\n- uid: System.Tuple`8.Rest\n  parent: System.Tuple`8\n  isExternal: false\n  name: Rest\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n- uid: TRest\n  parent: ''\n  isExternal: true\n  name: TRest\n  nameWithType: TRest\n  fullName: TRest\n- uid: System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.Tuple`8.System#IComparable#CompareTo(System.Object)\n  parent: System.Tuple`8\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo(Object)\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Tuple`8.ToString\n  parent: System.Tuple`8\n  isExternal: false\n  name: ToString()\n  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}