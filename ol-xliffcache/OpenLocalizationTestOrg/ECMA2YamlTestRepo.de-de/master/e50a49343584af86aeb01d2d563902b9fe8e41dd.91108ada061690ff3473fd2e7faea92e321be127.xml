{"nodes":[{"pos":[695,708],"content":"PropertyToken","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyToken","pos":[0,13]}]},{"pos":[1177,1182],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[1521,1555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1774,1788],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2116,2150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2209,2243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2565,2586],"content":"Equals(PropertyToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(PropertyToken)","pos":[0,21]}]},{"pos":[2972,3006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3065,3099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3355,3368],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3688,3722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4071,4111],"content":"op_Equality(PropertyToken,PropertyToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(PropertyToken,PropertyToken)","pos":[0,40]}]},{"pos":[4585,4619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4700,4734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4793,4827],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5180,5222],"content":"op_Inequality(PropertyToken,PropertyToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(PropertyToken,PropertyToken)","pos":[0,42]}]},{"pos":[5702,5736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5817,5851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5910,5944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6131,6136],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[6413,6447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6561,6577],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[6703,6708],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[6905,6918],"content":"PropertyToken","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyToken","pos":[0,13]}]},{"pos":[7139,7153],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7330,7337],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7455,7461],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7675,7696],"content":"Equals(PropertyToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(PropertyToken)","pos":[0,21]}]},{"pos":[7887,7894],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8051,8064],"content":"PropertyToken","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyToken","pos":[0,13]}]},{"pos":[8275,8288],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8461,8466],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8720,8760],"content":"op_Equality(PropertyToken,PropertyToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(PropertyToken,PropertyToken)","pos":[0,40]}]},{"pos":[8989,8996],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9153,9166],"content":"PropertyToken","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyToken","pos":[0,13]}]},{"pos":[9351,9364],"content":"PropertyToken","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyToken","pos":[0,13]}]},{"pos":[9652,9694],"content":"op_Inequality(PropertyToken,PropertyToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(PropertyToken,PropertyToken)","pos":[0,42]}]},{"pos":[9927,9934],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10091,10104],"content":"PropertyToken","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyToken","pos":[0,13]}]},{"pos":[10289,10302],"content":"PropertyToken","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyToken","pos":[0,13]}]},{"pos":[10507,10512],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[10669,10674],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.PropertyToken\n  id: PropertyToken\n  children:\n  - System.Reflection.Emit.PropertyToken.Empty\n  - System.Reflection.Emit.PropertyToken.Equals(System.Object)\n  - System.Reflection.Emit.PropertyToken.Equals(System.Reflection.Emit.PropertyToken)\n  - System.Reflection.Emit.PropertyToken.GetHashCode\n  - System.Reflection.Emit.PropertyToken.op_Equality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)\n  - System.Reflection.Emit.PropertyToken.op_Inequality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)\n  - System.Reflection.Emit.PropertyToken.Token\n  langs:\n  - csharp\n  name: PropertyToken\n  nameWithType: PropertyToken\n  fullName: System.Reflection.Emit.PropertyToken\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct PropertyToken\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.PropertyToken.Empty\n  id: Empty\n  parent: System.Reflection.Emit.PropertyToken\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: PropertyToken.Empty\n  fullName: System.Reflection.Emit.PropertyToken.Empty\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static readonly System.Reflection.Emit.PropertyToken Empty;\n    return:\n      type: System.Reflection.Emit.PropertyToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.PropertyToken.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.PropertyToken\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: PropertyToken.Equals(Object)\n  fullName: System.Reflection.Emit.PropertyToken.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.PropertyToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.PropertyToken.Equals(System.Reflection.Emit.PropertyToken)\n  id: Equals(System.Reflection.Emit.PropertyToken)\n  parent: System.Reflection.Emit.PropertyToken\n  langs:\n  - csharp\n  name: Equals(PropertyToken)\n  nameWithType: PropertyToken.Equals(PropertyToken)\n  fullName: System.Reflection.Emit.PropertyToken.Equals(PropertyToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.PropertyToken obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.PropertyToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.PropertyToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.PropertyToken.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.PropertyToken\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: PropertyToken.GetHashCode()\n  fullName: System.Reflection.Emit.PropertyToken.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.PropertyToken.op_Equality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)\n  id: op_Equality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)\n  parent: System.Reflection.Emit.PropertyToken\n  langs:\n  - csharp\n  name: op_Equality(PropertyToken,PropertyToken)\n  nameWithType: PropertyToken.op_Equality(PropertyToken,PropertyToken)\n  fullName: System.Reflection.Emit.PropertyToken.op_Equality(PropertyToken,PropertyToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.PropertyToken a, System.Reflection.Emit.PropertyToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.PropertyToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.PropertyToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.PropertyToken.op_Inequality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)\n  id: op_Inequality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)\n  parent: System.Reflection.Emit.PropertyToken\n  langs:\n  - csharp\n  name: op_Inequality(PropertyToken,PropertyToken)\n  nameWithType: PropertyToken.op_Inequality(PropertyToken,PropertyToken)\n  fullName: System.Reflection.Emit.PropertyToken.op_Inequality(PropertyToken,PropertyToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.PropertyToken a, System.Reflection.Emit.PropertyToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.PropertyToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.PropertyToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.PropertyToken.Token\n  id: Token\n  parent: System.Reflection.Emit.PropertyToken\n  langs:\n  - csharp\n  name: Token\n  nameWithType: PropertyToken.Token\n  fullName: System.Reflection.Emit.PropertyToken.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public int Token { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Reflection.Emit.PropertyToken.Empty\n  parent: System.Reflection.Emit.PropertyToken\n  isExternal: false\n  name: Empty\n  nameWithType: PropertyToken.Empty\n  fullName: System.Reflection.Emit.PropertyToken.Empty\n- uid: System.Reflection.Emit.PropertyToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PropertyToken\n  nameWithType: PropertyToken\n  fullName: System.Reflection.Emit.PropertyToken\n- uid: System.Reflection.Emit.PropertyToken.Equals(System.Object)\n  parent: System.Reflection.Emit.PropertyToken\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PropertyToken.Equals(Object)\n  fullName: System.Reflection.Emit.PropertyToken.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.PropertyToken.Equals(System.Reflection.Emit.PropertyToken)\n  parent: System.Reflection.Emit.PropertyToken\n  isExternal: false\n  name: Equals(PropertyToken)\n  nameWithType: PropertyToken.Equals(PropertyToken)\n  fullName: System.Reflection.Emit.PropertyToken.Equals(PropertyToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.PropertyToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PropertyToken\n  nameWithType: PropertyToken\n  fullName: System.Reflection.Emit.PropertyToken\n- uid: System.Reflection.Emit.PropertyToken.GetHashCode\n  parent: System.Reflection.Emit.PropertyToken\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PropertyToken.GetHashCode()\n  fullName: System.Reflection.Emit.PropertyToken.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.PropertyToken.op_Equality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)\n  parent: System.Reflection.Emit.PropertyToken\n  isExternal: false\n  name: op_Equality(PropertyToken,PropertyToken)\n  nameWithType: PropertyToken.op_Equality(PropertyToken,PropertyToken)\n  fullName: System.Reflection.Emit.PropertyToken.op_Equality(PropertyToken,PropertyToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.PropertyToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PropertyToken\n  nameWithType: PropertyToken\n  fullName: System.Reflection.Emit.PropertyToken\n- uid: System.Reflection.Emit.PropertyToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PropertyToken\n  nameWithType: PropertyToken\n  fullName: System.Reflection.Emit.PropertyToken\n- uid: System.Reflection.Emit.PropertyToken.op_Inequality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)\n  parent: System.Reflection.Emit.PropertyToken\n  isExternal: false\n  name: op_Inequality(PropertyToken,PropertyToken)\n  nameWithType: PropertyToken.op_Inequality(PropertyToken,PropertyToken)\n  fullName: System.Reflection.Emit.PropertyToken.op_Inequality(PropertyToken,PropertyToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.PropertyToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PropertyToken\n  nameWithType: PropertyToken\n  fullName: System.Reflection.Emit.PropertyToken\n- uid: System.Reflection.Emit.PropertyToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PropertyToken\n  nameWithType: PropertyToken\n  fullName: System.Reflection.Emit.PropertyToken\n- uid: System.Reflection.Emit.PropertyToken.Token\n  parent: System.Reflection.Emit.PropertyToken\n  isExternal: false\n  name: Token\n  nameWithType: PropertyToken.Token\n  fullName: System.Reflection.Emit.PropertyToken.Token\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.PropertyToken.Equals*\n  parent: System.Reflection.Emit.PropertyToken\n  isExternal: false\n  nameWithType: PropertyToken.\n"}