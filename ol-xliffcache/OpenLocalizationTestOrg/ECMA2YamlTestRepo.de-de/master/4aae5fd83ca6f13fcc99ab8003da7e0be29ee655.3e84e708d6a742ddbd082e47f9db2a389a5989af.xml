{"nodes":[{"pos":[1667,1686],"content":"PasswordDeriveBytes","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes","pos":[0,19]}]},{"pos":[2675,2709],"content":"PasswordDeriveBytes(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(Byte[],Byte[])","pos":[0,34]}]},{"pos":[3128,3162],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3223,3257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3528,3562],"content":"PasswordDeriveBytes(String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(String,Byte[])","pos":[0,34]}]},{"pos":[3990,4024],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4088,4122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4479,4527],"content":"PasswordDeriveBytes(Byte[],Byte[],CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(Byte[],Byte[],CspParameters)","pos":[0,48]}]},{"pos":[5028,5062],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5123,5157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5252,5286],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5643,5691],"content":"PasswordDeriveBytes(String,Byte[],CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(String,Byte[],CspParameters)","pos":[0,48]}]},{"pos":[6201,6235],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6299,6333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6428,6462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6787,6834],"content":"PasswordDeriveBytes(Byte[],Byte[],String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(Byte[],Byte[],String,Int32)","pos":[0,47]}]},{"pos":[7312,7346],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7407,7441],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7506,7540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7606,7640],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7965,8012],"content":"PasswordDeriveBytes(String,Byte[],String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(String,Byte[],String,Int32)","pos":[0,47]}]},{"pos":[8502,8536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8600,8634],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8702,8736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8802,8836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9247,9308],"content":"PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)","pos":[0,61]}]},{"pos":[9868,9902],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9963,9997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10062,10096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10162,10196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10291,10325],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10736,10797],"content":"PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)","pos":[0,61]}]},{"pos":[11369,11403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11467,11501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11569,11603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11669,11703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11798,11832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12173,12215],"content":"CryptDeriveKey(String,String,Int32,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptDeriveKey(String,String,Int32,Byte[])","pos":[0,42]}]},{"pos":[12679,12713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12781,12815],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12878,12912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12974,13008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13066,13100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13347,13363],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[13734,13768],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14013,14028],"content":"GetBytes(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Int32)","pos":[0,15]}]},{"pos":[14380,14414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14472,14506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14723,14731],"content":"HashName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashName","pos":[0,8]}]},{"pos":[15050,15084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15313,15327],"content":"IterationCount","needQuote":true,"needEscape":true,"nodes":[{"content":"IterationCount","pos":[0,14]}]},{"pos":[15660,15694],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15905,15912],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[16391,16395],"content":"Salt","needQuote":true,"needEscape":true,"nodes":[{"content":"Salt","pos":[0,4]}]},{"pos":[16702,16736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16874,16914],"content":"System.Security.Cryptography.DeriveBytes","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.DeriveBytes","pos":[0,40]}]},{"pos":[17093,17127],"content":"PasswordDeriveBytes(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(Byte[],Byte[])","pos":[0,34]}]},{"pos":[17359,17363],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[17475,17479],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[17705,17739],"content":"PasswordDeriveBytes(String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(String,Byte[])","pos":[0,34]}]},{"pos":[17973,17979],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18093,18097],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[18366,18414],"content":"PasswordDeriveBytes(Byte[],Byte[],CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(Byte[],Byte[],CspParameters)","pos":[0,48]}]},{"pos":[18674,18678],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[18790,18794],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[18959,18972],"content":"CspParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"CspParameters","pos":[0,13]}]},{"pos":[19279,19327],"content":"PasswordDeriveBytes(String,Byte[],CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(String,Byte[],CspParameters)","pos":[0,48]}]},{"pos":[19589,19595],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19709,19713],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[19878,19891],"content":"CspParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"CspParameters","pos":[0,13]}]},{"pos":[20182,20229],"content":"PasswordDeriveBytes(Byte[],Byte[],String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(Byte[],Byte[],String,Int32)","pos":[0,47]}]},{"pos":[20487,20491],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[20603,20607],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[20721,20727],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20842,20847],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21100,21147],"content":"PasswordDeriveBytes(String,Byte[],String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(String,Byte[],String,Int32)","pos":[0,47]}]},{"pos":[21407,21413],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21527,21531],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[21645,21651],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21766,21771],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22067,22128],"content":"PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)","pos":[0,61]}]},{"pos":[22414,22418],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[22530,22534],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[22648,22654],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22769,22774],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22939,22952],"content":"CspParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"CspParameters","pos":[0,13]}]},{"pos":[23286,23347],"content":"PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)","pos":[0,61]}]},{"pos":[23635,23641],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23755,23759],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[23873,23879],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23994,23999],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24164,24177],"content":"CspParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"CspParameters","pos":[0,13]}]},{"pos":[24477,24519],"content":"CryptDeriveKey(String,String,Int32,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptDeriveKey(String,String,Int32,Byte[])","pos":[0,42]}]},{"pos":[24767,24771],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[24885,24891],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25007,25013],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25128,25133],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25245,25249],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[25464,25480],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[25679,25686],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25904,25919],"content":"GetBytes(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Int32)","pos":[0,15]}]},{"pos":[26113,26117],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[26230,26235],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26435,26443],"content":"HashName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashName","pos":[0,8]}]},{"pos":[26625,26631],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26839,26853],"content":"IterationCount","needQuote":true,"needEscape":true,"nodes":[{"content":"IterationCount","pos":[0,14]}]},{"pos":[27046,27051],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27248,27255],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[27517,27521],"content":"Salt","needQuote":true,"needEscape":true,"nodes":[{"content":"Salt","pos":[0,4]}]},{"pos":[27693,27697],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.PasswordDeriveBytes\n  id: PasswordDeriveBytes\n  children:\n  - System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])\n  - System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)\n  - System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)\n  - System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)\n  - System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)\n  - System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)\n  - System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)\n  - System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])\n  - System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)\n  - System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)\n  - System.Security.Cryptography.PasswordDeriveBytes.HashName\n  - System.Security.Cryptography.PasswordDeriveBytes.IterationCount\n  - System.Security.Cryptography.PasswordDeriveBytes.Reset\n  - System.Security.Cryptography.PasswordDeriveBytes.Salt\n  langs:\n  - csharp\n  name: PasswordDeriveBytes\n  nameWithType: PasswordDeriveBytes\n  fullName: System.Security.Cryptography.PasswordDeriveBytes\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class PasswordDeriveBytes : System.Security.Cryptography.DeriveBytes\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.DeriveBytes\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.DeriveBytes.Dispose\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])\n  id: '#ctor(System.Byte[],System.Byte[])'\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: PasswordDeriveBytes(Byte[],Byte[])\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[])\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public PasswordDeriveBytes (byte[] password, byte[] salt);\n    parameters:\n    - id: password\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: salt\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])\n  id: '#ctor(System.String,System.Byte[])'\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: PasswordDeriveBytes(String,Byte[])\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[])\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public PasswordDeriveBytes (string strPassword, byte[] rgbSalt);\n    parameters:\n    - id: strPassword\n      type: System.String\n      description: Parameter description to be filled\n    - id: rgbSalt\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)\n  id: '#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)'\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: PasswordDeriveBytes(Byte[],Byte[],CspParameters)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],CspParameters)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],CspParameters)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public PasswordDeriveBytes (byte[] password, byte[] salt, System.Security.Cryptography.CspParameters cspParams);\n    parameters:\n    - id: password\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: salt\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: cspParams\n      type: System.Security.Cryptography.CspParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)\n  id: '#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)'\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: PasswordDeriveBytes(String,Byte[],CspParameters)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],CspParameters)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],CspParameters)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, System.Security.Cryptography.CspParameters cspParams);\n    parameters:\n    - id: strPassword\n      type: System.String\n      description: Parameter description to be filled\n    - id: rgbSalt\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: cspParams\n      type: System.Security.Cryptography.CspParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)\n  id: '#ctor(System.Byte[],System.Byte[],System.String,System.Int32)'\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: PasswordDeriveBytes(Byte[],Byte[],String,Int32)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],String,Int32)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],String,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public PasswordDeriveBytes (byte[] password, byte[] salt, string hashName, int iterations);\n    parameters:\n    - id: password\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: salt\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: hashName\n      type: System.String\n      description: Parameter description to be filled\n    - id: iterations\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)\n  id: '#ctor(System.String,System.Byte[],System.String,System.Int32)'\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: PasswordDeriveBytes(String,Byte[],String,Int32)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],String,Int32)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],String,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, string strHashName, int iterations);\n    parameters:\n    - id: strPassword\n      type: System.String\n      description: Parameter description to be filled\n    - id: rgbSalt\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: strHashName\n      type: System.String\n      description: Parameter description to be filled\n    - id: iterations\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)\n  id: '#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)'\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public PasswordDeriveBytes (byte[] password, byte[] salt, string hashName, int iterations, System.Security.Cryptography.CspParameters cspParams);\n    parameters:\n    - id: password\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: salt\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: hashName\n      type: System.String\n      description: Parameter description to be filled\n    - id: iterations\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cspParams\n      type: System.Security.Cryptography.CspParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)\n  id: '#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)'\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, string strHashName, int iterations, System.Security.Cryptography.CspParameters cspParams);\n    parameters:\n    - id: strPassword\n      type: System.String\n      description: Parameter description to be filled\n    - id: rgbSalt\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: strHashName\n      type: System.String\n      description: Parameter description to be filled\n    - id: iterations\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cspParams\n      type: System.Security.Cryptography.CspParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])\n  id: CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: CryptDeriveKey(String,String,Int32,Byte[])\n  nameWithType: PasswordDeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);\n    parameters:\n    - id: algname\n      type: System.String\n      description: Parameter description to be filled\n    - id: alghashname\n      type: System.String\n      description: Parameter description to be filled\n    - id: keySize\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: rgbIV\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: PasswordDeriveBytes.Dispose(Boolean)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)\n  id: GetBytes(System.Int32)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: GetBytes(Int32)\n  nameWithType: PasswordDeriveBytes.GetBytes(Int32)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.GetBytes(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] GetBytes (int cb);\n    parameters:\n    - id: cb\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.HashName\n  id: HashName\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: HashName\n  nameWithType: PasswordDeriveBytes.HashName\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.HashName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public string HashName { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.IterationCount\n  id: IterationCount\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: IterationCount\n  nameWithType: PasswordDeriveBytes.IterationCount\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.IterationCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public int IterationCount { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.Reset\n  id: Reset\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: PasswordDeriveBytes.Reset()\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void Reset ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.PasswordDeriveBytes.Salt\n  id: Salt\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  langs:\n  - csharp\n  name: Salt\n  nameWithType: PasswordDeriveBytes.Salt\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.Salt\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Salt { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: System.Security.Cryptography.DeriveBytes\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: PasswordDeriveBytes(Byte[],Byte[])\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[])\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: PasswordDeriveBytes(String,Byte[])\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[])\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: PasswordDeriveBytes(Byte[],Byte[],CspParameters)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],CspParameters)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],CspParameters)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: PasswordDeriveBytes(String,Byte[],CspParameters)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],CspParameters)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],CspParameters)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: PasswordDeriveBytes(Byte[],Byte[],String,Int32)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],String,Int32)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],String,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: PasswordDeriveBytes(String,Byte[],String,Int32)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],String,Int32)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],String,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(Byte[],Byte[],String,Int32,CspParameters)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)\n  nameWithType: PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.PasswordDeriveBytes(String,Byte[],String,Int32,CspParameters)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: CryptDeriveKey(String,String,Int32,Byte[])\n  nameWithType: PasswordDeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(String,String,Int32,Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: PasswordDeriveBytes.Dispose(Boolean)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: GetBytes(Int32)\n  nameWithType: PasswordDeriveBytes.GetBytes(Int32)\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.GetBytes(Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.PasswordDeriveBytes.HashName\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: HashName\n  nameWithType: PasswordDeriveBytes.HashName\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.HashName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.PasswordDeriveBytes.IterationCount\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: IterationCount\n  nameWithType: PasswordDeriveBytes.IterationCount\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.IterationCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.PasswordDeriveBytes.Reset\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: Reset()\n  nameWithType: PasswordDeriveBytes.Reset()\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.Reset()\n- uid: System.Security.Cryptography.PasswordDeriveBytes.Salt\n  parent: System.Security.Cryptography.PasswordDeriveBytes\n  isExternal: false\n  name: Salt\n  nameWithType: PasswordDeriveBytes.Salt\n  fullName: System.Security.Cryptography.PasswordDeriveBytes.Salt\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n"}