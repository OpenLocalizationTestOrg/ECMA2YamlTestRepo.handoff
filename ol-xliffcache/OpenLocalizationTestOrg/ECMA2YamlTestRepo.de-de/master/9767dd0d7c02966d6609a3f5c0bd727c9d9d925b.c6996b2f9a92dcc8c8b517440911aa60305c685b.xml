{"nodes":[{"pos":[1299,1316],"content":"ScopingExtensions","needQuote":true,"needEscape":true,"nodes":[{"content":"ScopingExtensions","pos":[0,17]}]},{"pos":[2290,2345],"content":"ContainsPartMetadata(ComposablePartDefinition,String,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsPartMetadata(ComposablePartDefinition,String,T)","pos":[0,55]}]},{"pos":[2988,3022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3082,3116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3166,3200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3259,3293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3742,3802],"content":"ContainsPartMetadataWithKey(ComposablePartDefinition,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsPartMetadataWithKey(ComposablePartDefinition,String)","pos":[0,60]}]},{"pos":[4450,4484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4544,4578],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4637,4671],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5080,5120],"content":"Exports(ComposablePartDefinition,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exports(ComposablePartDefinition,String)","pos":[0,40]}]},{"pos":[5717,5751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5820,5854],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5913,5947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6516,6584],"content":"Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Filter(ComposablePartCatalog,Func&lt;ComposablePartDefinition,Boolean&gt;)","pos":[0,68],"source":"Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)"}]},{"pos":[7357,7391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7538,7572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7674,7708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8117,8157],"content":"Imports(ComposablePartDefinition,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Imports(ComposablePartDefinition,String)","pos":[0,40]}]},{"pos":[8754,8788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8857,8891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8950,8984],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9600,9658],"content":"Imports(ComposablePartDefinition,String,ImportCardinality)","needQuote":true,"needEscape":true,"nodes":[{"content":"Imports(ComposablePartDefinition,String,ImportCardinality)","pos":[0,58]}]},{"pos":[10373,10407],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10476,10510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10633,10667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10726,10760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10952,10965],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[11245,11300],"content":"ContainsPartMetadata(ComposablePartDefinition,String,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsPartMetadata(ComposablePartDefinition,String,T)","pos":[0,55]}]},{"pos":[11586,11593],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11805,11829],"content":"ComposablePartDefinition","needQuote":true,"needEscape":true,"nodes":[{"content":"ComposablePartDefinition","pos":[0,24]}]},{"pos":[12019,12025],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12124,12125],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[12437,12497],"content":"ContainsPartMetadataWithKey(ComposablePartDefinition,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsPartMetadataWithKey(ComposablePartDefinition,String)","pos":[0,60]}]},{"pos":[12793,12800],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13012,13036],"content":"ComposablePartDefinition","needQuote":true,"needEscape":true,"nodes":[{"content":"ComposablePartDefinition","pos":[0,24]}]},{"pos":[13226,13232],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13541,13581],"content":"Exports(ComposablePartDefinition,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exports(ComposablePartDefinition,String)","pos":[0,40]}]},{"pos":[13837,13844],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14056,14080],"content":"ComposablePartDefinition","needQuote":true,"needEscape":true,"nodes":[{"content":"ComposablePartDefinition","pos":[0,24]}]},{"pos":[14270,14276],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14665,14733],"content":"Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Filter(ComposablePartCatalog,Func&lt;ComposablePartDefinition,Boolean&gt;)","pos":[0,68],"source":"Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)"}]},{"pos":[15123,15138],"content":"FilteredCatalog","needQuote":true,"needEscape":true,"nodes":[{"content":"FilteredCatalog","pos":[0,15]}]},{"pos":[15398,15419],"content":"ComposablePartCatalog","needQuote":true,"needEscape":true,"nodes":[{"content":"ComposablePartCatalog","pos":[0,21]}]},{"pos":[15686,15724],"content":"Func<ComposablePartDefinition,Boolean>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;ComposablePartDefinition,Boolean&gt;","pos":[0,38],"source":"Func<ComposablePartDefinition,Boolean>"}]},{"pos":[16149,16189],"content":"Imports(ComposablePartDefinition,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Imports(ComposablePartDefinition,String)","pos":[0,40]}]},{"pos":[16445,16452],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16664,16688],"content":"ComposablePartDefinition","needQuote":true,"needEscape":true,"nodes":[{"content":"ComposablePartDefinition","pos":[0,24]}]},{"pos":[16878,16884],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[17256,17314],"content":"Imports(ComposablePartDefinition,String,ImportCardinality)","needQuote":true,"needEscape":true,"nodes":[{"content":"Imports(ComposablePartDefinition,String,ImportCardinality)","pos":[0,58]}]},{"pos":[17606,17613],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17825,17849],"content":"ComposablePartDefinition","needQuote":true,"needEscape":true,"nodes":[{"content":"ComposablePartDefinition","pos":[0,24]}]},{"pos":[18039,18045],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18248,18265],"content":"ImportCardinality","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportCardinality","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  id: ScopingExtensions\n  children:\n  - System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String,``0)\n  - System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  - System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  - System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog@,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})\n  - System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  - System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  langs:\n  - csharp\n  name: ScopingExtensions\n  nameWithType: ScopingExtensions\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  type: Class\n  syntax:\n    content: public static class ScopingExtensions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String,``0)\n  id: ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String,``0)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  langs:\n  - csharp\n  name: ContainsPartMetadata(ComposablePartDefinition,String,T)\n  nameWithType: ScopingExtensions.ContainsPartMetadata(ComposablePartDefinition,String,T)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata(ComposablePartDefinition,String,T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public static bool ContainsPartMetadata<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key, T value);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: Parameter description to be filled\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  id: ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  langs:\n  - csharp\n  name: ContainsPartMetadataWithKey(ComposablePartDefinition,String)\n  nameWithType: ScopingExtensions.ContainsPartMetadataWithKey(ComposablePartDefinition,String)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(ComposablePartDefinition,String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public static bool ContainsPartMetadataWithKey (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: Parameter description to be filled\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  id: Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  langs:\n  - csharp\n  name: Exports(ComposablePartDefinition,String)\n  nameWithType: ScopingExtensions.Exports(ComposablePartDefinition,String)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(ComposablePartDefinition,String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: Parameter description to be filled\n    - id: contractName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog@,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})\n  id: Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog@,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  langs:\n  - csharp\n  name: Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)\n  nameWithType: ScopingExtensions.Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public static System.ComponentModel.Composition.Hosting.FilteredCatalog Filter (this System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, Func<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,bool> filter);\n    parameters:\n    - id: catalog\n      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n      description: Parameter description to be filled\n    - id: filter\n      type: System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean}\n      description: Parameter description to be filled\n    return:\n      type: System.ComponentModel.Composition.Hosting.FilteredCatalog\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  langs:\n  - csharp\n  name: Imports(ComposablePartDefinition,String)\n  nameWithType: ScopingExtensions.Imports(ComposablePartDefinition,String)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(ComposablePartDefinition,String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: Parameter description to be filled\n    - id: contractName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  langs:\n  - csharp\n  name: Imports(ComposablePartDefinition,String,ImportCardinality)\n  nameWithType: ScopingExtensions.Imports(ComposablePartDefinition,String,ImportCardinality)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(ComposablePartDefinition,String,ImportCardinality)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  syntax:\n    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: Parameter description to be filled\n    - id: contractName\n      type: System.String\n      description: Parameter description to be filled\n    - id: importCardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String,``0)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  isExternal: false\n  name: ContainsPartMetadata(ComposablePartDefinition,String,T)\n  nameWithType: ScopingExtensions.ContainsPartMetadata(ComposablePartDefinition,String,T)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata(ComposablePartDefinition,String,T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartDefinition\n  nameWithType: ComposablePartDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  isExternal: false\n  name: ContainsPartMetadataWithKey(ComposablePartDefinition,String)\n  nameWithType: ScopingExtensions.ContainsPartMetadataWithKey(ComposablePartDefinition,String)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(ComposablePartDefinition,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartDefinition\n  nameWithType: ComposablePartDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  isExternal: false\n  name: Exports(ComposablePartDefinition,String)\n  nameWithType: ScopingExtensions.Exports(ComposablePartDefinition,String)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(ComposablePartDefinition,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartDefinition\n  nameWithType: ComposablePartDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog@,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  isExternal: false\n  name: Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)\n  nameWithType: ScopingExtensions.Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(ComposablePartCatalog,Func<ComposablePartDefinition,Boolean>)\n- uid: System.ComponentModel.Composition.Hosting.FilteredCatalog\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: FilteredCatalog\n  nameWithType: FilteredCatalog\n  fullName: System.ComponentModel.Composition.Hosting.FilteredCatalog\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartCatalog\n  nameWithType: ComposablePartCatalog\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n- uid: System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean}\n  parent: System\n  isExternal: true\n  name: Func<ComposablePartDefinition,Boolean>\n  nameWithType: Func<ComposablePartDefinition,Boolean>\n  fullName: System.Func<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean>\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  isExternal: false\n  name: Imports(ComposablePartDefinition,String)\n  nameWithType: ScopingExtensions.Imports(ComposablePartDefinition,String)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(ComposablePartDefinition,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartDefinition\n  nameWithType: ComposablePartDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition@,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  isExternal: false\n  name: Imports(ComposablePartDefinition,String,ImportCardinality)\n  nameWithType: ScopingExtensions.Imports(ComposablePartDefinition,String,ImportCardinality)\n  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(ComposablePartDefinition,String,ImportCardinality)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartDefinition\n  nameWithType: ComposablePartDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Primitives.ImportCardinality\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportCardinality\n  nameWithType: ImportCardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality\n- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports*\n  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions\n  isExternal: false\n  nameWithType: ScopingExtensions.\n"}