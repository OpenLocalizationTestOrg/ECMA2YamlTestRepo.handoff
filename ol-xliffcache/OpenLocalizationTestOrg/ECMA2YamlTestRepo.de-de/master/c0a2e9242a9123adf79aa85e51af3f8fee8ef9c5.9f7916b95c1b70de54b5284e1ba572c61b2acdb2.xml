{"nodes":[{"pos":[371,397],"content":"ObfuscateAssemblyAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"ObfuscateAssemblyAttribute","pos":[0,26]}]},{"pos":[4710,4745],"content":"ObfuscateAssemblyAttribute(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ObfuscateAssemblyAttribute(Boolean)","pos":[0,35]}]},{"pos":[5169,5203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5430,5447],"content":"AssemblyIsPrivate","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyIsPrivate","pos":[0,17]}]},{"pos":[5779,5813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6048,6069],"content":"StripAfterObfuscation","needQuote":true,"needEscape":true,"nodes":[{"content":"StripAfterObfuscation","pos":[0,21]}]},{"pos":[6418,6452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6566,6582],"content":"System.Attribute","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Attribute","pos":[0,16]}]},{"pos":[6740,6775],"content":"ObfuscateAssemblyAttribute(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ObfuscateAssemblyAttribute(Boolean)","pos":[0,35]}]},{"pos":[7015,7022],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7227,7244],"content":"AssemblyIsPrivate","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyIsPrivate","pos":[0,17]}]},{"pos":[7448,7455],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7664,7685],"content":"StripAfterObfuscation","needQuote":true,"needEscape":true,"nodes":[{"content":"StripAfterObfuscation","pos":[0,21]}]},{"pos":[7897,7904],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ObfuscateAssemblyAttribute\n  id: ObfuscateAssemblyAttribute\n  children:\n  - System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)\n  - System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate\n  - System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation\n  langs:\n  - csharp\n  name: ObfuscateAssemblyAttribute\n  nameWithType: ObfuscateAssemblyAttribute\n  fullName: System.Reflection.ObfuscateAssemblyAttribute\n  type: Class\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ObfuscateAssemblyAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Reflection.ObfuscateAssemblyAttribute\n  langs:\n  - csharp\n  name: ObfuscateAssemblyAttribute(Boolean)\n  nameWithType: ObfuscateAssemblyAttribute.ObfuscateAssemblyAttribute(Boolean)\n  fullName: System.Reflection.ObfuscateAssemblyAttribute.ObfuscateAssemblyAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public ObfuscateAssemblyAttribute (bool assemblyIsPrivate);\n    parameters:\n    - id: assemblyIsPrivate\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate\n  id: AssemblyIsPrivate\n  parent: System.Reflection.ObfuscateAssemblyAttribute\n  langs:\n  - csharp\n  name: AssemblyIsPrivate\n  nameWithType: ObfuscateAssemblyAttribute.AssemblyIsPrivate\n  fullName: System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool AssemblyIsPrivate { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation\n  id: StripAfterObfuscation\n  parent: System.Reflection.ObfuscateAssemblyAttribute\n  langs:\n  - csharp\n  name: StripAfterObfuscation\n  nameWithType: ObfuscateAssemblyAttribute.StripAfterObfuscation\n  fullName: System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool StripAfterObfuscation { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Reflection.ObfuscateAssemblyAttribute.#ctor(System.Boolean)\n  parent: System.Reflection.ObfuscateAssemblyAttribute\n  isExternal: false\n  name: ObfuscateAssemblyAttribute(Boolean)\n  nameWithType: ObfuscateAssemblyAttribute.ObfuscateAssemblyAttribute(Boolean)\n  fullName: System.Reflection.ObfuscateAssemblyAttribute.ObfuscateAssemblyAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate\n  parent: System.Reflection.ObfuscateAssemblyAttribute\n  isExternal: false\n  name: AssemblyIsPrivate\n  nameWithType: ObfuscateAssemblyAttribute.AssemblyIsPrivate\n  fullName: System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation\n  parent: System.Reflection.ObfuscateAssemblyAttribute\n  isExternal: false\n  name: StripAfterObfuscation\n  nameWithType: ObfuscateAssemblyAttribute.StripAfterObfuscation\n  fullName: System.Reflection.ObfuscateAssemblyAttribute.StripAfterObfuscation\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}