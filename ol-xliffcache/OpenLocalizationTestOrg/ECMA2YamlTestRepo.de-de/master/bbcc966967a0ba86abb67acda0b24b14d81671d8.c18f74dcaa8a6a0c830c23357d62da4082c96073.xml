{"nodes":[{"pos":[1175,1203],"content":"StrongNameIdentityPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameIdentityPermission","pos":[0,28]}]},{"pos":[2690,2735],"content":"StrongNameIdentityPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameIdentityPermission(PermissionState)","pos":[0,45]}]},{"pos":[3249,3283],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3676,3744],"content":"StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)","pos":[0,68]}]},{"pos":[4348,4382],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4443,4477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4542,4576],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4801,4807],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[5185,5219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5516,5540],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[5968,6002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6295,6317],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[6768,6802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6874,6908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7203,7226],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[7657,7691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7750,7784],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8009,8013],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[8336,8370],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8605,8614],"content":"PublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicKey","pos":[0,9]}]},{"pos":[9035,9069],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9296,9303],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[9692,9726],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10011,10029],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[10468,10502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10574,10608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10839,10846],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[11180,11214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11348,11384],"content":"System.Security.CodeAccessPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.CodeAccessPermission","pos":[0,36]}]},{"pos":[11595,11640],"content":"StrongNameIdentityPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameIdentityPermission(PermissionState)","pos":[0,45]}]},{"pos":[11964,11979],"content":"PermissionState","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionState","pos":[0,15]}]},{"pos":[12315,12383],"content":"StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)","pos":[0,68]}]},{"pos":[12761,12784],"content":"StrongNamePublicKeyBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNamePublicKeyBlob","pos":[0,23]}]},{"pos":[12955,12961],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13078,13085],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[13301,13307],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[13525,13536],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[13805,13829],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[14087,14102],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[14377,14399],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[14649,14660],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[14818,14829],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[15097,15120],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[15350,15357],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15498,15509],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[15742,15746],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[15937,15943],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16162,16171],"content":"PublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicKey","pos":[0,9]}]},{"pos":[16431,16454],"content":"StrongNamePublicKeyBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNamePublicKeyBlob","pos":[0,23]}]},{"pos":[16724,16731],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[16955,16970],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[17241,17259],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[17501,17512],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[17670,17681],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[17917,17924],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[18122,18129],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.StrongNameIdentityPermission\n  id: StrongNameIdentityPermission\n  children:\n  - System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)\n  - System.Security.Permissions.StrongNameIdentityPermission.Copy\n  - System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.StrongNameIdentityPermission.Name\n  - System.Security.Permissions.StrongNameIdentityPermission.PublicKey\n  - System.Security.Permissions.StrongNameIdentityPermission.ToXml\n  - System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)\n  - System.Security.Permissions.StrongNameIdentityPermission.Version\n  langs:\n  - csharp\n  name: StrongNameIdentityPermission\n  nameWithType: StrongNameIdentityPermission\n  fullName: System.Security.Permissions.StrongNameIdentityPermission\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: StrongNameIdentityPermission(PermissionState)\n  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)\n  id: '#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)'\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)\n  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);\n    parameters:\n    - id: blob\n      type: System.Security.Permissions.StrongNamePublicKeyBlob\n      description: Parameter description to be filled\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: version\n      type: System.Version\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: StrongNameIdentityPermission.Copy()\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: StrongNameIdentityPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement e);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: StrongNameIdentityPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: StrongNameIdentityPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Name\n  id: Name\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: Name\n  nameWithType: StrongNameIdentityPermission.Name\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey\n  id: PublicKey\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: PublicKey\n  nameWithType: StrongNameIdentityPermission.PublicKey\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.PublicKey\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }\n    return:\n      type: System.Security.Permissions.StrongNamePublicKeyBlob\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: StrongNameIdentityPermission.ToXml()\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: StrongNameIdentityPermission.Union(IPermission)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Version\n  id: Version\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  langs:\n  - csharp\n  name: Version\n  nameWithType: StrongNameIdentityPermission.Version\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Version\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public Version Version { get; set; }\n    return:\n      type: System.Version\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: StrongNameIdentityPermission(PermissionState)\n  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)\n  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob\n  parent: System.Security.Permissions\n  isExternal: false\n  name: StrongNamePublicKeyBlob\n  nameWithType: StrongNamePublicKeyBlob\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: StrongNameIdentityPermission.Copy()\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: StrongNameIdentityPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: StrongNameIdentityPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Intersect(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: StrongNameIdentityPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Name\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: Name\n  nameWithType: StrongNameIdentityPermission.Name\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: PublicKey\n  nameWithType: StrongNameIdentityPermission.PublicKey\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.PublicKey\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob\n  parent: System.Security.Permissions\n  isExternal: false\n  name: StrongNamePublicKeyBlob\n  nameWithType: StrongNamePublicKeyBlob\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob\n- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: StrongNameIdentityPermission.ToXml()\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: StrongNameIdentityPermission.Union(IPermission)\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Union(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.StrongNameIdentityPermission.Version\n  parent: System.Security.Permissions.StrongNameIdentityPermission\n  isExternal: false\n  name: Version\n  nameWithType: StrongNameIdentityPermission.Version\n  fullName: System.Security.Permissions.StrongNameIdentityPermission.Version\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n"}