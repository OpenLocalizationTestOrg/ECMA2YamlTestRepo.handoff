{"nodes":[{"pos":[5256,5288],"content":"DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>","needQuote":true,"needEscape":true,"source":"DbExpressionVisitor<TResultType>"},{"pos":[5568,5602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6169,6190],"content":"DbExpressionVisitor()","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionVisitor()","pos":[0,21]}]},{"pos":[6857,6879],"content":"Visit(DbAndExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbAndExpression)","pos":[0,22]}]},{"pos":[7384,7418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7474,7508],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7904,7928],"content":"Visit(DbApplyExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbApplyExpression)","pos":[0,24]}]},{"pos":[8441,8475],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8531,8565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8971,9000],"content":"Visit(DbArithmeticExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbArithmeticExpression)","pos":[0,29]}]},{"pos":[9533,9567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9623,9657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10051,10074],"content":"Visit(DbCaseExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbCaseExpression)","pos":[0,23]}]},{"pos":[10583,10617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10673,10707],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11101,11124],"content":"Visit(DbCastExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbCastExpression)","pos":[0,23]}]},{"pos":[11633,11667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11723,11757],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12163,12192],"content":"Visit(DbComparisonExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbComparisonExpression)","pos":[0,29]}]},{"pos":[12725,12759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12815,12849],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13251,13278],"content":"Visit(DbConstantExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbConstantExpression)","pos":[0,27]}]},{"pos":[13803,13837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13893,13927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14331,14359],"content":"Visit(DbCrossJoinExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbCrossJoinExpression)","pos":[0,28]}]},{"pos":[14888,14922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14978,15012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15408,15432],"content":"Visit(DbDerefExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbDerefExpression)","pos":[0,24]}]},{"pos":[15945,15979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16035,16069],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16471,16498],"content":"Visit(DbDistinctExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbDistinctExpression)","pos":[0,27]}]},{"pos":[17023,17057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17113,17147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17547,17573],"content":"Visit(DbElementExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbElementExpression)","pos":[0,26]}]},{"pos":[18094,18128],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18184,18218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18622,18650],"content":"Visit(DbEntityRefExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbEntityRefExpression)","pos":[0,28]}]},{"pos":[19179,19213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19269,19303],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19701,19726],"content":"Visit(DbExceptExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbExceptExpression)","pos":[0,25]}]},{"pos":[20243,20277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20333,20367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20753,20772],"content":"Visit(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbExpression)","pos":[0,19]}]},{"pos":[21265,21299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21355,21389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21787,21812],"content":"Visit(DbFilterExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbFilterExpression)","pos":[0,25]}]},{"pos":[22329,22363],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22419,22453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22855,22882],"content":"Visit(DbFunctionExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbFunctionExpression)","pos":[0,27]}]},{"pos":[23407,23441],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23497,23531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23931,23957],"content":"Visit(DbGroupByExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbGroupByExpression)","pos":[0,26]}]},{"pos":[24478,24512],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24568,24602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25006,25034],"content":"Visit(DbIntersectExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbIntersectExpression)","pos":[0,28]}]},{"pos":[25563,25597],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25653,25687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26087,26113],"content":"Visit(DbIsEmptyExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbIsEmptyExpression)","pos":[0,26]}]},{"pos":[26634,26668],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26724,26758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27156,27181],"content":"Visit(DbIsNullExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbIsNullExpression)","pos":[0,25]}]},{"pos":[27698,27732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27788,27822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28216,28239],"content":"Visit(DbIsOfExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbIsOfExpression)","pos":[0,23]}]},{"pos":[28748,28782],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28838,28872],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29266,29289],"content":"Visit(DbJoinExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbJoinExpression)","pos":[0,23]}]},{"pos":[29798,29832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29888,29922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30320,30345],"content":"Visit(DbLambdaExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbLambdaExpression)","pos":[0,25]}]},{"pos":[30861,30895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30951,30985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31379,31402],"content":"Visit(DbLikeExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbLikeExpression)","pos":[0,23]}]},{"pos":[31911,31945],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32001,32035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32431,32455],"content":"Visit(DbLimitExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbLimitExpression)","pos":[0,24]}]},{"pos":[32968,33002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33058,33092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33500,33530],"content":"Visit(DbNewInstanceExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbNewInstanceExpression)","pos":[0,30]}]},{"pos":[34067,34101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34157,34191],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34583,34605],"content":"Visit(DbNotExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbNotExpression)","pos":[0,22]}]},{"pos":[35110,35144],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35200,35234],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35628,35651],"content":"Visit(DbNullExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbNullExpression)","pos":[0,23]}]},{"pos":[36160,36194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36250,36284],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36682,36707],"content":"Visit(DbOfTypeExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbOfTypeExpression)","pos":[0,25]}]},{"pos":[37224,37258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37314,37348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37738,37759],"content":"Visit(DbOrExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbOrExpression)","pos":[0,21]}]},{"pos":[38260,38294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38350,38384],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38806,38843],"content":"Visit(DbParameterReferenceExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbParameterReferenceExpression)","pos":[0,37]}]},{"pos":[39408,39442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39498,39532],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39932,39958],"content":"Visit(DbProjectExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbProjectExpression)","pos":[0,26]}]},{"pos":[40479,40513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40569,40603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41005,41032],"content":"Visit(DbPropertyExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbPropertyExpression)","pos":[0,27]}]},{"pos":[41557,41591],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41647,41681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42087,42116],"content":"Visit(DbQuantifierExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbQuantifierExpression)","pos":[0,29]}]},{"pos":[42649,42683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42739,42773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43165,43187],"content":"Visit(DbRefExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbRefExpression)","pos":[0,22]}]},{"pos":[43692,43726],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43782,43816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44214,44239],"content":"Visit(DbRefKeyExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbRefKeyExpression)","pos":[0,25]}]},{"pos":[44756,44790],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44846,44880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45310,45351],"content":"Visit(DbRelationshipNavigationExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbRelationshipNavigationExpression)","pos":[0,41]}]},{"pos":[45932,45966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46022,46056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46450,46473],"content":"Visit(DbScanExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbScanExpression)","pos":[0,23]}]},{"pos":[46982,47016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47072,47106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47500,47523],"content":"Visit(DbSkipExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbSkipExpression)","pos":[0,23]}]},{"pos":[48032,48066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48122,48156],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48550,48573],"content":"Visit(DbSortExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbSortExpression)","pos":[0,23]}]},{"pos":[49082,49116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49172,49206],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49602,49626],"content":"Visit(DbTreatExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbTreatExpression)","pos":[0,24]}]},{"pos":[50139,50173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50229,50263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50665,50692],"content":"Visit(DbUnionAllExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbUnionAllExpression)","pos":[0,27]}]},{"pos":[51217,51251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51307,51341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51761,51797],"content":"Visit(DbVariableReferenceExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbVariableReferenceExpression)","pos":[0,36]}]},{"pos":[52358,52392],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52448,52482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52666,52679],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[52839,52860],"content":"DbExpressionVisitor()","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionVisitor()","pos":[0,21]}]},{"pos":[53239,53261],"content":"Visit(DbAndExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbAndExpression)","pos":[0,22]}]},{"pos":[53493,53504],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[53682,53697],"content":"DbAndExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbAndExpression","pos":[0,15]}]},{"pos":[54000,54024],"content":"Visit(DbApplyExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbApplyExpression)","pos":[0,24]}]},{"pos":[54260,54271],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[54451,54468],"content":"DbApplyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbApplyExpression","pos":[0,17]}]},{"pos":[54780,54809],"content":"Visit(DbArithmeticExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbArithmeticExpression)","pos":[0,29]}]},{"pos":[55055,55066],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[55251,55273],"content":"DbArithmeticExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbArithmeticExpression","pos":[0,22]}]},{"pos":[55589,55612],"content":"Visit(DbCaseExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbCaseExpression)","pos":[0,23]}]},{"pos":[55846,55857],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[56036,56052],"content":"DbCaseExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbCaseExpression","pos":[0,16]}]},{"pos":[56356,56379],"content":"Visit(DbCastExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbCastExpression)","pos":[0,23]}]},{"pos":[56613,56624],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[56803,56819],"content":"DbCastExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbCastExpression","pos":[0,16]}]},{"pos":[57129,57158],"content":"Visit(DbComparisonExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbComparisonExpression)","pos":[0,29]}]},{"pos":[57404,57415],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[57600,57622],"content":"DbComparisonExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbComparisonExpression","pos":[0,22]}]},{"pos":[57942,57969],"content":"Visit(DbConstantExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbConstantExpression)","pos":[0,27]}]},{"pos":[58211,58222],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[58405,58425],"content":"DbConstantExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbConstantExpression","pos":[0,20]}]},{"pos":[58742,58770],"content":"Visit(DbCrossJoinExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbCrossJoinExpression)","pos":[0,28]}]},{"pos":[59014,59025],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[59209,59230],"content":"DbCrossJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbCrossJoinExpression","pos":[0,21]}]},{"pos":[59545,59569],"content":"Visit(DbDerefExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbDerefExpression)","pos":[0,24]}]},{"pos":[59805,59816],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[59996,60013],"content":"DbDerefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbDerefExpression","pos":[0,17]}]},{"pos":[60323,60350],"content":"Visit(DbDistinctExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbDistinctExpression)","pos":[0,27]}]},{"pos":[60592,60603],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[60786,60806],"content":"DbDistinctExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbDistinctExpression","pos":[0,20]}]},{"pos":[61121,61147],"content":"Visit(DbElementExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbElementExpression)","pos":[0,26]}]},{"pos":[61387,61398],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[61580,61599],"content":"DbElementExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbElementExpression","pos":[0,19]}]},{"pos":[61914,61942],"content":"Visit(DbEntityRefExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbEntityRefExpression)","pos":[0,28]}]},{"pos":[62186,62197],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[62381,62402],"content":"DbEntityRefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbEntityRefExpression","pos":[0,21]}]},{"pos":[62718,62743],"content":"Visit(DbExceptExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbExceptExpression)","pos":[0,25]}]},{"pos":[62981,62992],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[63173,63191],"content":"DbExceptExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExceptExpression","pos":[0,18]}]},{"pos":[63495,63514],"content":"Visit(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbExpression)","pos":[0,19]}]},{"pos":[63740,63751],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[63926,63938],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[64236,64261],"content":"Visit(DbFilterExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbFilterExpression)","pos":[0,25]}]},{"pos":[64499,64510],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[64691,64709],"content":"DbFilterExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbFilterExpression","pos":[0,18]}]},{"pos":[65021,65048],"content":"Visit(DbFunctionExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbFunctionExpression)","pos":[0,27]}]},{"pos":[65290,65301],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[65484,65504],"content":"DbFunctionExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbFunctionExpression","pos":[0,20]}]},{"pos":[65819,65845],"content":"Visit(DbGroupByExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbGroupByExpression)","pos":[0,26]}]},{"pos":[66085,66096],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[66278,66297],"content":"DbGroupByExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGroupByExpression","pos":[0,19]}]},{"pos":[66612,66640],"content":"Visit(DbIntersectExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbIntersectExpression)","pos":[0,28]}]},{"pos":[66884,66895],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[67079,67100],"content":"DbIntersectExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbIntersectExpression","pos":[0,21]}]},{"pos":[67417,67443],"content":"Visit(DbIsEmptyExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbIsEmptyExpression)","pos":[0,26]}]},{"pos":[67683,67694],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[67876,67895],"content":"DbIsEmptyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbIsEmptyExpression","pos":[0,19]}]},{"pos":[68207,68232],"content":"Visit(DbIsNullExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbIsNullExpression)","pos":[0,25]}]},{"pos":[68470,68481],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[68662,68680],"content":"DbIsNullExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbIsNullExpression","pos":[0,18]}]},{"pos":[68988,69011],"content":"Visit(DbIsOfExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbIsOfExpression)","pos":[0,23]}]},{"pos":[69245,69256],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[69435,69451],"content":"DbIsOfExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbIsOfExpression","pos":[0,16]}]},{"pos":[69755,69778],"content":"Visit(DbJoinExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbJoinExpression)","pos":[0,23]}]},{"pos":[70012,70023],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[70202,70218],"content":"DbJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbJoinExpression","pos":[0,16]}]},{"pos":[70524,70549],"content":"Visit(DbLambdaExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbLambdaExpression)","pos":[0,25]}]},{"pos":[70787,70798],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[70979,70997],"content":"DbLambdaExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLambdaExpression","pos":[0,18]}]},{"pos":[71305,71328],"content":"Visit(DbLikeExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbLikeExpression)","pos":[0,23]}]},{"pos":[71562,71573],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[71752,71768],"content":"DbLikeExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLikeExpression","pos":[0,16]}]},{"pos":[72073,72097],"content":"Visit(DbLimitExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbLimitExpression)","pos":[0,24]}]},{"pos":[72333,72344],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[72524,72541],"content":"DbLimitExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLimitExpression","pos":[0,17]}]},{"pos":[72854,72884],"content":"Visit(DbNewInstanceExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbNewInstanceExpression)","pos":[0,30]}]},{"pos":[73132,73143],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[73329,73352],"content":"DbNewInstanceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNewInstanceExpression","pos":[0,23]}]},{"pos":[73669,73691],"content":"Visit(DbNotExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbNotExpression)","pos":[0,22]}]},{"pos":[73923,73934],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[74112,74127],"content":"DbNotExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNotExpression","pos":[0,15]}]},{"pos":[74429,74452],"content":"Visit(DbNullExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbNullExpression)","pos":[0,23]}]},{"pos":[74686,74697],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[74876,74892],"content":"DbNullExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNullExpression","pos":[0,16]}]},{"pos":[75198,75223],"content":"Visit(DbOfTypeExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbOfTypeExpression)","pos":[0,25]}]},{"pos":[75461,75472],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[75653,75671],"content":"DbOfTypeExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbOfTypeExpression","pos":[0,18]}]},{"pos":[75977,75998],"content":"Visit(DbOrExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbOrExpression)","pos":[0,21]}]},{"pos":[76228,76239],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[76416,76430],"content":"DbOrExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbOrExpression","pos":[0,14]}]},{"pos":[76744,76781],"content":"Visit(DbParameterReferenceExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbParameterReferenceExpression)","pos":[0,37]}]},{"pos":[77043,77054],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[77247,77277],"content":"DbParameterReferenceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbParameterReferenceExpression","pos":[0,30]}]},{"pos":[77612,77638],"content":"Visit(DbProjectExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbProjectExpression)","pos":[0,26]}]},{"pos":[77878,77889],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[78071,78090],"content":"DbProjectExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbProjectExpression","pos":[0,19]}]},{"pos":[78404,78431],"content":"Visit(DbPropertyExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbPropertyExpression)","pos":[0,27]}]},{"pos":[78673,78684],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[78867,78887],"content":"DbPropertyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbPropertyExpression","pos":[0,20]}]},{"pos":[79205,79234],"content":"Visit(DbQuantifierExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbQuantifierExpression)","pos":[0,29]}]},{"pos":[79480,79491],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[79676,79698],"content":"DbQuantifierExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbQuantifierExpression","pos":[0,22]}]},{"pos":[80013,80035],"content":"Visit(DbRefExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbRefExpression)","pos":[0,22]}]},{"pos":[80267,80278],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[80456,80471],"content":"DbRefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRefExpression","pos":[0,15]}]},{"pos":[80775,80800],"content":"Visit(DbRefKeyExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbRefKeyExpression)","pos":[0,25]}]},{"pos":[81038,81049],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[81230,81248],"content":"DbRefKeyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRefKeyExpression","pos":[0,18]}]},{"pos":[81574,81615],"content":"Visit(DbRelationshipNavigationExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbRelationshipNavigationExpression)","pos":[0,41]}]},{"pos":[81885,81896],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[82093,82127],"content":"DbRelationshipNavigationExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRelationshipNavigationExpression","pos":[0,34]}]},{"pos":[82467,82490],"content":"Visit(DbScanExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbScanExpression)","pos":[0,23]}]},{"pos":[82724,82735],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[82914,82930],"content":"DbScanExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbScanExpression","pos":[0,16]}]},{"pos":[83234,83257],"content":"Visit(DbSkipExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbSkipExpression)","pos":[0,23]}]},{"pos":[83491,83502],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[83681,83697],"content":"DbSkipExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSkipExpression","pos":[0,16]}]},{"pos":[84001,84024],"content":"Visit(DbSortExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbSortExpression)","pos":[0,23]}]},{"pos":[84258,84269],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[84448,84464],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[84769,84793],"content":"Visit(DbTreatExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbTreatExpression)","pos":[0,24]}]},{"pos":[85029,85040],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[85220,85237],"content":"DbTreatExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbTreatExpression","pos":[0,17]}]},{"pos":[85547,85574],"content":"Visit(DbUnionAllExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbUnionAllExpression)","pos":[0,27]}]},{"pos":[85816,85827],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[86010,86030],"content":"DbUnionAllExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbUnionAllExpression","pos":[0,20]}]},{"pos":[86355,86391],"content":"Visit(DbVariableReferenceExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(DbVariableReferenceExpression)","pos":[0,36]}]},{"pos":[86651,86662],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[86854,86883],"content":"DbVariableReferenceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbVariableReferenceExpression","pos":[0,29]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  id: DbExpressionVisitor`1\n  children:\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  langs:\n  - csharp\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n  type: Class\n  syntax:\n    content: public abstract class DbExpressionVisitor<TResultType>\n    typeParameters:\n    - id: TResultType\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: DbExpressionVisitor()\n  nameWithType: DbExpressionVisitor<TResultType>.DbExpressionVisitor()\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.DbExpressionVisitor()\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: protected DbExpressionVisitor ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbAndExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbAndExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbAndExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbAndExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbAndExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbApplyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbApplyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbApplyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbArithmeticExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbArithmeticExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbArithmeticExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbCaseExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCaseExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCaseExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbCaseExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbCastExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCastExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCastExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCastExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbCastExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbComparisonExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbComparisonExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbComparisonExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbConstantExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbConstantExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbConstantExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbCrossJoinExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCrossJoinExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCrossJoinExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbCrossJoinExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbDerefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbDerefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbDerefExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbDerefExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbDistinctExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbDistinctExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbDistinctExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbDistinctExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbElementExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbElementExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbElementExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbElementExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbElementExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbEntityRefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbEntityRefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbEntityRefExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbEntityRefExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbExceptExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbExceptExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbExceptExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbExceptExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbFilterExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbFilterExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbFilterExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbFilterExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbFunctionExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbFunctionExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbFunctionExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbFunctionExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbGroupByExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbGroupByExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbGroupByExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbGroupByExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbIntersectExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIntersectExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIntersectExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIntersectExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbIsEmptyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsEmptyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsEmptyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIsEmptyExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbIsNullExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsNullExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsNullExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIsNullExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbIsOfExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsOfExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsOfExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIsOfExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbJoinExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbJoinExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbJoinExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbLambdaExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLambdaExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLambdaExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public virtual TResultType Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbLambdaExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbLikeExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLikeExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLikeExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbLikeExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbLimitExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLimitExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLimitExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbLimitExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbNewInstanceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNewInstanceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNewInstanceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbNotExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNotExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNotExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNotExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbNotExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbNullExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNullExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNullExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNullExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbNullExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbOfTypeExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbOfTypeExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbOfTypeExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbOfTypeExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbOrExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbOrExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbOrExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOrExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbOrExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbParameterReferenceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbParameterReferenceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbParameterReferenceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbProjectExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbProjectExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbProjectExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbPropertyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbPropertyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbPropertyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbQuantifierExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbQuantifierExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbQuantifierExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbRefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRefExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbRefKeyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRefKeyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRefKeyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbRefKeyExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbRelationshipNavigationExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRelationshipNavigationExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRelationshipNavigationExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbScanExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbScanExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbScanExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbScanExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbScanExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbSkipExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbSkipExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbSkipExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbSkipExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbSortExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbSortExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbSortExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSortExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbTreatExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbTreatExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbTreatExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbTreatExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbUnionAllExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbUnionAllExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbUnionAllExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbUnionAllExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbVariableReferenceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbVariableReferenceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbVariableReferenceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: DbExpressionVisitor()\n  nameWithType: DbExpressionVisitor<TResultType>.DbExpressionVisitor()\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.DbExpressionVisitor()\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbAndExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbAndExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbAndExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbAndExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbAndExpression\n  nameWithType: DbAndExpression\n  fullName: System.Data.Common.CommandTrees.DbAndExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbApplyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbApplyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbApplyExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbApplyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbApplyExpression\n  nameWithType: DbApplyExpression\n  fullName: System.Data.Common.CommandTrees.DbApplyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbArithmeticExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbArithmeticExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbArithmeticExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbCaseExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCaseExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCaseExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbCaseExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCaseExpression\n  nameWithType: DbCaseExpression\n  fullName: System.Data.Common.CommandTrees.DbCaseExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbCastExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCastExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCastExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbCastExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCastExpression\n  nameWithType: DbCastExpression\n  fullName: System.Data.Common.CommandTrees.DbCastExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbComparisonExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbComparisonExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbComparisonExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbConstantExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbConstantExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbConstantExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbConstantExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbConstantExpression\n  nameWithType: DbConstantExpression\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbCrossJoinExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCrossJoinExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCrossJoinExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbCrossJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCrossJoinExpression\n  nameWithType: DbCrossJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbCrossJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbDerefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbDerefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbDerefExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbDerefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDerefExpression\n  nameWithType: DbDerefExpression\n  fullName: System.Data.Common.CommandTrees.DbDerefExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbDistinctExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbDistinctExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbDistinctExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbDistinctExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDistinctExpression\n  nameWithType: DbDistinctExpression\n  fullName: System.Data.Common.CommandTrees.DbDistinctExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbElementExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbElementExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbElementExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbElementExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbElementExpression\n  nameWithType: DbElementExpression\n  fullName: System.Data.Common.CommandTrees.DbElementExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbEntityRefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbEntityRefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbEntityRefExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbEntityRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbEntityRefExpression\n  nameWithType: DbEntityRefExpression\n  fullName: System.Data.Common.CommandTrees.DbEntityRefExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbExceptExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbExceptExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbExceptExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExceptExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExceptExpression\n  nameWithType: DbExceptExpression\n  fullName: System.Data.Common.CommandTrees.DbExceptExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbFilterExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbFilterExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbFilterExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbFilterExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFilterExpression\n  nameWithType: DbFilterExpression\n  fullName: System.Data.Common.CommandTrees.DbFilterExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbFunctionExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbFunctionExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbFunctionExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionExpression\n  nameWithType: DbFunctionExpression\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbGroupByExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbGroupByExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbGroupByExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupByExpression\n  nameWithType: DbGroupByExpression\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbIntersectExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIntersectExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIntersectExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbIntersectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIntersectExpression\n  nameWithType: DbIntersectExpression\n  fullName: System.Data.Common.CommandTrees.DbIntersectExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbIsEmptyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsEmptyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsEmptyExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbIsEmptyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsEmptyExpression\n  nameWithType: DbIsEmptyExpression\n  fullName: System.Data.Common.CommandTrees.DbIsEmptyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbIsNullExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsNullExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsNullExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbIsNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsNullExpression\n  nameWithType: DbIsNullExpression\n  fullName: System.Data.Common.CommandTrees.DbIsNullExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbIsOfExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsOfExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsOfExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbIsOfExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsOfExpression\n  nameWithType: DbIsOfExpression\n  fullName: System.Data.Common.CommandTrees.DbIsOfExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbJoinExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbJoinExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbJoinExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbLambdaExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLambdaExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLambdaExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbLambdaExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambdaExpression\n  nameWithType: DbLambdaExpression\n  fullName: System.Data.Common.CommandTrees.DbLambdaExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbLikeExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLikeExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLikeExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbLikeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLikeExpression\n  nameWithType: DbLikeExpression\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbLimitExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLimitExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLimitExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbLimitExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLimitExpression\n  nameWithType: DbLimitExpression\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbNewInstanceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNewInstanceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNewInstanceExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbNotExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNotExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNotExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbNotExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNotExpression\n  nameWithType: DbNotExpression\n  fullName: System.Data.Common.CommandTrees.DbNotExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbNullExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNullExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNullExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNullExpression\n  nameWithType: DbNullExpression\n  fullName: System.Data.Common.CommandTrees.DbNullExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbOfTypeExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbOfTypeExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbOfTypeExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbOfTypeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOfTypeExpression\n  nameWithType: DbOfTypeExpression\n  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbOrExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbOrExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbOrExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbOrExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOrExpression\n  nameWithType: DbOrExpression\n  fullName: System.Data.Common.CommandTrees.DbOrExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbParameterReferenceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbParameterReferenceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbParameterReferenceExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbParameterReferenceExpression\n  nameWithType: DbParameterReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbProjectExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbProjectExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbProjectExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbProjectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbProjectExpression\n  nameWithType: DbProjectExpression\n  fullName: System.Data.Common.CommandTrees.DbProjectExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbPropertyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbPropertyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbPropertyExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbPropertyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbPropertyExpression\n  nameWithType: DbPropertyExpression\n  fullName: System.Data.Common.CommandTrees.DbPropertyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbQuantifierExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbQuantifierExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbQuantifierExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbQuantifierExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbQuantifierExpression\n  nameWithType: DbQuantifierExpression\n  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbRefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRefExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbRefKeyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRefKeyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRefKeyExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbRefKeyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefKeyExpression\n  nameWithType: DbRefKeyExpression\n  fullName: System.Data.Common.CommandTrees.DbRefKeyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbRelationshipNavigationExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRelationshipNavigationExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRelationshipNavigationExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRelationshipNavigationExpression\n  nameWithType: DbRelationshipNavigationExpression\n  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbScanExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbScanExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbScanExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbScanExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbScanExpression\n  nameWithType: DbScanExpression\n  fullName: System.Data.Common.CommandTrees.DbScanExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbSkipExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbSkipExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbSkipExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbSkipExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSkipExpression\n  nameWithType: DbSkipExpression\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbSortExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbSortExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbSortExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbTreatExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbTreatExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbTreatExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbTreatExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbTreatExpression\n  nameWithType: DbTreatExpression\n  fullName: System.Data.Common.CommandTrees.DbTreatExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbUnionAllExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbUnionAllExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbUnionAllExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbUnionAllExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbUnionAllExpression\n  nameWithType: DbUnionAllExpression\n  fullName: System.Data.Common.CommandTrees.DbUnionAllExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbVariableReferenceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbVariableReferenceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbVariableReferenceExpression)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbVariableReferenceExpression\n  nameWithType: DbVariableReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  nameWithType: DbExpressionVisitor<TResultType>.\n"}