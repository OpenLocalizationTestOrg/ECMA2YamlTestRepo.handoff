### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.EntitySet`1
  id: EntitySet`1
  children:
  - System.Data.Linq.EntitySet`1.#ctor
  - System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})
  - System.Data.Linq.EntitySet`1.Add(`0)
  - System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.EntitySet`1.Clear
  - System.Data.Linq.EntitySet`1.Contains(`0)
  - System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)
  - System.Data.Linq.EntitySet`1.Count
  - System.Data.Linq.EntitySet`1.GetEnumerator
  - System.Data.Linq.EntitySet`1.GetNewBindingList
  - System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues
  - System.Data.Linq.EntitySet`1.IndexOf(`0)
  - System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)
  - System.Data.Linq.EntitySet`1.IsDeferred
  - System.Data.Linq.EntitySet`1.Item(System.Int32)
  - System.Data.Linq.EntitySet`1.ListChanged
  - System.Data.Linq.EntitySet`1.Load
  - System.Data.Linq.EntitySet`1.Remove(`0)
  - System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)
  - System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized
  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot
  - System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize
  - System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)
  - System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList
  langs:
  - csharp
  name: EntitySet<TEntity>
  nameWithType: EntitySet<TEntity>
  fullName: System.Data.Linq.EntitySet<TEntity>
  type: Class
  syntax:
    content: 'public sealed class EntitySet<TEntity> : System.Collections.Generic.ICollection<TEntity>, System.Collections.Generic.IEnumerable<TEntity>, System.Collections.Generic.IList<TEntity>, System.Collections.IList, System.ComponentModel.IListSource where TEntity : class'
    typeParameters:
    - id: TEntity
      description: Parameter description to be filled
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<TEntity>
  - System.Collections.Generic.IEnumerable<TEntity>
  - System.Collections.Generic.IList<TEntity>
  - System.Collections.IList
  - System.ComponentModel.IListSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.#ctor
  id: '#ctor'
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: EntitySet()
  nameWithType: EntitySet<TEntity>.EntitySet()
  fullName: System.Data.Linq.EntitySet<TEntity>.EntitySet()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public EntitySet ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})
  id: '#ctor(System.Action{`0},System.Action{`0})'
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: EntitySet(Action<TEntity>,Action<TEntity>)
  nameWithType: EntitySet<TEntity>.EntitySet(Action<TEntity>,Action<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.EntitySet(Action<TEntity>,Action<TEntity>)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public EntitySet (Action<TEntity> onAdd, Action<TEntity> onRemove);
    parameters:
    - id: onAdd
      type: System.Action{TEntity}
      description: Parameter description to be filled
    - id: onRemove
      type: System.Action{TEntity}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.Add(`0)
  id: Add(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Add(TEntity)
  nameWithType: EntitySet<TEntity>.Add(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Add(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Add (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: AddRange(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void AddRange (System.Collections.Generic.IEnumerable<TEntity> collection);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})
  id: Assign(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Assign(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.Assign(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.Assign(IEnumerable<TEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Assign (System.Collections.Generic.IEnumerable<TEntity> entitySource);
    parameters:
    - id: entitySource
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.Clear
  id: Clear
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Clear()
  nameWithType: EntitySet<TEntity>.Clear()
  fullName: System.Data.Linq.EntitySet<TEntity>.Clear()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.Contains(`0)
  id: Contains(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Contains(TEntity)
  nameWithType: EntitySet<TEntity>.Contains(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Contains(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool Contains (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: CopyTo(TEntity[],Int32)
  nameWithType: EntitySet<TEntity>.CopyTo(TEntity[],Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.CopyTo(TEntity[],Int32)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void CopyTo (TEntity[] array, int arrayIndex);
    parameters:
    - id: array
      type: TEntity[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.Count
  id: Count
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Count
  nameWithType: EntitySet<TEntity>.Count
  fullName: System.Data.Linq.EntitySet<TEntity>.Count
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: EntitySet<TEntity>.GetEnumerator()
  fullName: System.Data.Linq.EntitySet<TEntity>.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.Collections.Generic.IEnumerator<TEntity> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TEntity}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.GetNewBindingList
  id: GetNewBindingList
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: GetNewBindingList()
  nameWithType: EntitySet<TEntity>.GetNewBindingList()
  fullName: System.Data.Linq.EntitySet<TEntity>.GetNewBindingList()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.ComponentModel.IBindingList GetNewBindingList ();
    parameters: []
    return:
      type: System.ComponentModel.IBindingList
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues
  id: HasLoadedOrAssignedValues
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: HasLoadedOrAssignedValues
  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues
  fullName: System.Data.Linq.EntitySet<TEntity>.HasLoadedOrAssignedValues
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool HasLoadedOrAssignedValues { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IndexOf(TEntity)
  nameWithType: EntitySet<TEntity>.IndexOf(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.IndexOf(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public int IndexOf (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Insert(Int32,TEntity)
  nameWithType: EntitySet<TEntity>.Insert(Int32,TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Insert(Int32,TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Insert (int index, TEntity entity);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: entity
      type: TEntity
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.IsDeferred
  id: IsDeferred
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IsDeferred
  nameWithType: EntitySet<TEntity>.IsDeferred
  fullName: System.Data.Linq.EntitySet<TEntity>.IsDeferred
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool IsDeferred { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: EntitySet<TEntity>.Item(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.Item(Int32)
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public TEntity this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: TEntity
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.ListChanged
  id: ListChanged
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: ListChanged
  nameWithType: EntitySet<TEntity>.ListChanged
  fullName: System.Data.Linq.EntitySet<TEntity>.ListChanged
  type: Event
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.Load
  id: Load
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Load()
  nameWithType: EntitySet<TEntity>.Load()
  fullName: System.Data.Linq.EntitySet<TEntity>.Load()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Load ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.Remove(`0)
  id: Remove(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Remove(TEntity)
  nameWithType: EntitySet<TEntity>.Remove(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Remove(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool Remove (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: EntitySet<TEntity>.RemoveAt(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})
  id: SetSource(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: SetSource(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void SetSource (System.Collections.Generic.IEnumerable<TEntity> entitySource);
    parameters:
    - id: entitySource
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  id: System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: EntitySet<TEntity>.System.Collections.Generic.ICollection
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.Generic.ICollection<TEntity>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.SyncRoot
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Add(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Contains(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IndexOf(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: value
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsFixedSize
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Item(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Remove(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Linq.EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Linq.EntitySet<TEntity>.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.EntitySet`1.#ctor
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: EntitySet()
  nameWithType: EntitySet<TEntity>.EntitySet()
  fullName: System.Data.Linq.EntitySet<TEntity>.EntitySet()
- uid: System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: EntitySet(Action<TEntity>,Action<TEntity>)
  nameWithType: EntitySet<TEntity>.EntitySet(Action<TEntity>,Action<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.EntitySet(Action<TEntity>,Action<TEntity>)
- uid: System.Action{TEntity}
  parent: System
  isExternal: false
  name: Action<TEntity>
  nameWithType: Action<TEntity>
  fullName: System.Action<TEntity>
- uid: System.Action{TEntity}
  parent: System
  isExternal: false
  name: Action<TEntity>
  nameWithType: Action<TEntity>
  fullName: System.Action<TEntity>
- uid: System.Data.Linq.EntitySet`1.Add(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Add(TEntity)
  nameWithType: EntitySet<TEntity>.Add(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Add(TEntity)
- uid: TEntity
  parent: ''
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: AddRange(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)
- uid: System.Collections.Generic.IEnumerable{TEntity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
- uid: System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Assign(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.Assign(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.Assign(IEnumerable<TEntity>)
- uid: System.Collections.Generic.IEnumerable{TEntity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
- uid: System.Data.Linq.EntitySet`1.Clear
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Clear()
  nameWithType: EntitySet<TEntity>.Clear()
  fullName: System.Data.Linq.EntitySet<TEntity>.Clear()
- uid: System.Data.Linq.EntitySet`1.Contains(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Contains(TEntity)
  nameWithType: EntitySet<TEntity>.Contains(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Contains(TEntity)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TEntity
  parent: ''
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: CopyTo(TEntity[],Int32)
  nameWithType: EntitySet<TEntity>.CopyTo(TEntity[],Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.CopyTo(TEntity[],Int32)
- uid: TEntity
  parent: ''
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.Count
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Count
  nameWithType: EntitySet<TEntity>.Count
  fullName: System.Data.Linq.EntitySet<TEntity>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.GetEnumerator
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: EntitySet<TEntity>.GetEnumerator()
  fullName: System.Data.Linq.EntitySet<TEntity>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{TEntity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<TEntity>
  nameWithType: IEnumerator<TEntity>
  fullName: System.Collections.Generic.IEnumerator<TEntity>
- uid: System.Data.Linq.EntitySet`1.GetNewBindingList
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: GetNewBindingList()
  nameWithType: EntitySet<TEntity>.GetNewBindingList()
  fullName: System.Data.Linq.EntitySet<TEntity>.GetNewBindingList()
- uid: System.ComponentModel.IBindingList
  parent: System.ComponentModel
  isExternal: true
  name: IBindingList
  nameWithType: IBindingList
  fullName: System.ComponentModel.IBindingList
- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: HasLoadedOrAssignedValues
  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues
  fullName: System.Data.Linq.EntitySet<TEntity>.HasLoadedOrAssignedValues
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.IndexOf(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IndexOf(TEntity)
  nameWithType: EntitySet<TEntity>.IndexOf(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.IndexOf(TEntity)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TEntity
  parent: ''
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Insert(Int32,TEntity)
  nameWithType: EntitySet<TEntity>.Insert(Int32,TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Insert(Int32,TEntity)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TEntity
  parent: ''
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Linq.EntitySet`1.IsDeferred
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IsDeferred
  nameWithType: EntitySet<TEntity>.IsDeferred
  fullName: System.Data.Linq.EntitySet<TEntity>.IsDeferred
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.Item(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Item(Int32)
  nameWithType: EntitySet<TEntity>.Item(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.Item(Int32)
- uid: TEntity
  parent: ''
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.ListChanged
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: ListChanged
  nameWithType: EntitySet<TEntity>.ListChanged
  fullName: System.Data.Linq.EntitySet<TEntity>.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.Data.Linq.EntitySet`1.Load
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Load()
  nameWithType: EntitySet<TEntity>.Load()
  fullName: System.Data.Linq.EntitySet<TEntity>.Load()
- uid: System.Data.Linq.EntitySet`1.Remove(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Remove(TEntity)
  nameWithType: EntitySet<TEntity>.Remove(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Remove(TEntity)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TEntity
  parent: ''
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: EntitySet<TEntity>.RemoveAt(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.RemoveAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: SetSource(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)
- uid: System.Collections.Generic.IEnumerable{TEntity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: EntitySet<TEntity>.System.Collections.Generic.ICollection
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.Generic.ICollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.SyncRoot
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Add(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Add(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Contains(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IndexOf(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IndexOf(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Insert(Int32,Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsFixedSize
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Item(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Item(Int32)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Remove(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Remove(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Linq.EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Linq.EntitySet<TEntity>.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
