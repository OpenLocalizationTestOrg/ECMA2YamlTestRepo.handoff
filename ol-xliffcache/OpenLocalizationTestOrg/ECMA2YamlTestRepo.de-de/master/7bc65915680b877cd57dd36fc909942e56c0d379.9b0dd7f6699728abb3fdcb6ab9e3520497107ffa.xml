{"nodes":[{"pos":[4382,4395],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[4918,4952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12852,12871],"content":"Task(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Task(Func<TResult>)"},{"pos":[13222,13256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13521,13554],"content":"Task(Func<Object,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Func&lt;Object,TResult&gt;,Object)","pos":[0,33],"source":"Task(Func<Object,TResult>,Object)"}]},{"pos":[13968,14002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14064,14098],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14377,14414],"content":"Task(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"Task(Func<TResult>,CancellationToken)"},{"pos":[14855,14889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14984,15018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15313,15352],"content":"Task(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"Task(Func<TResult>,TaskCreationOptions)"},{"pos":[15803,15837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15938,15972],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16307,16358],"content":"Task(Func<Object,TResult>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Func&lt;Object,TResult&gt;,Object,CancellationToken)","pos":[0,51],"source":"Task(Func<Object,TResult>,Object,CancellationToken)"}]},{"pos":[16862,16896],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16958,16992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17087,17121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17472,17525],"content":"Task(Func<Object,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Func&lt;Object,TResult&gt;,Object,TaskCreationOptions)","pos":[0,53],"source":"Task(Func<Object,TResult>,Object,TaskCreationOptions)"}]},{"pos":[18039,18073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18135,18169],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18270,18304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18669,18726],"content":"Task(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"Task(Func<TResult>,CancellationToken,TaskCreationOptions)"},{"pos":[19267,19301],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19396,19430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19531,19565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19986,20057],"content":"Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Func&lt;Object,TResult&gt;,Object,CancellationToken,TaskCreationOptions)","pos":[0,71],"source":"Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)"}]},{"pos":[20661,20695],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20757,20791],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20886,20920],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21021,21055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21278,21301],"content":"ConfigureAwait(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigureAwait(Boolean)","pos":[0,23]}]},{"pos":[21749,21783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21885,21919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22202,22237],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>)"},{"pos":[22733,22767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22839,22873],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23268,23317],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object)"},{"pos":[23876,23910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23972,24006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24078,24112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24521,24574],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>,CancellationToken)"},{"pos":[25160,25194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25289,25323],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25395,25429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25862,25921],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>,TaskContinuationOptions)"},{"pos":[26533,26567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26676,26710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26782,26816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27229,27278],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>,TaskScheduler)"},{"pos":[27850,27884],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27973,28007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28079,28113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28578,28645],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken)"},{"pos":[29294,29328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29390,29424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29519,29553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29625,29659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30148,30221],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object,TaskContinuationOptions)"},{"pos":[30896,30930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30992,31026],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31135,31169],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31241,31275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31744,31807],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object,TaskScheduler)"},{"pos":[32442,32476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32538,32572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32661,32695],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32767,32801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33378,33469],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[34247,34281],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34376,34410],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34519,34553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34642,34676],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34748,34782],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35415,35520],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[36361,36395],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36457,36491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36586,36620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36729,36763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36852,36886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36958,36992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37341,37385],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>)"},{"pos":[37945,37979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38063,38097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38514,38572],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object)"},{"pos":[39195,39229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39291,39325],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39409,39443],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39874,39936],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken)"},{"pos":[40586,40620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40715,40749],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40833,40867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41322,41390],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>,TaskContinuationOptions)"},{"pos":[42066,42100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42209,42243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42327,42361],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42796,42854],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>,TaskScheduler)"},{"pos":[43490,43524],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43613,43647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43731,43765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44252,44328],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken)"},{"pos":[45041,45075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45137,45171],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45266,45300],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45384,45418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45929,46011],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskContinuationOptions)"},{"pos":[46750,46784],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46846,46880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46989,47023],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47107,47141],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47632,47704],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskScheduler)"},{"pos":[48403,48437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48499,48533],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48622,48656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48740,48774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49373,49473],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[50315,50349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50444,50478],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50587,50621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50710,50744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50828,50862],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51517,51631],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[52536,52570],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52632,52666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52761,52795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52904,52938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53027,53061],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53145,53179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53424,53431],"content":"Factory","needQuote":true,"needEscape":true,"nodes":[{"content":"Factory","pos":[0,7]}]},{"pos":[53785,53819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54002,54014],"content":"GetAwaiter()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAwaiter()","pos":[0,12]}]},{"pos":[54404,54438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54613,54619],"content":"Result","needQuote":true,"needEscape":true,"nodes":[{"content":"Result","pos":[0,6]}]},{"pos":[54898,54932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55057,55084],"content":"System.Threading.Tasks.Task","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Threading.Tasks.Task","pos":[0,27]}]},{"pos":[55213,55232],"content":"Task(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Task(Func<TResult>)"},{"pos":[55424,55437],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[55657,55690],"content":"Task(Func<Object,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Func&lt;Object,TResult&gt;,Object)","pos":[0,33],"source":"Task(Func<Object,TResult>,Object)"}]},{"pos":[55924,55944],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[56095,56101],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56314,56351],"content":"Task(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"Task(Func<TResult>,CancellationToken)"},{"pos":[56579,56592],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[56753,56770],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[57023,57062],"content":"Task(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"Task(Func<TResult>,TaskCreationOptions)"},{"pos":[57294,57307],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[57482,57501],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[57784,57835],"content":"Task(Func<Object,TResult>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Func&lt;Object,TResult&gt;,Object,CancellationToken)","pos":[0,51],"source":"Task(Func<Object,TResult>,Object,CancellationToken)"}]},{"pos":[58105,58125],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[58276,58282],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58429,58446],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[58727,58780],"content":"Task(Func<Object,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Func&lt;Object,TResult&gt;,Object,TaskCreationOptions)","pos":[0,53],"source":"Task(Func<Object,TResult>,Object,TaskCreationOptions)"}]},{"pos":[59054,59074],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[59225,59231],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[59392,59411],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[59709,59766],"content":"Task(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"Task(Func<TResult>,CancellationToken,TaskCreationOptions)"},{"pos":[60034,60047],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[60208,60225],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[60418,60437],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[60763,60834],"content":"Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Func&lt;Object,TResult&gt;,Object,CancellationToken,TaskCreationOptions)","pos":[0,71],"source":"Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)"}]},{"pos":[61144,61164],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[61315,61321],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61468,61485],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[61678,61697],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[61925,61948],"content":"ConfigureAwait(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigureAwait(Boolean)","pos":[0,23]}]},{"pos":[62211,62243],"content":"ConfiguredTaskAwaitable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConfiguredTaskAwaitable<TResult>"},{"pos":[62437,62444],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[62662,62697],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>)"},{"pos":[62945,62949],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[63115,63136],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>>"},{"pos":[63433,63482],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object)"},{"pos":[63758,63762],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[63941,63969],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>,Object>"},{"pos":[64159,64165],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64416,64469],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>,CancellationToken)"},{"pos":[64753,64757],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[64923,64944],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>>"},{"pos":[65144,65161],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[65456,65515],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>,TaskContinuationOptions)"},{"pos":[65811,65815],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[65981,66002],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>>"},{"pos":[66220,66243],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[66546,66595],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>,TaskScheduler)"},{"pos":[66871,66875],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[67041,67062],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>>"},{"pos":[67270,67283],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[67592,67659],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken)"},{"pos":[67971,67975],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[68154,68182],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>,Object>"},{"pos":[68372,68378],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68525,68542],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[68865,68938],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object,TaskContinuationOptions)"},{"pos":[69262,69266],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[69445,69473],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>,Object>"},{"pos":[69663,69669],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69834,69857],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[70188,70251],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object,TaskScheduler)"},{"pos":[70555,70559],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[70738,70766],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>,Object>"},{"pos":[70956,70962],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[71117,71130],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[71495,71586],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[71946,71950],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[72116,72137],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>>"},{"pos":[72337,72354],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[72551,72574],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[72779,72792],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[73185,73290],"content":"ContinueWith(Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[73678,73682],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[73861,73889],"content":"Action&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object&gt;","needQuote":true,"needEscape":true,"source":"Action<Task<TResult>,Object>"},{"pos":[74079,74085],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74232,74249],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[74446,74469],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[74674,74687],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[74938,74982],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>)"},{"pos":[75260,75276],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[75474,75504],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,TNewResult>"},{"pos":[75824,75882],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object)"},{"pos":[76188,76204],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[76416,76453],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,Object,TNewResult>"},{"pos":[76661,76667],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[76923,76985],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken)"},{"pos":[77299,77315],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[77513,77543],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,TNewResult>"},{"pos":[77761,77778],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[78078,78146],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>,TaskContinuationOptions)"},{"pos":[78472,78488],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[78686,78716],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,TNewResult>"},{"pos":[78952,78975],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[79283,79341],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>,TaskScheduler)"},{"pos":[79647,79663],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[79861,79891],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,TNewResult>"},{"pos":[80117,80130],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[80444,80520],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken)"},{"pos":[80862,80878],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[81090,81127],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,Object,TNewResult>"},{"pos":[81335,81341],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[81488,81505],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[81833,81915],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskContinuationOptions)"},{"pos":[82269,82285],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[82497,82534],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,Object,TNewResult>"},{"pos":[82742,82748],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[82913,82936],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[83272,83344],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskScheduler)"},{"pos":[83678,83694],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[83906,83943],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,Object,TNewResult>"},{"pos":[84151,84157],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[84312,84325],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[84695,84795],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[85185,85201],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[85399,85429],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,TNewResult>"},{"pos":[85647,85664],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[85861,85884],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[86089,86102],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[86500,86614],"content":"ContinueWith(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[87032,87048],"content":"Task<ph id=\"ph1\">&lt;TNewResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TNewResult>"},{"pos":[87260,87297],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>,Object,TNewResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>,Object,TNewResult>"},{"pos":[87505,87511],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[87658,87675],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[87872,87895],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[88100,88113],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[88306,88313],"content":"Factory","needQuote":true,"needEscape":true,"nodes":[{"content":"Factory","pos":[0,7]}]},{"pos":[88514,88534],"content":"TaskFactory<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"TaskFactory<TResult>"},{"pos":[88744,88756],"content":"GetAwaiter()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAwaiter()","pos":[0,12]}]},{"pos":[88985,89005],"content":"TaskAwaiter<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"TaskAwaiter<TResult>"},{"pos":[89220,89226],"content":"Result","needQuote":true,"needEscape":true,"nodes":[{"content":"Result","pos":[0,6]}]},{"pos":[89375,89382],"content":"TResult","needQuote":true,"needEscape":true,"nodes":[{"content":"TResult","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.Task`1\n  id: Task`1\n  children:\n  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0})\n  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)\n  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task`1.Factory\n  - System.Threading.Tasks.Task`1.GetAwaiter\n  - System.Threading.Tasks.Task`1.Result\n  langs:\n  - csharp\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Id = {Id}, Status = {Status}, Method = {DebuggerDisplayMethodDescription}, Result = {DebuggerDisplayResultDescription}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1))]\n\n      public class Task<TResult> : System.Threading.Tasks.Task\n    typeParameters:\n    - id: TResult\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.Threading.Tasks.Task\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Threading.Tasks.Task.AsyncState\n  - System.Threading.Tasks.Task.CompletedTask\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.CreationOptions\n  - System.Threading.Tasks.Task.CurrentId\n  - System.Threading.Tasks.Task.Delay(System.Int32)\n  - System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Delay(System.TimeSpan)\n  - System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Dispose\n  - System.Threading.Tasks.Task.Dispose(System.Boolean)\n  - System.Threading.Tasks.Task.Exception\n  - System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.FromException(System.Exception)\n  - System.Threading.Tasks.Task.FromException``1(System.Exception)\n  - System.Threading.Tasks.Task.FromResult``1(``0)\n  - System.Threading.Tasks.Task.Id\n  - System.Threading.Tasks.Task.IsCanceled\n  - System.Threading.Tasks.Task.IsCompleted\n  - System.Threading.Tasks.Task.IsFaulted\n  - System.Threading.Tasks.Task.Run(System.Action)\n  - System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})\n  - System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Run``1(System.Func{``0})\n  - System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})\n  - System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.RunSynchronously\n  - System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.Start\n  - System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.Status\n  - System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle\n  - System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously\n  - System.Threading.Tasks.Task.Wait\n  - System.Threading.Tasks.Task.Wait(System.Int32)\n  - System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Wait(System.TimeSpan)\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)\n  - System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  - System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])\n  - System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  - System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])\n  - System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  - System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])\n  - System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  - System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])\n  - System.Threading.Tasks.Task.Yield\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0})\n  id: '#ctor(System.Func{`0})'\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Task(Func<TResult>)\n  nameWithType: Task<TResult>.Task(Func<TResult>)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<TResult>)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Func<TResult> function);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)\n  id: '#ctor(System.Func{System.Object,`0},System.Object)'\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Task(Func<Object,TResult>,Object)\n  nameWithType: Task<TResult>.Task(Func<Object,TResult>,Object)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<Object,TResult>,Object)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Func<object,TResult> function, object state);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)\n  id: '#ctor(System.Func{`0},System.Threading.CancellationToken)'\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Task(Func<TResult>,CancellationToken)\n  nameWithType: Task<TResult>.Task(Func<TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<TResult>,CancellationToken)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Func<TResult> function, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Task(Func<TResult>,TaskCreationOptions)\n  nameWithType: Task<TResult>.Task(Func<TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<TResult>,TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Func<TResult> function, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)\n  id: '#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)'\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Task(Func<Object,TResult>,Object,CancellationToken)\n  nameWithType: Task<TResult>.Task(Func<Object,TResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<Object,TResult>,Object,CancellationToken)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Task(Func<Object,TResult>,Object,TaskCreationOptions)\n  nameWithType: Task<TResult>.Task(Func<Object,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<Object,TResult>,Object,TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Func<object,TResult> function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Task(Func<TResult>,CancellationToken,TaskCreationOptions)\n  nameWithType: Task<TResult>.Task(Func<TResult>,CancellationToken,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<TResult>,CancellationToken,TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Func<TResult> function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)\n  nameWithType: Task<TResult>.Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)\n  id: ConfigureAwait(System.Boolean)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ConfigureAwait(Boolean)\n  nameWithType: Task<TResult>.ConfigureAwait(Boolean)\n  fullName: System.Threading.Tasks.Task<TResult>.ConfigureAwait(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult> ConfigureAwait (bool continueOnCapturedContext);\n    parameters:\n    - id: continueOnCapturedContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>>)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>,Object>,Object)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>>,CancellationToken)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>>,TaskContinuationOptions)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>>,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>,Object>,Object,TaskContinuationOptions)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>,Object>,Object,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,TNewResult>)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,TNewResult>,TaskContinuationOptions)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,TNewResult>,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskContinuationOptions)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TNewResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.Factory\n  id: Factory\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Factory\n  nameWithType: Task<TResult>.Factory\n  fullName: System.Threading.Tasks.Task<TResult>.Factory\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.TaskFactory<TResult> Factory { get; }\n    return:\n      type: System.Threading.Tasks.TaskFactory`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.GetAwaiter\n  id: GetAwaiter\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: GetAwaiter()\n  nameWithType: Task<TResult>.GetAwaiter()\n  fullName: System.Threading.Tasks.Task<TResult>.GetAwaiter()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Runtime.CompilerServices.TaskAwaiter<TResult> GetAwaiter ();\n    parameters: []\n    return:\n      type: System.Runtime.CompilerServices.TaskAwaiter`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task`1.Result\n  id: Result\n  parent: System.Threading.Tasks.Task`1\n  langs:\n  - csharp\n  name: Result\n  nameWithType: Task<TResult>.Result\n  fullName: System.Threading.Tasks.Task<TResult>.Result\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TResult Result { get; }\n    return:\n      type: TResult\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Threading.Tasks.Task\n  isExternal: false\n  name: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0})\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task(Func<TResult>)\n  nameWithType: Task<TResult>.Task(Func<TResult>)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<TResult>)\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task(Func<Object,TResult>,Object)\n  nameWithType: Task<TResult>.Task(Func<Object,TResult>,Object)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<Object,TResult>,Object)\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task(Func<TResult>,CancellationToken)\n  nameWithType: Task<TResult>.Task(Func<TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<TResult>,CancellationToken)\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task(Func<TResult>,TaskCreationOptions)\n  nameWithType: Task<TResult>.Task(Func<TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<TResult>,TaskCreationOptions)\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task(Func<Object,TResult>,Object,CancellationToken)\n  nameWithType: Task<TResult>.Task(Func<Object,TResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<Object,TResult>,Object,CancellationToken)\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task(Func<Object,TResult>,Object,TaskCreationOptions)\n  nameWithType: Task<TResult>.Task(Func<Object,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<Object,TResult>,Object,TaskCreationOptions)\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task(Func<TResult>,CancellationToken,TaskCreationOptions)\n  nameWithType: Task<TResult>.Task(Func<TResult>,CancellationToken,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<TResult>,CancellationToken,TaskCreationOptions)\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)\n  nameWithType: Task<TResult>.Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.Task(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions)\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ConfigureAwait(Boolean)\n  nameWithType: Task<TResult>.ConfigureAwait(Boolean)\n  fullName: System.Threading.Tasks.Task<TResult>.ConfigureAwait(Boolean)\n- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: ConfiguredTaskAwaitable<TResult>\n  nameWithType: ConfiguredTaskAwaitable<TResult>\n  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>>)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TResult>>\n  nameWithType: Action<Task<TResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>,Object>,Object)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task<TResult>,Object>\n  nameWithType: Action<Task<TResult>,Object>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>>,CancellationToken)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TResult>>\n  nameWithType: Action<Task<TResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>>,TaskContinuationOptions)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TResult>>\n  nameWithType: Action<Task<TResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>>,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TResult>>\n  nameWithType: Action<Task<TResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task<TResult>,Object>\n  nameWithType: Action<Task<TResult>,Object>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>,Object>,Object,TaskContinuationOptions)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task<TResult>,Object>\n  nameWithType: Action<Task<TResult>,Object>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>,Object>,Object,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task<TResult>,Object>\n  nameWithType: Action<Task<TResult>,Object>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult}}\n  parent: System\n  isExternal: false\n  name: Action<Task<TResult>>\n  nameWithType: Action<Task<TResult>>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action<Task<TResult>,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task{TResult},System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task<TResult>,Object>\n  nameWithType: Action<Task<TResult>,Object>\n  fullName: System.Action<System.Threading.Tasks.Task<TResult>,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,TNewResult>)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,TNewResult>\n  nameWithType: Func<Task<TResult>,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,Object,TNewResult>\n  nameWithType: Func<Task<TResult>,Object,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,TNewResult>\n  nameWithType: Func<Task<TResult>,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,TNewResult>,TaskContinuationOptions)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,TNewResult>\n  nameWithType: Func<Task<TResult>,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,TNewResult>,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,TaskScheduler)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,TNewResult>\n  nameWithType: Func<Task<TResult>,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,Object,TNewResult>\n  nameWithType: Func<Task<TResult>,Object,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskContinuationOptions)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,Object,TNewResult>\n  nameWithType: Func<Task<TResult>,Object,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,TaskScheduler)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,Object,TNewResult>\n  nameWithType: Func<Task<TResult>,Object,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,TNewResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,TNewResult>\n  nameWithType: Func<Task<TResult>,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,TNewResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func<Task<TResult>,Object,TNewResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task{TNewResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TNewResult>\n  nameWithType: Task<TNewResult>\n  fullName: System.Threading.Tasks.Task<TNewResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>,Object,TNewResult>\n  nameWithType: Func<Task<TResult>,Object,TNewResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>,System.Object,TNewResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task`1.Factory\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Factory\n  nameWithType: Task<TResult>.Factory\n  fullName: System.Threading.Tasks.Task<TResult>.Factory\n- uid: System.Threading.Tasks.TaskFactory`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskFactory<TResult>\n  nameWithType: TaskFactory<TResult>\n  fullName: System.Threading.Tasks.TaskFactory<TResult>\n- uid: System.Threading.Tasks.Task`1.GetAwaiter\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: GetAwaiter()\n  nameWithType: Task<TResult>.GetAwaiter()\n  fullName: System.Threading.Tasks.Task<TResult>.GetAwaiter()\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: TaskAwaiter<TResult>\n  nameWithType: TaskAwaiter<TResult>\n  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>\n- uid: System.Threading.Tasks.Task`1.Result\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Result\n  nameWithType: Task<TResult>.Result\n  fullName: System.Threading.Tasks.Task<TResult>.Result\n- uid: TResult\n  parent: ''\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Threading.Tasks.Task`1.ContinueWith*\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  nameWithType: Task<TResult>.\n- uid: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*\n  parent: System.Threading.Tasks.Task`1\n  isExternal: false\n  nameWithType: Task<TResult>.\n"}