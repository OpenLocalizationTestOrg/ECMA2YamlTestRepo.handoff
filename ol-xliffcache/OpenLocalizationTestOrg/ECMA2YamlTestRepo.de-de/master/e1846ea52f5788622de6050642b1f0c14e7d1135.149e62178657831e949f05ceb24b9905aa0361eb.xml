{"nodes":[{"pos":[1331,1339],"content":"Typeface","needQuote":true,"needEscape":true,"nodes":[{"content":"Typeface","pos":[0,8]}]},{"pos":[1944,1960],"content":"Typeface(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Typeface(String)","pos":[0,16]}]},{"pos":[2297,2331],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2728,2781],"content":"Typeface(FontFamily,FontStyle,FontWeight,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"Typeface(FontFamily,FontStyle,FontWeight,FontStretch)","pos":[0,53]}]},{"pos":[3333,3367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3440,3474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3549,3583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3660,3694],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4155,4219],"content":"Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)","needQuote":true,"needEscape":true,"nodes":[{"content":"Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)","pos":[0,64]}]},{"pos":[4845,4879],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4952,4986],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5061,5095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5172,5206],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5299,5333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5516,5526],"content":"CapsHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"CapsHeight","pos":[0,10]}]},{"pos":[5816,5850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6055,6069],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6387,6421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6480,6514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6695,6704],"content":"FaceNames","needQuote":true,"needEscape":true,"nodes":[{"content":"FaceNames","pos":[0,9]}]},{"pos":[7078,7112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7295,7305],"content":"FontFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily","pos":[0,10]}]},{"pos":[7638,7672],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7857,7870],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8184,8218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8411,8426],"content":"IsBoldSimulated","needQuote":true,"needEscape":true,"nodes":[{"content":"IsBoldSimulated","pos":[0,15]}]},{"pos":[8730,8764],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8963,8981],"content":"IsObliqueSimulated","needQuote":true,"needEscape":true,"nodes":[{"content":"IsObliqueSimulated","pos":[0,18]}]},{"pos":[9294,9328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9505,9512],"content":"Stretch","needQuote":true,"needEscape":true,"nodes":[{"content":"Stretch","pos":[0,7]}]},{"pos":[9826,9860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10065,10086],"content":"StrikethroughPosition","needQuote":true,"needEscape":true,"nodes":[{"content":"StrikethroughPosition","pos":[0,21]}]},{"pos":[10409,10443],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10650,10672],"content":"StrikethroughThickness","needQuote":true,"needEscape":true,"nodes":[{"content":"StrikethroughThickness","pos":[0,22]}]},{"pos":[10998,11032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11205,11210],"content":"Style","needQuote":true,"needEscape":true,"nodes":[{"content":"Style","pos":[0,5]}]},{"pos":[11514,11548],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11823,11857],"content":"TryGetGlyphTypeface(GlyphTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetGlyphTypeface(GlyphTypeface)","pos":[0,34]}]},{"pos":[12296,12330],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12389,12423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12620,12637],"content":"UnderlinePosition","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlinePosition","pos":[0,17]}]},{"pos":[12948,12982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13181,13199],"content":"UnderlineThickness","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlineThickness","pos":[0,18]}]},{"pos":[13513,13547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13722,13728],"content":"Weight","needQuote":true,"needEscape":true,"nodes":[{"content":"Weight","pos":[0,6]}]},{"pos":[14037,14071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14248,14255],"content":"XHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"XHeight","pos":[0,7]}]},{"pos":[14536,14570],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14681,14694],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[14821,14837],"content":"Typeface(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Typeface(String)","pos":[0,16]}]},{"pos":[15005,15011],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15283,15336],"content":"Typeface(FontFamily,FontStyle,FontWeight,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"Typeface(FontFamily,FontStyle,FontWeight,FontStretch)","pos":[0,53]}]},{"pos":[15610,15620],"content":"FontFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily","pos":[0,10]}]},{"pos":[15777,15786],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[15936,15946],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[16099,16110],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[16432,16496],"content":"Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)","needQuote":true,"needEscape":true,"nodes":[{"content":"Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)","pos":[0,64]}]},{"pos":[16792,16802],"content":"FontFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily","pos":[0,10]}]},{"pos":[16959,16968],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[17118,17128],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[17281,17292],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[17458,17468],"content":"FontFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily","pos":[0,10]}]},{"pos":[17656,17666],"content":"CapsHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"CapsHeight","pos":[0,10]}]},{"pos":[17822,17828],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[18005,18019],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[18184,18191],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18309,18315],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18480,18489],"content":"FaceNames","needQuote":true,"needEscape":true,"nodes":[{"content":"FaceNames","pos":[0,9]}]},{"pos":[18697,18729],"content":"LanguageSpecificStringDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"LanguageSpecificStringDictionary","pos":[0,32]}]},{"pos":[18961,18971],"content":"FontFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily","pos":[0,10]}]},{"pos":[19159,19169],"content":"FontFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamily","pos":[0,10]}]},{"pos":[19358,19371],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19532,19537],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19706,19721],"content":"IsBoldSimulated","needQuote":true,"needEscape":true,"nodes":[{"content":"IsBoldSimulated","pos":[0,15]}]},{"pos":[19888,19895],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20071,20089],"content":"IsObliqueSimulated","needQuote":true,"needEscape":true,"nodes":[{"content":"IsObliqueSimulated","pos":[0,18]}]},{"pos":[20262,20269],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20434,20441],"content":"Stretch","needQuote":true,"needEscape":true,"nodes":[{"content":"Stretch","pos":[0,7]}]},{"pos":[20612,20623],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[20818,20839],"content":"StrikethroughPosition","needQuote":true,"needEscape":true,"nodes":[{"content":"StrikethroughPosition","pos":[0,21]}]},{"pos":[21017,21023],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[21201,21223],"content":"StrikethroughThickness","needQuote":true,"needEscape":true,"nodes":[{"content":"StrikethroughThickness","pos":[0,22]}]},{"pos":[21403,21409],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[21570,21575],"content":"Style","needQuote":true,"needEscape":true,"nodes":[{"content":"Style","pos":[0,5]}]},{"pos":[21740,21749],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[21975,22009],"content":"TryGetGlyphTypeface(GlyphTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetGlyphTypeface(GlyphTypeface)","pos":[0,34]}]},{"pos":[22214,22221],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22374,22387],"content":"GlyphTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"GlyphTypeface","pos":[0,13]}]},{"pos":[22588,22605],"content":"UnderlinePosition","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlinePosition","pos":[0,17]}]},{"pos":[22775,22781],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[22955,22973],"content":"UnderlineThickness","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlineThickness","pos":[0,18]}]},{"pos":[23145,23151],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[23313,23319],"content":"Weight","needQuote":true,"needEscape":true,"nodes":[{"content":"Weight","pos":[0,6]}]},{"pos":[23487,23497],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[23676,23683],"content":"XHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"XHeight","pos":[0,7]}]},{"pos":[23833,23839],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Typeface\n  id: Typeface\n  children:\n  - System.Windows.Media.Typeface.#ctor(System.String)\n  - System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)\n  - System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch,System.Windows.Media.FontFamily)\n  - System.Windows.Media.Typeface.CapsHeight\n  - System.Windows.Media.Typeface.Equals(System.Object)\n  - System.Windows.Media.Typeface.FaceNames\n  - System.Windows.Media.Typeface.FontFamily\n  - System.Windows.Media.Typeface.GetHashCode\n  - System.Windows.Media.Typeface.IsBoldSimulated\n  - System.Windows.Media.Typeface.IsObliqueSimulated\n  - System.Windows.Media.Typeface.Stretch\n  - System.Windows.Media.Typeface.StrikethroughPosition\n  - System.Windows.Media.Typeface.StrikethroughThickness\n  - System.Windows.Media.Typeface.Style\n  - System.Windows.Media.Typeface.TryGetGlyphTypeface(System.Windows.Media.GlyphTypeface@)\n  - System.Windows.Media.Typeface.UnderlinePosition\n  - System.Windows.Media.Typeface.UnderlineThickness\n  - System.Windows.Media.Typeface.Weight\n  - System.Windows.Media.Typeface.XHeight\n  langs:\n  - csharp\n  name: Typeface\n  nameWithType: Typeface\n  fullName: System.Windows.Media.Typeface\n  type: Class\n  syntax:\n    content: public class Typeface\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: Typeface(String)\n  nameWithType: Typeface.Typeface(String)\n  fullName: System.Windows.Media.Typeface.Typeface(String)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public Typeface (string typefaceName);\n    parameters:\n    - id: typefaceName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)\n  id: '#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)'\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: Typeface(FontFamily,FontStyle,FontWeight,FontStretch)\n  nameWithType: Typeface.Typeface(FontFamily,FontStyle,FontWeight,FontStretch)\n  fullName: System.Windows.Media.Typeface.Typeface(FontFamily,FontStyle,FontWeight,FontStretch)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public Typeface (System.Windows.Media.FontFamily fontFamily, System.Windows.FontStyle style, System.Windows.FontWeight weight, System.Windows.FontStretch stretch);\n    parameters:\n    - id: fontFamily\n      type: System.Windows.Media.FontFamily\n      description: Parameter description to be filled\n    - id: style\n      type: System.Windows.FontStyle\n      description: Parameter description to be filled\n    - id: weight\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    - id: stretch\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch,System.Windows.Media.FontFamily)\n  id: '#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch,System.Windows.Media.FontFamily)'\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)\n  nameWithType: Typeface.Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)\n  fullName: System.Windows.Media.Typeface.Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public Typeface (System.Windows.Media.FontFamily fontFamily, System.Windows.FontStyle style, System.Windows.FontWeight weight, System.Windows.FontStretch stretch, System.Windows.Media.FontFamily fallbackFontFamily);\n    parameters:\n    - id: fontFamily\n      type: System.Windows.Media.FontFamily\n      description: Parameter description to be filled\n    - id: style\n      type: System.Windows.FontStyle\n      description: Parameter description to be filled\n    - id: weight\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    - id: stretch\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    - id: fallbackFontFamily\n      type: System.Windows.Media.FontFamily\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.CapsHeight\n  id: CapsHeight\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: CapsHeight\n  nameWithType: Typeface.CapsHeight\n  fullName: System.Windows.Media.Typeface.CapsHeight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double CapsHeight { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Typeface.Equals(Object)\n  fullName: System.Windows.Media.Typeface.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.FaceNames\n  id: FaceNames\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: FaceNames\n  nameWithType: Typeface.FaceNames\n  fullName: System.Windows.Media.Typeface.FaceNames\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.LanguageSpecificStringDictionary FaceNames { get; }\n    return:\n      type: System.Windows.Media.LanguageSpecificStringDictionary\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.FontFamily\n  id: FontFamily\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: FontFamily\n  nameWithType: Typeface.FontFamily\n  fullName: System.Windows.Media.Typeface.FontFamily\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.FontFamily FontFamily { get; }\n    return:\n      type: System.Windows.Media.FontFamily\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Typeface.GetHashCode()\n  fullName: System.Windows.Media.Typeface.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.IsBoldSimulated\n  id: IsBoldSimulated\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: IsBoldSimulated\n  nameWithType: Typeface.IsBoldSimulated\n  fullName: System.Windows.Media.Typeface.IsBoldSimulated\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool IsBoldSimulated { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.IsObliqueSimulated\n  id: IsObliqueSimulated\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: IsObliqueSimulated\n  nameWithType: Typeface.IsObliqueSimulated\n  fullName: System.Windows.Media.Typeface.IsObliqueSimulated\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool IsObliqueSimulated { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.Stretch\n  id: Stretch\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: Stretch\n  nameWithType: Typeface.Stretch\n  fullName: System.Windows.Media.Typeface.Stretch\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.FontStretch Stretch { get; }\n    return:\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.StrikethroughPosition\n  id: StrikethroughPosition\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: StrikethroughPosition\n  nameWithType: Typeface.StrikethroughPosition\n  fullName: System.Windows.Media.Typeface.StrikethroughPosition\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double StrikethroughPosition { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.StrikethroughThickness\n  id: StrikethroughThickness\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: StrikethroughThickness\n  nameWithType: Typeface.StrikethroughThickness\n  fullName: System.Windows.Media.Typeface.StrikethroughThickness\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double StrikethroughThickness { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.Style\n  id: Style\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: Style\n  nameWithType: Typeface.Style\n  fullName: System.Windows.Media.Typeface.Style\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.FontStyle Style { get; }\n    return:\n      type: System.Windows.FontStyle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.TryGetGlyphTypeface(System.Windows.Media.GlyphTypeface@)\n  id: TryGetGlyphTypeface(System.Windows.Media.GlyphTypeface@)\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: TryGetGlyphTypeface(GlyphTypeface)\n  nameWithType: Typeface.TryGetGlyphTypeface(GlyphTypeface)\n  fullName: System.Windows.Media.Typeface.TryGetGlyphTypeface(GlyphTypeface)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool TryGetGlyphTypeface (out System.Windows.Media.GlyphTypeface glyphTypeface);\n    parameters:\n    - id: glyphTypeface\n      type: System.Windows.Media.GlyphTypeface\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.UnderlinePosition\n  id: UnderlinePosition\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: UnderlinePosition\n  nameWithType: Typeface.UnderlinePosition\n  fullName: System.Windows.Media.Typeface.UnderlinePosition\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double UnderlinePosition { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.UnderlineThickness\n  id: UnderlineThickness\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: UnderlineThickness\n  nameWithType: Typeface.UnderlineThickness\n  fullName: System.Windows.Media.Typeface.UnderlineThickness\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double UnderlineThickness { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.Weight\n  id: Weight\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: Weight\n  nameWithType: Typeface.Weight\n  fullName: System.Windows.Media.Typeface.Weight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.FontWeight Weight { get; }\n    return:\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Typeface.XHeight\n  id: XHeight\n  parent: System.Windows.Media.Typeface\n  langs:\n  - csharp\n  name: XHeight\n  nameWithType: Typeface.XHeight\n  fullName: System.Windows.Media.Typeface.XHeight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double XHeight { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.Typeface.#ctor(System.String)\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: Typeface(String)\n  nameWithType: Typeface.Typeface(String)\n  fullName: System.Windows.Media.Typeface.Typeface(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: Typeface(FontFamily,FontStyle,FontWeight,FontStretch)\n  nameWithType: Typeface.Typeface(FontFamily,FontStyle,FontWeight,FontStretch)\n  fullName: System.Windows.Media.Typeface.Typeface(FontFamily,FontStyle,FontWeight,FontStretch)\n- uid: System.Windows.Media.FontFamily\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Windows.Media.FontFamily\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch,System.Windows.Media.FontFamily)\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)\n  nameWithType: Typeface.Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)\n  fullName: System.Windows.Media.Typeface.Typeface(FontFamily,FontStyle,FontWeight,FontStretch,FontFamily)\n- uid: System.Windows.Media.FontFamily\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Windows.Media.FontFamily\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.Media.FontFamily\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Windows.Media.FontFamily\n- uid: System.Windows.Media.Typeface.CapsHeight\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: CapsHeight\n  nameWithType: Typeface.CapsHeight\n  fullName: System.Windows.Media.Typeface.CapsHeight\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Typeface.Equals(System.Object)\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Typeface.Equals(Object)\n  fullName: System.Windows.Media.Typeface.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Typeface.FaceNames\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: FaceNames\n  nameWithType: Typeface.FaceNames\n  fullName: System.Windows.Media.Typeface.FaceNames\n- uid: System.Windows.Media.LanguageSpecificStringDictionary\n  parent: System.Windows.Media\n  isExternal: false\n  name: LanguageSpecificStringDictionary\n  nameWithType: LanguageSpecificStringDictionary\n  fullName: System.Windows.Media.LanguageSpecificStringDictionary\n- uid: System.Windows.Media.Typeface.FontFamily\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: FontFamily\n  nameWithType: Typeface.FontFamily\n  fullName: System.Windows.Media.Typeface.FontFamily\n- uid: System.Windows.Media.FontFamily\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Windows.Media.FontFamily\n- uid: System.Windows.Media.Typeface.GetHashCode\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Typeface.GetHashCode()\n  fullName: System.Windows.Media.Typeface.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Typeface.IsBoldSimulated\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: IsBoldSimulated\n  nameWithType: Typeface.IsBoldSimulated\n  fullName: System.Windows.Media.Typeface.IsBoldSimulated\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Typeface.IsObliqueSimulated\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: IsObliqueSimulated\n  nameWithType: Typeface.IsObliqueSimulated\n  fullName: System.Windows.Media.Typeface.IsObliqueSimulated\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Typeface.Stretch\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: Stretch\n  nameWithType: Typeface.Stretch\n  fullName: System.Windows.Media.Typeface.Stretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.Media.Typeface.StrikethroughPosition\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: StrikethroughPosition\n  nameWithType: Typeface.StrikethroughPosition\n  fullName: System.Windows.Media.Typeface.StrikethroughPosition\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Typeface.StrikethroughThickness\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: StrikethroughThickness\n  nameWithType: Typeface.StrikethroughThickness\n  fullName: System.Windows.Media.Typeface.StrikethroughThickness\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Typeface.Style\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: Style\n  nameWithType: Typeface.Style\n  fullName: System.Windows.Media.Typeface.Style\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.Media.Typeface.TryGetGlyphTypeface(System.Windows.Media.GlyphTypeface@)\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: TryGetGlyphTypeface(GlyphTypeface)\n  nameWithType: Typeface.TryGetGlyphTypeface(GlyphTypeface)\n  fullName: System.Windows.Media.Typeface.TryGetGlyphTypeface(GlyphTypeface)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.GlyphTypeface\n  parent: System.Windows.Media\n  isExternal: false\n  name: GlyphTypeface\n  nameWithType: GlyphTypeface\n  fullName: System.Windows.Media.GlyphTypeface\n- uid: System.Windows.Media.Typeface.UnderlinePosition\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: UnderlinePosition\n  nameWithType: Typeface.UnderlinePosition\n  fullName: System.Windows.Media.Typeface.UnderlinePosition\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Typeface.UnderlineThickness\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: UnderlineThickness\n  nameWithType: Typeface.UnderlineThickness\n  fullName: System.Windows.Media.Typeface.UnderlineThickness\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Typeface.Weight\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: Weight\n  nameWithType: Typeface.Weight\n  fullName: System.Windows.Media.Typeface.Weight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.Media.Typeface.XHeight\n  parent: System.Windows.Media.Typeface\n  isExternal: false\n  name: XHeight\n  nameWithType: Typeface.XHeight\n  fullName: System.Windows.Media.Typeface.XHeight\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n"}