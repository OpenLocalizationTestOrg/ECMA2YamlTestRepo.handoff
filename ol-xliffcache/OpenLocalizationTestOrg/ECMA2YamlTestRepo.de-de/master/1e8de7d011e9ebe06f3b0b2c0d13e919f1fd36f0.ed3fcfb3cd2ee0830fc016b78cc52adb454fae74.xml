{"nodes":[{"pos":[2361,2374],"content":"CompiledQuery","needQuote":true,"needEscape":true,"nodes":[{"content":"CompiledQuery","pos":[0,13]}]},{"pos":[3163,3203],"content":"Compile(Expression<Func<TArg0,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TResult&gt;&gt;)","pos":[0,40],"source":"Compile(Expression<Func<TArg0,TResult>>)"}]},{"pos":[3755,3789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3860,3894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4203,4249],"content":"Compile(Expression<Func<TArg0,TArg1,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TResult&gt;&gt;)","pos":[0,46],"source":"Compile(Expression<Func<TArg0,TArg1,TResult>>)"}]},{"pos":[4837,4871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4948,4982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5299,5351],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt;)","pos":[0,52],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)"}]},{"pos":[5975,6009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6092,6126],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6451,6509],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt;)","pos":[0,58],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)"}]},{"pos":[7169,7203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7292,7326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7659,7723],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt;)","pos":[0,64],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)"}]},{"pos":[8419,8453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8548,8582],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8923,8993],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt;)","pos":[0,70],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)"}]},{"pos":[9725,9759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9860,9894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10243,10319],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt;)","pos":[0,76],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)"}]},{"pos":[11087,11121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11228,11262],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11619,11701],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt;)","pos":[0,82],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)"}]},{"pos":[12505,12539],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12652,12686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13053,13141],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt;)","pos":[0,88],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)"}]},{"pos":[13981,14015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14134,14168],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14545,14639],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt;)","pos":[0,94],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)"}]},{"pos":[15515,15549],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15674,15708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16095,16196],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt;)","pos":[0,101],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)"}]},{"pos":[17114,17148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17280,17314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17711,17819],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt;)","pos":[0,108],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)"}]},{"pos":[18779,18813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18952,18986],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19393,19508],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt;)","pos":[0,115],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)"}]},{"pos":[20510,20544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20690,20724],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21141,21263],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt;)","pos":[0,122],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)"}]},{"pos":[22307,22341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22494,22528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22955,23084],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt;)","pos":[0,129],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)"}]},{"pos":[24170,24204],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24364,24398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24835,24971],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt;)","pos":[0,136],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)"}]},{"pos":[26099,26133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26300,26334],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26519,26529],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[26882,26916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27027,27040],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[27217,27257],"content":"Compile(Expression<Func<TArg0,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TResult&gt;&gt;)","pos":[0,40],"source":"Compile(Expression<Func<TArg0,TResult>>)"}]},{"pos":[27491,27510],"content":"Func<TArg0,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TResult&gt;","pos":[0,19],"source":"Func<TArg0,TResult>"}]},{"pos":[27718,27749],"content":"Expression<Func<TArg0,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TResult&gt;&gt;","pos":[0,31],"source":"Expression<Func<TArg0,TResult>>"}]},{"pos":[28053,28099],"content":"Compile(Expression<Func<TArg0,TArg1,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TResult&gt;&gt;)","pos":[0,46],"source":"Compile(Expression<Func<TArg0,TArg1,TResult>>)"}]},{"pos":[28351,28376],"content":"Func<TArg0,TArg1,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TResult&gt;","pos":[0,25],"source":"Func<TArg0,TArg1,TResult>"}]},{"pos":[28602,28639],"content":"Expression<Func<TArg0,TArg1,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TResult&gt;&gt;","pos":[0,37],"source":"Expression<Func<TArg0,TArg1,TResult>>"}]},{"pos":[28959,29011],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt;)","pos":[0,52],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)"}]},{"pos":[29281,29312],"content":"Func<TArg0,TArg1,TArg2,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TResult&gt;","pos":[0,31],"source":"Func<TArg0,TArg1,TArg2,TResult>"}]},{"pos":[29556,29599],"content":"Expression<Func<TArg0,TArg1,TArg2,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt;","pos":[0,43],"source":"Expression<Func<TArg0,TArg1,TArg2,TResult>>"}]},{"pos":[29935,29993],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt;)","pos":[0,58],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)"}]},{"pos":[30281,30318],"content":"Func<TArg0,TArg1,TArg2,TArg3,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;","pos":[0,37],"source":"Func<TArg0,TArg1,TArg2,TArg3,TResult>"}]},{"pos":[30580,30629],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt;","pos":[0,49],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>"}]},{"pos":[30981,31045],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt;)","pos":[0,64],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)"}]},{"pos":[31352,31395],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;","pos":[0,43],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>"}]},{"pos":[31675,31730],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt;","pos":[0,55],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>"}]},{"pos":[32098,32168],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt;)","pos":[0,70],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)"}]},{"pos":[32493,32542],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;","pos":[0,49],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>"}]},{"pos":[32840,32901],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt;","pos":[0,61],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>"}]},{"pos":[33285,33361],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt;)","pos":[0,76],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)"}]},{"pos":[33704,33759],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;","pos":[0,55],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>"}]},{"pos":[34075,34142],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt;","pos":[0,67],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>"}]},{"pos":[34542,34624],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt;)","pos":[0,82],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)"}]},{"pos":[34985,35046],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;","pos":[0,61],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>"}]},{"pos":[35380,35453],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt;","pos":[0,73],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>"}]},{"pos":[35870,35958],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt;)","pos":[0,88],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)"}]},{"pos":[36337,36404],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;","pos":[0,67],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>"}]},{"pos":[36756,36835],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt;","pos":[0,79],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>"}]},{"pos":[37269,37363],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt;)","pos":[0,94],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)"}]},{"pos":[37760,37833],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;","pos":[0,73],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>"}]},{"pos":[38203,38288],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt;","pos":[0,85],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>"}]},{"pos":[38739,38840],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt;)","pos":[0,101],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)"}]},{"pos":[39258,39338],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;","pos":[0,80],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>"}]},{"pos":[39729,39821],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt;","pos":[0,92],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>"}]},{"pos":[40291,40399],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt;)","pos":[0,108],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)"}]},{"pos":[40838,40925],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;","pos":[0,87],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>"}]},{"pos":[41337,41436],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt;","pos":[0,99],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>"}]},{"pos":[41925,42040],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt;)","pos":[0,115],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)"}]},{"pos":[42500,42594],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;","pos":[0,94],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>"}]},{"pos":[43027,43133],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt;","pos":[0,106],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>"}]},{"pos":[43641,43763],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt;)","pos":[0,122],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)"}]},{"pos":[44244,44345],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;","pos":[0,101],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>"}]},{"pos":[44799,44912],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt;","pos":[0,113],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>"}]},{"pos":[45439,45568],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt;)","pos":[0,129],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)"}]},{"pos":[46070,46178],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;","pos":[0,108],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>"}]},{"pos":[46653,46773],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt;","pos":[0,120],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>"}]},{"pos":[47319,47455],"content":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compile(Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt;)","pos":[0,136],"source":"Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)"}]},{"pos":[47978,48093],"content":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;","pos":[0,115],"source":"Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>"}]},{"pos":[48589,48716],"content":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt;","pos":[0,127],"source":"Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>"}]},{"pos":[49150,49160],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[49366,49382],"content":"LambdaExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.CompiledQuery\n  id: CompiledQuery\n  children:\n  - System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})\n  - System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})\n  - System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})\n  - System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})\n  - System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})\n  - System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})\n  - System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})\n  - System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})\n  - System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})\n  - System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})\n  - System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})\n  - System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})\n  - System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})\n  - System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})\n  - System.Data.Linq.CompiledQuery.Expression\n  langs:\n  - csharp\n  name: CompiledQuery\n  nameWithType: CompiledQuery\n  fullName: System.Data.Linq.CompiledQuery\n  type: Class\n  syntax:\n    content: public sealed class CompiledQuery\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TResult> Compile<TArg0,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  id: Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TResult> Compile<TArg0,TArg1,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})\n  id: Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TResult> Compile<TArg0,TArg1,TArg2,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})\n  id: Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})\n  id: Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})\n  id: Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})\n  id: Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})\n  id: Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})\n  id: Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})\n  id: Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})\n  id: Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})\n  id: Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})\n  id: Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})\n  id: Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})\n  id: Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})\n  id: Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: 'public static Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult> Compile<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult> (System.Linq.Expressions.Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>> query) where TArg0 : System.Data.Linq.DataContext;'\n    parameters:\n    - id: query\n      type: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.CompiledQuery.Expression\n  id: Expression\n  parent: System.Data.Linq.CompiledQuery\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: CompiledQuery.Expression\n  fullName: System.Data.Linq.CompiledQuery.Expression\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public System.Linq.Expressions.LambdaExpression Expression { get; }\n    return:\n      type: System.Linq.Expressions.LambdaExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TResult>>)\n- uid: System.Func{TArg0,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TResult>\n  nameWithType: Func<TArg0,TResult>\n  fullName: System.Func<TArg0,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TResult>>\n  nameWithType: Expression<Func<TArg0,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TResult>>)\n- uid: System.Func{TArg0,TArg1,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TResult>\n  nameWithType: Func<TArg0,TArg1,TResult>\n  fullName: System.Func<TArg0,TArg1,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg0,TArg1,TArg2,TArg3,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  nameWithType: CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n  fullName: System.Data.Linq.CompiledQuery.Compile(Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>)\n- uid: System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n  nameWithType: Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n  fullName: System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>\n- uid: System.Linq.Expressions.Expression{System.Func{TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>\n  nameWithType: Expression<Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult>>\n- uid: System.Data.Linq.CompiledQuery.Expression\n  parent: System.Data.Linq.CompiledQuery\n  isExternal: false\n  name: Expression\n  nameWithType: CompiledQuery.Expression\n  fullName: System.Data.Linq.CompiledQuery.Expression\n- uid: System.Linq.Expressions.LambdaExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LambdaExpression\n  nameWithType: LambdaExpression\n  fullName: System.Linq.Expressions.LambdaExpression\n"}