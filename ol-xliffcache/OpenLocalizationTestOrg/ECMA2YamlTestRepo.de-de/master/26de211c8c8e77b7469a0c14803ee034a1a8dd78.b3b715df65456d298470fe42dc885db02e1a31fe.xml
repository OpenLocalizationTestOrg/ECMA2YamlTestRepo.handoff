{"nodes":[{"pos":[467,482],"content":"OleDbPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"OleDbPermission","pos":[0,15]}]},{"pos":[2443,2460],"content":"OleDbPermission()","needQuote":true,"needEscape":true,"nodes":[{"content":"OleDbPermission()","pos":[0,17]}]},{"pos":[2997,3029],"content":"OleDbPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"OleDbPermission(PermissionState)","pos":[0,32]}]},{"pos":[3461,3495],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3798,3838],"content":"OleDbPermission(PermissionState,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"OleDbPermission(PermissionState,Boolean)","pos":[0,40]}]},{"pos":[4311,4345],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4421,4455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4634,4640],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[4975,5009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5196,5204],"content":"Provider","needQuote":true,"needEscape":true,"nodes":[{"content":"Provider","pos":[0,8]}]},{"pos":[5496,5530],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5663,5698],"content":"System.Data.Common.DBDataPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Data.Common.DBDataPermission","pos":[0,35]}]},{"pos":[5818,5835],"content":"OleDbPermission()","needQuote":true,"needEscape":true,"nodes":[{"content":"OleDbPermission()","pos":[0,17]}]},{"pos":[6114,6146],"content":"OleDbPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"OleDbPermission(PermissionState)","pos":[0,32]}]},{"pos":[6408,6423],"content":"PermissionState","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionState","pos":[0,15]}]},{"pos":[6691,6731],"content":"OleDbPermission(PermissionState,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"OleDbPermission(PermissionState,Boolean)","pos":[0,40]}]},{"pos":[7009,7024],"content":"PermissionState","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionState","pos":[0,15]}]},{"pos":[7180,7187],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7357,7363],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[7545,7556],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[7747,7755],"content":"Provider","needQuote":true,"needEscape":true,"nodes":[{"content":"Provider","pos":[0,8]}]},{"pos":[7918,7924],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OleDb.OleDbPermission\n  id: OleDbPermission\n  children:\n  - System.Data.OleDb.OleDbPermission.#ctor\n  - System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  - System.Data.OleDb.OleDbPermission.Copy\n  - System.Data.OleDb.OleDbPermission.Provider\n  langs:\n  - csharp\n  name: OleDbPermission\n  nameWithType: OleDbPermission\n  fullName: System.Data.OleDb.OleDbPermission\n  type: Class\n  syntax:\n    content: 'public sealed class OleDbPermission : System.Data.Common.DBDataPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  - System.Data.Common.DBDataPermission\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  - System.Data.Common.DBDataPermission.AllowBlankPassword\n  - System.Data.Common.DBDataPermission.Clear\n  - System.Data.Common.DBDataPermission.CreateInstance\n  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Data.Common.DBDataPermission.IsUnrestricted\n  - System.Data.Common.DBDataPermission.ToXml\n  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.OleDb.OleDbPermission.#ctor\n  id: '#ctor'\n  parent: System.Data.OleDb.OleDbPermission\n  langs:\n  - csharp\n  name: OleDbPermission()\n  nameWithType: OleDbPermission.OleDbPermission()\n  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: public OleDbPermission ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Data.OleDb.OleDbPermission\n  langs:\n  - csharp\n  name: OleDbPermission(PermissionState)\n  nameWithType: OleDbPermission.OleDbPermission(PermissionState)\n  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: public OleDbPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'\n  parent: System.Data.OleDb.OleDbPermission\n  langs:\n  - csharp\n  name: OleDbPermission(PermissionState,Boolean)\n  nameWithType: OleDbPermission.OleDbPermission(PermissionState,Boolean)\n  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission(PermissionState,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: public OleDbPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: Parameter description to be filled\n    - id: allowBlankPassword\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.OleDb.OleDbPermission.Copy\n  id: Copy\n  parent: System.Data.OleDb.OleDbPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: OleDbPermission.Copy()\n  fullName: System.Data.OleDb.OleDbPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.OleDb.OleDbPermission.Provider\n  id: Provider\n  parent: System.Data.OleDb.OleDbPermission\n  langs:\n  - csharp\n  name: Provider\n  nameWithType: OleDbPermission.Provider\n  fullName: System.Data.OleDb.OleDbPermission.Provider\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: public string Provider { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: System.Data.Common.DBDataPermission\n- uid: System.Data.OleDb.OleDbPermission.#ctor\n  parent: System.Data.OleDb.OleDbPermission\n  isExternal: false\n  name: OleDbPermission()\n  nameWithType: OleDbPermission.OleDbPermission()\n  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission()\n- uid: System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Data.OleDb.OleDbPermission\n  isExternal: false\n  name: OleDbPermission(PermissionState)\n  nameWithType: OleDbPermission.OleDbPermission(PermissionState)\n  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  parent: System.Data.OleDb.OleDbPermission\n  isExternal: false\n  name: OleDbPermission(PermissionState,Boolean)\n  nameWithType: OleDbPermission.OleDbPermission(PermissionState,Boolean)\n  fullName: System.Data.OleDb.OleDbPermission.OleDbPermission(PermissionState,Boolean)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.OleDb.OleDbPermission.Copy\n  parent: System.Data.OleDb.OleDbPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: OleDbPermission.Copy()\n  fullName: System.Data.OleDb.OleDbPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Data.OleDb.OleDbPermission.Provider\n  parent: System.Data.OleDb.OleDbPermission\n  isExternal: false\n  name: Provider\n  nameWithType: OleDbPermission.Provider\n  fullName: System.Data.OleDb.OleDbPermission.Provider\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}