{"nodes":[{"pos":[752,781],"content":"ReflectionPermissionAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionPermissionAttribute","pos":[0,29]}]},{"pos":[5606,5651],"content":"ReflectionPermissionAttribute(SecurityAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionPermissionAttribute(SecurityAction)","pos":[0,45]}]},{"pos":[6168,6202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6453,6471],"content":"CreatePermission()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreatePermission()","pos":[0,18]}]},{"pos":[6887,6921],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7150,7155],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[7568,7602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7845,7857],"content":"MemberAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberAccess","pos":[0,12]}]},{"pos":[8205,8239],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8486,8500],"content":"ReflectionEmit","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionEmit","pos":[0,14]}]},{"pos":[8854,8888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9151,9173],"content":"RestrictedMemberAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"RestrictedMemberAccess","pos":[0,22]}]},{"pos":[9551,9585],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9834,9849],"content":"TypeInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInformation","pos":[0,15]}]},{"pos":[10206,10240],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10393,10448],"content":"System.Security.Permissions.CodeAccessSecurityAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Permissions.CodeAccessSecurityAttribute","pos":[0,55]}]},{"pos":[10660,10705],"content":"ReflectionPermissionAttribute(SecurityAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionPermissionAttribute(SecurityAction)","pos":[0,45]}]},{"pos":[11030,11044],"content":"SecurityAction","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityAction","pos":[0,14]}]},{"pos":[11309,11327],"content":"CreatePermission()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreatePermission()","pos":[0,18]}]},{"pos":[11571,11582],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[11818,11823],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[12078,12102],"content":"ReflectionPermissionFlag","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionPermissionFlag","pos":[0,24]}]},{"pos":[12383,12395],"content":"MemberAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberAccess","pos":[0,12]}]},{"pos":[12605,12612],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12840,12854],"content":"ReflectionEmit","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionEmit","pos":[0,14]}]},{"pos":[13068,13075],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13311,13333],"content":"RestrictedMemberAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"RestrictedMemberAccess","pos":[0,22]}]},{"pos":[13563,13570],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13799,13814],"content":"TypeInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInformation","pos":[0,15]}]},{"pos":[14030,14037],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.ReflectionPermissionAttribute\n  id: ReflectionPermissionAttribute\n  children:\n  - System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission\n  - System.Security.Permissions.ReflectionPermissionAttribute.Flags\n  - System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess\n  - System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit\n  - System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess\n  - System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation\n  langs:\n  - csharp\n  name: ReflectionPermissionAttribute\n  nameWithType: ReflectionPermissionAttribute\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute\n  type: Class\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ReflectionPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  langs:\n  - csharp\n  name: ReflectionPermissionAttribute(SecurityAction)\n  nameWithType: ReflectionPermissionAttribute.ReflectionPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public ReflectionPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: ReflectionPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.Flags\n  id: Flags\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: ReflectionPermissionAttribute.Flags\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public System.Security.Permissions.ReflectionPermissionFlag Flags { get; set; }\n    return:\n      type: System.Security.Permissions.ReflectionPermissionFlag\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess\n  id: MemberAccess\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  langs:\n  - csharp\n  name: MemberAccess\n  nameWithType: ReflectionPermissionAttribute.MemberAccess\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public bool MemberAccess { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit\n  id: ReflectionEmit\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  langs:\n  - csharp\n  name: ReflectionEmit\n  nameWithType: ReflectionPermissionAttribute.ReflectionEmit\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public bool ReflectionEmit { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess\n  id: RestrictedMemberAccess\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  langs:\n  - csharp\n  name: RestrictedMemberAccess\n  nameWithType: ReflectionPermissionAttribute.RestrictedMemberAccess\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public bool RestrictedMemberAccess { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation\n  id: TypeInformation\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  langs:\n  - csharp\n  name: TypeInformation\n  nameWithType: ReflectionPermissionAttribute.TypeInformation\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public bool TypeInformation { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  isExternal: false\n  name: ReflectionPermissionAttribute(SecurityAction)\n  nameWithType: ReflectionPermissionAttribute.ReflectionPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: ReflectionPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.Flags\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: ReflectionPermissionAttribute.Flags\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.Flags\n- uid: System.Security.Permissions.ReflectionPermissionFlag\n  parent: System.Security.Permissions\n  isExternal: false\n  name: ReflectionPermissionFlag\n  nameWithType: ReflectionPermissionFlag\n  fullName: System.Security.Permissions.ReflectionPermissionFlag\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  isExternal: false\n  name: MemberAccess\n  nameWithType: ReflectionPermissionAttribute.MemberAccess\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  isExternal: false\n  name: ReflectionEmit\n  nameWithType: ReflectionPermissionAttribute.ReflectionEmit\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  isExternal: false\n  name: RestrictedMemberAccess\n  nameWithType: ReflectionPermissionAttribute.RestrictedMemberAccess\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation\n  parent: System.Security.Permissions.ReflectionPermissionAttribute\n  isExternal: false\n  name: TypeInformation\n  nameWithType: ReflectionPermissionAttribute.TypeInformation\n  fullName: System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}