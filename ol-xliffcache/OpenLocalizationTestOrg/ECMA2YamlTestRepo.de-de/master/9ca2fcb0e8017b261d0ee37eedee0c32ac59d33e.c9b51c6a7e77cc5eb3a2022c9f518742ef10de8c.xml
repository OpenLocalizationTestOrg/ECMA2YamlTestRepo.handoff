{"nodes":[{"pos":[755,770],"content":"CodeTaskFactory","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeTaskFactory","pos":[0,15]}]},{"pos":[1536,1553],"content":"CodeTaskFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeTaskFactory()","pos":[0,17]}]},{"pos":[2107,2125],"content":"CleanupTask(ITask)","needQuote":true,"needEscape":true,"nodes":[{"content":"CleanupTask(ITask)","pos":[0,18]}]},{"pos":[2522,2556],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2835,2859],"content":"CreateTask(IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTask(IBuildEngine)","pos":[0,24]}]},{"pos":[3322,3356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3432,3466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3667,3678],"content":"FactoryName","needQuote":true,"needEscape":true,"nodes":[{"content":"FactoryName","pos":[0,11]}]},{"pos":[3997,4031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4244,4263],"content":"GetTaskParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTaskParameters()","pos":[0,19]}]},{"pos":[4685,4719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5248,5323],"content":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(String,IDictionary&lt;String,TaskPropertyInfo&gt;,String,IBuildEngine)","pos":[0,75],"source":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)"}]},{"pos":[5995,6029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6183,6217],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6293,6327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6431,6465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6524,6558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6753,6761],"content":"TaskType","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskType","pos":[0,8]}]},{"pos":[7067,7101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7212,7225],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[7353,7370],"content":"CodeTaskFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeTaskFactory()","pos":[0,17]}]},{"pos":[7655,7673],"content":"CleanupTask(ITask)","needQuote":true,"needEscape":true,"nodes":[{"content":"CleanupTask(ITask)","pos":[0,18]}]},{"pos":[7897,7902],"content":"ITask","needQuote":true,"needEscape":true,"nodes":[{"content":"ITask","pos":[0,5]}]},{"pos":[8141,8165],"content":"CreateTask(IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTask(IBuildEngine)","pos":[0,24]}]},{"pos":[8401,8406],"content":"ITask","needQuote":true,"needEscape":true,"nodes":[{"content":"ITask","pos":[0,5]}]},{"pos":[8583,8595],"content":"IBuildEngine","needQuote":true,"needEscape":true,"nodes":[{"content":"IBuildEngine","pos":[0,12]}]},{"pos":[8809,8820],"content":"FactoryName","needQuote":true,"needEscape":true,"nodes":[{"content":"FactoryName","pos":[0,11]}]},{"pos":[8993,8999],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9188,9207],"content":"GetTaskParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTaskParameters()","pos":[0,19]}]},{"pos":[9444,9460],"content":"TaskPropertyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskPropertyInfo","pos":[0,16]}]},{"pos":[9848,9923],"content":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(String,IDictionary&lt;String,TaskPropertyInfo&gt;,String,IBuildEngine)","pos":[0,75],"source":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)"}]},{"pos":[10225,10232],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10350,10356],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10575,10611],"content":"IDictionary<String,TaskPropertyInfo>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;String,TaskPropertyInfo&gt;","pos":[0,36],"source":"IDictionary<String,TaskPropertyInfo>"}]},{"pos":[10840,10846],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11006,11018],"content":"IBuildEngine","needQuote":true,"needEscape":true,"nodes":[{"content":"IBuildEngine","pos":[0,12]}]},{"pos":[11229,11237],"content":"TaskType","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskType","pos":[0,8]}]},{"pos":[11402,11406],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.CodeTaskFactory\n  id: CodeTaskFactory\n  children:\n  - Microsoft.Build.Tasks.CodeTaskFactory.#ctor\n  - Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)\n  - Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  - Microsoft.Build.Tasks.CodeTaskFactory.FactoryName\n  - Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters\n  - Microsoft.Build.Tasks.CodeTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  - Microsoft.Build.Tasks.CodeTaskFactory.TaskType\n  langs:\n  - csharp\n  name: CodeTaskFactory\n  nameWithType: CodeTaskFactory\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory\n  type: Class\n  syntax:\n    content: 'public class CodeTaskFactory : Microsoft.Build.Framework.ITaskFactory'\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.Build.Framework.ITaskFactory\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  langs:\n  - csharp\n  name: CodeTaskFactory()\n  nameWithType: CodeTaskFactory.CodeTaskFactory()\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.CodeTaskFactory()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public CodeTaskFactory ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)\n  id: CleanupTask(Microsoft.Build.Framework.ITask)\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  langs:\n  - csharp\n  name: CleanupTask(ITask)\n  nameWithType: CodeTaskFactory.CleanupTask(ITask)\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(ITask)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public void CleanupTask (Microsoft.Build.Framework.ITask task);\n    parameters:\n    - id: task\n      type: Microsoft.Build.Framework.ITask\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  id: CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  langs:\n  - csharp\n  name: CreateTask(IBuildEngine)\n  nameWithType: CodeTaskFactory.CreateTask(IBuildEngine)\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(IBuildEngine)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine loggingHost);\n    parameters:\n    - id: loggingHost\n      type: Microsoft.Build.Framework.IBuildEngine\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.Build.Framework.ITask\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.FactoryName\n  id: FactoryName\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  langs:\n  - csharp\n  name: FactoryName\n  nameWithType: CodeTaskFactory.FactoryName\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.FactoryName\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public string FactoryName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters\n  id: GetTaskParameters\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  langs:\n  - csharp\n  name: GetTaskParameters()\n  nameWithType: CodeTaskFactory.GetTaskParameters()\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();\n    parameters: []\n    return:\n      type: Microsoft.Build.Framework.TaskPropertyInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  id: Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  langs:\n  - csharp\n  name: Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  nameWithType: CodeTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public bool Initialize (string taskName, System.Collections.Generic.IDictionary<string,Microsoft.Build.Framework.TaskPropertyInfo> taskParameters, string taskElementContents, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);\n    parameters:\n    - id: taskName\n      type: System.String\n      description: Parameter description to be filled\n    - id: taskParameters\n      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}\n      description: Parameter description to be filled\n    - id: taskElementContents\n      type: System.String\n      description: Parameter description to be filled\n    - id: taskFactoryLoggingHost\n      type: Microsoft.Build.Framework.IBuildEngine\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.TaskType\n  id: TaskType\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  langs:\n  - csharp\n  name: TaskType\n  nameWithType: CodeTaskFactory.TaskType\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.TaskType\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public Type TaskType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.#ctor\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  isExternal: false\n  name: CodeTaskFactory()\n  nameWithType: CodeTaskFactory.CodeTaskFactory()\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.CodeTaskFactory()\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  isExternal: false\n  name: CleanupTask(ITask)\n  nameWithType: CodeTaskFactory.CleanupTask(ITask)\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(ITask)\n- uid: Microsoft.Build.Framework.ITask\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITask\n  nameWithType: ITask\n  fullName: Microsoft.Build.Framework.ITask\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  isExternal: false\n  name: CreateTask(IBuildEngine)\n  nameWithType: CodeTaskFactory.CreateTask(IBuildEngine)\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(IBuildEngine)\n- uid: Microsoft.Build.Framework.ITask\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITask\n  nameWithType: ITask\n  fullName: Microsoft.Build.Framework.ITask\n- uid: Microsoft.Build.Framework.IBuildEngine\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: IBuildEngine\n  nameWithType: IBuildEngine\n  fullName: Microsoft.Build.Framework.IBuildEngine\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.FactoryName\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  isExternal: false\n  name: FactoryName\n  nameWithType: CodeTaskFactory.FactoryName\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.FactoryName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  isExternal: false\n  name: GetTaskParameters()\n  nameWithType: CodeTaskFactory.GetTaskParameters()\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters()\n- uid: Microsoft.Build.Framework.TaskPropertyInfo\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: TaskPropertyInfo\n  nameWithType: TaskPropertyInfo\n  fullName: Microsoft.Build.Framework.TaskPropertyInfo[]\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  isExternal: false\n  name: Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  nameWithType: CodeTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,TaskPropertyInfo>\n  nameWithType: IDictionary<String,TaskPropertyInfo>\n  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Framework.TaskPropertyInfo>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Framework.IBuildEngine\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: IBuildEngine\n  nameWithType: IBuildEngine\n  fullName: Microsoft.Build.Framework.IBuildEngine\n- uid: Microsoft.Build.Tasks.CodeTaskFactory.TaskType\n  parent: Microsoft.Build.Tasks.CodeTaskFactory\n  isExternal: false\n  name: TaskType\n  nameWithType: CodeTaskFactory.TaskType\n  fullName: Microsoft.Build.Tasks.CodeTaskFactory.TaskType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n"}