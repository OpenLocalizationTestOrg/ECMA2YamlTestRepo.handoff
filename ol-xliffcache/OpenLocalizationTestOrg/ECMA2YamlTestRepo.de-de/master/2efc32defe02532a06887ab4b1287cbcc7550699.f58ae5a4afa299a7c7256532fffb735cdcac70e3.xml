{"nodes":[{"pos":[653,683],"content":"AsymmetricKeyExchangeFormatter","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricKeyExchangeFormatter","pos":[0,30]}]},{"pos":[1537,1569],"content":"AsymmetricKeyExchangeFormatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricKeyExchangeFormatter()","pos":[0,32]}]},{"pos":[2217,2242],"content":"CreateKeyExchange(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[])","pos":[0,25]}]},{"pos":[2653,2687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2745,2779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3181,3211],"content":"CreateKeyExchange(Byte[],Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[],Type)","pos":[0,30]}]},{"pos":[3649,3683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3748,3782],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3840,3874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4208,4218],"content":"Parameters","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[4569,4603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4938,4965],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[5442,5476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5587,5600],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5772,5804],"content":"AsymmetricKeyExchangeFormatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricKeyExchangeFormatter()","pos":[0,32]}]},{"pos":[6188,6213],"content":"CreateKeyExchange(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[])","pos":[0,25]}]},{"pos":[6449,6453],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[6565,6569],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[6827,6857],"content":"CreateKeyExchange(Byte[],Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[],Type)","pos":[0,30]}]},{"pos":[7103,7107],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[7219,7223],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[7335,7339],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7561,7571],"content":"Parameters","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[7779,7785],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8057,8084],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[8383,8402],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  id: AsymmetricKeyExchangeFormatter\n  children:\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  langs:\n  - csharp\n  name: AsymmetricKeyExchangeFormatter\n  nameWithType: AsymmetricKeyExchangeFormatter\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class AsymmetricKeyExchangeFormatter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: AsymmetricKeyExchangeFormatter()\n  nameWithType: AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected AsymmetricKeyExchangeFormatter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  id: CreateKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: CreateKeyExchange(Byte[])\n  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract byte[] CreateKeyExchange (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  id: CreateKeyExchange(System.Byte[],System.Type)\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: CreateKeyExchange(Byte[],Type)\n  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract byte[] CreateKeyExchange (byte[] data, Type symAlgType);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: symAlgType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n  id: Parameters\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: AsymmetricKeyExchangeFormatter.Parameters\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract string Parameters { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.#ctor\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: AsymmetricKeyExchangeFormatter()\n  nameWithType: AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.AsymmetricKeyExchangeFormatter()\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: CreateKeyExchange(Byte[])\n  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: CreateKeyExchange(Byte[],Type)\n  nameWithType: AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: Parameters\n  nameWithType: AsymmetricKeyExchangeFormatter.Parameters\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.Parameters\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter.CreateKeyExchange*\n  parent: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  nameWithType: AsymmetricKeyExchangeFormatter.\n"}