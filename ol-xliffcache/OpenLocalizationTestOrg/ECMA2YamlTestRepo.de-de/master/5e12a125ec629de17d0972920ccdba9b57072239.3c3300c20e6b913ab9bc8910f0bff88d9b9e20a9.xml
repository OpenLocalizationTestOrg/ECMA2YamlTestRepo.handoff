{"nodes":[{"pos":[3574,3585],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[4331,4335],"content":"Area","needQuote":true,"needEscape":true,"nodes":[{"content":"Area","pos":[0,4]}]},{"pos":[4640,4674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4857,4867],"content":"AsBinary()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsBinary()","pos":[0,10]}]},{"pos":[5173,5207],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5384,5391],"content":"AsGml()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsGml()","pos":[0,7]}]},{"pos":[5688,5722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5901,5909],"content":"AsText()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsText()","pos":[0,8]}]},{"pos":[6209,6243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6486,6510],"content":"Buffer(Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Buffer(Nullable<Double>)"},{"pos":[6913,6947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7023,7057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7260,7278],"content":"CoordinateSystemId","needQuote":true,"needEscape":true,"nodes":[{"content":"CoordinateSystemId","pos":[0,18]}]},{"pos":[7594,7628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7845,7870],"content":"DefaultCoordinateSystemId","needQuote":true,"needEscape":true,"nodes":[{"content":"DefaultCoordinateSystemId","pos":[0,25]}]},{"pos":[8214,8248],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8501,8524],"content":"Difference(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Difference(DbGeography)","pos":[0,23]}]},{"pos":[8939,8973],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9049,9083],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9268,9277],"content":"Dimension","needQuote":true,"needEscape":true,"nodes":[{"content":"Dimension","pos":[0,9]}]},{"pos":[9566,9600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9849,9870],"content":"Disjoint(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Disjoint(DbGeography)","pos":[0,21]}]},{"pos":[10252,10286],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10345,10379],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10628,10649],"content":"Distance(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Distance(DbGeography)","pos":[0,21]}]},{"pos":[11043,11077],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11152,11186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11399,11415],"content":"ElementAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ElementAt(Int32)","pos":[0,16]}]},{"pos":[11768,11802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11878,11912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12103,12115],"content":"ElementCount","needQuote":true,"needEscape":true,"nodes":[{"content":"ElementCount","pos":[0,12]}]},{"pos":[12440,12474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12659,12668],"content":"Elevation","needQuote":true,"needEscape":true,"nodes":[{"content":"Elevation","pos":[0,9]}]},{"pos":[12988,13022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13205,13213],"content":"EndPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[13546,13580],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13797,13815],"content":"FromBinary(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"FromBinary(Byte[])","pos":[0,18]}]},{"pos":[14204,14238],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14314,14348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14647,14671],"content":"FromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromBinary(Byte[],Int32)","pos":[0,24]}]},{"pos":[15096,15130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15204,15238],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15314,15348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15615,15630],"content":"FromGml(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromGml(String)","pos":[0,15]}]},{"pos":[16010,16044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16120,16154],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16444,16465],"content":"FromGml(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromGml(String,Int32)","pos":[0,21]}]},{"pos":[16881,16915],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16989,17023],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17099,17133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17399,17415],"content":"FromText(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromText(String)","pos":[0,16]}]},{"pos":[17794,17828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17904,17938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18231,18253],"content":"FromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromText(String,Int32)","pos":[0,22]}]},{"pos":[18668,18702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18776,18810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18886,18920],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19255,19298],"content":"GeographyCollectionFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GeographyCollectionFromBinary(Byte[],Int32)","pos":[0,43]}]},{"pos":[19818,19852],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19926,19960],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20036,20070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20347,20388],"content":"GeographyCollectionFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GeographyCollectionFromText(String,Int32)","pos":[0,41]}]},{"pos":[20898,20932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21006,21040],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21116,21150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21407,21432],"content":"Intersection(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersection(DbGeography)","pos":[0,25]}]},{"pos":[21853,21887],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21963,21997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22250,22273],"content":"Intersects(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersects(DbGeography)","pos":[0,23]}]},{"pos":[22661,22695],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22754,22788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22971,22979],"content":"IsClosed","needQuote":true,"needEscape":true,"nodes":[{"content":"IsClosed","pos":[0,8]}]},{"pos":[23295,23329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23510,23517],"content":"IsEmpty","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[23803,23837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24020,24028],"content":"Latitude","needQuote":true,"needEscape":true,"nodes":[{"content":"Latitude","pos":[0,8]}]},{"pos":[24345,24379],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24558,24564],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[24875,24909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25160,25188],"content":"LineFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LineFromBinary(Byte[],Int32)","pos":[0,28]}]},{"pos":[25633,25667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25741,25775],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25851,25885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26132,26158],"content":"LineFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LineFromText(String,Int32)","pos":[0,26]}]},{"pos":[26593,26627],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26701,26735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26811,26845],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27030,27039],"content":"Longitude","needQuote":true,"needEscape":true,"nodes":[{"content":"Longitude","pos":[0,9]}]},{"pos":[27359,27393],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27574,27581],"content":"Measure","needQuote":true,"needEscape":true,"nodes":[{"content":"Measure","pos":[0,7]}]},{"pos":[27895,27929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28190,28223],"content":"MultiLineFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiLineFromBinary(Byte[],Int32)","pos":[0,33]}]},{"pos":[28693,28727],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28801,28835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28911,28945],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29202,29233],"content":"MultiLineFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiLineFromText(String,Int32)","pos":[0,31]}]},{"pos":[29693,29727],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29801,29835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29911,29945],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30208,30242],"content":"MultiPointFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiPointFromBinary(Byte[],Int32)","pos":[0,34]}]},{"pos":[30717,30751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30825,30859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30935,30969],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31228,31260],"content":"MultiPointFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiPointFromText(String,Int32)","pos":[0,32]}]},{"pos":[31725,31759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31833,31867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31943,31977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32244,32280],"content":"MultiPolygonFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiPolygonFromBinary(Byte[],Int32)","pos":[0,36]}]},{"pos":[32765,32799],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32873,32907],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32983,33017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33280,33314],"content":"MultiPolygonFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiPolygonFromText(String,Int32)","pos":[0,34]}]},{"pos":[33789,33823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33897,33931],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34007,34041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34250,34264],"content":"PointAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PointAt(Int32)","pos":[0,14]}]},{"pos":[34611,34645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34721,34755],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34942,34952],"content":"PointCount","needQuote":true,"needEscape":true,"nodes":[{"content":"PointCount","pos":[0,10]}]},{"pos":[35271,35305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35558,35587],"content":"PointFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PointFromBinary(Byte[],Int32)","pos":[0,29]}]},{"pos":[36037,36071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36145,36179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36255,36289],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36538,36565],"content":"PointFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PointFromText(String,Int32)","pos":[0,27]}]},{"pos":[37005,37039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37113,37147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37223,37257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37514,37545],"content":"PolygonFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PolygonFromBinary(Byte[],Int32)","pos":[0,31]}]},{"pos":[38005,38039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38113,38147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38223,38257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38510,38539],"content":"PolygonFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PolygonFromText(String,Int32)","pos":[0,29]}]},{"pos":[38989,39023],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39097,39131],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39207,39241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39434,39447],"content":"ProviderValue","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderValue","pos":[0,13]}]},{"pos":[39752,39786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40045,40071],"content":"SpatialEquals(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"SpatialEquals(DbGeography)","pos":[0,26]}]},{"pos":[40468,40502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40561,40595],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40792,40807],"content":"SpatialTypeName","needQuote":true,"needEscape":true,"nodes":[{"content":"SpatialTypeName","pos":[0,15]}]},{"pos":[41118,41152],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41339,41349],"content":"StartPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"StartPoint","pos":[0,10]}]},{"pos":[41688,41722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41993,42025],"content":"SymmetricDifference(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"SymmetricDifference(DbGeography)","pos":[0,32]}]},{"pos":[42467,42501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42577,42611],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42794,42804],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[43119,43153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43396,43414],"content":"Union(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(DbGeography)","pos":[0,18]}]},{"pos":[43814,43848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43924,43958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44153,44167],"content":"WellKnownValue","needQuote":true,"needEscape":true,"nodes":[{"content":"WellKnownValue","pos":[0,14]}]},{"pos":[44551,44585],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44696,44709],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[44824,44828],"content":"Area","needQuote":true,"needEscape":true,"nodes":[{"content":"Area","pos":[0,4]}]},{"pos":[44994,45010],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[45205,45215],"content":"AsBinary()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsBinary()","pos":[0,10]}]},{"pos":[45374,45378],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[45541,45548],"content":"AsGml()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsGml()","pos":[0,7]}]},{"pos":[45703,45709],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45875,45883],"content":"AsText()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsText()","pos":[0,8]}]},{"pos":[46040,46046],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[46244,46268],"content":"Buffer(Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Buffer(Nullable<Double>)"},{"pos":[46488,46499],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[46655,46671],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[46876,46894],"content":"CoordinateSystemId","needQuote":true,"needEscape":true,"nodes":[{"content":"CoordinateSystemId","pos":[0,18]}]},{"pos":[47070,47075],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47258,47283],"content":"DefaultCoordinateSystemId","needQuote":true,"needEscape":true,"nodes":[{"content":"DefaultCoordinateSystemId","pos":[0,25]}]},{"pos":[47473,47478],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47679,47702],"content":"Difference(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Difference(DbGeography)","pos":[0,23]}]},{"pos":[47920,47931],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[48101,48112],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[48304,48313],"content":"Dimension","needQuote":true,"needEscape":true,"nodes":[{"content":"Dimension","pos":[0,9]}]},{"pos":[48471,48476],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48675,48696],"content":"Disjoint(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Disjoint(DbGeography)","pos":[0,21]}]},{"pos":[48880,48887],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[49036,49047],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[49271,49292],"content":"Distance(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Distance(DbGeography)","pos":[0,21]}]},{"pos":[49492,49508],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[49682,49693],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[49899,49915],"content":"ElementAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ElementAt(Int32)","pos":[0,16]}]},{"pos":[50119,50130],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[50268,50273],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[50443,50455],"content":"ElementCount","needQuote":true,"needEscape":true,"nodes":[{"content":"ElementCount","pos":[0,12]}]},{"pos":[50636,50651],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[50845,50854],"content":"Elevation","needQuote":true,"needEscape":true,"nodes":[{"content":"Elevation","pos":[0,9]}]},{"pos":[51030,51046],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[51241,51249],"content":"EndPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[51437,51448],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[51656,51674],"content":"FromBinary(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"FromBinary(Byte[])","pos":[0,18]}]},{"pos":[51882,51893],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[52030,52034],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[52230,52254],"content":"FromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromBinary(Byte[],Int32)","pos":[0,24]}]},{"pos":[52474,52485],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[52622,52626],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[52739,52744],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52924,52939],"content":"FromGml(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromGml(String)","pos":[0,15]}]},{"pos":[53141,53152],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[53291,53297],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53492,53513],"content":"FromGml(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromGml(String,Int32)","pos":[0,21]}]},{"pos":[53727,53738],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[53877,53883],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53998,54003],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54184,54200],"content":"FromText(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromText(String)","pos":[0,16]}]},{"pos":[54404,54415],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[54554,54560],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[54756,54778],"content":"FromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromText(String,Int32)","pos":[0,22]}]},{"pos":[54994,55005],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[55144,55150],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[55265,55270],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[55485,55528],"content":"GeographyCollectionFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GeographyCollectionFromBinary(Byte[],Int32)","pos":[0,43]}]},{"pos":[55786,55797],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[55934,55938],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[56051,56056],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56269,56310],"content":"GeographyCollectionFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GeographyCollectionFromText(String,Int32)","pos":[0,41]}]},{"pos":[56564,56575],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[56714,56720],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[56835,56840],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57043,57068],"content":"Intersection(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersection(DbGeography)","pos":[0,25]}]},{"pos":[57290,57301],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[57471,57482],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[57708,57731],"content":"Intersects(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersects(DbGeography)","pos":[0,23]}]},{"pos":[57919,57926],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58075,58086],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[58277,58285],"content":"IsClosed","needQuote":true,"needEscape":true,"nodes":[{"content":"IsClosed","pos":[0,8]}]},{"pos":[58460,58477],"content":"Nullable<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Boolean>"},{"pos":[58673,58680],"content":"IsEmpty","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[58836,58843],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59013,59021],"content":"Latitude","needQuote":true,"needEscape":true,"nodes":[{"content":"Latitude","pos":[0,8]}]},{"pos":[59195,59211],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[59404,59410],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[59580,59596],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[59825,59853],"content":"LineFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LineFromBinary(Byte[],Int32)","pos":[0,28]}]},{"pos":[60081,60092],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[60229,60233],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[60346,60351],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60549,60575],"content":"LineFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LineFromText(String,Int32)","pos":[0,26]}]},{"pos":[60799,60810],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[60949,60955],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61070,61075],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61242,61251],"content":"Longitude","needQuote":true,"needEscape":true,"nodes":[{"content":"Longitude","pos":[0,9]}]},{"pos":[61427,61443],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[61637,61644],"content":"Measure","needQuote":true,"needEscape":true,"nodes":[{"content":"Measure","pos":[0,7]}]},{"pos":[61816,61832],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[62066,62099],"content":"MultiLineFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiLineFromBinary(Byte[],Int32)","pos":[0,33]}]},{"pos":[62337,62348],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[62485,62489],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[62602,62607],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[62810,62841],"content":"MultiLineFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiLineFromText(String,Int32)","pos":[0,31]}]},{"pos":[63075,63086],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[63225,63231],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63346,63351],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63557,63591],"content":"MultiPointFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiPointFromBinary(Byte[],Int32)","pos":[0,34]}]},{"pos":[63831,63842],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[63979,63983],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[64096,64101],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64305,64337],"content":"MultiPointFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiPointFromText(String,Int32)","pos":[0,32]}]},{"pos":[64573,64584],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[64723,64729],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[64844,64849],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65057,65093],"content":"MultiPolygonFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiPolygonFromBinary(Byte[],Int32)","pos":[0,36]}]},{"pos":[65337,65348],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[65485,65489],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[65602,65607],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65813,65847],"content":"MultiPolygonFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MultiPolygonFromText(String,Int32)","pos":[0,34]}]},{"pos":[66087,66098],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[66237,66243],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[66358,66363],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66542,66556],"content":"PointAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PointAt(Int32)","pos":[0,14]}]},{"pos":[66756,66767],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[66905,66910],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[67078,67088],"content":"PointCount","needQuote":true,"needEscape":true,"nodes":[{"content":"PointCount","pos":[0,10]}]},{"pos":[67265,67280],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[67508,67537],"content":"PointFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PointFromBinary(Byte[],Int32)","pos":[0,29]}]},{"pos":[67767,67778],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[67915,67919],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[68032,68037],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68236,68263],"content":"PointFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PointFromText(String,Int32)","pos":[0,27]}]},{"pos":[68489,68500],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[68639,68645],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[68760,68765],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68968,68999],"content":"PolygonFromBinary(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PolygonFromBinary(Byte[],Int32)","pos":[0,31]}]},{"pos":[69233,69244],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[69381,69385],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[69498,69503],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[69704,69733],"content":"PolygonFromText(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"PolygonFromText(String,Int32)","pos":[0,29]}]},{"pos":[69963,69974],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[70113,70119],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[70234,70239],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70410,70423],"content":"ProviderValue","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderValue","pos":[0,13]}]},{"pos":[70590,70596],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[70802,70828],"content":"SpatialEquals(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"SpatialEquals(DbGeography)","pos":[0,26]}]},{"pos":[71022,71029],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71178,71189],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[71387,71402],"content":"SpatialTypeName","needQuote":true,"needEscape":true,"nodes":[{"content":"SpatialTypeName","pos":[0,15]}]},{"pos":[71573,71579],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[71749,71759],"content":"StartPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"StartPoint","pos":[0,10]}]},{"pos":[71951,71962],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[72197,72229],"content":"SymmetricDifference(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"SymmetricDifference(DbGeography)","pos":[0,32]}]},{"pos":[72465,72476],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[72646,72657],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[72848,72858],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[73019,73025],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[73223,73241],"content":"Union(DbGeography)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(DbGeography)","pos":[0,18]}]},{"pos":[73449,73460],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[73630,73641],"content":"DbGeography","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeography","pos":[0,11]}]},{"pos":[73838,73852],"content":"WellKnownValue","needQuote":true,"needEscape":true,"nodes":[{"content":"WellKnownValue","pos":[0,14]}]},{"pos":[74066,74091],"content":"DbGeographyWellKnownValue","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGeographyWellKnownValue","pos":[0,25]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Spatial.DbGeography\n  id: DbGeography\n  children:\n  - System.Data.Spatial.DbGeography.Area\n  - System.Data.Spatial.DbGeography.AsBinary\n  - System.Data.Spatial.DbGeography.AsGml\n  - System.Data.Spatial.DbGeography.AsText\n  - System.Data.Spatial.DbGeography.Buffer(System.Nullable{System.Double})\n  - System.Data.Spatial.DbGeography.CoordinateSystemId\n  - System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n  - System.Data.Spatial.DbGeography.Difference(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.Dimension\n  - System.Data.Spatial.DbGeography.Disjoint(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.Distance(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.ElementAt(System.Int32)\n  - System.Data.Spatial.DbGeography.ElementCount\n  - System.Data.Spatial.DbGeography.Elevation\n  - System.Data.Spatial.DbGeography.EndPoint\n  - System.Data.Spatial.DbGeography.FromBinary(System.Byte[])\n  - System.Data.Spatial.DbGeography.FromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.FromGml(System.String)\n  - System.Data.Spatial.DbGeography.FromGml(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.FromText(System.String)\n  - System.Data.Spatial.DbGeography.FromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.GeographyCollectionFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.Intersection(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.Intersects(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.IsClosed\n  - System.Data.Spatial.DbGeography.IsEmpty\n  - System.Data.Spatial.DbGeography.Latitude\n  - System.Data.Spatial.DbGeography.Length\n  - System.Data.Spatial.DbGeography.LineFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.LineFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.Longitude\n  - System.Data.Spatial.DbGeography.Measure\n  - System.Data.Spatial.DbGeography.MultiLineFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.MultiLineFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.MultiPointFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.MultiPointFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.MultiPolygonFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.MultiPolygonFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.PointAt(System.Int32)\n  - System.Data.Spatial.DbGeography.PointCount\n  - System.Data.Spatial.DbGeography.PointFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.PointFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.PolygonFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.PolygonFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.ProviderValue\n  - System.Data.Spatial.DbGeography.SpatialEquals(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.SpatialTypeName\n  - System.Data.Spatial.DbGeography.StartPoint\n  - System.Data.Spatial.DbGeography.SymmetricDifference(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.ToString\n  - System.Data.Spatial.DbGeography.Union(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.WellKnownValue\n  langs:\n  - csharp\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.DataAnnotations.BindableType]\n\n      [System.Runtime.Serialization.DataContract]\n\n      public class DbGeography\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Area\n  id: Area\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Area\n  nameWithType: DbGeography.Area\n  fullName: System.Data.Spatial.DbGeography.Area\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<double> Area { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.AsBinary\n  id: AsBinary\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: AsBinary()\n  nameWithType: DbGeography.AsBinary()\n  fullName: System.Data.Spatial.DbGeography.AsBinary()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public byte[] AsBinary ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.AsGml\n  id: AsGml\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: AsGml()\n  nameWithType: DbGeography.AsGml()\n  fullName: System.Data.Spatial.DbGeography.AsGml()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public string AsGml ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.AsText\n  id: AsText\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: AsText()\n  nameWithType: DbGeography.AsText()\n  fullName: System.Data.Spatial.DbGeography.AsText()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public string AsText ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Buffer(System.Nullable{System.Double})\n  id: Buffer(System.Nullable{System.Double})\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Buffer(Nullable<Double>)\n  nameWithType: DbGeography.Buffer(Nullable<Double>)\n  fullName: System.Data.Spatial.DbGeography.Buffer(Nullable<Double>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeography Buffer (Nullable<double> distance);\n    parameters:\n    - id: distance\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.CoordinateSystemId\n  id: CoordinateSystemId\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: CoordinateSystemId\n  nameWithType: DbGeography.CoordinateSystemId\n  fullName: System.Data.Spatial.DbGeography.CoordinateSystemId\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public int CoordinateSystemId { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n  id: DefaultCoordinateSystemId\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: DefaultCoordinateSystemId\n  nameWithType: DbGeography.DefaultCoordinateSystemId\n  fullName: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static int DefaultCoordinateSystemId { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Difference(System.Data.Spatial.DbGeography)\n  id: Difference(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Difference(DbGeography)\n  nameWithType: DbGeography.Difference(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Difference(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeography Difference (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Dimension\n  id: Dimension\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Dimension\n  nameWithType: DbGeography.Dimension\n  fullName: System.Data.Spatial.DbGeography.Dimension\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public int Dimension { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Disjoint(System.Data.Spatial.DbGeography)\n  id: Disjoint(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Disjoint(DbGeography)\n  nameWithType: DbGeography.Disjoint(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Disjoint(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public bool Disjoint (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Distance(System.Data.Spatial.DbGeography)\n  id: Distance(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Distance(DbGeography)\n  nameWithType: DbGeography.Distance(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Distance(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<double> Distance (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.ElementAt(System.Int32)\n  id: ElementAt(System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: ElementAt(Int32)\n  nameWithType: DbGeography.ElementAt(Int32)\n  fullName: System.Data.Spatial.DbGeography.ElementAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeography ElementAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.ElementCount\n  id: ElementCount\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: ElementCount\n  nameWithType: DbGeography.ElementCount\n  fullName: System.Data.Spatial.DbGeography.ElementCount\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<int> ElementCount { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Elevation\n  id: Elevation\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Elevation\n  nameWithType: DbGeography.Elevation\n  fullName: System.Data.Spatial.DbGeography.Elevation\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<double> Elevation { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.EndPoint\n  id: EndPoint\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: EndPoint\n  nameWithType: DbGeography.EndPoint\n  fullName: System.Data.Spatial.DbGeography.EndPoint\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeography EndPoint { get; }\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.FromBinary(System.Byte[])\n  id: FromBinary(System.Byte[])\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromBinary(Byte[])\n  nameWithType: DbGeography.FromBinary(Byte[])\n  fullName: System.Data.Spatial.DbGeography.FromBinary(Byte[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromBinary (byte[] wellKnownBinary);\n    parameters:\n    - id: wellKnownBinary\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  overload: System.Data.Spatial.DbGeography.FromBinary*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.FromBinary(System.Byte[],System.Int32)\n  id: FromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromBinary(Byte[],Int32)\n  nameWithType: DbGeography.FromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.FromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromBinary (byte[] wellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: wellKnownBinary\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  overload: System.Data.Spatial.DbGeography.FromBinary*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.FromGml(System.String)\n  id: FromGml(System.String)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromGml(String)\n  nameWithType: DbGeography.FromGml(String)\n  fullName: System.Data.Spatial.DbGeography.FromGml(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromGml (string geographyMarkup);\n    parameters:\n    - id: geographyMarkup\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  overload: System.Data.Spatial.DbGeography.FromGml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.FromGml(System.String,System.Int32)\n  id: FromGml(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromGml(String,Int32)\n  nameWithType: DbGeography.FromGml(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.FromGml(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromGml (string geographyMarkup, int coordinateSystemId);\n    parameters:\n    - id: geographyMarkup\n      type: System.String\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  overload: System.Data.Spatial.DbGeography.FromGml*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.FromText(System.String)\n  id: FromText(System.String)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromText(String)\n  nameWithType: DbGeography.FromText(String)\n  fullName: System.Data.Spatial.DbGeography.FromText(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromText (string wellKnownText);\n    parameters:\n    - id: wellKnownText\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  overload: System.Data.Spatial.DbGeography.FromText*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.FromText(System.String,System.Int32)\n  id: FromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromText(String,Int32)\n  nameWithType: DbGeography.FromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.FromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromText (string wellKnownText, int coordinateSystemId);\n    parameters:\n    - id: wellKnownText\n      type: System.String\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  overload: System.Data.Spatial.DbGeography.FromText*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(System.Byte[],System.Int32)\n  id: GeographyCollectionFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: GeographyCollectionFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.GeographyCollectionFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography GeographyCollectionFromBinary (byte[] geographyCollectionWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: geographyCollectionWellKnownBinary\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromText(System.String,System.Int32)\n  id: GeographyCollectionFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: GeographyCollectionFromText(String,Int32)\n  nameWithType: DbGeography.GeographyCollectionFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.GeographyCollectionFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography GeographyCollectionFromText (string geographyCollectionWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: geographyCollectionWellKnownText\n      type: System.String\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Intersection(System.Data.Spatial.DbGeography)\n  id: Intersection(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Intersection(DbGeography)\n  nameWithType: DbGeography.Intersection(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Intersection(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeography Intersection (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Intersects(System.Data.Spatial.DbGeography)\n  id: Intersects(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Intersects(DbGeography)\n  nameWithType: DbGeography.Intersects(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Intersects(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public bool Intersects (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.IsClosed\n  id: IsClosed\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: DbGeography.IsClosed\n  fullName: System.Data.Spatial.DbGeography.IsClosed\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<bool> IsClosed { get; }\n    return:\n      type: System.Nullable{System.Boolean}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.IsEmpty\n  id: IsEmpty\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: DbGeography.IsEmpty\n  fullName: System.Data.Spatial.DbGeography.IsEmpty\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Latitude\n  id: Latitude\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Latitude\n  nameWithType: DbGeography.Latitude\n  fullName: System.Data.Spatial.DbGeography.Latitude\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<double> Latitude { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Length\n  id: Length\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Length\n  nameWithType: DbGeography.Length\n  fullName: System.Data.Spatial.DbGeography.Length\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<double> Length { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.LineFromBinary(System.Byte[],System.Int32)\n  id: LineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: LineFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.LineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.LineFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography LineFromBinary (byte[] lineWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: lineWellKnownBinary\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.LineFromText(System.String,System.Int32)\n  id: LineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: LineFromText(String,Int32)\n  nameWithType: DbGeography.LineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.LineFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography LineFromText (string lineWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: lineWellKnownText\n      type: System.String\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Longitude\n  id: Longitude\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Longitude\n  nameWithType: DbGeography.Longitude\n  fullName: System.Data.Spatial.DbGeography.Longitude\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<double> Longitude { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Measure\n  id: Measure\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Measure\n  nameWithType: DbGeography.Measure\n  fullName: System.Data.Spatial.DbGeography.Measure\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<double> Measure { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.MultiLineFromBinary(System.Byte[],System.Int32)\n  id: MultiLineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiLineFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiLineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiLineFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiLineFromBinary (byte[] multiLineWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: multiLineWellKnownBinary\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.MultiLineFromText(System.String,System.Int32)\n  id: MultiLineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiLineFromText(String,Int32)\n  nameWithType: DbGeography.MultiLineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiLineFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiLineFromText (string multiLineWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: multiLineWellKnownText\n      type: System.String\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.MultiPointFromBinary(System.Byte[],System.Int32)\n  id: MultiPointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiPointFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiPointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPointFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiPointFromBinary (byte[] multiPointWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: multiPointWellKnownBinary\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.MultiPointFromText(System.String,System.Int32)\n  id: MultiPointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiPointFromText(String,Int32)\n  nameWithType: DbGeography.MultiPointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPointFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiPointFromText (string multiPointWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: multiPointWellKnownText\n      type: System.String\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromBinary(System.Byte[],System.Int32)\n  id: MultiPolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiPolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiPolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPolygonFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiPolygonFromBinary (byte[] multiPolygonWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: multiPolygonWellKnownBinary\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromText(System.String,System.Int32)\n  id: MultiPolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiPolygonFromText(String,Int32)\n  nameWithType: DbGeography.MultiPolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPolygonFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiPolygonFromText (string multiPolygonWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: multiPolygonWellKnownText\n      type: System.String\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.PointAt(System.Int32)\n  id: PointAt(System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PointAt(Int32)\n  nameWithType: DbGeography.PointAt(Int32)\n  fullName: System.Data.Spatial.DbGeography.PointAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeography PointAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.PointCount\n  id: PointCount\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PointCount\n  nameWithType: DbGeography.PointCount\n  fullName: System.Data.Spatial.DbGeography.PointCount\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public Nullable<int> PointCount { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.PointFromBinary(System.Byte[],System.Int32)\n  id: PointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PointFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.PointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.PointFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography PointFromBinary (byte[] pointWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: pointWellKnownBinary\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.PointFromText(System.String,System.Int32)\n  id: PointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PointFromText(String,Int32)\n  nameWithType: DbGeography.PointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.PointFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography PointFromText (string pointWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: pointWellKnownText\n      type: System.String\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.PolygonFromBinary(System.Byte[],System.Int32)\n  id: PolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.PolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.PolygonFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography PolygonFromBinary (byte[] polygonWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: polygonWellKnownBinary\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.PolygonFromText(System.String,System.Int32)\n  id: PolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PolygonFromText(String,Int32)\n  nameWithType: DbGeography.PolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.PolygonFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public static System.Data.Spatial.DbGeography PolygonFromText (string polygonWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: polygonWellKnownText\n      type: System.String\n      description: Parameter description to be filled\n    - id: coordinateSystemId\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.ProviderValue\n  id: ProviderValue\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: ProviderValue\n  nameWithType: DbGeography.ProviderValue\n  fullName: System.Data.Spatial.DbGeography.ProviderValue\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public object ProviderValue { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.SpatialEquals(System.Data.Spatial.DbGeography)\n  id: SpatialEquals(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: SpatialEquals(DbGeography)\n  nameWithType: DbGeography.SpatialEquals(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.SpatialEquals(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public bool SpatialEquals (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.SpatialTypeName\n  id: SpatialTypeName\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: SpatialTypeName\n  nameWithType: DbGeography.SpatialTypeName\n  fullName: System.Data.Spatial.DbGeography.SpatialTypeName\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public string SpatialTypeName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.StartPoint\n  id: StartPoint\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: StartPoint\n  nameWithType: DbGeography.StartPoint\n  fullName: System.Data.Spatial.DbGeography.StartPoint\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeography StartPoint { get; }\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.SymmetricDifference(System.Data.Spatial.DbGeography)\n  id: SymmetricDifference(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: SymmetricDifference(DbGeography)\n  nameWithType: DbGeography.SymmetricDifference(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.SymmetricDifference(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeography SymmetricDifference (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.ToString\n  id: ToString\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DbGeography.ToString()\n  fullName: System.Data.Spatial.DbGeography.ToString()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.Union(System.Data.Spatial.DbGeography)\n  id: Union(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Union(DbGeography)\n  nameWithType: DbGeography.Union(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Union(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeography Union (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Spatial.DbGeography.WellKnownValue\n  id: WellKnownValue\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: WellKnownValue\n  nameWithType: DbGeography.WellKnownValue\n  fullName: System.Data.Spatial.DbGeography.WellKnownValue\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  syntax:\n    content: public System.Data.Spatial.DbGeographyWellKnownValue WellKnownValue { get; set; }\n    return:\n      type: System.Data.Spatial.DbGeographyWellKnownValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Spatial.DbGeography.Area\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Area\n  nameWithType: DbGeography.Area\n  fullName: System.Data.Spatial.DbGeography.Area\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Data.Spatial.DbGeography.AsBinary\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: AsBinary()\n  nameWithType: DbGeography.AsBinary()\n  fullName: System.Data.Spatial.DbGeography.AsBinary()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Data.Spatial.DbGeography.AsGml\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: AsGml()\n  nameWithType: DbGeography.AsGml()\n  fullName: System.Data.Spatial.DbGeography.AsGml()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Spatial.DbGeography.AsText\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: AsText()\n  nameWithType: DbGeography.AsText()\n  fullName: System.Data.Spatial.DbGeography.AsText()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Spatial.DbGeography.Buffer(System.Nullable{System.Double})\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Buffer(Nullable<Double>)\n  nameWithType: DbGeography.Buffer(Nullable<Double>)\n  fullName: System.Data.Spatial.DbGeography.Buffer(Nullable<Double>)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Data.Spatial.DbGeography.CoordinateSystemId\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: CoordinateSystemId\n  nameWithType: DbGeography.CoordinateSystemId\n  fullName: System.Data.Spatial.DbGeography.CoordinateSystemId\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: DefaultCoordinateSystemId\n  nameWithType: DbGeography.DefaultCoordinateSystemId\n  fullName: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.Difference(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Difference(DbGeography)\n  nameWithType: DbGeography.Difference(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Difference(DbGeography)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.Dimension\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Dimension\n  nameWithType: DbGeography.Dimension\n  fullName: System.Data.Spatial.DbGeography.Dimension\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.Disjoint(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Disjoint(DbGeography)\n  nameWithType: DbGeography.Disjoint(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Disjoint(DbGeography)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.Distance(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Distance(DbGeography)\n  nameWithType: DbGeography.Distance(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Distance(DbGeography)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.ElementAt(System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ElementAt(Int32)\n  nameWithType: DbGeography.ElementAt(Int32)\n  fullName: System.Data.Spatial.DbGeography.ElementAt(Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.ElementCount\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ElementCount\n  nameWithType: DbGeography.ElementCount\n  fullName: System.Data.Spatial.DbGeography.ElementCount\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Data.Spatial.DbGeography.Elevation\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Elevation\n  nameWithType: DbGeography.Elevation\n  fullName: System.Data.Spatial.DbGeography.Elevation\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Data.Spatial.DbGeography.EndPoint\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: EndPoint\n  nameWithType: DbGeography.EndPoint\n  fullName: System.Data.Spatial.DbGeography.EndPoint\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.FromBinary(System.Byte[])\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromBinary(Byte[])\n  nameWithType: DbGeography.FromBinary(Byte[])\n  fullName: System.Data.Spatial.DbGeography.FromBinary(Byte[])\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Data.Spatial.DbGeography.FromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromBinary(Byte[],Int32)\n  nameWithType: DbGeography.FromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.FromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.FromGml(System.String)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromGml(String)\n  nameWithType: DbGeography.FromGml(String)\n  fullName: System.Data.Spatial.DbGeography.FromGml(String)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Spatial.DbGeography.FromGml(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromGml(String,Int32)\n  nameWithType: DbGeography.FromGml(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.FromGml(String,Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.FromText(System.String)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromText(String)\n  nameWithType: DbGeography.FromText(String)\n  fullName: System.Data.Spatial.DbGeography.FromText(String)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Spatial.DbGeography.FromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromText(String,Int32)\n  nameWithType: DbGeography.FromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.FromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: GeographyCollectionFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.GeographyCollectionFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: GeographyCollectionFromText(String,Int32)\n  nameWithType: DbGeography.GeographyCollectionFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.GeographyCollectionFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.Intersection(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Intersection(DbGeography)\n  nameWithType: DbGeography.Intersection(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Intersection(DbGeography)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.Intersects(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Intersects(DbGeography)\n  nameWithType: DbGeography.Intersects(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Intersects(DbGeography)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.IsClosed\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: IsClosed\n  nameWithType: DbGeography.IsClosed\n  fullName: System.Data.Spatial.DbGeography.IsClosed\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: false\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n- uid: System.Data.Spatial.DbGeography.IsEmpty\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: IsEmpty\n  nameWithType: DbGeography.IsEmpty\n  fullName: System.Data.Spatial.DbGeography.IsEmpty\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Spatial.DbGeography.Latitude\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Latitude\n  nameWithType: DbGeography.Latitude\n  fullName: System.Data.Spatial.DbGeography.Latitude\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Data.Spatial.DbGeography.Length\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Length\n  nameWithType: DbGeography.Length\n  fullName: System.Data.Spatial.DbGeography.Length\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Data.Spatial.DbGeography.LineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: LineFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.LineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.LineFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.LineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: LineFromText(String,Int32)\n  nameWithType: DbGeography.LineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.LineFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.Longitude\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Longitude\n  nameWithType: DbGeography.Longitude\n  fullName: System.Data.Spatial.DbGeography.Longitude\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Data.Spatial.DbGeography.Measure\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Measure\n  nameWithType: DbGeography.Measure\n  fullName: System.Data.Spatial.DbGeography.Measure\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Data.Spatial.DbGeography.MultiLineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiLineFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiLineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiLineFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.MultiLineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiLineFromText(String,Int32)\n  nameWithType: DbGeography.MultiLineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiLineFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.MultiPointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPointFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiPointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPointFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.MultiPointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPointFromText(String,Int32)\n  nameWithType: DbGeography.MultiPointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPointFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiPolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPolygonFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPolygonFromText(String,Int32)\n  nameWithType: DbGeography.MultiPolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPolygonFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.PointAt(System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointAt(Int32)\n  nameWithType: DbGeography.PointAt(Int32)\n  fullName: System.Data.Spatial.DbGeography.PointAt(Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.PointCount\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointCount\n  nameWithType: DbGeography.PointCount\n  fullName: System.Data.Spatial.DbGeography.PointCount\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Data.Spatial.DbGeography.PointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.PointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.PointFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.PointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointFromText(String,Int32)\n  nameWithType: DbGeography.PointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.PointFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.PolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.PolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.PolygonFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.PolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PolygonFromText(String,Int32)\n  nameWithType: DbGeography.PolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.PolygonFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.ProviderValue\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ProviderValue\n  nameWithType: DbGeography.ProviderValue\n  fullName: System.Data.Spatial.DbGeography.ProviderValue\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Spatial.DbGeography.SpatialEquals(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: SpatialEquals(DbGeography)\n  nameWithType: DbGeography.SpatialEquals(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.SpatialEquals(DbGeography)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.SpatialTypeName\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: SpatialTypeName\n  nameWithType: DbGeography.SpatialTypeName\n  fullName: System.Data.Spatial.DbGeography.SpatialTypeName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Spatial.DbGeography.StartPoint\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: StartPoint\n  nameWithType: DbGeography.StartPoint\n  fullName: System.Data.Spatial.DbGeography.StartPoint\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.SymmetricDifference(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: SymmetricDifference(DbGeography)\n  nameWithType: DbGeography.SymmetricDifference(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.SymmetricDifference(DbGeography)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.ToString\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ToString()\n  nameWithType: DbGeography.ToString()\n  fullName: System.Data.Spatial.DbGeography.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Spatial.DbGeography.Union(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Union(DbGeography)\n  nameWithType: DbGeography.Union(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Union(DbGeography)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.WellKnownValue\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: WellKnownValue\n  nameWithType: DbGeography.WellKnownValue\n  fullName: System.Data.Spatial.DbGeography.WellKnownValue\n- uid: System.Data.Spatial.DbGeographyWellKnownValue\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeographyWellKnownValue\n  nameWithType: DbGeographyWellKnownValue\n  fullName: System.Data.Spatial.DbGeographyWellKnownValue\n- uid: System.Data.Spatial.DbGeography.FromBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  nameWithType: DbGeography.\n- uid: System.Data.Spatial.DbGeography.FromGml*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  nameWithType: DbGeography.\n- uid: System.Data.Spatial.DbGeography.FromText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  nameWithType: DbGeography.\n"}