{"nodes":[{"pos":[3066,3079],"content":"DynamicMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod","pos":[0,13]}]},{"pos":[9394,9427],"content":"DynamicMethod(String,Type,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[])","pos":[0,33]}]},{"pos":[9833,9867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9932,9966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10037,10071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10372,10413],"content":"DynamicMethod(String,Type,Type[],Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Boolean)","pos":[0,41]}]},{"pos":[10866,10900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10965,10999],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11070,11104],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11186,11220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11541,11581],"content":"DynamicMethod(String,Type,Type[],Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Module)","pos":[0,40]}]},{"pos":[12029,12063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12128,12162],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12233,12267],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12336,12370],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12665,12703],"content":"DynamicMethod(String,Type,Type[],Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Type)","pos":[0,38]}]},{"pos":[13131,13165],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13230,13264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13335,13369],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13429,13463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13814,13862],"content":"DynamicMethod(String,Type,Type[],Module,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Module,Boolean)","pos":[0,48]}]},{"pos":[14347,14381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14446,14480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14551,14585],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14654,14688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14760,14794],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15119,15165],"content":"DynamicMethod(String,Type,Type[],Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Type,Boolean)","pos":[0,46]}]},{"pos":[15630,15664],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15729,15763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15834,15868],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15928,15962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16034,16068],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16563,16647],"content":"DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)","pos":[0,84]}]},{"pos":[17307,17341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17429,17463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17560,17594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17659,17693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17764,17798],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17867,17901],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17973,18007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18476,18558],"content":"DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)","pos":[0,82]}]},{"pos":[19198,19232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19320,19354],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19451,19485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19550,19584],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19655,19689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19749,19783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19855,19889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20086,20096],"content":"Attributes","needQuote":true,"needEscape":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[20450,20484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20695,20712],"content":"CallingConvention","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[21091,21125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21356,21376],"content":"CreateDelegate(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type)","pos":[0,20]}]},{"pos":[21749,21783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21843,21877],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22201,22228],"content":"CreateDelegate(Type,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object)","pos":[0,27]}]},{"pos":[22630,22664],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22727,22761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22821,22855],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23123,23136],"content":"DeclaringType","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"pos":[23446,23480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23819,23868],"content":"DefineParameter(Int32,ParameterAttributes,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineParameter(Int32,ParameterAttributes,String)","pos":[0,49]}]},{"pos":[24379,24413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24504,24538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24608,24642],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24726,24760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24971,24990],"content":"GetBaseDefinition()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBaseDefinition()","pos":[0,19]}]},{"pos":[25369,25403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25650,25678],"content":"GetCustomAttributes(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[26058,26092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26152,26186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26527,26560],"content":"GetCustomAttributes(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Type,Boolean)","pos":[0,33]}]},{"pos":[26973,27007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27072,27106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27166,27200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27479,27497],"content":"GetDynamicILInfo()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDynamicILInfo()","pos":[0,18]}]},{"pos":[27880,27914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28119,28135],"content":"GetILGenerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetILGenerator()","pos":[0,16]}]},{"pos":[28508,28542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28840,28861],"content":"GetILGenerator(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetILGenerator(Int32)","pos":[0,21]}]},{"pos":[29242,29276],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29355,29389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29687,29717],"content":"GetMethodImplementationFlags()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImplementationFlags()","pos":[0,30]}]},{"pos":[30149,30183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30386,30401],"content":"GetParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[30778,30812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31009,31019],"content":"InitLocals","needQuote":true,"needEscape":true,"nodes":[{"content":"InitLocals","pos":[0,10]}]},{"pos":[31319,31353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31782,31837],"content":"Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)","pos":[0,55]}]},{"pos":[32388,32422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32506,32540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32614,32648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32717,32751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32834,32868],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32926,32960],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33211,33234],"content":"IsDefined(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefined(Type,Boolean)","pos":[0,23]}]},{"pos":[33613,33647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33712,33746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33805,33839],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34052,34070],"content":"IsSecurityCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityCritical","pos":[0,18]}]},{"pos":[34398,34432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34653,34675],"content":"IsSecuritySafeCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecuritySafeCritical","pos":[0,22]}]},{"pos":[35015,35049],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35268,35289],"content":"IsSecurityTransparent","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityTransparent","pos":[0,21]}]},{"pos":[35626,35660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35861,35873],"content":"MethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodHandle","pos":[0,12]}]},{"pos":[36210,36244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36433,36439],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[36761,36795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36980,36984],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[37271,37305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37508,37521],"content":"ReflectedType","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectedType","pos":[0,13]}]},{"pos":[37831,37865],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38072,38087],"content":"ReturnParameter","needQuote":true,"needEscape":true,"nodes":[{"content":"ReturnParameter","pos":[0,15]}]},{"pos":[38450,38484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38681,38691],"content":"ReturnType","needQuote":true,"needEscape":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[38992,39026],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39255,39281],"content":"ReturnTypeCustomAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"ReturnTypeCustomAttributes","pos":[0,26]}]},{"pos":[39699,39733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39926,39936],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[40251,40285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40411,40439],"content":"System.Reflection.MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Reflection.MethodInfo","pos":[0,28]}]},{"pos":[40606,40639],"content":"DynamicMethod(String,Type,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[])","pos":[0,33]}]},{"pos":[40853,40859],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[40973,40977],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[41087,41091],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[41320,41361],"content":"DynamicMethod(String,Type,Type[],Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Boolean)","pos":[0,41]}]},{"pos":[41591,41597],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[41711,41715],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[41825,41829],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[41944,41951],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42194,42234],"content":"DynamicMethod(String,Type,Type[],Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Module)","pos":[0,40]}]},{"pos":[42462,42468],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42582,42586],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[42696,42700],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[42836,42842],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[43081,43119],"content":"DynamicMethod(String,Type,Type[],Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Type)","pos":[0,38]}]},{"pos":[43343,43349],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[43463,43467],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43577,43581],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43693,43697],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43949,43997],"content":"DynamicMethod(String,Type,Type[],Module,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Module,Boolean)","pos":[0,48]}]},{"pos":[44241,44247],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44361,44365],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[44475,44479],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[44615,44621],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[44749,44756],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45001,45047],"content":"DynamicMethod(String,Type,Type[],Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,Type,Type[],Type,Boolean)","pos":[0,46]}]},{"pos":[45287,45293],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45407,45411],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[45521,45525],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[45637,45641],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[45754,45761],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46091,46175],"content":"DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)","pos":[0,84]}]},{"pos":[46491,46497],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[46645,46661],"content":"MethodAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodAttributes","pos":[0,16]}]},{"pos":[46842,46860],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[47009,47013],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[47123,47127],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[47263,47269],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[47397,47404],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47721,47803],"content":"DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)","pos":[0,82]}]},{"pos":[48115,48121],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[48269,48285],"content":"MethodAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodAttributes","pos":[0,16]}]},{"pos":[48466,48484],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[48633,48637],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[48747,48751],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[48863,48867],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[48980,48987],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[49169,49179],"content":"Attributes","needQuote":true,"needEscape":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[49379,49395],"content":"MethodAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodAttributes","pos":[0,16]}]},{"pos":[49613,49630],"content":"CallingConvention","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[49846,49864],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[50096,50116],"content":"CreateDelegate(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type)","pos":[0,20]}]},{"pos":[50306,50314],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[50432,50436],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[50643,50670],"content":"CreateDelegate(Type,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object)","pos":[0,27]}]},{"pos":[50874,50882],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[51000,51004],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[51116,51122],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51305,51318],"content":"DeclaringType","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"pos":[51490,51494],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[51741,51790],"content":"DefineParameter(Int32,ParameterAttributes,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineParameter(Int32,ParameterAttributes,String)","pos":[0,49]}]},{"pos":[52078,52094],"content":"ParameterBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterBuilder","pos":[0,16]}]},{"pos":[52245,52250],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52399,52418],"content":"ParameterAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterAttributes","pos":[0,19]}]},{"pos":[52571,52577],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52764,52783],"content":"GetBaseDefinition()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBaseDefinition()","pos":[0,19]}]},{"pos":[52995,53005],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[53229,53257],"content":"GetCustomAttributes(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[53461,53467],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53586,53593],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[53812,53845],"content":"GetCustomAttributes(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Type,Boolean)","pos":[0,33]}]},{"pos":[54059,54065],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54181,54185],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[54298,54305],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54493,54511],"content":"GetDynamicILInfo()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDynamicILInfo()","pos":[0,18]}]},{"pos":[54734,54747],"content":"DynamicILInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicILInfo","pos":[0,13]}]},{"pos":[54961,54977],"content":"GetILGenerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetILGenerator()","pos":[0,16]}]},{"pos":[55194,55205],"content":"ILGenerator","needQuote":true,"needEscape":true,"nodes":[{"content":"ILGenerator","pos":[0,11]}]},{"pos":[55429,55450],"content":"GetILGenerator(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetILGenerator(Int32)","pos":[0,21]}]},{"pos":[55677,55688],"content":"ILGenerator","needQuote":true,"needEscape":true,"nodes":[{"content":"ILGenerator","pos":[0,11]}]},{"pos":[55829,55834],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56030,56060],"content":"GetMethodImplementationFlags()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImplementationFlags()","pos":[0,30]}]},{"pos":[56304,56324],"content":"MethodImplAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodImplAttributes","pos":[0,20]}]},{"pos":[56546,56561],"content":"GetParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[56768,56781],"content":"ParameterInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"pos":[56988,56998],"content":"InitLocals","needQuote":true,"needEscape":true,"nodes":[{"content":"InitLocals","pos":[0,10]}]},{"pos":[57167,57174],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57472,57527],"content":"Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)","pos":[0,55]}]},{"pos":[57785,57791],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57907,57913],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58057,58069],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[58230,58236],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[58363,58369],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58520,58531],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[58762,58785],"content":"IsDefined(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefined(Type,Boolean)","pos":[0,23]}]},{"pos":[58980,58987],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59103,59107],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[59220,59227],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59417,59435],"content":"IsSecurityCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityCritical","pos":[0,18]}]},{"pos":[59620,59627],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59821,59843],"content":"IsSecuritySafeCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecuritySafeCritical","pos":[0,22]}]},{"pos":[60036,60043],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60236,60257],"content":"IsSecurityTransparent","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityTransparent","pos":[0,21]}]},{"pos":[60448,60455],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60639,60651],"content":"MethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodHandle","pos":[0,12]}]},{"pos":[60836,60855],"content":"RuntimeMethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[61057,61063],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[61245,61251],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[61436,61440],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[61596,61602],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61785,61798],"content":"ReflectedType","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectedType","pos":[0,13]}]},{"pos":[61970,61974],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[62155,62170],"content":"ReturnParameter","needQuote":true,"needEscape":true,"nodes":[{"content":"ReturnParameter","pos":[0,15]}]},{"pos":[62377,62390],"content":"ParameterInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"pos":[62595,62605],"content":"ReturnType","needQuote":true,"needEscape":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[62771,62775],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[62967,62993],"content":"ReturnTypeCustomAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"ReturnTypeCustomAttributes","pos":[0,26]}]},{"pos":[63233,63257],"content":"ICustomAttributeProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"ICustomAttributeProvider","pos":[0,24]}]},{"pos":[63482,63492],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[63660,63666],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.DynamicMethod\n  id: DynamicMethod\n  children:\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.Attributes\n  - System.Reflection.Emit.DynamicMethod.CallingConvention\n  - System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)\n  - System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)\n  - System.Reflection.Emit.DynamicMethod.DeclaringType\n  - System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  - System.Reflection.Emit.DynamicMethod.GetBaseDefinition\n  - System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.GetDynamicILInfo\n  - System.Reflection.Emit.DynamicMethod.GetILGenerator\n  - System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)\n  - System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags\n  - System.Reflection.Emit.DynamicMethod.GetParameters\n  - System.Reflection.Emit.DynamicMethod.InitLocals\n  - System.Reflection.Emit.DynamicMethod.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.Emit.DynamicMethod.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Emit.DynamicMethod.IsSecurityCritical\n  - System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical\n  - System.Reflection.Emit.DynamicMethod.IsSecurityTransparent\n  - System.Reflection.Emit.DynamicMethod.MethodHandle\n  - System.Reflection.Emit.DynamicMethod.Module\n  - System.Reflection.Emit.DynamicMethod.Name\n  - System.Reflection.Emit.DynamicMethod.ReflectedType\n  - System.Reflection.Emit.DynamicMethod.ReturnParameter\n  - System.Reflection.Emit.DynamicMethod.ReturnType\n  - System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes\n  - System.Reflection.Emit.DynamicMethod.ToString\n  langs:\n  - csharp\n  name: DynamicMethod\n  nameWithType: DynamicMethod\n  fullName: System.Reflection.Emit.DynamicMethod\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class DynamicMethod : System.Reflection.MethodInfo\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Reflection.MethodBase\n  - System.Reflection.MethodInfo\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodBase.ContainsGenericParameters\n  - System.Reflection.MethodBase.GetCurrentMethod\n  - System.Reflection.MethodBase.GetMethodBody\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  - System.Reflection.MethodBase.IsAbstract\n  - System.Reflection.MethodBase.IsAssembly\n  - System.Reflection.MethodBase.IsConstructor\n  - System.Reflection.MethodBase.IsFamily\n  - System.Reflection.MethodBase.IsFamilyAndAssembly\n  - System.Reflection.MethodBase.IsFamilyOrAssembly\n  - System.Reflection.MethodBase.IsFinal\n  - System.Reflection.MethodBase.IsGenericMethod\n  - System.Reflection.MethodBase.IsGenericMethodDefinition\n  - System.Reflection.MethodBase.IsHideBySig\n  - System.Reflection.MethodBase.IsPrivate\n  - System.Reflection.MethodBase.IsPublic\n  - System.Reflection.MethodBase.IsSpecialName\n  - System.Reflection.MethodBase.IsStatic\n  - System.Reflection.MethodBase.IsVirtual\n  - System.Reflection.MethodBase.MethodImplementationFlags\n  - System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  - System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  - System.Reflection.MethodInfo.Equals(System.Object)\n  - System.Reflection.MethodInfo.GetGenericArguments\n  - System.Reflection.MethodInfo.GetGenericMethodDefinition\n  - System.Reflection.MethodInfo.GetHashCode\n  - System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])\n  - System.Reflection.MethodInfo.MemberType\n  - System.Reflection.MethodInfo.op_Equality(System.Reflection.MethodInfo,System.Reflection.MethodInfo)\n  - System.Reflection.MethodInfo.op_Inequality(System.Reflection.MethodInfo,System.Reflection.MethodInfo)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])\n  id: '#ctor(System.String,System.Type,System.Type[])'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DynamicMethod(String,Type,Type[])\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[])\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public DynamicMethod (string name, Type returnType, Type[] parameterTypes);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DynamicMethod(String,Type,Type[],Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public DynamicMethod (string name, Type returnType, Type[] parameterTypes, bool restrictedSkipVisibility);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: restrictedSkipVisibility\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DynamicMethod(String,Type,Type[],Module)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Module)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Module)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public DynamicMethod (string name, Type returnType, Type[] parameterTypes, System.Reflection.Module m);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: m\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Type)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DynamicMethod(String,Type,Type[],Type)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Type)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Type)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public DynamicMethod (string name, Type returnType, Type[] parameterTypes, Type owner);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: owner\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DynamicMethod(String,Type,Type[],Module,Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Module,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Module,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public DynamicMethod (string name, Type returnType, Type[] parameterTypes, System.Reflection.Module m, bool skipVisibility);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: m\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: skipVisibility\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)\n  id: '#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DynamicMethod(String,Type,Type[],Type,Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Type,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Type,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public DynamicMethod (string name, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: owner\n      type: System.Type\n      description: Parameter description to be filled\n    - id: skipVisibility\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  id: '#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public DynamicMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Reflection.Module m, bool skipVisibility);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: Parameter description to be filled\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: m\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: skipVisibility\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)\n  id: '#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)'\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public DynamicMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: Parameter description to be filled\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: owner\n      type: System.Type\n      description: Parameter description to be filled\n    - id: skipVisibility\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.Attributes\n  id: Attributes\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: DynamicMethod.Attributes\n  fullName: System.Reflection.Emit.DynamicMethod.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Reflection.MethodAttributes Attributes { get; }\n    return:\n      type: System.Reflection.MethodAttributes\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.CallingConvention\n  id: CallingConvention\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: CallingConvention\n  nameWithType: DynamicMethod.CallingConvention\n  fullName: System.Reflection.Emit.DynamicMethod.CallingConvention\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Reflection.CallingConventions CallingConvention { get; }\n    return:\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)\n  id: CreateDelegate(System.Type)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: CreateDelegate(Type)\n  nameWithType: DynamicMethod.CreateDelegate(Type)\n  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override sealed Delegate CreateDelegate (Type delegateType);\n    parameters:\n    - id: delegateType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.DynamicMethod.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)\n  id: CreateDelegate(System.Type,System.Object)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: CreateDelegate(Type,Object)\n  nameWithType: DynamicMethod.CreateDelegate(Type,Object)\n  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(Type,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override sealed Delegate CreateDelegate (Type delegateType, object target);\n    parameters:\n    - id: delegateType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: target\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.DynamicMethod.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.DeclaringType\n  id: DeclaringType\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: DynamicMethod.DeclaringType\n  fullName: System.Reflection.Emit.DynamicMethod.DeclaringType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  id: DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: DefineParameter(Int32,ParameterAttributes,String)\n  nameWithType: DynamicMethod.DefineParameter(Int32,ParameterAttributes,String)\n  fullName: System.Reflection.Emit.DynamicMethod.DefineParameter(Int32,ParameterAttributes,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public System.Reflection.Emit.ParameterBuilder DefineParameter (int position, System.Reflection.ParameterAttributes attributes, string parameterName);\n    parameters:\n    - id: position\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.ParameterAttributes\n      description: Parameter description to be filled\n    - id: parameterName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.ParameterBuilder\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.GetBaseDefinition\n  id: GetBaseDefinition\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: GetBaseDefinition()\n  nameWithType: DynamicMethod.GetBaseDefinition()\n  fullName: System.Reflection.Emit.DynamicMethod.GetBaseDefinition()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Reflection.MethodInfo GetBaseDefinition ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: DynamicMethod.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.DynamicMethod.GetCustomAttributes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: DynamicMethod.GetCustomAttributes(Type,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.DynamicMethod.GetCustomAttributes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.GetDynamicILInfo\n  id: GetDynamicILInfo\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: GetDynamicILInfo()\n  nameWithType: DynamicMethod.GetDynamicILInfo()\n  fullName: System.Reflection.Emit.DynamicMethod.GetDynamicILInfo()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public System.Reflection.Emit.DynamicILInfo GetDynamicILInfo ();\n    parameters: []\n    return:\n      type: System.Reflection.Emit.DynamicILInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator\n  id: GetILGenerator\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: GetILGenerator()\n  nameWithType: DynamicMethod.GetILGenerator()\n  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public System.Reflection.Emit.ILGenerator GetILGenerator ();\n    parameters: []\n    return:\n      type: System.Reflection.Emit.ILGenerator\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.DynamicMethod.GetILGenerator*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)\n  id: GetILGenerator(System.Int32)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: GetILGenerator(Int32)\n  nameWithType: DynamicMethod.GetILGenerator(Int32)\n  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public System.Reflection.Emit.ILGenerator GetILGenerator (int streamSize);\n    parameters:\n    - id: streamSize\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.ILGenerator\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.DynamicMethod.GetILGenerator*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags\n  id: GetMethodImplementationFlags\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: GetMethodImplementationFlags()\n  nameWithType: DynamicMethod.GetMethodImplementationFlags()\n  fullName: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.GetParameters\n  id: GetParameters\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: GetParameters()\n  nameWithType: DynamicMethod.GetParameters()\n  fullName: System.Reflection.Emit.DynamicMethod.GetParameters()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Reflection.ParameterInfo[] GetParameters ();\n    parameters: []\n    return:\n      type: System.Reflection.ParameterInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.InitLocals\n  id: InitLocals\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: InitLocals\n  nameWithType: DynamicMethod.InitLocals\n  fullName: System.Reflection.Emit.DynamicMethod.InitLocals\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public bool InitLocals { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: DynamicMethod.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Reflection.Emit.DynamicMethod.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: IsDefined(Type,Boolean)\n  nameWithType: DynamicMethod.IsDefined(Type,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.IsDefined(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.IsSecurityCritical\n  id: IsSecurityCritical\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: IsSecurityCritical\n  nameWithType: DynamicMethod.IsSecurityCritical\n  fullName: System.Reflection.Emit.DynamicMethod.IsSecurityCritical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool IsSecurityCritical { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical\n  id: IsSecuritySafeCritical\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: IsSecuritySafeCritical\n  nameWithType: DynamicMethod.IsSecuritySafeCritical\n  fullName: System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool IsSecuritySafeCritical { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.IsSecurityTransparent\n  id: IsSecurityTransparent\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: IsSecurityTransparent\n  nameWithType: DynamicMethod.IsSecurityTransparent\n  fullName: System.Reflection.Emit.DynamicMethod.IsSecurityTransparent\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool IsSecurityTransparent { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.MethodHandle\n  id: MethodHandle\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: MethodHandle\n  nameWithType: DynamicMethod.MethodHandle\n  fullName: System.Reflection.Emit.DynamicMethod.MethodHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override RuntimeMethodHandle MethodHandle { get; }\n    return:\n      type: System.RuntimeMethodHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.Module\n  id: Module\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: Module\n  nameWithType: DynamicMethod.Module\n  fullName: System.Reflection.Emit.DynamicMethod.Module\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Reflection.Module Module { get; }\n    return:\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.Name\n  id: Name\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: Name\n  nameWithType: DynamicMethod.Name\n  fullName: System.Reflection.Emit.DynamicMethod.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.ReflectedType\n  id: ReflectedType\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: DynamicMethod.ReflectedType\n  fullName: System.Reflection.Emit.DynamicMethod.ReflectedType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.ReturnParameter\n  id: ReturnParameter\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: ReturnParameter\n  nameWithType: DynamicMethod.ReturnParameter\n  fullName: System.Reflection.Emit.DynamicMethod.ReturnParameter\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Reflection.ParameterInfo ReturnParameter { get; }\n    return:\n      type: System.Reflection.ParameterInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.ReturnType\n  id: ReturnType\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: ReturnType\n  nameWithType: DynamicMethod.ReturnType\n  fullName: System.Reflection.Emit.DynamicMethod.ReturnType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override Type ReturnType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes\n  id: ReturnTypeCustomAttributes\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: ReturnTypeCustomAttributes\n  nameWithType: DynamicMethod.ReturnTypeCustomAttributes\n  fullName: System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes { get; }\n    return:\n      type: System.Reflection.ICustomAttributeProvider\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.DynamicMethod.ToString\n  id: ToString\n  parent: System.Reflection.Emit.DynamicMethod\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DynamicMethod.ToString()\n  fullName: System.Reflection.Emit.DynamicMethod.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Reflection.MethodInfo\n  isExternal: false\n  name: System.Reflection.MethodInfo\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DynamicMethod(String,Type,Type[])\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[])\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DynamicMethod(String,Type,Type[],Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DynamicMethod(String,Type,Type[],Module)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Module)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Module)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DynamicMethod(String,Type,Type[],Type)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Type)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Type)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DynamicMethod(String,Type,Type[],Module,Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Module,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Module,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DynamicMethod(String,Type,Type[],Type,Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,Type,Type[],Type,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,Type,Type[],Type,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  nameWithType: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)\n  nameWithType: DynamicMethod.DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.DynamicMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  nameWithType: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.Attributes\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: Attributes\n  nameWithType: DynamicMethod.Attributes\n  fullName: System.Reflection.Emit.DynamicMethod.Attributes\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  nameWithType: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n- uid: System.Reflection.Emit.DynamicMethod.CallingConvention\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: CallingConvention\n  nameWithType: DynamicMethod.CallingConvention\n  fullName: System.Reflection.Emit.DynamicMethod.CallingConvention\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: CreateDelegate(Type)\n  nameWithType: DynamicMethod.CreateDelegate(Type)\n  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(Type)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: CreateDelegate(Type,Object)\n  nameWithType: DynamicMethod.CreateDelegate(Type,Object)\n  fullName: System.Reflection.Emit.DynamicMethod.CreateDelegate(Type,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.DynamicMethod.DeclaringType\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DeclaringType\n  nameWithType: DynamicMethod.DeclaringType\n  fullName: System.Reflection.Emit.DynamicMethod.DeclaringType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: DefineParameter(Int32,ParameterAttributes,String)\n  nameWithType: DynamicMethod.DefineParameter(Int32,ParameterAttributes,String)\n  fullName: System.Reflection.Emit.DynamicMethod.DefineParameter(Int32,ParameterAttributes,String)\n- uid: System.Reflection.Emit.ParameterBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterBuilder\n  nameWithType: ParameterBuilder\n  fullName: System.Reflection.Emit.ParameterBuilder\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.ParameterAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterAttributes\n  nameWithType: ParameterAttributes\n  fullName: System.Reflection.ParameterAttributes\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.DynamicMethod.GetBaseDefinition\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: GetBaseDefinition()\n  nameWithType: DynamicMethod.GetBaseDefinition()\n  fullName: System.Reflection.Emit.DynamicMethod.GetBaseDefinition()\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: DynamicMethod.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: DynamicMethod.GetCustomAttributes(Type,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.GetCustomAttributes(Type,Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.GetDynamicILInfo\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: GetDynamicILInfo()\n  nameWithType: DynamicMethod.GetDynamicILInfo()\n  fullName: System.Reflection.Emit.DynamicMethod.GetDynamicILInfo()\n- uid: System.Reflection.Emit.DynamicILInfo\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: DynamicILInfo\n  nameWithType: DynamicILInfo\n  fullName: System.Reflection.Emit.DynamicILInfo\n- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: GetILGenerator()\n  nameWithType: DynamicMethod.GetILGenerator()\n  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator()\n- uid: System.Reflection.Emit.ILGenerator\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ILGenerator\n  nameWithType: ILGenerator\n  fullName: System.Reflection.Emit.ILGenerator\n- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: GetILGenerator(Int32)\n  nameWithType: DynamicMethod.GetILGenerator(Int32)\n  fullName: System.Reflection.Emit.DynamicMethod.GetILGenerator(Int32)\n- uid: System.Reflection.Emit.ILGenerator\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ILGenerator\n  nameWithType: ILGenerator\n  fullName: System.Reflection.Emit.ILGenerator\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: GetMethodImplementationFlags()\n  nameWithType: DynamicMethod.GetMethodImplementationFlags()\n  fullName: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags()\n- uid: System.Reflection.MethodImplAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n- uid: System.Reflection.Emit.DynamicMethod.GetParameters\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: GetParameters()\n  nameWithType: DynamicMethod.GetParameters()\n  fullName: System.Reflection.Emit.DynamicMethod.GetParameters()\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo[]\n- uid: System.Reflection.Emit.DynamicMethod.InitLocals\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: InitLocals\n  nameWithType: DynamicMethod.InitLocals\n  fullName: System.Reflection.Emit.DynamicMethod.InitLocals\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: DynamicMethod.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Reflection.Emit.DynamicMethod.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.Emit.DynamicMethod.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: IsDefined(Type,Boolean)\n  nameWithType: DynamicMethod.IsDefined(Type,Boolean)\n  fullName: System.Reflection.Emit.DynamicMethod.IsDefined(Type,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.IsSecurityCritical\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: IsSecurityCritical\n  nameWithType: DynamicMethod.IsSecurityCritical\n  fullName: System.Reflection.Emit.DynamicMethod.IsSecurityCritical\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: IsSecuritySafeCritical\n  nameWithType: DynamicMethod.IsSecuritySafeCritical\n  fullName: System.Reflection.Emit.DynamicMethod.IsSecuritySafeCritical\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.IsSecurityTransparent\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: IsSecurityTransparent\n  nameWithType: DynamicMethod.IsSecurityTransparent\n  fullName: System.Reflection.Emit.DynamicMethod.IsSecurityTransparent\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.DynamicMethod.MethodHandle\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: MethodHandle\n  nameWithType: DynamicMethod.MethodHandle\n  fullName: System.Reflection.Emit.DynamicMethod.MethodHandle\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: false\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.Reflection.Emit.DynamicMethod.Module\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: Module\n  nameWithType: DynamicMethod.Module\n  fullName: System.Reflection.Emit.DynamicMethod.Module\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Emit.DynamicMethod.Name\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: Name\n  nameWithType: DynamicMethod.Name\n  fullName: System.Reflection.Emit.DynamicMethod.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.DynamicMethod.ReflectedType\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: ReflectedType\n  nameWithType: DynamicMethod.ReflectedType\n  fullName: System.Reflection.Emit.DynamicMethod.ReflectedType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.DynamicMethod.ReturnParameter\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: ReturnParameter\n  nameWithType: DynamicMethod.ReturnParameter\n  fullName: System.Reflection.Emit.DynamicMethod.ReturnParameter\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.Reflection.Emit.DynamicMethod.ReturnType\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: ReturnType\n  nameWithType: DynamicMethod.ReturnType\n  fullName: System.Reflection.Emit.DynamicMethod.ReturnType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: ReturnTypeCustomAttributes\n  nameWithType: DynamicMethod.ReturnTypeCustomAttributes\n  fullName: System.Reflection.Emit.DynamicMethod.ReturnTypeCustomAttributes\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n- uid: System.Reflection.Emit.DynamicMethod.ToString\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  name: ToString()\n  nameWithType: DynamicMethod.ToString()\n  fullName: System.Reflection.Emit.DynamicMethod.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.DynamicMethod.CreateDelegate*\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  nameWithType: DynamicMethod.\n- uid: System.Reflection.Emit.DynamicMethod.GetCustomAttributes*\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  nameWithType: DynamicMethod.\n- uid: System.Reflection.Emit.DynamicMethod.GetILGenerator*\n  parent: System.Reflection.Emit.DynamicMethod\n  isExternal: false\n  nameWithType: DynamicMethod.\n"}