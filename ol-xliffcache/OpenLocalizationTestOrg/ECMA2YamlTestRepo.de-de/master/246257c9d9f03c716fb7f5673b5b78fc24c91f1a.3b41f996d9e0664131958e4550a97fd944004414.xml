{"nodes":[{"pos":[441,458],"content":"SecurityAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityAttribute","pos":[0,17]}]},{"pos":[4949,4982],"content":"SecurityAttribute(SecurityAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityAttribute(SecurityAction)","pos":[0,33]}]},{"pos":[5442,5476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5683,5689],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[6061,6095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6322,6340],"content":"CreatePermission()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreatePermission()","pos":[0,18]}]},{"pos":[6732,6766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6985,6997],"content":"Unrestricted","needQuote":true,"needEscape":true,"nodes":[{"content":"Unrestricted","pos":[0,12]}]},{"pos":[7321,7355],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7469,7485],"content":"System.Attribute","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Attribute","pos":[0,16]}]},{"pos":[7673,7706],"content":"SecurityAttribute(SecurityAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityAttribute(SecurityAction)","pos":[0,33]}]},{"pos":[7983,7997],"content":"SecurityAction","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityAction","pos":[0,14]}]},{"pos":[8228,8234],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[8457,8471],"content":"SecurityAction","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityAction","pos":[0,14]}]},{"pos":[8712,8730],"content":"CreatePermission()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreatePermission()","pos":[0,18]}]},{"pos":[8950,8961],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[9180,9192],"content":"Unrestricted","needQuote":true,"needEscape":true,"nodes":[{"content":"Unrestricted","pos":[0,12]}]},{"pos":[9378,9385],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.SecurityAttribute\n  id: SecurityAttribute\n  children:\n  - System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.CreatePermission\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  langs:\n  - csharp\n  name: SecurityAttribute\n  nameWithType: SecurityAttribute\n  fullName: System.Security.Permissions.SecurityAttribute\n  type: Class\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class SecurityAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.SecurityAttribute\n  langs:\n  - csharp\n  name: SecurityAttribute(SecurityAction)\n  nameWithType: SecurityAttribute.SecurityAttribute(SecurityAction)\n  fullName: System.Security.Permissions.SecurityAttribute.SecurityAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: protected SecurityAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.SecurityAttribute.Action\n  id: Action\n  parent: System.Security.Permissions.SecurityAttribute\n  langs:\n  - csharp\n  name: Action\n  nameWithType: SecurityAttribute.Action\n  fullName: System.Security.Permissions.SecurityAttribute.Action\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public System.Security.Permissions.SecurityAction Action { get; set; }\n    return:\n      type: System.Security.Permissions.SecurityAction\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.SecurityAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.SecurityAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: SecurityAttribute.CreatePermission()\n  fullName: System.Security.Permissions.SecurityAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public abstract System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.SecurityAttribute.Unrestricted\n  id: Unrestricted\n  parent: System.Security.Permissions.SecurityAttribute\n  langs:\n  - csharp\n  name: Unrestricted\n  nameWithType: SecurityAttribute.Unrestricted\n  fullName: System.Security.Permissions.SecurityAttribute.Unrestricted\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public bool Unrestricted { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: SecurityAttribute(SecurityAction)\n  nameWithType: SecurityAttribute.SecurityAttribute(SecurityAction)\n  fullName: System.Security.Permissions.SecurityAttribute.SecurityAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.SecurityAttribute.Action\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Action\n  nameWithType: SecurityAttribute.Action\n  fullName: System.Security.Permissions.SecurityAttribute.Action\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.SecurityAttribute.CreatePermission\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: SecurityAttribute.CreatePermission()\n  fullName: System.Security.Permissions.SecurityAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.SecurityAttribute.Unrestricted\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Unrestricted\n  nameWithType: SecurityAttribute.Unrestricted\n  fullName: System.Security.Permissions.SecurityAttribute.Unrestricted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}