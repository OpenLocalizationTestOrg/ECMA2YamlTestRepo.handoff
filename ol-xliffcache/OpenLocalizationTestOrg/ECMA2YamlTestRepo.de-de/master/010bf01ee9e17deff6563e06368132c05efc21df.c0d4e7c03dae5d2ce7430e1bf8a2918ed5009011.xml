{"nodes":[{"pos":[418,427],"content":"TripleDES","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDES","pos":[0,9]}]},{"pos":[3095,3106],"content":"TripleDES()","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDES()","pos":[0,11]}]},{"pos":[3555,3563],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[3931,3965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4247,4261],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[4625,4659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4742,4776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5064,5081],"content":"IsWeakKey(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"IsWeakKey(Byte[])","pos":[0,17]}]},{"pos":[5426,5460],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5519,5553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5740,5743],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[6036,6070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6215,6262],"content":"System.Security.Cryptography.SymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.SymmetricAlgorithm","pos":[0,47]}]},{"pos":[6392,6403],"content":"TripleDES()","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDES()","pos":[0,11]}]},{"pos":[6635,6643],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[6852,6861],"content":"TripleDES","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDES","pos":[0,9]}]},{"pos":[7084,7098],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[7319,7328],"content":"TripleDES","needQuote":true,"needEscape":true,"nodes":[{"content":"TripleDES","pos":[0,9]}]},{"pos":[7472,7478],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7676,7693],"content":"IsWeakKey(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"IsWeakKey(Byte[])","pos":[0,17]}]},{"pos":[7874,7881],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7997,8001],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8176,8179],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[8329,8333],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.TripleDES\n  id: TripleDES\n  children:\n  - System.Security.Cryptography.TripleDES.#ctor\n  - System.Security.Cryptography.TripleDES.Create\n  - System.Security.Cryptography.TripleDES.Create(System.String)\n  - System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])\n  - System.Security.Cryptography.TripleDES.Key\n  langs:\n  - csharp\n  name: TripleDES\n  nameWithType: TripleDES\n  fullName: System.Security.Cryptography.TripleDES\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class TripleDES : System.Security.Cryptography.SymmetricAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDES.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.TripleDES\n  langs:\n  - csharp\n  name: TripleDES()\n  nameWithType: TripleDES.TripleDES()\n  fullName: System.Security.Cryptography.TripleDES.TripleDES()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected TripleDES ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDES.Create\n  id: Create\n  parent: System.Security.Cryptography.TripleDES\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: TripleDES.Create()\n  fullName: System.Security.Cryptography.TripleDES.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.TripleDES Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.TripleDES\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.TripleDES.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDES.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.TripleDES\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: TripleDES.Create(String)\n  fullName: System.Security.Cryptography.TripleDES.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.TripleDES Create (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.TripleDES\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.TripleDES.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])\n  id: IsWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.TripleDES\n  langs:\n  - csharp\n  name: IsWeakKey(Byte[])\n  nameWithType: TripleDES.IsWeakKey(Byte[])\n  fullName: System.Security.Cryptography.TripleDES.IsWeakKey(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool IsWeakKey (byte[] rgbKey);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.TripleDES.Key\n  id: Key\n  parent: System.Security.Cryptography.TripleDES\n  langs:\n  - csharp\n  name: Key\n  nameWithType: TripleDES.Key\n  fullName: System.Security.Cryptography.TripleDES.Key\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: System.Security.Cryptography.SymmetricAlgorithm\n- uid: System.Security.Cryptography.TripleDES.#ctor\n  parent: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: TripleDES()\n  nameWithType: TripleDES.TripleDES()\n  fullName: System.Security.Cryptography.TripleDES.TripleDES()\n- uid: System.Security.Cryptography.TripleDES.Create\n  parent: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: Create()\n  nameWithType: TripleDES.Create()\n  fullName: System.Security.Cryptography.TripleDES.Create()\n- uid: System.Security.Cryptography.TripleDES\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: TripleDES\n  nameWithType: TripleDES\n  fullName: System.Security.Cryptography.TripleDES\n- uid: System.Security.Cryptography.TripleDES.Create(System.String)\n  parent: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: Create(String)\n  nameWithType: TripleDES.Create(String)\n  fullName: System.Security.Cryptography.TripleDES.Create(String)\n- uid: System.Security.Cryptography.TripleDES\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: TripleDES\n  nameWithType: TripleDES\n  fullName: System.Security.Cryptography.TripleDES\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: IsWeakKey(Byte[])\n  nameWithType: TripleDES.IsWeakKey(Byte[])\n  fullName: System.Security.Cryptography.TripleDES.IsWeakKey(Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.TripleDES.Key\n  parent: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: Key\n  nameWithType: TripleDES.Key\n  fullName: System.Security.Cryptography.TripleDES.Key\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.TripleDES.Create*\n  parent: System.Security.Cryptography.TripleDES\n  isExternal: false\n  nameWithType: TripleDES.\n"}