{"nodes":[{"pos":[3157,3185],"content":"ReadOnlyCollectionBuilder<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollectionBuilder<T>"},{"pos":[3593,3627],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4364,4391],"content":"ReadOnlyCollectionBuilder()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyCollectionBuilder()","pos":[0,27]}]},{"pos":[5058,5099],"content":"ReadOnlyCollectionBuilder(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ReadOnlyCollectionBuilder(IEnumerable<T>)"},{"pos":[5618,5652],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5915,5947],"content":"ReadOnlyCollectionBuilder(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyCollectionBuilder(Int32)","pos":[0,32]}]},{"pos":[6378,6412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6649,6655],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[6991,7025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7264,7272],"content":"Capacity","needQuote":true,"needEscape":true,"nodes":[{"content":"Capacity","pos":[0,8]}]},{"pos":[7614,7648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7881,7888],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[8423,8434],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[8785,8819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8878,8912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9185,9202],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[9585,9619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9685,9719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9952,9957],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[10285,10319],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10568,10583],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[11017,11051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11296,11306],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[11653,11687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11744,11778],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12047,12062],"content":"Insert(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,T)","pos":[0,15]}]},{"pos":[12442,12476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12525,12559],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12818,12829],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[13202,13236],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13282,13316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13559,13568],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[13913,13947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14006,14040],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14307,14322],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[14696,14730],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14967,14976],"content":"Reverse()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reverse()","pos":[0,9]}]},{"pos":[15642,15662],"content":"Reverse(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Reverse(Int32,Int32)","pos":[0,20]}]},{"pos":[16056,16090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16151,16185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16607,16645],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[17082,17116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17481,17531],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[17991,18025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18086,18120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18447,18492],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[18936,18970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19285,19324],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[19751,19785],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20110,20156],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[20636,20670],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20993,21029],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[21442,21476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21533,21567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21900,21941],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[22370,22404],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22463,22497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22828,22868],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[23293,23327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23384,23418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23773,23818],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[24263,24297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24359,24393],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24702,24738],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[25155,25189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25496,25531],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[25945,25979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26302,26338],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[26784,26818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26876,26910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27239,27278],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[27701,27735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27972,27981],"content":"ToArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[28322,28356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28619,28641],"content":"ToReadOnlyCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToReadOnlyCollection()","pos":[0,22]}]},{"pos":[29118,29152],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29263,29276],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[29448,29475],"content":"ReadOnlyCollectionBuilder()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyCollectionBuilder()","pos":[0,27]}]},{"pos":[29863,29904],"content":"ReadOnlyCollectionBuilder(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ReadOnlyCollectionBuilder(IEnumerable<T>)"},{"pos":[30220,30234],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[30505,30537],"content":"ReadOnlyCollectionBuilder(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyCollectionBuilder(Int32)","pos":[0,32]}]},{"pos":[30787,30792],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31013,31019],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[31201,31202],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[31409,31417],"content":"Capacity","needQuote":true,"needEscape":true,"nodes":[{"content":"Capacity","pos":[0,8]}]},{"pos":[31619,31624],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31843,31850],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[32163,32174],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[32384,32391],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32492,32493],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[32717,32734],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[32938,32939],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33039,33044],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33263,33268],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[33464,33469],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33696,33711],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[33975,33989],"content":"IEnumerator<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<T>"},{"pos":[34252,34262],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[34468,34473],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34570,34571],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34793,34808],"content":"Insert(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,T)","pos":[0,15]}]},{"pos":[35024,35029],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35126,35127],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35344,35355],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[35547,35548],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35646,35651],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35875,35884],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[36090,36097],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36198,36199],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[36420,36435],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[36651,36656],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36877,36886],"content":"Reverse()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reverse()","pos":[0,9]}]},{"pos":[37225,37245],"content":"Reverse(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Reverse(Int32,Int32)","pos":[0,20]}]},{"pos":[37471,37476],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37589,37594],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37860,37898],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[38162,38169],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38451,38501],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[38787,38792],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[38905,38910],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39169,39214],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[39492,39499],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39756,39795],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[40060,40066],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40326,40372],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[40680,40691],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[40972,41008],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[41266,41271],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41385,41391],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41655,41696],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[41966,41973],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42091,42097],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42360,42400],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[42666,42671],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42785,42791],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43066,43111],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[43387,43392],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43506,43512],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43764,43800],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[44060,44067],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44320,44355],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[44613,44620],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44881,44917],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[45176,45182],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45297,45302],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45562,45601],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[45866,45872],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46095,46104],"content":"ToArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[46292,46293],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[46514,46536],"content":"ToReadOnlyCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToReadOnlyCollection()","pos":[0,22]}]},{"pos":[46829,46850],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<T>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  id: ReadOnlyCollectionBuilder`1\n  children:\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Int32)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Add(`0)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Capacity\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Clear\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Contains(`0)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.CopyTo(`0[],System.Int32)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Count\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.GetEnumerator\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.IndexOf(`0)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Insert(System.Int32,`0)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Item(System.Int32)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Remove(`0)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.RemoveAt(System.Int32)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse(System.Int32,System.Int32)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#IsSynchronized\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#SyncRoot\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Add(System.Object)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Contains(System.Object)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsFixedSize\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsReadOnly\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Item(System.Int32)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Remove(System.Object)\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToArray\n  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToReadOnlyCollection\n  langs:\n  - csharp\n  name: ReadOnlyCollectionBuilder<T>\n  nameWithType: ReadOnlyCollectionBuilder<T>\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>\n  type: Class\n  syntax:\n    content: 'public sealed class ReadOnlyCollectionBuilder<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.IList'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<T>\n  - System.Collections.Generic.IEnumerable<T>\n  - System.Collections.Generic.IList<T>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor\n  id: '#ctor'\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: ReadOnlyCollectionBuilder()\n  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public ReadOnlyCollectionBuilder ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  id: '#ctor(System.Collections.Generic.IEnumerable`1)'\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: ReadOnlyCollectionBuilder(IEnumerable<T>)\n  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder(IEnumerable<T>)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder(IEnumerable<T>)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public ReadOnlyCollectionBuilder (System.Collections.Generic.IEnumerable<T> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: ReadOnlyCollectionBuilder(Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder(Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder(Int32)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public ReadOnlyCollectionBuilder (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Add(`0)\n  id: Add(`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Add(T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public void Add (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Capacity\n  id: Capacity\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Capacity\n  nameWithType: ReadOnlyCollectionBuilder<T>.Capacity\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Capacity\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public int Capacity { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Clear\n  id: Clear\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ReadOnlyCollectionBuilder<T>.Clear()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Clear()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Contains(T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Contains(T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public bool Contains (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: CopyTo(T[],Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.CopyTo(T[],Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.CopyTo(T[],Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public void CopyTo (T[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Count\n  id: Count\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ReadOnlyCollectionBuilder<T>.Count\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Count\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ReadOnlyCollectionBuilder<T>.GetEnumerator()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.IndexOf(T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public int IndexOf (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Insert(Int32,T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Insert(Int32,T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Insert(Int32,T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public void Insert (int index, T item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Item(Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public T this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Remove(T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Remove(T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public bool Remove (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.RemoveAt(Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse\n  id: Reverse\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Reverse()\n  nameWithType: ReadOnlyCollectionBuilder<T>.Reverse()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Reverse()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public void Reverse ();\n    parameters: []\n  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse(System.Int32,System.Int32)\n  id: Reverse(System.Int32,System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: Reverse(Int32,Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Reverse(Int32,Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Reverse(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public void Reverse (int index, int count);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.Generic.ICollection\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Add(Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToArray\n  id: ToArray\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: ToArray()\n  nameWithType: ReadOnlyCollectionBuilder<T>.ToArray()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ToArray()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public T[] ToArray ();\n    parameters: []\n    return:\n      type: T[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToReadOnlyCollection\n  id: ToReadOnlyCollection\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  langs:\n  - csharp\n  name: ToReadOnlyCollection()\n  nameWithType: ReadOnlyCollectionBuilder<T>.ToReadOnlyCollection()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ToReadOnlyCollection()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<T> ToReadOnlyCollection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: ReadOnlyCollectionBuilder()\n  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder()\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: ReadOnlyCollectionBuilder(IEnumerable<T>)\n  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder(IEnumerable<T>)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: ReadOnlyCollectionBuilder(Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder(Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Add(`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Add(T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Add(T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Capacity\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Capacity\n  nameWithType: ReadOnlyCollectionBuilder<T>.Capacity\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Capacity\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Clear\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Clear()\n  nameWithType: ReadOnlyCollectionBuilder<T>.Clear()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Clear()\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Contains(`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Contains(T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.CopyTo(`0[],System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: CopyTo(T[],Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.CopyTo(T[],Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.CopyTo(T[],Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Count\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Count\n  nameWithType: ReadOnlyCollectionBuilder<T>.Count\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.GetEnumerator\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ReadOnlyCollectionBuilder<T>.GetEnumerator()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.IndexOf(`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.IndexOf(T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IndexOf(T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Insert(System.Int32,`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Insert(Int32,T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Insert(Int32,T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Insert(Int32,T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Item(System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Item(Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Item(Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Remove(`0)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Remove(T)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Remove(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.RemoveAt(System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.RemoveAt(Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Reverse()\n  nameWithType: ReadOnlyCollectionBuilder<T>.Reverse()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Reverse()\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse(System.Int32,System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: Reverse(Int32,Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.Reverse(Int32,Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Reverse(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.Generic.ICollection\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#SyncRoot\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Add(System.Object)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Add(Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsFixedSize\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsReadOnly\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToArray\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: ToArray()\n  nameWithType: ReadOnlyCollectionBuilder<T>.ToArray()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ToArray()\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToReadOnlyCollection\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  name: ToReadOnlyCollection()\n  nameWithType: ReadOnlyCollectionBuilder<T>.ToReadOnlyCollection()\n  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ToReadOnlyCollection()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse*\n  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1\n  isExternal: false\n  nameWithType: ReadOnlyCollectionBuilder<T>.\n"}