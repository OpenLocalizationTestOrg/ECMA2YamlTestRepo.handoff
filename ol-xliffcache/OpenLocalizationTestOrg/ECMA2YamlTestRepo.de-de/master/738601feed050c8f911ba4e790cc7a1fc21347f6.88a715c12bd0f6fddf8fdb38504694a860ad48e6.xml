{"nodes":[{"pos":[3093,3099],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[3897,3919],"content":"Rect3D(Point3D,Size3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D(Point3D,Size3D)","pos":[0,22]}]},{"pos":[4365,4399],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4482,4516],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4873,4922],"content":"Rect3D(Double,Double,Double,Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D(Double,Double,Double,Double,Double,Double)","pos":[0,49]}]},{"pos":[5375,5409],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5467,5501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5559,5593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5655,5689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5751,5785],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5847,5881],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6148,6165],"content":"Contains(Point3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Point3D)","pos":[0,17]}]},{"pos":[6555,6589],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6648,6682],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7005,7021],"content":"Contains(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Rect3D)","pos":[0,16]}]},{"pos":[7405,7439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7498,7532],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7867,7897],"content":"Contains(Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Double,Double,Double)","pos":[0,30]}]},{"pos":[8272,8306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8364,8398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8456,8490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8549,8583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8826,8831],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[9176,9210],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9427,9441],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9771,9805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9864,9898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10215,10229],"content":"Equals(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Rect3D)","pos":[0,14]}]},{"pos":[10609,10643],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10702,10736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11125,11146],"content":"Equals(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Rect3D,Rect3D)","pos":[0,21]}]},{"pos":[11590,11624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11708,11742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11801,11835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12088,12101],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12427,12461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12728,12745],"content":"Intersect(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(Rect3D)","pos":[0,17]}]},{"pos":[13132,13166],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13564,13588],"content":"Intersect(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(Rect3D,Rect3D)","pos":[0,24]}]},{"pos":[14072,14106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14190,14224],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14304,14338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14674,14696],"content":"IntersectsWith(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"IntersectsWith(Rect3D)","pos":[0,22]}]},{"pos":[15098,15132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15191,15225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15414,15421],"content":"IsEmpty","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[15713,15747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15938,15946],"content":"Location","needQuote":true,"needEscape":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"pos":[16300,16334],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16599,16615],"content":"Offset(Vector3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset(Vector3D)","pos":[0,16]}]},{"pos":[17017,17051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17444,17467],"content":"Offset(Rect3D,Vector3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset(Rect3D,Vector3D)","pos":[0,23]}]},{"pos":[17953,17987],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18080,18114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18194,18228],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18557,18585],"content":"Offset(Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset(Double,Double,Double)","pos":[0,28]}]},{"pos":[18978,19012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19076,19110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19174,19208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19609,19644],"content":"Offset(Rect3D,Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset(Rect3D,Double,Double,Double)","pos":[0,35]}]},{"pos":[20150,20184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20248,20282],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20346,20380],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20444,20478],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20558,20592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20991,21017],"content":"op_Equality(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Rect3D,Rect3D)","pos":[0,26]}]},{"pos":[21478,21512],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21596,21630],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21689,21723],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22070,22098],"content":"op_Inequality(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Rect3D,Rect3D)","pos":[0,28]}]},{"pos":[22565,22599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22683,22717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22776,22810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23025,23038],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[23404,23438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23518,23552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23735,23739],"content":"Size","needQuote":true,"needEscape":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[24079,24113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24298,24303],"content":"SizeX","needQuote":true,"needEscape":true,"nodes":[{"content":"SizeX","pos":[0,5]}]},{"pos":[24595,24629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24814,24819],"content":"SizeY","needQuote":true,"needEscape":true,"nodes":[{"content":"SizeY","pos":[0,5]}]},{"pos":[25111,25145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25330,25335],"content":"SizeZ","needQuote":true,"needEscape":true,"nodes":[{"content":"SizeZ","pos":[0,5]}]},{"pos":[25627,25661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25982,26034],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[26477,26511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26585,26619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26677,26711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26902,26912],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[27233,27267],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27564,27589],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[27968,28002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28060,28094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28413,28427],"content":"Union(Point3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(Point3D)","pos":[0,14]}]},{"pos":[28808,28842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29156,29169],"content":"Union(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(Rect3D)","pos":[0,13]}]},{"pos":[29544,29578],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29966,29987],"content":"Union(Rect3D,Point3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(Rect3D,Point3D)","pos":[0,21]}]},{"pos":[30460,30494],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30579,30613],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30693,30727],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31113,31133],"content":"Union(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(Rect3D,Rect3D)","pos":[0,20]}]},{"pos":[31605,31639],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31723,31757],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31837,31871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32103,32104],"content":"X","needQuote":true,"needEscape":true,"nodes":[{"content":"X","pos":[0,1]}]},{"pos":[32384,32418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32595,32596],"content":"Y","needQuote":true,"needEscape":true,"nodes":[{"content":"Y","pos":[0,1]}]},{"pos":[32876,32910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33087,33088],"content":"Z","needQuote":true,"needEscape":true,"nodes":[{"content":"Z","pos":[0,1]}]},{"pos":[33368,33402],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33516,33532],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[33730,33752],"content":"Rect3D(Point3D,Size3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D(Point3D,Size3D)","pos":[0,22]}]},{"pos":[33981,33988],"content":"Point3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Point3D","pos":[0,7]}]},{"pos":[34172,34178],"content":"Size3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Size3D","pos":[0,6]}]},{"pos":[34458,34507],"content":"Rect3D(Double,Double,Double,Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D(Double,Double,Double,Double,Double,Double)","pos":[0,49]}]},{"pos":[34745,34751],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[34867,34873],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[34989,34995],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[35111,35117],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[35233,35239],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[35355,35361],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[35575,35592],"content":"Contains(Point3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Point3D)","pos":[0,17]}]},{"pos":[35767,35774],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35937,35944],"content":"Point3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Point3D","pos":[0,7]}]},{"pos":[36181,36197],"content":"Contains(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Rect3D)","pos":[0,16]}]},{"pos":[36370,36377],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36539,36545],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[36786,36816],"content":"Contains(Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Double,Double,Double)","pos":[0,30]}]},{"pos":[37017,37024],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37142,37148],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[37264,37270],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[37386,37392],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[37565,37570],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[37764,37770],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[37981,37995],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[38164,38171],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38289,38295],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38506,38520],"content":"Equals(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Rect3D)","pos":[0,14]}]},{"pos":[38689,38696],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38858,38864],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[39133,39154],"content":"Equals(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Rect3D,Rect3D)","pos":[0,21]}]},{"pos":[39337,39344],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39506,39512],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[39694,39700],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[39901,39914],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[40079,40084],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40296,40313],"content":"Intersect(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(Rect3D)","pos":[0,17]}]},{"pos":[40531,40537],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[40809,40833],"content":"Intersect(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(Rect3D,Rect3D)","pos":[0,24]}]},{"pos":[41065,41071],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[41253,41259],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[41441,41447],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[41688,41710],"content":"IntersectsWith(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"IntersectsWith(Rect3D)","pos":[0,22]}]},{"pos":[41895,41902],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42064,42070],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[42267,42274],"content":"IsEmpty","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty","pos":[0,7]}]},{"pos":[42429,42436],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42614,42622],"content":"Location","needQuote":true,"needEscape":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"pos":[42823,42830],"content":"Point3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Point3D","pos":[0,7]}]},{"pos":[43067,43083],"content":"Offset(Vector3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset(Vector3D)","pos":[0,16]}]},{"pos":[43301,43309],"content":"Vector3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector3D","pos":[0,8]}]},{"pos":[43584,43607],"content":"Offset(Rect3D,Vector3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset(Rect3D,Vector3D)","pos":[0,23]}]},{"pos":[43837,43843],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[44025,44031],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[44215,44223],"content":"Vector3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector3D","pos":[0,8]}]},{"pos":[44466,44494],"content":"Offset(Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset(Double,Double,Double)","pos":[0,28]}]},{"pos":[44690,44696],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[44812,44818],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[44934,44940],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[45193,45228],"content":"Offset(Rect3D,Double,Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset(Rect3D,Double,Double,Double)","pos":[0,35]}]},{"pos":[45482,45488],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[45670,45676],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[45814,45820],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[45936,45942],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[46058,46064],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[46316,46342],"content":"op_Equality(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Rect3D,Rect3D)","pos":[0,26]}]},{"pos":[46535,46542],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46704,46710],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[46892,46898],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[47174,47202],"content":"op_Inequality(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Rect3D,Rect3D)","pos":[0,28]}]},{"pos":[47399,47406],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47568,47574],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[47756,47762],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[47972,47985],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[48195,48201],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[48339,48345],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[48517,48521],"content":"Size","needQuote":true,"needEscape":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[48713,48719],"content":"Size3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Size3D","pos":[0,6]}]},{"pos":[48914,48919],"content":"SizeX","needQuote":true,"needEscape":true,"nodes":[{"content":"SizeX","pos":[0,5]}]},{"pos":[49069,49075],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[49248,49253],"content":"SizeY","needQuote":true,"needEscape":true,"nodes":[{"content":"SizeY","pos":[0,5]}]},{"pos":[49403,49409],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[49582,49587],"content":"SizeZ","needQuote":true,"needEscape":true,"nodes":[{"content":"SizeZ","pos":[0,5]}]},{"pos":[49737,49743],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[49977,50029],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[50273,50279],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[50395,50401],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[50526,50541],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[50735,50745],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[50905,50911],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[51111,51136],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[51326,51332],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[51457,51472],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[51701,51715],"content":"Union(Point3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(Point3D)","pos":[0,14]}]},{"pos":[51928,51935],"content":"Point3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Point3D","pos":[0,7]}]},{"pos":[52169,52182],"content":"Union(Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(Rect3D)","pos":[0,13]}]},{"pos":[52392,52398],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[52667,52688],"content":"Union(Rect3D,Point3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(Rect3D,Point3D)","pos":[0,21]}]},{"pos":[52914,52920],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[53102,53108],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[53291,53298],"content":"Point3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Point3D","pos":[0,7]}]},{"pos":[53568,53588],"content":"Union(Rect3D,Rect3D)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(Rect3D,Rect3D)","pos":[0,20]}]},{"pos":[53812,53818],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[54000,54006],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[54188,54194],"content":"Rect3D","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect3D","pos":[0,6]}]},{"pos":[54385,54386],"content":"X","needQuote":true,"needEscape":true,"nodes":[{"content":"X","pos":[0,1]}]},{"pos":[54528,54534],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[54703,54704],"content":"Y","needQuote":true,"needEscape":true,"nodes":[{"content":"Y","pos":[0,1]}]},{"pos":[54846,54852],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[55021,55022],"content":"Z","needQuote":true,"needEscape":true,"nodes":[{"content":"Z","pos":[0,1]}]},{"pos":[55164,55170],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Media3D.Rect3D\n  id: Rect3D\n  children:\n  - System.Windows.Media.Media3D.Rect3D.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Size3D)\n  - System.Windows.Media.Media3D.Rect3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  - System.Windows.Media.Media3D.Rect3D.Contains(System.Windows.Media.Media3D.Point3D)\n  - System.Windows.Media.Media3D.Rect3D.Contains(System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.Contains(System.Double,System.Double,System.Double)\n  - System.Windows.Media.Media3D.Rect3D.Empty\n  - System.Windows.Media.Media3D.Rect3D.Equals(System.Object)\n  - System.Windows.Media.Media3D.Rect3D.Equals(System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.Equals(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.GetHashCode\n  - System.Windows.Media.Media3D.Rect3D.Intersect(System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.Intersect(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.IntersectsWith(System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.IsEmpty\n  - System.Windows.Media.Media3D.Rect3D.Location\n  - System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Vector3D)\n  - System.Windows.Media.Media3D.Rect3D.Offset(System.Double,System.Double,System.Double)\n  - System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Rect3D,System.Double,System.Double,System.Double)\n  - System.Windows.Media.Media3D.Rect3D.op_Equality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.op_Inequality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.Parse(System.String)\n  - System.Windows.Media.Media3D.Rect3D.Size\n  - System.Windows.Media.Media3D.Rect3D.SizeX\n  - System.Windows.Media.Media3D.Rect3D.SizeY\n  - System.Windows.Media.Media3D.Rect3D.SizeZ\n  - System.Windows.Media.Media3D.Rect3D.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.Media3D.Rect3D.ToString\n  - System.Windows.Media.Media3D.Rect3D.ToString(System.IFormatProvider)\n  - System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Point3D)\n  - System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Point3D)\n  - System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  - System.Windows.Media.Media3D.Rect3D.X\n  - System.Windows.Media.Media3D.Rect3D.Y\n  - System.Windows.Media.Media3D.Rect3D.Z\n  langs:\n  - csharp\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n  type: Struct\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Media3D.Rect3DConverter))]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Media3D.Converters.Rect3DValueSerializer))]\n\n      public struct Rect3D : IFormattable\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IFormattable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Size3D)\n  id: '#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Size3D)'\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Rect3D(Point3D,Size3D)\n  nameWithType: Rect3D.Rect3D(Point3D,Size3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Rect3D(Point3D,Size3D)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public Rect3D (System.Windows.Media.Media3D.Point3D location, System.Windows.Media.Media3D.Size3D size);\n    parameters:\n    - id: location\n      type: System.Windows.Media.Media3D.Point3D\n      description: Parameter description to be filled\n    - id: size\n      type: System.Windows.Media.Media3D.Size3D\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Rect3D(Double,Double,Double,Double,Double,Double)\n  nameWithType: Rect3D.Rect3D(Double,Double,Double,Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Rect3D.Rect3D(Double,Double,Double,Double,Double,Double)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public Rect3D (double x, double y, double z, double sizeX, double sizeY, double sizeZ);\n    parameters:\n    - id: x\n      type: System.Double\n      description: Parameter description to be filled\n    - id: y\n      type: System.Double\n      description: Parameter description to be filled\n    - id: z\n      type: System.Double\n      description: Parameter description to be filled\n    - id: sizeX\n      type: System.Double\n      description: Parameter description to be filled\n    - id: sizeY\n      type: System.Double\n      description: Parameter description to be filled\n    - id: sizeZ\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Contains(System.Windows.Media.Media3D.Point3D)\n  id: Contains(System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Contains(Point3D)\n  nameWithType: Rect3D.Contains(Point3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Contains(Point3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public bool Contains (System.Windows.Media.Media3D.Point3D point);\n    parameters:\n    - id: point\n      type: System.Windows.Media.Media3D.Point3D\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Contains*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Contains(System.Windows.Media.Media3D.Rect3D)\n  id: Contains(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Contains(Rect3D)\n  nameWithType: Rect3D.Contains(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Contains(Rect3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public bool Contains (System.Windows.Media.Media3D.Rect3D rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Contains*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Contains(System.Double,System.Double,System.Double)\n  id: Contains(System.Double,System.Double,System.Double)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Contains(Double,Double,Double)\n  nameWithType: Rect3D.Contains(Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Rect3D.Contains(Double,Double,Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public bool Contains (double x, double y, double z);\n    parameters:\n    - id: x\n      type: System.Double\n      description: Parameter description to be filled\n    - id: y\n      type: System.Double\n      description: Parameter description to be filled\n    - id: z\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Contains*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Empty\n  id: Empty\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: Rect3D.Empty\n  fullName: System.Windows.Media.Media3D.Rect3D.Empty\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static System.Windows.Media.Media3D.Rect3D Empty { get; }\n    return:\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Rect3D.Equals(Object)\n  fullName: System.Windows.Media.Media3D.Rect3D.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Equals(System.Windows.Media.Media3D.Rect3D)\n  id: Equals(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Equals(Rect3D)\n  nameWithType: Rect3D.Equals(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Equals(Rect3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public bool Equals (System.Windows.Media.Media3D.Rect3D value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Equals(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  id: Equals(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Equals(Rect3D,Rect3D)\n  nameWithType: Rect3D.Equals(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Equals(Rect3D,Rect3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static bool Equals (System.Windows.Media.Media3D.Rect3D rect1, System.Windows.Media.Media3D.Rect3D rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    - id: rect2\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Rect3D.GetHashCode()\n  fullName: System.Windows.Media.Media3D.Rect3D.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Intersect(System.Windows.Media.Media3D.Rect3D)\n  id: Intersect(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Intersect(Rect3D)\n  nameWithType: Rect3D.Intersect(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Intersect(Rect3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public void Intersect (System.Windows.Media.Media3D.Rect3D rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Intersect*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Intersect(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  id: Intersect(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Intersect(Rect3D,Rect3D)\n  nameWithType: Rect3D.Intersect(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Intersect(Rect3D,Rect3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static System.Windows.Media.Media3D.Rect3D Intersect (System.Windows.Media.Media3D.Rect3D rect1, System.Windows.Media.Media3D.Rect3D rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    - id: rect2\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Intersect*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.IntersectsWith(System.Windows.Media.Media3D.Rect3D)\n  id: IntersectsWith(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: IntersectsWith(Rect3D)\n  nameWithType: Rect3D.IntersectsWith(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.IntersectsWith(Rect3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public bool IntersectsWith (System.Windows.Media.Media3D.Rect3D rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.IsEmpty\n  id: IsEmpty\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: Rect3D.IsEmpty\n  fullName: System.Windows.Media.Media3D.Rect3D.IsEmpty\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Location\n  id: Location\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Location\n  nameWithType: Rect3D.Location\n  fullName: System.Windows.Media.Media3D.Rect3D.Location\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public System.Windows.Media.Media3D.Point3D Location { get; set; }\n    return:\n      type: System.Windows.Media.Media3D.Point3D\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Vector3D)\n  id: Offset(System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Offset(Vector3D)\n  nameWithType: Rect3D.Offset(Vector3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Offset(Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public void Offset (System.Windows.Media.Media3D.Vector3D offsetVector);\n    parameters:\n    - id: offsetVector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Offset*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Vector3D)\n  id: Offset(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Offset(Rect3D,Vector3D)\n  nameWithType: Rect3D.Offset(Rect3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Offset(Rect3D,Vector3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static System.Windows.Media.Media3D.Rect3D Offset (System.Windows.Media.Media3D.Rect3D rect, System.Windows.Media.Media3D.Vector3D offsetVector);\n    parameters:\n    - id: rect\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    - id: offsetVector\n      type: System.Windows.Media.Media3D.Vector3D\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Offset*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Offset(System.Double,System.Double,System.Double)\n  id: Offset(System.Double,System.Double,System.Double)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Offset(Double,Double,Double)\n  nameWithType: Rect3D.Offset(Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Rect3D.Offset(Double,Double,Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public void Offset (double offsetX, double offsetY, double offsetZ);\n    parameters:\n    - id: offsetX\n      type: System.Double\n      description: Parameter description to be filled\n    - id: offsetY\n      type: System.Double\n      description: Parameter description to be filled\n    - id: offsetZ\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Offset*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Rect3D,System.Double,System.Double,System.Double)\n  id: Offset(System.Windows.Media.Media3D.Rect3D,System.Double,System.Double,System.Double)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Offset(Rect3D,Double,Double,Double)\n  nameWithType: Rect3D.Offset(Rect3D,Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Rect3D.Offset(Rect3D,Double,Double,Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static System.Windows.Media.Media3D.Rect3D Offset (System.Windows.Media.Media3D.Rect3D rect, double offsetX, double offsetY, double offsetZ);\n    parameters:\n    - id: rect\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    - id: offsetX\n      type: System.Double\n      description: Parameter description to be filled\n    - id: offsetY\n      type: System.Double\n      description: Parameter description to be filled\n    - id: offsetZ\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Offset*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.op_Equality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  id: op_Equality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: op_Equality(Rect3D,Rect3D)\n  nameWithType: Rect3D.op_Equality(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.op_Equality(Rect3D,Rect3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static bool op_Equality (System.Windows.Media.Media3D.Rect3D rect1, System.Windows.Media.Media3D.Rect3D rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    - id: rect2\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.op_Inequality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  id: op_Inequality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: op_Inequality(Rect3D,Rect3D)\n  nameWithType: Rect3D.op_Inequality(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.op_Inequality(Rect3D,Rect3D)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Media.Media3D.Rect3D rect1, System.Windows.Media.Media3D.Rect3D rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    - id: rect2\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Rect3D.Parse(String)\n  fullName: System.Windows.Media.Media3D.Rect3D.Parse(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static System.Windows.Media.Media3D.Rect3D Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Size\n  id: Size\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Size\n  nameWithType: Rect3D.Size\n  fullName: System.Windows.Media.Media3D.Rect3D.Size\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public System.Windows.Media.Media3D.Size3D Size { get; set; }\n    return:\n      type: System.Windows.Media.Media3D.Size3D\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.SizeX\n  id: SizeX\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: SizeX\n  nameWithType: Rect3D.SizeX\n  fullName: System.Windows.Media.Media3D.Rect3D.SizeX\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public double SizeX { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.SizeY\n  id: SizeY\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: SizeY\n  nameWithType: Rect3D.SizeY\n  fullName: System.Windows.Media.Media3D.Rect3D.SizeY\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public double SizeY { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.SizeZ\n  id: SizeZ\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: SizeZ\n  nameWithType: Rect3D.SizeZ\n  fullName: System.Windows.Media.Media3D.Rect3D.SizeZ\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public double SizeZ { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Rect3D.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Rect3D.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.ToString\n  id: ToString\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Rect3D.ToString()\n  fullName: System.Windows.Media.Media3D.Rect3D.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Rect3D.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Rect3D.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Point3D)\n  id: Union(System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Union(Point3D)\n  nameWithType: Rect3D.Union(Point3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Union(Point3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public void Union (System.Windows.Media.Media3D.Point3D point);\n    parameters:\n    - id: point\n      type: System.Windows.Media.Media3D.Point3D\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Union*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D)\n  id: Union(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Union(Rect3D)\n  nameWithType: Rect3D.Union(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Union(Rect3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public void Union (System.Windows.Media.Media3D.Rect3D rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Union*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Point3D)\n  id: Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Union(Rect3D,Point3D)\n  nameWithType: Rect3D.Union(Rect3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Union(Rect3D,Point3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static System.Windows.Media.Media3D.Rect3D Union (System.Windows.Media.Media3D.Rect3D rect, System.Windows.Media.Media3D.Point3D point);\n    parameters:\n    - id: rect\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    - id: point\n      type: System.Windows.Media.Media3D.Point3D\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Union*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  id: Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Union(Rect3D,Rect3D)\n  nameWithType: Rect3D.Union(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Union(Rect3D,Rect3D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public static System.Windows.Media.Media3D.Rect3D Union (System.Windows.Media.Media3D.Rect3D rect1, System.Windows.Media.Media3D.Rect3D rect2);\n    parameters:\n    - id: rect1\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    - id: rect2\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Media3D.Rect3D\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Media3D.Rect3D.Union*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.X\n  id: X\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: X\n  nameWithType: Rect3D.X\n  fullName: System.Windows.Media.Media3D.Rect3D.X\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public double X { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Y\n  id: Y\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Rect3D.Y\n  fullName: System.Windows.Media.Media3D.Rect3D.Y\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public double Y { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Rect3D.Z\n  id: Z\n  parent: System.Windows.Media.Media3D.Rect3D\n  langs:\n  - csharp\n  name: Z\n  nameWithType: Rect3D.Z\n  fullName: System.Windows.Media.Media3D.Rect3D.Z\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public double Z { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Media.Media3D.Rect3D.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Size3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Rect3D(Point3D,Size3D)\n  nameWithType: Rect3D.Rect3D(Point3D,Size3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Rect3D(Point3D,Size3D)\n- uid: System.Windows.Media.Media3D.Point3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Point3D\n  nameWithType: Point3D\n  fullName: System.Windows.Media.Media3D.Point3D\n- uid: System.Windows.Media.Media3D.Size3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Size3D\n  nameWithType: Size3D\n  fullName: System.Windows.Media.Media3D.Size3D\n- uid: System.Windows.Media.Media3D.Rect3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Rect3D(Double,Double,Double,Double,Double,Double)\n  nameWithType: Rect3D.Rect3D(Double,Double,Double,Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Rect3D.Rect3D(Double,Double,Double,Double,Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.Contains(System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Contains(Point3D)\n  nameWithType: Rect3D.Contains(Point3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Contains(Point3D)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Media3D.Point3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Point3D\n  nameWithType: Point3D\n  fullName: System.Windows.Media.Media3D.Point3D\n- uid: System.Windows.Media.Media3D.Rect3D.Contains(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Contains(Rect3D)\n  nameWithType: Rect3D.Contains(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Contains(Rect3D)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.Contains(System.Double,System.Double,System.Double)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Contains(Double,Double,Double)\n  nameWithType: Rect3D.Contains(Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Rect3D.Contains(Double,Double,Double)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.Empty\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Empty\n  nameWithType: Rect3D.Empty\n  fullName: System.Windows.Media.Media3D.Rect3D.Empty\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.Equals(System.Object)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Rect3D.Equals(Object)\n  fullName: System.Windows.Media.Media3D.Rect3D.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Media3D.Rect3D.Equals(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Equals(Rect3D)\n  nameWithType: Rect3D.Equals(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Equals(Rect3D)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.Equals(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Equals(Rect3D,Rect3D)\n  nameWithType: Rect3D.Equals(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Equals(Rect3D,Rect3D)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.GetHashCode\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Rect3D.GetHashCode()\n  fullName: System.Windows.Media.Media3D.Rect3D.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Media3D.Rect3D.Intersect(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Intersect(Rect3D)\n  nameWithType: Rect3D.Intersect(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Intersect(Rect3D)\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.Intersect(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Intersect(Rect3D,Rect3D)\n  nameWithType: Rect3D.Intersect(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Intersect(Rect3D,Rect3D)\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.IntersectsWith(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: IntersectsWith(Rect3D)\n  nameWithType: Rect3D.IntersectsWith(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.IntersectsWith(Rect3D)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.IsEmpty\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Rect3D.IsEmpty\n  fullName: System.Windows.Media.Media3D.Rect3D.IsEmpty\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Media3D.Rect3D.Location\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Location\n  nameWithType: Rect3D.Location\n  fullName: System.Windows.Media.Media3D.Rect3D.Location\n- uid: System.Windows.Media.Media3D.Point3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Point3D\n  nameWithType: Point3D\n  fullName: System.Windows.Media.Media3D.Point3D\n- uid: System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Offset(Vector3D)\n  nameWithType: Rect3D.Offset(Vector3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Offset(Vector3D)\n- uid: System.Windows.Media.Media3D.Vector3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Vector3D\n  nameWithType: Vector3D\n  fullName: System.Windows.Media.Media3D.Vector3D\n- uid: System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Vector3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Offset(Rect3D,Vector3D)\n  nameWithType: Rect3D.Offset(Rect3D,Vector3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Offset(Rect3D,Vector3D)\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Vector3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Vector3D\n  nameWithType: Vector3D\n  fullName: System.Windows.Media.Media3D.Vector3D\n- uid: System.Windows.Media.Media3D.Rect3D.Offset(System.Double,System.Double,System.Double)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Offset(Double,Double,Double)\n  nameWithType: Rect3D.Offset(Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Rect3D.Offset(Double,Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.Offset(System.Windows.Media.Media3D.Rect3D,System.Double,System.Double,System.Double)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Offset(Rect3D,Double,Double,Double)\n  nameWithType: Rect3D.Offset(Rect3D,Double,Double,Double)\n  fullName: System.Windows.Media.Media3D.Rect3D.Offset(Rect3D,Double,Double,Double)\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.op_Equality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: op_Equality(Rect3D,Rect3D)\n  nameWithType: Rect3D.op_Equality(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.op_Equality(Rect3D,Rect3D)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.op_Inequality(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: op_Inequality(Rect3D,Rect3D)\n  nameWithType: Rect3D.op_Inequality(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.op_Inequality(Rect3D,Rect3D)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.Parse(System.String)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Rect3D.Parse(String)\n  fullName: System.Windows.Media.Media3D.Rect3D.Parse(String)\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Media3D.Rect3D.Size\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Size\n  nameWithType: Rect3D.Size\n  fullName: System.Windows.Media.Media3D.Rect3D.Size\n- uid: System.Windows.Media.Media3D.Size3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Size3D\n  nameWithType: Size3D\n  fullName: System.Windows.Media.Media3D.Size3D\n- uid: System.Windows.Media.Media3D.Rect3D.SizeX\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: SizeX\n  nameWithType: Rect3D.SizeX\n  fullName: System.Windows.Media.Media3D.Rect3D.SizeX\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.SizeY\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: SizeY\n  nameWithType: Rect3D.SizeY\n  fullName: System.Windows.Media.Media3D.Rect3D.SizeY\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.SizeZ\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: SizeZ\n  nameWithType: Rect3D.SizeZ\n  fullName: System.Windows.Media.Media3D.Rect3D.SizeZ\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Rect3D.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Rect3D.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.Media3D.Rect3D.ToString\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: ToString()\n  nameWithType: Rect3D.ToString()\n  fullName: System.Windows.Media.Media3D.Rect3D.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Media3D.Rect3D.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Rect3D.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Media3D.Rect3D.ToString(IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Union(Point3D)\n  nameWithType: Rect3D.Union(Point3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Union(Point3D)\n- uid: System.Windows.Media.Media3D.Point3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Point3D\n  nameWithType: Point3D\n  fullName: System.Windows.Media.Media3D.Point3D\n- uid: System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Union(Rect3D)\n  nameWithType: Rect3D.Union(Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Union(Rect3D)\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Point3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Union(Rect3D,Point3D)\n  nameWithType: Rect3D.Union(Rect3D,Point3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Union(Rect3D,Point3D)\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Point3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Point3D\n  nameWithType: Point3D\n  fullName: System.Windows.Media.Media3D.Point3D\n- uid: System.Windows.Media.Media3D.Rect3D.Union(System.Windows.Media.Media3D.Rect3D,System.Windows.Media.Media3D.Rect3D)\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Union(Rect3D,Rect3D)\n  nameWithType: Rect3D.Union(Rect3D,Rect3D)\n  fullName: System.Windows.Media.Media3D.Rect3D.Union(Rect3D,Rect3D)\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D\n  parent: System.Windows.Media.Media3D\n  isExternal: false\n  name: Rect3D\n  nameWithType: Rect3D\n  fullName: System.Windows.Media.Media3D.Rect3D\n- uid: System.Windows.Media.Media3D.Rect3D.X\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: X\n  nameWithType: Rect3D.X\n  fullName: System.Windows.Media.Media3D.Rect3D.X\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.Y\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Y\n  nameWithType: Rect3D.Y\n  fullName: System.Windows.Media.Media3D.Rect3D.Y\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.Z\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  name: Z\n  nameWithType: Rect3D.Z\n  fullName: System.Windows.Media.Media3D.Rect3D.Z\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Media3D.Rect3D.Contains*\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  nameWithType: Rect3D.\n- uid: System.Windows.Media.Media3D.Rect3D.Equals*\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  nameWithType: Rect3D.\n- uid: System.Windows.Media.Media3D.Rect3D.Intersect*\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  nameWithType: Rect3D.\n- uid: System.Windows.Media.Media3D.Rect3D.Offset*\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  nameWithType: Rect3D.\n- uid: System.Windows.Media.Media3D.Rect3D.ToString*\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  nameWithType: Rect3D.\n- uid: System.Windows.Media.Media3D.Rect3D.Union*\n  parent: System.Windows.Media.Media3D.Rect3D\n  isExternal: false\n  nameWithType: Rect3D.\n"}