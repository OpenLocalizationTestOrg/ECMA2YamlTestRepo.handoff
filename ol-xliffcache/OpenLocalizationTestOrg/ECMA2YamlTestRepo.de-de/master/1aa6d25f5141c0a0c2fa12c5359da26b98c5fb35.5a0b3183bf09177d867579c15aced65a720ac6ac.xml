{"nodes":[{"pos":[2174,2188],"content":"CollectionBase","needQuote":true,"needEscape":true,"nodes":[{"content":"CollectionBase","pos":[0,14]}]},{"pos":[2985,3001],"content":"CollectionBase()","needQuote":true,"needEscape":true,"nodes":[{"content":"CollectionBase()","pos":[0,16]}]},{"pos":[3473,3494],"content":"CollectionBase(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CollectionBase(Int32)","pos":[0,21]}]},{"pos":[3838,3872],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4059,4067],"content":"Capacity","needQuote":true,"needEscape":true,"nodes":[{"content":"Capacity","pos":[0,8]}]},{"pos":[4352,4386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4567,4574],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[4986,4991],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[5262,5296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5493,5508],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[5864,5898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6087,6096],"content":"InnerList","needQuote":true,"needEscape":true,"nodes":[{"content":"InnerList","pos":[0,9]}]},{"pos":[6423,6457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6636,6640],"content":"List","needQuote":true,"needEscape":true,"nodes":[{"content":"List","pos":[0,4]}]},{"pos":[6944,6978],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7163,7172],"content":"OnClear()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnClear()","pos":[0,9]}]},{"pos":[7621,7638],"content":"OnClearComplete()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnClearComplete()","pos":[0,17]}]},{"pos":[8153,8175],"content":"OnInsert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnInsert(Int32,Object)","pos":[0,22]}]},{"pos":[8531,8565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8627,8661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8920,8950],"content":"OnInsertComplete(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnInsertComplete(Int32,Object)","pos":[0,30]}]},{"pos":[9330,9364],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9426,9460],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9703,9725],"content":"OnRemove(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnRemove(Int32,Object)","pos":[0,22]}]},{"pos":[10081,10115],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10177,10211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10470,10500],"content":"OnRemoveComplete(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnRemoveComplete(Int32,Object)","pos":[0,30]}]},{"pos":[10880,10914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10976,11010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11275,11301],"content":"OnSet(Int32,Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnSet(Int32,Object,Object)","pos":[0,26]}]},{"pos":[11682,11716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11781,11815],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11880,11914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12195,12229],"content":"OnSetComplete(Int32,Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnSetComplete(Int32,Object,Object)","pos":[0,34]}]},{"pos":[12634,12668],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12733,12767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12832,12866],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13087,13105],"content":"OnValidate(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnValidate(Object)","pos":[0,18]}]},{"pos":[13445,13479],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13694,13709],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[14026,14060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14373,14423],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[14826,14860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14921,14955],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15230,15275],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[15662,15696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15959,15998],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[16368,16402],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16673,16709],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[17065,17099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17156,17190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17471,17512],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[17884,17918],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17977,18011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18290,18330],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[18698,18732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18789,18823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19126,19171],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[19559,19593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19655,19689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19946,19982],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[20342,20376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20631,20666],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[21023,21057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21328,21364],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[21753,21787],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21845,21879],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22156,22195],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[22561,22595],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22706,22719],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[22839,22855],"content":"CollectionBase()","needQuote":true,"needEscape":true,"nodes":[{"content":"CollectionBase()","pos":[0,16]}]},{"pos":[23100,23121],"content":"CollectionBase(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CollectionBase(Int32)","pos":[0,21]}]},{"pos":[23308,23313],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23483,23491],"content":"Capacity","needQuote":true,"needEscape":true,"nodes":[{"content":"Capacity","pos":[0,8]}]},{"pos":[23652,23657],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23824,23831],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[24044,24049],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[24204,24209],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24384,24399],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[24604,24615],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[24810,24819],"content":"InnerList","needQuote":true,"needEscape":true,"nodes":[{"content":"InnerList","pos":[0,9]}]},{"pos":[25010,25019],"content":"ArrayList","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayList","pos":[0,9]}]},{"pos":[25205,25209],"content":"List","needQuote":true,"needEscape":true,"nodes":[{"content":"List","pos":[0,4]}]},{"pos":[25386,25391],"content":"IList","needQuote":true,"needEscape":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[25572,25581],"content":"OnClear()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnClear()","pos":[0,9]}]},{"pos":[25808,25825],"content":"OnClearComplete()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnClearComplete()","pos":[0,17]}]},{"pos":[26089,26111],"content":"OnInsert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnInsert(Int32,Object)","pos":[0,22]}]},{"pos":[26300,26305],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26419,26425],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26633,26663],"content":"OnInsertComplete(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnInsertComplete(Int32,Object)","pos":[0,30]}]},{"pos":[26868,26873],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26987,26993],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27193,27215],"content":"OnRemove(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnRemove(Int32,Object)","pos":[0,22]}]},{"pos":[27404,27409],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27523,27529],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27737,27767],"content":"OnRemoveComplete(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnRemoveComplete(Int32,Object)","pos":[0,30]}]},{"pos":[27972,27977],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28091,28097],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28308,28334],"content":"OnSet(Int32,Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnSet(Int32,Object,Object)","pos":[0,26]}]},{"pos":[28531,28536],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28650,28656],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28772,28778],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28997,29031],"content":"OnSetComplete(Int32,Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnSetComplete(Int32,Object,Object)","pos":[0,34]}]},{"pos":[29244,29249],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29363,29369],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29485,29491],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29680,29698],"content":"OnValidate(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnValidate(Object)","pos":[0,18]}]},{"pos":[29880,29886],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30072,30087],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[30262,30267],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30493,30543],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[30788,30793],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[30906,30911],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31118,31163],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[31400,31407],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31612,31651],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[31875,31881],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32088,32124],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[32341,32346],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32460,32466],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32678,32719],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[32948,32955],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33073,33079],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33290,33330],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[33555,33560],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33674,33680],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33903,33948],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[34183,34188],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34302,34308],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34508,34544],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[34763,34770],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34971,35006],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[35223,35230],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35439,35475],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[35693,35699],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35814,35819],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36027,36066],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[36290,36296],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.CollectionBase\n  id: CollectionBase\n  children:\n  - System.Collections.CollectionBase.#ctor\n  - System.Collections.CollectionBase.#ctor(System.Int32)\n  - System.Collections.CollectionBase.Capacity\n  - System.Collections.CollectionBase.Clear\n  - System.Collections.CollectionBase.Count\n  - System.Collections.CollectionBase.GetEnumerator\n  - System.Collections.CollectionBase.InnerList\n  - System.Collections.CollectionBase.List\n  - System.Collections.CollectionBase.OnClear\n  - System.Collections.CollectionBase.OnClearComplete\n  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\n  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)\n  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\n  - System.Collections.CollectionBase.OnValidate(System.Object)\n  - System.Collections.CollectionBase.RemoveAt(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: CollectionBase\n  nameWithType: CollectionBase\n  fullName: System.Collections.CollectionBase\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class CollectionBase : System.Collections.IList\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.#ctor\n  id: '#ctor'\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: CollectionBase()\n  nameWithType: CollectionBase.CollectionBase()\n  fullName: System.Collections.CollectionBase.CollectionBase()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected CollectionBase ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: CollectionBase(Int32)\n  nameWithType: CollectionBase.CollectionBase(Int32)\n  fullName: System.Collections.CollectionBase.CollectionBase(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected CollectionBase (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.Capacity\n  id: Capacity\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: Capacity\n  nameWithType: CollectionBase.Capacity\n  fullName: System.Collections.CollectionBase.Capacity\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public int Capacity { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.Clear\n  id: Clear\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: CollectionBase.Clear()\n  fullName: System.Collections.CollectionBase.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.Count\n  id: Count\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: Count\n  nameWithType: CollectionBase.Count\n  fullName: System.Collections.CollectionBase.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: CollectionBase.GetEnumerator()\n  fullName: System.Collections.CollectionBase.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.InnerList\n  id: InnerList\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: InnerList\n  nameWithType: CollectionBase.InnerList\n  fullName: System.Collections.CollectionBase.InnerList\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected System.Collections.ArrayList InnerList { get; }\n    return:\n      type: System.Collections.ArrayList\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.List\n  id: List\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: List\n  nameWithType: CollectionBase.List\n  fullName: System.Collections.CollectionBase.List\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected System.Collections.IList List { get; }\n    return:\n      type: System.Collections.IList\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.OnClear\n  id: OnClear\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: OnClear()\n  nameWithType: CollectionBase.OnClear()\n  fullName: System.Collections.CollectionBase.OnClear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected virtual void OnClear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.OnClearComplete\n  id: OnClearComplete\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: OnClearComplete()\n  nameWithType: CollectionBase.OnClearComplete()\n  fullName: System.Collections.CollectionBase.OnClearComplete()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected virtual void OnClearComplete ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)\n  id: OnInsert(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: OnInsert(Int32,Object)\n  nameWithType: CollectionBase.OnInsert(Int32,Object)\n  fullName: System.Collections.CollectionBase.OnInsert(Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected virtual void OnInsert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\n  id: OnInsertComplete(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: OnInsertComplete(Int32,Object)\n  nameWithType: CollectionBase.OnInsertComplete(Int32,Object)\n  fullName: System.Collections.CollectionBase.OnInsertComplete(Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected virtual void OnInsertComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)\n  id: OnRemove(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: OnRemove(Int32,Object)\n  nameWithType: CollectionBase.OnRemove(Int32,Object)\n  fullName: System.Collections.CollectionBase.OnRemove(Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected virtual void OnRemove (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\n  id: OnRemoveComplete(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: OnRemoveComplete(Int32,Object)\n  nameWithType: CollectionBase.OnRemoveComplete(Int32,Object)\n  fullName: System.Collections.CollectionBase.OnRemoveComplete(Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected virtual void OnRemoveComplete (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)\n  id: OnSet(System.Int32,System.Object,System.Object)\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: OnSet(Int32,Object,Object)\n  nameWithType: CollectionBase.OnSet(Int32,Object,Object)\n  fullName: System.Collections.CollectionBase.OnSet(Int32,Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected virtual void OnSet (int index, object oldValue, object newValue);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: oldValue\n      type: System.Object\n      description: Parameter description to be filled\n    - id: newValue\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\n  id: OnSetComplete(System.Int32,System.Object,System.Object)\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: OnSetComplete(Int32,Object,Object)\n  nameWithType: CollectionBase.OnSetComplete(Int32,Object,Object)\n  fullName: System.Collections.CollectionBase.OnSetComplete(Int32,Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected virtual void OnSetComplete (int index, object oldValue, object newValue);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: oldValue\n      type: System.Object\n      description: Parameter description to be filled\n    - id: newValue\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.OnValidate(System.Object)\n  id: OnValidate(System.Object)\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: OnValidate(Object)\n  nameWithType: CollectionBase.OnValidate(Object)\n  fullName: System.Collections.CollectionBase.OnValidate(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: protected virtual void OnValidate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: CollectionBase.RemoveAt(Int32)\n  fullName: System.Collections.CollectionBase.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: CollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: CollectionBase.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.CollectionBase.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: CollectionBase.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.CollectionBase.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: CollectionBase.System.Collections.IList.Add(Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: CollectionBase.System.Collections.IList.Contains(Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: CollectionBase.System.Collections.IList.IndexOf(Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: CollectionBase.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: CollectionBase.System.Collections.IList.IsFixedSize\n  fullName: System.Collections.CollectionBase.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: CollectionBase.System.Collections.IList.IsReadOnly\n  fullName: System.Collections.CollectionBase.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: CollectionBase.System.Collections.IList.Item(Int32)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.CollectionBase\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: CollectionBase.System.Collections.IList.Remove(Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.CollectionBase.#ctor\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: CollectionBase()\n  nameWithType: CollectionBase.CollectionBase()\n  fullName: System.Collections.CollectionBase.CollectionBase()\n- uid: System.Collections.CollectionBase.#ctor(System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: CollectionBase(Int32)\n  nameWithType: CollectionBase.CollectionBase(Int32)\n  fullName: System.Collections.CollectionBase.CollectionBase(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.CollectionBase.Capacity\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: Capacity\n  nameWithType: CollectionBase.Capacity\n  fullName: System.Collections.CollectionBase.Capacity\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.CollectionBase.Clear\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: Clear()\n  nameWithType: CollectionBase.Clear()\n  fullName: System.Collections.CollectionBase.Clear()\n- uid: System.Collections.CollectionBase.Count\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: Count\n  nameWithType: CollectionBase.Count\n  fullName: System.Collections.CollectionBase.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.CollectionBase.GetEnumerator\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: CollectionBase.GetEnumerator()\n  fullName: System.Collections.CollectionBase.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.CollectionBase.InnerList\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: InnerList\n  nameWithType: CollectionBase.InnerList\n  fullName: System.Collections.CollectionBase.InnerList\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Collections.CollectionBase.List\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: List\n  nameWithType: CollectionBase.List\n  fullName: System.Collections.CollectionBase.List\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Collections.CollectionBase.OnClear\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnClear()\n  nameWithType: CollectionBase.OnClear()\n  fullName: System.Collections.CollectionBase.OnClear()\n- uid: System.Collections.CollectionBase.OnClearComplete\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnClearComplete()\n  nameWithType: CollectionBase.OnClearComplete()\n  fullName: System.Collections.CollectionBase.OnClearComplete()\n- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnInsert(Int32,Object)\n  nameWithType: CollectionBase.OnInsert(Int32,Object)\n  fullName: System.Collections.CollectionBase.OnInsert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnInsertComplete(Int32,Object)\n  nameWithType: CollectionBase.OnInsertComplete(Int32,Object)\n  fullName: System.Collections.CollectionBase.OnInsertComplete(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnRemove(Int32,Object)\n  nameWithType: CollectionBase.OnRemove(Int32,Object)\n  fullName: System.Collections.CollectionBase.OnRemove(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnRemoveComplete(Int32,Object)\n  nameWithType: CollectionBase.OnRemoveComplete(Int32,Object)\n  fullName: System.Collections.CollectionBase.OnRemoveComplete(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnSet(Int32,Object,Object)\n  nameWithType: CollectionBase.OnSet(Int32,Object,Object)\n  fullName: System.Collections.CollectionBase.OnSet(Int32,Object,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnSetComplete(Int32,Object,Object)\n  nameWithType: CollectionBase.OnSetComplete(Int32,Object,Object)\n  fullName: System.Collections.CollectionBase.OnSetComplete(Int32,Object,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.OnValidate(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: OnValidate(Object)\n  nameWithType: CollectionBase.OnValidate(Object)\n  fullName: System.Collections.CollectionBase.OnValidate(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: CollectionBase.RemoveAt(Int32)\n  fullName: System.Collections.CollectionBase.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: CollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: CollectionBase.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.CollectionBase.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: CollectionBase.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.CollectionBase.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: CollectionBase.System.Collections.IList.Add(Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: CollectionBase.System.Collections.IList.Contains(Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: CollectionBase.System.Collections.IList.IndexOf(Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: CollectionBase.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: CollectionBase.System.Collections.IList.IsFixedSize\n  fullName: System.Collections.CollectionBase.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: CollectionBase.System.Collections.IList.IsReadOnly\n  fullName: System.Collections.CollectionBase.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: CollectionBase.System.Collections.IList.Item(Int32)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)\n  parent: System.Collections.CollectionBase\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: CollectionBase.System.Collections.IList.Remove(Object)\n  fullName: System.Collections.CollectionBase.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}