{"nodes":[{"pos":[1620,1636],"content":"ImportDefinition","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportDefinition","pos":[0,16]}]},{"pos":[2366,2384],"content":"ImportDefinition()","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportDefinition()","pos":[0,18]}]},{"pos":[3439,3540],"content":"ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportDefinition(Expression&lt;Func&lt;ExportDefinition,Boolean&gt;&gt;,String,ImportCardinality,Boolean,Boolean)","pos":[0,101],"source":"ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)"}]},{"pos":[4485,4519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4588,4622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4739,4773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4845,4879],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4951,4985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5828,5956],"content":"ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportDefinition(Expression&lt;Func&lt;ExportDefinition,Boolean&gt;&gt;,String,ImportCardinality,Boolean,Boolean,IDictionary&lt;String,Object&gt;)","pos":[0,128],"source":"ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)"}]},{"pos":[7019,7053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7122,7156],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7273,7307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7379,7413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7485,7519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7638,7672],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7921,7932],"content":"Cardinality","needQuote":true,"needEscape":true,"nodes":[{"content":"Cardinality","pos":[0,11]}]},{"pos":[8419,8453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8700,8710],"content":"Constraint","needQuote":true,"needEscape":true,"nodes":[{"content":"Constraint","pos":[0,10]}]},{"pos":[9303,9337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9588,9600],"content":"ContractName","needQuote":true,"needEscape":true,"nodes":[{"content":"ContractName","pos":[0,12]}]},{"pos":[9985,10019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10418,10459],"content":"IsConstraintSatisfiedBy(ExportDefinition)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsConstraintSatisfiedBy(ExportDefinition)","pos":[0,41]}]},{"pos":[11061,11095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11154,11188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11443,11457],"content":"IsPrerequisite","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrerequisite","pos":[0,14]}]},{"pos":[11847,11881],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12136,12150],"content":"IsRecomposable","needQuote":true,"needEscape":true,"nodes":[{"content":"IsRecomposable","pos":[0,14]}]},{"pos":[12540,12574],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12817,12825],"content":"Metadata","needQuote":true,"needEscape":true,"nodes":[{"content":"Metadata","pos":[0,8]}]},{"pos":[13299,13333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13576,13586],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13976,14010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14121,14134],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[14310,14328],"content":"ImportDefinition()","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportDefinition()","pos":[0,18]}]},{"pos":[14883,14984],"content":"ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportDefinition(Expression&lt;Func&lt;ExportDefinition,Boolean&gt;&gt;,String,ImportCardinality,Boolean,Boolean)","pos":[0,101],"source":"ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)"}]},{"pos":[15491,15533],"content":"Expression<Func<ExportDefinition,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;ExportDefinition,Boolean&gt;&gt;","pos":[0,42],"source":"Expression<Func<ExportDefinition,Boolean>>"}]},{"pos":[15797,15803],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16006,16023],"content":"ImportCardinality","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportCardinality","pos":[0,17]}]},{"pos":[16200,16207],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16326,16333],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16862,16990],"content":"ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportDefinition(Expression&lt;Func&lt;ExportDefinition,Boolean&gt;&gt;,String,ImportCardinality,Boolean,Boolean,IDictionary&lt;String,Object&gt;)","pos":[0,128],"source":"ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)"}]},{"pos":[17551,17593],"content":"Expression<Func<ExportDefinition,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;ExportDefinition,Boolean&gt;&gt;","pos":[0,42],"source":"Expression<Func<ExportDefinition,Boolean>>"}]},{"pos":[17857,17863],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18066,18083],"content":"ImportCardinality","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportCardinality","pos":[0,17]}]},{"pos":[18260,18267],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18386,18393],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18585,18611],"content":"IDictionary<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;String,Object&gt;","pos":[0,26],"source":"IDictionary<String,Object>"}]},{"pos":[18916,18927],"content":"Cardinality","needQuote":true,"needEscape":true,"nodes":[{"content":"Cardinality","pos":[0,11]}]},{"pos":[19212,19229],"content":"ImportCardinality","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportCardinality","pos":[0,17]}]},{"pos":[19519,19529],"content":"Constraint","needQuote":true,"needEscape":true,"nodes":[{"content":"Constraint","pos":[0,10]}]},{"pos":[19854,19896],"content":"Expression<Func<ExportDefinition,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;ExportDefinition,Boolean&gt;&gt;","pos":[0,42],"source":"Expression<Func<ExportDefinition,Boolean>>"}]},{"pos":[20276,20288],"content":"ContractName","needQuote":true,"needEscape":true,"nodes":[{"content":"ContractName","pos":[0,12]}]},{"pos":[20488,20494],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20800,20841],"content":"IsConstraintSatisfiedBy(ExportDefinition)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsConstraintSatisfiedBy(ExportDefinition)","pos":[0,41]}]},{"pos":[21100,21107],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21311,21327],"content":"ExportDefinition","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportDefinition","pos":[0,16]}]},{"pos":[21619,21633],"content":"IsPrerequisite","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrerequisite","pos":[0,14]}]},{"pos":[21838,21845],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22081,22095],"content":"IsRecomposable","needQuote":true,"needEscape":true,"nodes":[{"content":"IsRecomposable","pos":[0,14]}]},{"pos":[22300,22307],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22537,22545],"content":"Metadata","needQuote":true,"needEscape":true,"nodes":[{"content":"Metadata","pos":[0,8]}]},{"pos":[22811,22837],"content":"IDictionary<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;String,Object&gt;","pos":[0,26],"source":"IDictionary<String,Object>"}]},{"pos":[23139,23149],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[23345,23351],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition\n  id: ImportDefinition\n  children:\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.ToString\n  langs:\n  - csharp\n  name: ImportDefinition\n  nameWithType: ImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition\n  type: Class\n  syntax:\n    content: public class ImportDefinition\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: ImportDefinition()\n  nameWithType: ImportDefinition.ImportDefinition()\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ImportDefinition()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: protected ImportDefinition ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)'\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)\n  nameWithType: ImportDefinition.ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public ImportDefinition (System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Primitives.ExportDefinition,bool>> constraint, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite);\n    parameters:\n    - id: constraint\n      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}\n      description: Parameter description to be filled\n    - id: contractName\n      type: System.String\n      description: Parameter description to be filled\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: Parameter description to be filled\n    - id: isRecomposable\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: isPrerequisite\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})'\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)\n  nameWithType: ImportDefinition.ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public ImportDefinition (System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Primitives.ExportDefinition,bool>> constraint, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.Collections.Generic.IDictionary<string,object> metadata);\n    parameters:\n    - id: constraint\n      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}\n      description: Parameter description to be filled\n    - id: contractName\n      type: System.String\n      description: Parameter description to be filled\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: Parameter description to be filled\n    - id: isRecomposable\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: isPrerequisite\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality\n  id: Cardinality\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: Cardinality\n  nameWithType: ImportDefinition.Cardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public virtual System.ComponentModel.Composition.Primitives.ImportCardinality Cardinality { get; }\n    return:\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint\n  id: Constraint\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: Constraint\n  nameWithType: ImportDefinition.Constraint\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public virtual System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Primitives.ExportDefinition,bool>> Constraint { get; }\n    return:\n      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName\n  id: ContractName\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: ContractName\n  nameWithType: ImportDefinition.ContractName\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public virtual string ContractName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  id: IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: IsConstraintSatisfiedBy(ExportDefinition)\n  nameWithType: ImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public virtual bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);\n    parameters:\n    - id: exportDefinition\n      type: System.ComponentModel.Composition.Primitives.ExportDefinition\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite\n  id: IsPrerequisite\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: IsPrerequisite\n  nameWithType: ImportDefinition.IsPrerequisite\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public virtual bool IsPrerequisite { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable\n  id: IsRecomposable\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: IsRecomposable\n  nameWithType: ImportDefinition.IsRecomposable\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public virtual bool IsRecomposable { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata\n  id: Metadata\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: Metadata\n  nameWithType: ImportDefinition.Metadata\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.ToString\n  id: ToString\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ImportDefinition.ToString()\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ToString()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: ImportDefinition()\n  nameWithType: ImportDefinition.ImportDefinition()\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ImportDefinition()\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)\n  nameWithType: ImportDefinition.ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean)\n- uid: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ExportDefinition,Boolean>>\n  nameWithType: Expression<Func<ExportDefinition,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Primitives.ImportCardinality\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportCardinality\n  nameWithType: ImportCardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)\n  nameWithType: ImportDefinition.ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ImportDefinition(Expression<Func<ExportDefinition,Boolean>>,String,ImportCardinality,Boolean,Boolean,IDictionary<String,Object>)\n- uid: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ExportDefinition,Boolean>>\n  nameWithType: Expression<Func<ExportDefinition,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Primitives.ImportCardinality\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportCardinality\n  nameWithType: ImportCardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: Cardinality\n  nameWithType: ImportDefinition.Cardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality\n- uid: System.ComponentModel.Composition.Primitives.ImportCardinality\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportCardinality\n  nameWithType: ImportCardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: Constraint\n  nameWithType: ImportDefinition.Constraint\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint\n- uid: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ExportDefinition,Boolean>>\n  nameWithType: Expression<Func<ExportDefinition,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: ContractName\n  nameWithType: ImportDefinition.ContractName\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: IsConstraintSatisfiedBy(ExportDefinition)\n  nameWithType: ImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ExportDefinition\n  nameWithType: ExportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ExportDefinition\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: IsPrerequisite\n  nameWithType: ImportDefinition.IsPrerequisite\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: IsRecomposable\n  nameWithType: ImportDefinition.IsRecomposable\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: Metadata\n  nameWithType: ImportDefinition.Metadata\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.ToString\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: ToString()\n  nameWithType: ImportDefinition.ToString()\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}