{"nodes":[{"pos":[583,595],"content":"EditingScope","needQuote":true,"needEscape":true,"nodes":[{"content":"EditingScope","pos":[0,12]}]},{"pos":[1791,1804],"content":"CanComplete()","needQuote":true,"needEscape":true,"nodes":[{"content":"CanComplete()","pos":[0,13]}]},{"pos":[2178,2212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2429,2436],"content":"Changes","needQuote":true,"needEscape":true,"nodes":[{"content":"Changes","pos":[0,7]}]},{"pos":[2904,2938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3179,3198],"content":"HasEffectiveChanges","needQuote":true,"needEscape":true,"nodes":[{"content":"HasEffectiveChanges","pos":[0,19]}]},{"pos":[3568,3602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3825,3837],"content":"OnComplete()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnComplete()","pos":[0,12]}]},{"pos":[4410,4432],"content":"OnException(Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnException(Exception)","pos":[0,22]}]},{"pos":[4834,4868],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4927,4961],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5212,5229],"content":"OnRevert(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnRevert(Boolean)","pos":[0,17]}]},{"pos":[5629,5663],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5815,5869],"content":"System.Activities.Presentation.Model.ModelEditingScope","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.Presentation.Model.ModelEditingScope","pos":[0,54]}]},{"pos":[6027,6040],"content":"CanComplete()","needQuote":true,"needEscape":true,"nodes":[{"content":"CanComplete()","pos":[0,13]}]},{"pos":[6227,6234],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6439,6446],"content":"Changes","needQuote":true,"needEscape":true,"nodes":[{"content":"Changes","pos":[0,7]}]},{"pos":[6703,6715],"content":"List<ph id=\"ph1\">&lt;Change&gt;</ph>","needQuote":true,"needEscape":true,"source":"List<Change>"},{"pos":[6999,7018],"content":"HasEffectiveChanges","needQuote":true,"needEscape":true,"nodes":[{"content":"HasEffectiveChanges","pos":[0,19]}]},{"pos":[7217,7224],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7432,7444],"content":"OnComplete()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnComplete()","pos":[0,12]}]},{"pos":[7737,7759],"content":"OnException(Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnException(Exception)","pos":[0,22]}]},{"pos":[7964,7971],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8092,8101],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[8327,8344],"content":"OnRevert(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnRevert(Boolean)","pos":[0,17]}]},{"pos":[8539,8546],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Model.EditingScope\n  id: EditingScope\n  children:\n  - System.Activities.Presentation.Model.EditingScope.CanComplete\n  - System.Activities.Presentation.Model.EditingScope.Changes\n  - System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges\n  - System.Activities.Presentation.Model.EditingScope.OnComplete\n  - System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)\n  - System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)\n  langs:\n  - csharp\n  name: EditingScope\n  nameWithType: EditingScope\n  fullName: System.Activities.Presentation.Model.EditingScope\n  type: Class\n  syntax:\n    content: 'public class EditingScope : System.Activities.Presentation.Model.ModelEditingScope'\n  inheritance:\n  - System.Object\n  - System.Activities.Presentation.Model.ModelEditingScope\n  implements: []\n  inheritedMembers:\n  - System.Activities.Presentation.Model.ModelEditingScope.Complete\n  - System.Activities.Presentation.Model.ModelEditingScope.Description\n  - System.Activities.Presentation.Model.ModelEditingScope.Dispose\n  - System.Activities.Presentation.Model.ModelEditingScope.Dispose(System.Boolean)\n  - System.Activities.Presentation.Model.ModelEditingScope.Revert\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.EditingScope.CanComplete\n  id: CanComplete\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: CanComplete()\n  nameWithType: EditingScope.CanComplete()\n  fullName: System.Activities.Presentation.Model.EditingScope.CanComplete()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: protected override bool CanComplete ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.EditingScope.Changes\n  id: Changes\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: Changes\n  nameWithType: EditingScope.Changes\n  fullName: System.Activities.Presentation.Model.EditingScope.Changes\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public System.Collections.Generic.List<System.Activities.Presentation.Model.Change> Changes { get; }\n    return:\n      type: System.Collections.Generic.List{System.Activities.Presentation.Model.Change}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges\n  id: HasEffectiveChanges\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: HasEffectiveChanges\n  nameWithType: EditingScope.HasEffectiveChanges\n  fullName: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public bool HasEffectiveChanges { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.EditingScope.OnComplete\n  id: OnComplete\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: OnComplete()\n  nameWithType: EditingScope.OnComplete()\n  fullName: System.Activities.Presentation.Model.EditingScope.OnComplete()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: protected override void OnComplete ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)\n  id: OnException(System.Exception)\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: OnException(Exception)\n  nameWithType: EditingScope.OnException(Exception)\n  fullName: System.Activities.Presentation.Model.EditingScope.OnException(Exception)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: protected override bool OnException (Exception e);\n    parameters:\n    - id: e\n      type: System.Exception\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)\n  id: OnRevert(System.Boolean)\n  parent: System.Activities.Presentation.Model.EditingScope\n  langs:\n  - csharp\n  name: OnRevert(Boolean)\n  nameWithType: EditingScope.OnRevert(Boolean)\n  fullName: System.Activities.Presentation.Model.EditingScope.OnRevert(Boolean)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: protected override void OnRevert (bool finalizing);\n    parameters:\n    - id: finalizing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.Presentation.Model.ModelEditingScope\n  isExternal: false\n  name: System.Activities.Presentation.Model.ModelEditingScope\n- uid: System.Activities.Presentation.Model.EditingScope.CanComplete\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: CanComplete()\n  nameWithType: EditingScope.CanComplete()\n  fullName: System.Activities.Presentation.Model.EditingScope.CanComplete()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Model.EditingScope.Changes\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: Changes\n  nameWithType: EditingScope.Changes\n  fullName: System.Activities.Presentation.Model.EditingScope.Changes\n- uid: System.Collections.Generic.List{System.Activities.Presentation.Model.Change}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: List<Change>\n  nameWithType: List<Change>\n  fullName: System.Collections.Generic.List<System.Activities.Presentation.Model.Change>\n- uid: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: HasEffectiveChanges\n  nameWithType: EditingScope.HasEffectiveChanges\n  fullName: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Model.EditingScope.OnComplete\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: OnComplete()\n  nameWithType: EditingScope.OnComplete()\n  fullName: System.Activities.Presentation.Model.EditingScope.OnComplete()\n- uid: System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: OnException(Exception)\n  nameWithType: EditingScope.OnException(Exception)\n  fullName: System.Activities.Presentation.Model.EditingScope.OnException(Exception)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)\n  parent: System.Activities.Presentation.Model.EditingScope\n  isExternal: false\n  name: OnRevert(Boolean)\n  nameWithType: EditingScope.OnRevert(Boolean)\n  fullName: System.Activities.Presentation.Model.EditingScope.OnRevert(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}