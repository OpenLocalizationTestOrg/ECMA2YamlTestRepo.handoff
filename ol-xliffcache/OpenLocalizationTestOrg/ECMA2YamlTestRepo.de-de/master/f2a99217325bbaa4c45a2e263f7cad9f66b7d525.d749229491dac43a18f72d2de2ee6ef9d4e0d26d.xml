{"nodes":[{"pos":[1141,1160],"content":"HostSecurityManager","needQuote":true,"needEscape":true,"nodes":[{"content":"HostSecurityManager","pos":[0,19]}]},{"pos":[1953,1974],"content":"HostSecurityManager()","needQuote":true,"needEscape":true,"nodes":[{"content":"HostSecurityManager()","pos":[0,21]}]},{"pos":[2692,2756],"content":"DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)","pos":[0,64]}]},{"pos":[3413,3447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3539,3573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3666,3700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3784,3818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4017,4029],"content":"DomainPolicy","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainPolicy","pos":[0,12]}]},{"pos":[4386,4420],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4605,4610],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[4962,4996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5247,5278],"content":"GenerateAppDomainEvidence(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateAppDomainEvidence(Type)","pos":[0,31]}]},{"pos":[5701,5735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5815,5849],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6152,6191],"content":"GenerateAssemblyEvidence(Type,Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateAssemblyEvidence(Type,Assembly)","pos":[0,39]}]},{"pos":[6666,6700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6778,6812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6892,6926],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7175,7214],"content":"GetHostSuppliedAppDomainEvidenceTypes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHostSuppliedAppDomainEvidenceTypes()","pos":[0,39]}]},{"pos":[7613,7647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7950,7996],"content":"GetHostSuppliedAssemblyEvidenceTypes(Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHostSuppliedAssemblyEvidenceTypes(Assembly)","pos":[0,46]}]},{"pos":[8460,8494],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8552,8586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8875,8909],"content":"ProvideAppDomainEvidence(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ProvideAppDomainEvidence(Evidence)","pos":[0,34]}]},{"pos":[9382,9416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9492,9526],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9867,9909],"content":"ProvideAssemblyEvidence(Assembly,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ProvideAssemblyEvidence(Assembly,Evidence)","pos":[0,42]}]},{"pos":[10436,10470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10558,10592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10668,10702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10969,10992],"content":"ResolvePolicy(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicy(Evidence)","pos":[0,23]}]},{"pos":[11420,11454],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11528,11562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11673,11686],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[11810,11831],"content":"HostSecurityManager()","needQuote":true,"needEscape":true,"nodes":[{"content":"HostSecurityManager()","pos":[0,21]}]},{"pos":[12211,12275],"content":"DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)","pos":[0,64]}]},{"pos":[12598,12614],"content":"ApplicationTrust","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationTrust","pos":[0,16]}]},{"pos":[12800,12808],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[12978,12986],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[13167,13186],"content":"TrustManagerContext","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustManagerContext","pos":[0,19]}]},{"pos":[13408,13420],"content":"DomainPolicy","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainPolicy","pos":[0,12]}]},{"pos":[13634,13645],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]},{"pos":[13844,13849],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[14050,14076],"content":"HostSecurityManagerOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"HostSecurityManagerOptions","pos":[0,26]}]},{"pos":[14331,14362],"content":"GenerateAppDomainEvidence(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateAppDomainEvidence(Type)","pos":[0,31]}]},{"pos":[14615,14627],"content":"EvidenceBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EvidenceBase","pos":[0,12]}]},{"pos":[14769,14773],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[15001,15040],"content":"GenerateAssemblyEvidence(Type,Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateAssemblyEvidence(Type,Assembly)","pos":[0,39]}]},{"pos":[15309,15321],"content":"EvidenceBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EvidenceBase","pos":[0,12]}]},{"pos":[15463,15467],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[15603,15611],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[15831,15870],"content":"GetHostSuppliedAppDomainEvidenceTypes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHostSuppliedAppDomainEvidenceTypes()","pos":[0,39]}]},{"pos":[16099,16103],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[16333,16379],"content":"GetHostSuppliedAssemblyEvidenceTypes(Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHostSuppliedAssemblyEvidenceTypes(Assembly)","pos":[0,46]}]},{"pos":[16622,16626],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[16764,16772],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[17012,17046],"content":"ProvideAppDomainEvidence(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ProvideAppDomainEvidence(Evidence)","pos":[0,34]}]},{"pos":[17301,17309],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[17479,17487],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[17758,17800],"content":"ProvideAssemblyEvidence(Assembly,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ProvideAssemblyEvidence(Assembly,Evidence)","pos":[0,42]}]},{"pos":[18071,18079],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[18239,18247],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[18412,18420],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[18654,18677],"content":"ResolvePolicy(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicy(Evidence)","pos":[0,23]}]},{"pos":[18901,18914],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[19087,19095],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.HostSecurityManager\n  id: HostSecurityManager\n  children:\n  - System.Security.HostSecurityManager.#ctor\n  - System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)\n  - System.Security.HostSecurityManager.DomainPolicy\n  - System.Security.HostSecurityManager.Flags\n  - System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)\n  - System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)\n  - System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes\n  - System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)\n  - System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)\n  - System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)\n  - System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  langs:\n  - csharp\n  name: HostSecurityManager\n  nameWithType: HostSecurityManager\n  fullName: System.Security.HostSecurityManager\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Security.SecurityCritical]\n\n      public class HostSecurityManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.#ctor\n  id: '#ctor'\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: HostSecurityManager()\n  nameWithType: HostSecurityManager.HostSecurityManager()\n  fullName: System.Security.HostSecurityManager.HostSecurityManager()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public HostSecurityManager ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)\n  id: DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)\n  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)\n  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual System.Security.Policy.ApplicationTrust DetermineApplicationTrust (System.Security.Policy.Evidence applicationEvidence, System.Security.Policy.Evidence activatorEvidence, System.Security.Policy.TrustManagerContext context);\n    parameters:\n    - id: applicationEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: activatorEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: context\n      type: System.Security.Policy.TrustManagerContext\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.ApplicationTrust\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.DomainPolicy\n  id: DomainPolicy\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: DomainPolicy\n  nameWithType: HostSecurityManager.DomainPolicy\n  fullName: System.Security.HostSecurityManager.DomainPolicy\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual System.Security.Policy.PolicyLevel DomainPolicy { get; }\n    return:\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.Flags\n  id: Flags\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: HostSecurityManager.Flags\n  fullName: System.Security.HostSecurityManager.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual System.Security.HostSecurityManagerOptions Flags { get; }\n    return:\n      type: System.Security.HostSecurityManagerOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)\n  id: GenerateAppDomainEvidence(System.Type)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: GenerateAppDomainEvidence(Type)\n  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)\n  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual System.Security.Policy.EvidenceBase GenerateAppDomainEvidence (Type evidenceType);\n    parameters:\n    - id: evidenceType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.EvidenceBase\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)\n  id: GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: GenerateAssemblyEvidence(Type,Assembly)\n  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)\n  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual System.Security.Policy.EvidenceBase GenerateAssemblyEvidence (Type evidenceType, System.Reflection.Assembly assembly);\n    parameters:\n    - id: evidenceType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.EvidenceBase\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes\n  id: GetHostSuppliedAppDomainEvidenceTypes\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: GetHostSuppliedAppDomainEvidenceTypes()\n  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()\n  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)\n  id: GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)\n  id: ProvideAppDomainEvidence(System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: ProvideAppDomainEvidence(Evidence)\n  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)\n  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual System.Security.Policy.Evidence ProvideAppDomainEvidence (System.Security.Policy.Evidence inputEvidence);\n    parameters:\n    - id: inputEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)\n  id: ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: ProvideAssemblyEvidence(Assembly,Evidence)\n  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)\n  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual System.Security.Policy.Evidence ProvideAssemblyEvidence (System.Reflection.Assembly loadedAssembly, System.Security.Policy.Evidence inputEvidence);\n    parameters:\n    - id: loadedAssembly\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n    - id: inputEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  id: ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicy(Evidence)\n  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)\n  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public virtual System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.HostSecurityManager.#ctor\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: HostSecurityManager()\n  nameWithType: HostSecurityManager.HostSecurityManager()\n  fullName: System.Security.HostSecurityManager.HostSecurityManager()\n- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)\n  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)\n  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)\n- uid: System.Security.Policy.ApplicationTrust\n  parent: System.Security.Policy\n  isExternal: false\n  name: ApplicationTrust\n  nameWithType: ApplicationTrust\n  fullName: System.Security.Policy.ApplicationTrust\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.TrustManagerContext\n  parent: System.Security.Policy\n  isExternal: false\n  name: TrustManagerContext\n  nameWithType: TrustManagerContext\n  fullName: System.Security.Policy.TrustManagerContext\n- uid: System.Security.HostSecurityManager.DomainPolicy\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: DomainPolicy\n  nameWithType: HostSecurityManager.DomainPolicy\n  fullName: System.Security.HostSecurityManager.DomainPolicy\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.HostSecurityManager.Flags\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: Flags\n  nameWithType: HostSecurityManager.Flags\n  fullName: System.Security.HostSecurityManager.Flags\n- uid: System.Security.HostSecurityManagerOptions\n  parent: System.Security\n  isExternal: false\n  name: HostSecurityManagerOptions\n  nameWithType: HostSecurityManagerOptions\n  fullName: System.Security.HostSecurityManagerOptions\n- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GenerateAppDomainEvidence(Type)\n  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)\n  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)\n- uid: System.Security.Policy.EvidenceBase\n  parent: System.Security.Policy\n  isExternal: false\n  name: EvidenceBase\n  nameWithType: EvidenceBase\n  fullName: System.Security.Policy.EvidenceBase\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GenerateAssemblyEvidence(Type,Assembly)\n  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)\n  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)\n- uid: System.Security.Policy.EvidenceBase\n  parent: System.Security.Policy\n  isExternal: false\n  name: EvidenceBase\n  nameWithType: EvidenceBase\n  fullName: System.Security.Policy.EvidenceBase\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GetHostSuppliedAppDomainEvidenceTypes()\n  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()\n  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: ProvideAppDomainEvidence(Evidence)\n  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)\n  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: ProvideAssemblyEvidence(Assembly,Evidence)\n  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)\n  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Security.HostSecurityManager\n  isExternal: false\n  name: ResolvePolicy(Evidence)\n  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)\n  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n"}