{"nodes":[{"pos":[1363,1376],"content":"ASCIIEncoding","needQuote":true,"needEscape":true,"nodes":[{"content":"ASCIIEncoding","pos":[0,13]}]},{"pos":[4211,4226],"content":"ASCIIEncoding()","needQuote":true,"needEscape":true,"nodes":[{"content":"ASCIIEncoding()","pos":[0,15]}]},{"pos":[4674,4694],"content":"GetByteCount(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(String)","pos":[0,20]}]},{"pos":[5021,5055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5112,5146],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5431,5456],"content":"GetByteCount(Char*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char*,Int32)","pos":[0,25]}]},{"pos":[5802,5836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5897,5931],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5988,6022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6335,6367],"content":"GetByteCount(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char[],Int32,Int32)","pos":[0,32]}]},{"pos":[6740,6774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6835,6869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6930,6964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7021,7055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7384,7417],"content":"GetBytes(Char<bpt id=\"p1\">*</bpt>,Int32,Byte<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetBytes(Char*,Int32,Byte*,Int32)"},{"pos":[7807,7841],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7906,7940],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8001,8035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8100,8134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8191,8225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8580,8621],"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[9045,9079],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9144,9178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9243,9277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9339,9373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9438,9472],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9529,9563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9918,9959],"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[10383,10417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10482,10516],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10581,10615],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10677,10711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10776,10810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10867,10901],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11182,11207],"content":"GetCharCount(Byte*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte*,Int32)","pos":[0,25]}]},{"pos":[11553,11587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11648,11682],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11739,11773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12086,12118],"content":"GetCharCount(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte[],Int32,Int32)","pos":[0,32]}]},{"pos":[12491,12525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12586,12620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12681,12715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12772,12806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13135,13168],"content":"GetChars(Byte<bpt id=\"p1\">*</bpt>,Int32,Char<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetChars(Byte*,Int32,Char*,Int32)"},{"pos":[13558,13592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13657,13691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13752,13786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13851,13885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13942,13976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14331,14372],"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","pos":[0,41]}]},{"pos":[14796,14830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14895,14929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14994,15028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15090,15124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15189,15223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15280,15314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15537,15549],"content":"GetDecoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDecoder()","pos":[0,12]}]},{"pos":[15867,15901],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16076,16088],"content":"GetEncoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoder()","pos":[0,12]}]},{"pos":[16406,16440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16653,16675],"content":"GetMaxByteCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxByteCount(Int32)","pos":[0,22]}]},{"pos":[17013,17047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17104,17138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17351,17373],"content":"GetMaxCharCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxCharCount(Int32)","pos":[0,22]}]},{"pos":[17711,17745],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17802,17836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18091,18120],"content":"GetString(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte[],Int32,Int32)","pos":[0,29]}]},{"pos":[18495,18529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18594,18628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18693,18727],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18785,18819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18998,19010],"content":"IsSingleByte","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSingleByte","pos":[0,12]}]},{"pos":[19298,19332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19450,19470],"content":"System.Text.Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Text.Encoding","pos":[0,20]}]},{"pos":[19574,19589],"content":"ASCIIEncoding()","needQuote":true,"needEscape":true,"nodes":[{"content":"ASCIIEncoding()","pos":[0,15]}]},{"pos":[19815,19835],"content":"GetByteCount(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(String)","pos":[0,20]}]},{"pos":[20011,20016],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20130,20136],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20323,20348],"content":"GetByteCount(Char*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char*,Int32)","pos":[0,25]}]},{"pos":[20534,20539],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20652,20657],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20856,20888],"content":"GetByteCount(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char[],Int32,Int32)","pos":[0,32]}]},{"pos":[21088,21093],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21205,21209],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[21322,21327],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21440,21445],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21652,21685],"content":"GetBytes(Char<bpt id=\"p1\">*</bpt>,Int32,Byte<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetBytes(Char*,Int32,Byte*,Int32)"},{"pos":[21887,21892],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22005,22010],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22123,22128],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22350,22391],"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[22609,22614],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22726,22730],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[22843,22848],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22961,22966],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23078,23082],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[23195,23200],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23422,23463],"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[23681,23686],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23800,23806],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23921,23926],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24039,24044],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24156,24160],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[24273,24278],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24463,24488],"content":"GetCharCount(Byte*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte*,Int32)","pos":[0,25]}]},{"pos":[24674,24679],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24792,24797],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24996,25028],"content":"GetCharCount(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte[],Int32,Int32)","pos":[0,32]}]},{"pos":[25228,25233],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25345,25349],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[25462,25467],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25580,25585],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25792,25825],"content":"GetChars(Byte<bpt id=\"p1\">*</bpt>,Int32,Char<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetChars(Byte*,Int32,Char*,Int32)"},{"pos":[26027,26032],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26145,26150],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26263,26268],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26490,26531],"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","pos":[0,41]}]},{"pos":[26749,26754],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26866,26870],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[26983,26988],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27101,27106],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27218,27222],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[27335,27340],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27496,27508],"content":"GetDecoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDecoder()","pos":[0,12]}]},{"pos":[27680,27687],"content":"Decoder","needQuote":true,"needEscape":true,"nodes":[{"content":"Decoder","pos":[0,7]}]},{"pos":[27852,27864],"content":"GetEncoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoder()","pos":[0,12]}]},{"pos":[28036,28043],"content":"Encoder","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoder","pos":[0,7]}]},{"pos":[28227,28249],"content":"GetMaxByteCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxByteCount(Int32)","pos":[0,22]}]},{"pos":[28429,28434],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28547,28552],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28727,28749],"content":"GetMaxCharCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxCharCount(Int32)","pos":[0,22]}]},{"pos":[28929,28934],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29047,29052],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29248,29277],"content":"GetString(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte[],Int32,Int32)","pos":[0,29]}]},{"pos":[29472,29478],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29592,29596],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[29709,29714],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29827,29832],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29990,30002],"content":"IsSingleByte","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSingleByte","pos":[0,12]}]},{"pos":[30164,30171],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.ASCIIEncoding\n  id: ASCIIEncoding\n  children:\n  - System.Text.ASCIIEncoding.#ctor\n  - System.Text.ASCIIEncoding.GetByteCount(System.String)\n  - System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)\n  - System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)\n  - System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  - System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)\n  - System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)\n  - System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  - System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  - System.Text.ASCIIEncoding.GetDecoder\n  - System.Text.ASCIIEncoding.GetEncoder\n  - System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)\n  - System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)\n  - System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)\n  - System.Text.ASCIIEncoding.IsSingleByte\n  langs:\n  - csharp\n  name: ASCIIEncoding\n  nameWithType: ASCIIEncoding\n  fullName: System.Text.ASCIIEncoding\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ASCIIEncoding : System.Text.Encoding\n  inheritance:\n  - System.Object\n  - System.Text.Encoding\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Text.Encoding.ASCII\n  - System.Text.Encoding.BigEndianUnicode\n  - System.Text.Encoding.BodyName\n  - System.Text.Encoding.Clone\n  - System.Text.Encoding.CodePage\n  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])\n  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)\n  - System.Text.Encoding.DecoderFallback\n  - System.Text.Encoding.Default\n  - System.Text.Encoding.EncoderFallback\n  - System.Text.Encoding.EncodingName\n  - System.Text.Encoding.Equals(System.Object)\n  - System.Text.Encoding.GetByteCount(System.Char[])\n  - System.Text.Encoding.GetBytes(System.Char[])\n  - System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)\n  - System.Text.Encoding.GetBytes(System.String)\n  - System.Text.Encoding.GetCharCount(System.Byte[])\n  - System.Text.Encoding.GetChars(System.Byte[])\n  - System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)\n  - System.Text.Encoding.GetEncoding(System.Int32)\n  - System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  - System.Text.Encoding.GetEncoding(System.String)\n  - System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  - System.Text.Encoding.GetEncodings\n  - System.Text.Encoding.GetHashCode\n  - System.Text.Encoding.GetPreamble\n  - System.Text.Encoding.GetString(System.Byte*,System.Int32)\n  - System.Text.Encoding.GetString(System.Byte[])\n  - System.Text.Encoding.HeaderName\n  - System.Text.Encoding.IsAlwaysNormalized\n  - System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)\n  - System.Text.Encoding.IsBrowserDisplay\n  - System.Text.Encoding.IsBrowserSave\n  - System.Text.Encoding.IsMailNewsDisplay\n  - System.Text.Encoding.IsMailNewsSave\n  - System.Text.Encoding.IsReadOnly\n  - System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)\n  - System.Text.Encoding.Unicode\n  - System.Text.Encoding.UTF32\n  - System.Text.Encoding.UTF7\n  - System.Text.Encoding.UTF8\n  - System.Text.Encoding.WebName\n  - System.Text.Encoding.WindowsCodePage\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.#ctor\n  id: '#ctor'\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: ASCIIEncoding()\n  nameWithType: ASCIIEncoding.ASCIIEncoding()\n  fullName: System.Text.ASCIIEncoding.ASCIIEncoding()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public ASCIIEncoding ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetByteCount(System.String)\n  id: GetByteCount(System.String)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetByteCount(String)\n  nameWithType: ASCIIEncoding.GetByteCount(String)\n  fullName: System.Text.ASCIIEncoding.GetByteCount(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetByteCount (string chars);\n    parameters:\n    - id: chars\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)\n  id: GetByteCount(System.Char*,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetByteCount(Char*,Int32)\n  nameWithType: ASCIIEncoding.GetByteCount(Char*,Int32)\n  fullName: System.Text.ASCIIEncoding.GetByteCount(Char*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetByteCount (char* chars, int count);\n    parameters:\n    - id: chars\n      type: System.Char*\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)\n  id: GetByteCount(System.Char[],System.Int32,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetByteCount(Char[],Int32,Int32)\n  nameWithType: ASCIIEncoding.GetByteCount(Char[],Int32,Int32)\n  fullName: System.Text.ASCIIEncoding.GetByteCount(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetByteCount (char[] chars, int index, int count);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  id: GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetBytes(Char*,Int32,Byte*,Int32)\n  nameWithType: ASCIIEncoding.GetBytes(Char*,Int32,Byte*,Int32)\n  fullName: System.Text.ASCIIEncoding.GetBytes(Char*,Int32,Byte*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);\n    parameters:\n    - id: chars\n      type: System.Char*\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  nameWithType: ASCIIEncoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  fullName: System.Text.ASCIIEncoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: charIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetBytes(String,Int32,Int32,Byte[],Int32)\n  nameWithType: ASCIIEncoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n  fullName: System.Text.ASCIIEncoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetBytes (string chars, int charIndex, int charCount, byte[] bytes, int byteIndex);\n    parameters:\n    - id: chars\n      type: System.String\n      description: Parameter description to be filled\n    - id: charIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)\n  id: GetCharCount(System.Byte*,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetCharCount(Byte*,Int32)\n  nameWithType: ASCIIEncoding.GetCharCount(Byte*,Int32)\n  fullName: System.Text.ASCIIEncoding.GetCharCount(Byte*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetCharCount (byte* bytes, int count);\n    parameters:\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetCharCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)\n  id: GetCharCount(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetCharCount(Byte[],Int32,Int32)\n  nameWithType: ASCIIEncoding.GetCharCount(Byte[],Int32,Int32)\n  fullName: System.Text.ASCIIEncoding.GetCharCount(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetCharCount (byte[] bytes, int index, int count);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetCharCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  id: GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetChars(Byte*,Int32,Char*,Int32)\n  nameWithType: ASCIIEncoding.GetChars(Byte*,Int32,Char*,Int32)\n  fullName: System.Text.ASCIIEncoding.GetChars(Byte*,Int32,Char*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);\n    parameters:\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: chars\n      type: System.Char*\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetChars*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  id: GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetChars(Byte[],Int32,Int32,Char[],Int32)\n  nameWithType: ASCIIEncoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n  fullName: System.Text.ASCIIEncoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: charIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.ASCIIEncoding.GetChars*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetDecoder\n  id: GetDecoder\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetDecoder()\n  nameWithType: ASCIIEncoding.GetDecoder()\n  fullName: System.Text.ASCIIEncoding.GetDecoder()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override System.Text.Decoder GetDecoder ();\n    parameters: []\n    return:\n      type: System.Text.Decoder\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetEncoder\n  id: GetEncoder\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetEncoder()\n  nameWithType: ASCIIEncoding.GetEncoder()\n  fullName: System.Text.ASCIIEncoding.GetEncoder()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override System.Text.Encoder GetEncoder ();\n    parameters: []\n    return:\n      type: System.Text.Encoder\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)\n  id: GetMaxByteCount(System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetMaxByteCount(Int32)\n  nameWithType: ASCIIEncoding.GetMaxByteCount(Int32)\n  fullName: System.Text.ASCIIEncoding.GetMaxByteCount(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetMaxByteCount (int charCount);\n    parameters:\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)\n  id: GetMaxCharCount(System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetMaxCharCount(Int32)\n  nameWithType: ASCIIEncoding.GetMaxCharCount(Int32)\n  fullName: System.Text.ASCIIEncoding.GetMaxCharCount(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetMaxCharCount (int byteCount);\n    parameters:\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)\n  id: GetString(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: GetString(Byte[],Int32,Int32)\n  nameWithType: ASCIIEncoding.GetString(Byte[],Int32,Int32)\n  fullName: System.Text.ASCIIEncoding.GetString(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override string GetString (byte[] bytes, int byteIndex, int byteCount);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.ASCIIEncoding.IsSingleByte\n  id: IsSingleByte\n  parent: System.Text.ASCIIEncoding\n  langs:\n  - csharp\n  name: IsSingleByte\n  nameWithType: ASCIIEncoding.IsSingleByte\n  fullName: System.Text.ASCIIEncoding.IsSingleByte\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override bool IsSingleByte { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Text.Encoding\n  isExternal: false\n  name: System.Text.Encoding\n- uid: System.Text.ASCIIEncoding.#ctor\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: ASCIIEncoding()\n  nameWithType: ASCIIEncoding.ASCIIEncoding()\n  fullName: System.Text.ASCIIEncoding.ASCIIEncoding()\n- uid: System.Text.ASCIIEncoding.GetByteCount(System.String)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetByteCount(String)\n  nameWithType: ASCIIEncoding.GetByteCount(String)\n  fullName: System.Text.ASCIIEncoding.GetByteCount(String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetByteCount(Char*,Int32)\n  nameWithType: ASCIIEncoding.GetByteCount(Char*,Int32)\n  fullName: System.Text.ASCIIEncoding.GetByteCount(Char*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetByteCount(Char[],Int32,Int32)\n  nameWithType: ASCIIEncoding.GetByteCount(Char[],Int32,Int32)\n  fullName: System.Text.ASCIIEncoding.GetByteCount(Char[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetBytes(Char*,Int32,Byte*,Int32)\n  nameWithType: ASCIIEncoding.GetBytes(Char*,Int32,Byte*,Int32)\n  fullName: System.Text.ASCIIEncoding.GetBytes(Char*,Int32,Byte*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  nameWithType: ASCIIEncoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  fullName: System.Text.ASCIIEncoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetBytes(String,Int32,Int32,Byte[],Int32)\n  nameWithType: ASCIIEncoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n  fullName: System.Text.ASCIIEncoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetCharCount(Byte*,Int32)\n  nameWithType: ASCIIEncoding.GetCharCount(Byte*,Int32)\n  fullName: System.Text.ASCIIEncoding.GetCharCount(Byte*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetCharCount(Byte[],Int32,Int32)\n  nameWithType: ASCIIEncoding.GetCharCount(Byte[],Int32,Int32)\n  fullName: System.Text.ASCIIEncoding.GetCharCount(Byte[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetChars(Byte*,Int32,Char*,Int32)\n  nameWithType: ASCIIEncoding.GetChars(Byte*,Int32,Char*,Int32)\n  fullName: System.Text.ASCIIEncoding.GetChars(Byte*,Int32,Char*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetChars(Byte[],Int32,Int32,Char[],Int32)\n  nameWithType: ASCIIEncoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n  fullName: System.Text.ASCIIEncoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetDecoder\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetDecoder()\n  nameWithType: ASCIIEncoding.GetDecoder()\n  fullName: System.Text.ASCIIEncoding.GetDecoder()\n- uid: System.Text.Decoder\n  parent: System.Text\n  isExternal: false\n  name: Decoder\n  nameWithType: Decoder\n  fullName: System.Text.Decoder\n- uid: System.Text.ASCIIEncoding.GetEncoder\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetEncoder()\n  nameWithType: ASCIIEncoding.GetEncoder()\n  fullName: System.Text.ASCIIEncoding.GetEncoder()\n- uid: System.Text.Encoder\n  parent: System.Text\n  isExternal: false\n  name: Encoder\n  nameWithType: Encoder\n  fullName: System.Text.Encoder\n- uid: System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetMaxByteCount(Int32)\n  nameWithType: ASCIIEncoding.GetMaxByteCount(Int32)\n  fullName: System.Text.ASCIIEncoding.GetMaxByteCount(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetMaxCharCount(Int32)\n  nameWithType: ASCIIEncoding.GetMaxCharCount(Int32)\n  fullName: System.Text.ASCIIEncoding.GetMaxCharCount(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: GetString(Byte[],Int32,Int32)\n  nameWithType: ASCIIEncoding.GetString(Byte[],Int32,Int32)\n  fullName: System.Text.ASCIIEncoding.GetString(Byte[],Int32,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.ASCIIEncoding.IsSingleByte\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  name: IsSingleByte\n  nameWithType: ASCIIEncoding.IsSingleByte\n  fullName: System.Text.ASCIIEncoding.IsSingleByte\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.ASCIIEncoding.GetByteCount*\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  nameWithType: ASCIIEncoding.\n- uid: System.Text.ASCIIEncoding.GetBytes*\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  nameWithType: ASCIIEncoding.\n- uid: System.Text.ASCIIEncoding.GetCharCount*\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  nameWithType: ASCIIEncoding.\n- uid: System.Text.ASCIIEncoding.GetChars*\n  parent: System.Text.ASCIIEncoding\n  isExternal: false\n  nameWithType: ASCIIEncoding.\n"}