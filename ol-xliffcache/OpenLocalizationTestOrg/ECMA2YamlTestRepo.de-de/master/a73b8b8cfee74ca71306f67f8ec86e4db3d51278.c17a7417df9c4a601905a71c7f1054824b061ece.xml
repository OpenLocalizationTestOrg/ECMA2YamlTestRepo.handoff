{"nodes":[{"pos":[5583,5591],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[6764,6774],"content":"Assembly()","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly()","pos":[0,10]}]},{"pos":[7176,7184],"content":"CodeBase","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeBase","pos":[0,8]}]},{"pos":[7462,7496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7711,7733],"content":"CreateInstance(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String)","pos":[0,22]}]},{"pos":[8068,8102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8160,8194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8494,8524],"content":"CreateInstance(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,Boolean)","pos":[0,30]}]},{"pos":[8892,8926],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8994,9028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9086,9120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9662,9742],"content":"CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,80]}]},{"pos":[10383,10417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10485,10519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10604,10638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10712,10746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10809,10843],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10926,10960],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11039,11073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11131,11165],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11473,11507],"content":"CreateQualifiedName(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateQualifiedName(String,String)","pos":[0,34]}]},{"pos":[11903,11937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12002,12036],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12094,12128],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12317,12333],"content":"CustomAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[12770,12804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12985,12997],"content":"DefinedTypes","needQuote":true,"needEscape":true,"nodes":[{"content":"DefinedTypes","pos":[0,12]}]},{"pos":[13400,13434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13611,13621],"content":"EntryPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"EntryPoint","pos":[0,10]}]},{"pos":[13942,13976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14175,14189],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14493,14527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14586,14620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14807,14822],"content":"EscapedCodeBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EscapedCodeBase","pos":[0,15]}]},{"pos":[15121,15155],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15328,15336],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[15657,15691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15874,15887],"content":"ExportedTypes","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportedTypes","pos":[0,13]}]},{"pos":[16256,16290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16463,16471],"content":"FullName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"pos":[16749,16783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16988,17005],"content":"GetAssembly(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssembly(Type)","pos":[0,17]}]},{"pos":[17342,17376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17447,17481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17674,17694],"content":"GetCallingAssembly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCallingAssembly()","pos":[0,20]}]},{"pos":[18050,18084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18311,18339],"content":"GetCustomAttributes(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[18698,18732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18792,18826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19137,19170],"content":"GetCustomAttributes(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Type,Boolean)","pos":[0,33]}]},{"pos":[19562,19596],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19661,19695],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19755,19789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20052,20077],"content":"GetCustomAttributesData()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributesData()","pos":[0,25]}]},{"pos":[20539,20573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20762,20780],"content":"GetEntryAssembly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEntryAssembly()","pos":[0,18]}]},{"pos":[21130,21164],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21361,21383],"content":"GetExecutingAssembly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExecutingAssembly()","pos":[0,22]}]},{"pos":[21745,21779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21968,21986],"content":"GetExportedTypes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExportedTypes()","pos":[0,18]}]},{"pos":[22304,22338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22539,22554],"content":"GetFile(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFile(String)","pos":[0,15]}]},{"pos":[22882,22916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22981,23015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23188,23198],"content":"GetFiles()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFiles()","pos":[0,10]}]},{"pos":[23517,23551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23805,23822],"content":"GetFiles(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFiles(Boolean)","pos":[0,17]}]},{"pos":[24184,24218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24285,24319],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24547,24560],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[24860,24894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25083,25101],"content":"GetLoadedModules()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLoadedModules()","pos":[0,18]}]},{"pos":[25444,25478],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25756,25781],"content":"GetLoadedModules(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLoadedModules(Boolean)","pos":[0,25]}]},{"pos":[26171,26205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26276,26310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26600,26631],"content":"GetManifestResourceInfo(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetManifestResourceInfo(String)","pos":[0,31]}]},{"pos":[27041,27075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27158,27192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27397,27423],"content":"GetManifestResourceNames()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetManifestResourceNames()","pos":[0,26]}]},{"pos":[27769,27803],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28040,28073],"content":"GetManifestResourceStream(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetManifestResourceStream(String)","pos":[0,33]}]},{"pos":[28451,28485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28546,28580],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28907,28945],"content":"GetManifestResourceStream(Type,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetManifestResourceStream(Type,String)","pos":[0,38]}]},{"pos":[29342,29376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29437,29471],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29532,29566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29837,29854],"content":"GetModule(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetModule(String)","pos":[0,17]}]},{"pos":[30192,30226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30295,30329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30506,30518],"content":"GetModules()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetModules()","pos":[0,12]}]},{"pos":[30843,30877],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31137,31156],"content":"GetModules(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetModules(Boolean)","pos":[0,19]}]},{"pos":[31528,31562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31633,31667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31889,31898],"content":"GetName()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetName()","pos":[0,9]}]},{"pos":[32230,32264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32515,32531],"content":"GetName(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetName(Boolean)","pos":[0,16]}]},{"pos":[32882,32916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32991,33025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33444,33493],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[34007,34041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34137,34171],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34374,34399],"content":"GetReferencedAssemblies()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReferencedAssemblies()","pos":[0,25]}]},{"pos":[34783,34817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35082,35115],"content":"GetSatelliteAssembly(CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSatelliteAssembly(CultureInfo)","pos":[0,33]}]},{"pos":[35549,35583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35654,35688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36044,36085],"content":"GetSatelliteAssembly(CultureInfo,Version)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSatelliteAssembly(CultureInfo,Version)","pos":[0,41]}]},{"pos":[36552,36586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36651,36685],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36756,36790],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37052,37067],"content":"GetType(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String)","pos":[0,15]}]},{"pos":[37379,37413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37469,37503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37782,37805],"content":"GetType(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String,Boolean)","pos":[0,23]}]},{"pos":[38152,38186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38256,38290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38346,38380],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38689,38720],"content":"GetType(String,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String,Boolean,Boolean)","pos":[0,31]}]},{"pos":[39100,39134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39204,39238],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39306,39340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39396,39430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39651,39661],"content":"GetTypes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTypes()","pos":[0,10]}]},{"pos":[39955,39989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40184,40203],"content":"GlobalAssemblyCache","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalAssemblyCache","pos":[0,19]}]},{"pos":[40513,40547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40726,40737],"content":"HostContext","needQuote":true,"needEscape":true,"nodes":[{"content":"HostContext","pos":[0,11]}]},{"pos":[41021,41055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41250,41269],"content":"ImageRuntimeVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"ImageRuntimeVersion","pos":[0,19]}]},{"pos":[41580,41614],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41845,41868],"content":"IsDefined(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefined(Type,Boolean)","pos":[0,23]}]},{"pos":[42226,42260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42325,42359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42418,42452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42627,42636],"content":"IsDynamic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDynamic","pos":[0,9]}]},{"pos":[42916,42950],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43135,43149],"content":"IsFullyTrusted","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFullyTrusted","pos":[0,14]}]},{"pos":[43436,43470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43665,43677],"content":"Load(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[])","pos":[0,12]}]},{"pos":[44015,44049],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44120,44154],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44428,44446],"content":"Load(AssemblyName)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(AssemblyName)","pos":[0,18]}]},{"pos":[44837,44871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44942,44976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45216,45228],"content":"Load(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(String)","pos":[0,12]}]},{"pos":[45572,45606],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45677,45711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45979,45998],"content":"Load(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[])","pos":[0,19]}]},{"pos":[46373,46407],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46478,46512],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46583,46617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46955,46982],"content":"Load(AssemblyName,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(AssemblyName,Evidence)","pos":[0,27]}]},{"pos":[47441,47475],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47566,47600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47671,47705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48009,48030],"content":"Load(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(String,Evidence)","pos":[0,21]}]},{"pos":[48442,48476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48567,48601],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48672,48706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49038,49066],"content":"Load(Byte[],Byte[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[],Evidence)","pos":[0,28]}]},{"pos":[49509,49543],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49614,49648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49739,49773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49844,49878],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50222,50263],"content":"Load(Byte[],Byte[],SecurityContextSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[],SecurityContextSource)","pos":[0,41]}]},{"pos":[50743,50777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50848,50882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50984,51018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51089,51123],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51371,51387],"content":"LoadFile(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFile(String)","pos":[0,16]}]},{"pos":[51723,51757],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51828,51862],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52178,52203],"content":"LoadFile(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFile(String,Evidence)","pos":[0,25]}]},{"pos":[52607,52641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52732,52766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52837,52871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53123,53139],"content":"LoadFrom(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFrom(String)","pos":[0,16]}]},{"pos":[53491,53525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53596,53630],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53946,53971],"content":"LoadFrom(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFrom(String,Evidence)","pos":[0,25]}]},{"pos":[54391,54425],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54516,54550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54621,54655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55043,55088],"content":"LoadFrom(String,Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFrom(String,Byte[],AssemblyHashAlgorithm)","pos":[0,45]}]},{"pos":[55585,55619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55685,55719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55829,55863],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55934,55968],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56420,56474],"content":"LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)","pos":[0,54]}]},{"pos":[57039,57073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57164,57198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57264,57298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57408,57442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57513,57547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57831,57856],"content":"LoadModule(String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadModule(String,Byte[])","pos":[0,25]}]},{"pos":[58233,58267],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58333,58367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58436,58470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58784,58816],"content":"LoadModule(String,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadModule(String,Byte[],Byte[])","pos":[0,32]}]},{"pos":[59238,59272],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59338,59372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59443,59477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59546,59580],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59856,59883],"content":"LoadWithPartialName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadWithPartialName(String)","pos":[0,27]}]},{"pos":[60266,60300],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60371,60405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60754,60790],"content":"LoadWithPartialName(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadWithPartialName(String,Evidence)","pos":[0,36]}]},{"pos":[61241,61275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61366,61400],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61471,61505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61738,61746],"content":"Location","needQuote":true,"needEscape":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"pos":[62024,62058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62243,62257],"content":"ManifestModule","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestModule","pos":[0,14]}]},{"pos":[62582,62616],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62799,62812],"content":"ModuleResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleResolve","pos":[0,13]}]},{"pos":[63167,63201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63372,63379],"content":"Modules","needQuote":true,"needEscape":true,"nodes":[{"content":"Modules","pos":[0,7]}]},{"pos":[63763,63797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64086,64116],"content":"op_Equality(Assembly,Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Assembly,Assembly)","pos":[0,30]}]},{"pos":[64530,64564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64639,64673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64732,64766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65059,65091],"content":"op_Inequality(Assembly,Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Assembly,Assembly)","pos":[0,32]}]},{"pos":[65511,65545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65620,65654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65713,65747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65930,65943],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[66275,66309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66494,66508],"content":"ReflectionOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnly","pos":[0,14]}]},{"pos":[66803,66837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67060,67086],"content":"ReflectionOnlyLoad(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyLoad(Byte[])","pos":[0,26]}]},{"pos":[67466,67500],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67571,67605],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67887,67913],"content":"ReflectionOnlyLoad(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyLoad(String)","pos":[0,26]}]},{"pos":[68299,68333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68404,68438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68728,68758],"content":"ReflectionOnlyLoadFrom(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyLoadFrom(String)","pos":[0,30]}]},{"pos":[69152,69186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69257,69291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69478,69493],"content":"SecurityRuleSet","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityRuleSet","pos":[0,15]}]},{"pos":[69835,69869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70136,70186],"content":"System.Runtime.InteropServices._Assembly.GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Assembly.GetType()","pos":[0,50]}]},{"pos":[70550,70584],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70757,70767],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[71062,71096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71311,71333],"content":"UnsafeLoadFrom(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UnsafeLoadFrom(String)","pos":[0,22]}]},{"pos":[71703,71737],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71808,71842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71953,71966],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[72072,72082],"content":"Assembly()","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly()","pos":[0,10]}]},{"pos":[72277,72285],"content":"CodeBase","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeBase","pos":[0,8]}]},{"pos":[72434,72440],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[72619,72641],"content":"CreateInstance(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String)","pos":[0,22]}]},{"pos":[72818,72824],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[72940,72946],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[73140,73170],"content":"CreateInstance(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,Boolean)","pos":[0,30]}]},{"pos":[73363,73369],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[73485,73491],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[73608,73615],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73932,74012],"content":"CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,80]}]},{"pos":[74305,74311],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[74427,74433],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[74550,74557],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[74703,74715],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[74876,74882],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[75009,75015],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75166,75177],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[75317,75323],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[75523,75557],"content":"CreateQualifiedName(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateQualifiedName(String,String)","pos":[0,34]}]},{"pos":[75758,75764],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[75880,75886],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[76002,76008],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[76174,76190],"content":"CustomAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[76439,76471],"content":"IEnumerable<ph id=\"ph1\">&lt;CustomAttributeData&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<CustomAttributeData>"},{"pos":[76723,76735],"content":"DefinedTypes","needQuote":true,"needEscape":true,"nodes":[{"content":"DefinedTypes","pos":[0,12]}]},{"pos":[76965,76986],"content":"IEnumerable<ph id=\"ph1\">&lt;TypeInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TypeInfo>"},{"pos":[77214,77224],"content":"EntryPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"EntryPoint","pos":[0,10]}]},{"pos":[77403,77413],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[77603,77617],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[77779,77786],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[77904,77910],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78075,78090],"content":"EscapedCodeBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EscapedCodeBase","pos":[0,15]}]},{"pos":[78253,78259],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[78417,78425],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[78608,78616],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[78799,78812],"content":"ExportedTypes","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportedTypes","pos":[0,13]}]},{"pos":[79029,79046],"content":"IEnumerable<ph id=\"ph1\">&lt;Type&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Type>"},{"pos":[79253,79261],"content":"FullName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"pos":[79410,79416],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[79590,79607],"content":"GetAssembly(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssembly(Type)","pos":[0,17]}]},{"pos":[79798,79806],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[79935,79939],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[80103,80123],"content":"GetCallingAssembly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCallingAssembly()","pos":[0,20]}]},{"pos":[80320,80328],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[80528,80556],"content":"GetCustomAttributes(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[80745,80751],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[80870,80877],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[81076,81109],"content":"GetCustomAttributes(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Type,Boolean)","pos":[0,33]}]},{"pos":[81308,81314],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[81430,81434],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[81547,81554],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[81729,81754],"content":"GetCustomAttributesData()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributesData()","pos":[0,25]}]},{"pos":[82015,82041],"content":"IList<ph id=\"ph1\">&lt;CustomAttributeData&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<CustomAttributeData>"},{"pos":[82285,82303],"content":"GetEntryAssembly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEntryAssembly()","pos":[0,18]}]},{"pos":[82496,82504],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[82689,82711],"content":"GetExecutingAssembly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExecutingAssembly()","pos":[0,22]}]},{"pos":[82912,82920],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[83101,83119],"content":"GetExportedTypes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExportedTypes()","pos":[0,18]}]},{"pos":[83286,83290],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[83460,83475],"content":"GetFile(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFile(String)","pos":[0,15]}]},{"pos":[83648,83658],"content":"FileStream","needQuote":true,"needEscape":true,"nodes":[{"content":"FileStream","pos":[0,10]}]},{"pos":[83785,83791],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[83949,83959],"content":"GetFiles()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFiles()","pos":[0,10]}]},{"pos":[84122,84132],"content":"FileStream","needQuote":true,"needEscape":true,"nodes":[{"content":"FileStream","pos":[0,10]}]},{"pos":[84319,84336],"content":"GetFiles(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFiles(Boolean)","pos":[0,17]}]},{"pos":[84513,84523],"content":"FileStream","needQuote":true,"needEscape":true,"nodes":[{"content":"FileStream","pos":[0,10]}]},{"pos":[84653,84660],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[84823,84836],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[84994,84999],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85163,85181],"content":"GetLoadedModules()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLoadedModules()","pos":[0,18]}]},{"pos":[85372,85378],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[85573,85598],"content":"GetLoadedModules(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLoadedModules(Boolean)","pos":[0,25]}]},{"pos":[85803,85809],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[85939,85946],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[86136,86167],"content":"GetManifestResourceInfo(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetManifestResourceInfo(String)","pos":[0,31]}]},{"pos":[86398,86418],"content":"ManifestResourceInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestResourceInfo","pos":[0,20]}]},{"pos":[86573,86579],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[86753,86779],"content":"GetManifestResourceNames()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetManifestResourceNames()","pos":[0,26]}]},{"pos":[86964,86970],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[87162,87195],"content":"GetManifestResourceStream(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetManifestResourceStream(String)","pos":[0,33]}]},{"pos":[87400,87406],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[87525,87531],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[87733,87771],"content":"GetManifestResourceStream(Type,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetManifestResourceStream(Type,String)","pos":[0,38]}]},{"pos":[87986,87992],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[88109,88113],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[88225,88231],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[88405,88422],"content":"GetModule(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetModule(String)","pos":[0,17]}]},{"pos":[88611,88617],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[88744,88750],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[88910,88922],"content":"GetModules()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetModules()","pos":[0,12]}]},{"pos":[89101,89107],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[89296,89315],"content":"GetModules(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetModules(Boolean)","pos":[0,19]}]},{"pos":[89508,89514],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[89644,89651],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89810,89819],"content":"GetName()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetName()","pos":[0,9]}]},{"pos":[89998,90010],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[90206,90222],"content":"GetName(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetName(Boolean)","pos":[0,16]}]},{"pos":[90415,90427],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[90567,90574],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[90833,90882],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[91168,91185],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[91399,91415],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[91630,91655],"content":"GetReferencedAssemblies()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReferencedAssemblies()","pos":[0,25]}]},{"pos":[91866,91878],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[92107,92140],"content":"GetSatelliteAssembly(CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSatelliteAssembly(CultureInfo)","pos":[0,33]}]},{"pos":[92363,92371],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[92535,92546],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[92789,92830],"content":"GetSatelliteAssembly(CultureInfo,Version)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSatelliteAssembly(CultureInfo,Version)","pos":[0,41]}]},{"pos":[93069,93077],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[93241,93252],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[93393,93400],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[93574,93589],"content":"GetType(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String)","pos":[0,15]}]},{"pos":[93750,93754],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[93866,93872],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[94059,94082],"content":"GetType(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String,Boolean)","pos":[0,23]}]},{"pos":[94259,94263],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[94375,94381],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[94498,94505],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[94709,94740],"content":"GetType(String,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String,Boolean,Boolean)","pos":[0,31]}]},{"pos":[94933,94937],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[95049,95055],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[95172,95179],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[95298,95305],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[95465,95475],"content":"GetTypes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTypes()","pos":[0,10]}]},{"pos":[95626,95630],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[95797,95816],"content":"GlobalAssemblyCache","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalAssemblyCache","pos":[0,19]}]},{"pos":[95988,95995],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[96158,96169],"content":"HostContext","needQuote":true,"needEscape":true,"nodes":[{"content":"HostContext","pos":[0,11]}]},{"pos":[96323,96328],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[96495,96514],"content":"ImageRuntimeVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"ImageRuntimeVersion","pos":[0,19]}]},{"pos":[96685,96691],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[96878,96901],"content":"IsDefined(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefined(Type,Boolean)","pos":[0,23]}]},{"pos":[97081,97088],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[97204,97208],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[97321,97328],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[97489,97498],"content":"IsDynamic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDynamic","pos":[0,9]}]},{"pos":[97650,97657],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[97823,97837],"content":"IsFullyTrusted","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFullyTrusted","pos":[0,14]}]},{"pos":[97999,98006],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[98177,98189],"content":"Load(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[])","pos":[0,12]}]},{"pos":[98370,98378],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[98507,98511],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[98695,98713],"content":"Load(AssemblyName)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(AssemblyName)","pos":[0,18]}]},{"pos":[98906,98914],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[99073,99085],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[99277,99289],"content":"Load(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(String)","pos":[0,12]}]},{"pos":[99470,99478],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[99609,99615],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[99798,99817],"content":"Load(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[])","pos":[0,19]}]},{"pos":[100012,100020],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[100149,100153],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[100265,100269],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[100485,100512],"content":"Load(AssemblyName,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(AssemblyName,Evidence)","pos":[0,27]}]},{"pos":[100723,100731],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[100890,100902],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[101075,101083],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[101304,101325],"content":"Load(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(String,Evidence)","pos":[0,21]}]},{"pos":[101524,101532],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[101663,101669],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[101819,101827],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[102062,102090],"content":"Load(Byte[],Byte[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[],Evidence)","pos":[0,28]}]},{"pos":[102303,102311],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[102440,102444],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[102556,102560],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[102708,102716],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[102957,102998],"content":"Load(Byte[],Byte[],SecurityContextSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[],SecurityContextSource)","pos":[0,41]}]},{"pos":[103237,103245],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[103374,103378],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[103490,103494],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[103641,103662],"content":"SecurityContextSource","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityContextSource","pos":[0,21]}]},{"pos":[103874,103890],"content":"LoadFile(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFile(String)","pos":[0,16]}]},{"pos":[104079,104087],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[104218,104224],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[104429,104454],"content":"LoadFile(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFile(String,Evidence)","pos":[0,25]}]},{"pos":[104661,104669],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[104800,104806],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[104956,104964],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[105157,105173],"content":"LoadFrom(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFrom(String)","pos":[0,16]}]},{"pos":[105362,105370],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[105501,105507],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[105712,105737],"content":"LoadFrom(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFrom(String,Evidence)","pos":[0,25]}]},{"pos":[105944,105952],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[106083,106089],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[106239,106247],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[106508,106553],"content":"LoadFrom(String,Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFrom(String,Byte[],AssemblyHashAlgorithm)","pos":[0,45]}]},{"pos":[106800,106808],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[106939,106945],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[107059,107063],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[107242,107263],"content":"AssemblyHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[107591,107645],"content":"LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)","pos":[0,54]}]},{"pos":[107910,107918],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[108049,108055],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[108205,108213],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[108347,108351],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[108530,108551],"content":"AssemblyHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[108795,108820],"content":"LoadModule(String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadModule(String,Byte[])","pos":[0,25]}]},{"pos":[109025,109031],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[109158,109164],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[109278,109282],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[109483,109515],"content":"LoadModule(String,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadModule(String,Byte[],Byte[])","pos":[0,32]}]},{"pos":[109734,109740],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[109867,109873],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[109987,109991],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[110103,110107],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[110289,110316],"content":"LoadWithPartialName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadWithPartialName(String)","pos":[0,27]}]},{"pos":[110527,110535],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[110666,110672],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[110888,110924],"content":"LoadWithPartialName(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadWithPartialName(String,Evidence)","pos":[0,36]}]},{"pos":[111153,111161],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[111292,111298],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[111448,111456],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[111634,111642],"content":"Location","needQuote":true,"needEscape":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"pos":[111791,111797],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[111961,111975],"content":"ManifestModule","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestModule","pos":[0,14]}]},{"pos":[112158,112164],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[112338,112351],"content":"ModuleResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleResolve","pos":[0,13]}]},{"pos":[112551,112576],"content":"ModuleResolveEventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleResolveEventHandler","pos":[0,25]}]},{"pos":[112782,112789],"content":"Modules","needQuote":true,"needEscape":true,"nodes":[{"content":"Modules","pos":[0,7]}]},{"pos":[113007,113026],"content":"IEnumerable<ph id=\"ph1\">&lt;Module&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Module>"},{"pos":[113306,113336],"content":"op_Equality(Assembly,Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Assembly,Assembly)","pos":[0,30]}]},{"pos":[113530,113537],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[113679,113687],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[113842,113850],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[114083,114115],"content":"op_Inequality(Assembly,Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Assembly,Assembly)","pos":[0,32]}]},{"pos":[114313,114320],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[114462,114470],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[114625,114633],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[114811,114824],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[115008,115021],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[115208,115222],"content":"ReflectionOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnly","pos":[0,14]}]},{"pos":[115384,115391],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[115576,115602],"content":"ReflectionOnlyLoad(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyLoad(Byte[])","pos":[0,26]}]},{"pos":[115811,115819],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[115948,115952],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[116133,116159],"content":"ReflectionOnlyLoad(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyLoad(String)","pos":[0,26]}]},{"pos":[116368,116376],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[116507,116513],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[116700,116730],"content":"ReflectionOnlyLoadFrom(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyLoadFrom(String)","pos":[0,30]}]},{"pos":[116947,116955],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[117086,117092],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[117257,117272],"content":"SecurityRuleSet","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityRuleSet","pos":[0,15]}]},{"pos":[117462,117477],"content":"SecurityRuleSet","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityRuleSet","pos":[0,15]}]},{"pos":[117702,117752],"content":"System.Runtime.InteropServices._Assembly.GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Assembly.GetType()","pos":[0,50]}]},{"pos":[117983,117987],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[118141,118151],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[118304,118310],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[118489,118511],"content":"UnsafeLoadFrom(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UnsafeLoadFrom(String)","pos":[0,22]}]},{"pos":[118712,118720],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[118851,118857],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Assembly\n  id: Assembly\n  children:\n  - System.Reflection.Assembly.#ctor\n  - System.Reflection.Assembly.CodeBase\n  - System.Reflection.Assembly.CreateInstance(System.String)\n  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  - System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n  - System.Reflection.Assembly.CustomAttributes\n  - System.Reflection.Assembly.DefinedTypes\n  - System.Reflection.Assembly.EntryPoint\n  - System.Reflection.Assembly.Equals(System.Object)\n  - System.Reflection.Assembly.EscapedCodeBase\n  - System.Reflection.Assembly.Evidence\n  - System.Reflection.Assembly.ExportedTypes\n  - System.Reflection.Assembly.FullName\n  - System.Reflection.Assembly.GetAssembly(System.Type)\n  - System.Reflection.Assembly.GetCallingAssembly\n  - System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\n  - System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Assembly.GetCustomAttributesData\n  - System.Reflection.Assembly.GetEntryAssembly\n  - System.Reflection.Assembly.GetExecutingAssembly\n  - System.Reflection.Assembly.GetExportedTypes\n  - System.Reflection.Assembly.GetFile(System.String)\n  - System.Reflection.Assembly.GetFiles\n  - System.Reflection.Assembly.GetFiles(System.Boolean)\n  - System.Reflection.Assembly.GetHashCode\n  - System.Reflection.Assembly.GetLoadedModules\n  - System.Reflection.Assembly.GetLoadedModules(System.Boolean)\n  - System.Reflection.Assembly.GetManifestResourceInfo(System.String)\n  - System.Reflection.Assembly.GetManifestResourceNames\n  - System.Reflection.Assembly.GetManifestResourceStream(System.String)\n  - System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)\n  - System.Reflection.Assembly.GetModule(System.String)\n  - System.Reflection.Assembly.GetModules\n  - System.Reflection.Assembly.GetModules(System.Boolean)\n  - System.Reflection.Assembly.GetName\n  - System.Reflection.Assembly.GetName(System.Boolean)\n  - System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.Assembly.GetReferencedAssemblies\n  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  - System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  - System.Reflection.Assembly.GetType(System.String)\n  - System.Reflection.Assembly.GetType(System.String,System.Boolean)\n  - System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)\n  - System.Reflection.Assembly.GetTypes\n  - System.Reflection.Assembly.GlobalAssemblyCache\n  - System.Reflection.Assembly.HostContext\n  - System.Reflection.Assembly.ImageRuntimeVersion\n  - System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Assembly.IsDynamic\n  - System.Reflection.Assembly.IsFullyTrusted\n  - System.Reflection.Assembly.Load(System.Byte[])\n  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n  - System.Reflection.Assembly.Load(System.String)\n  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n  - System.Reflection.Assembly.LoadFile(System.String)\n  - System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.LoadFrom(System.String)\n  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n  - System.Reflection.Assembly.LoadWithPartialName(System.String)\n  - System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.Location\n  - System.Reflection.Assembly.ManifestModule\n  - System.Reflection.Assembly.ModuleResolve\n  - System.Reflection.Assembly.Modules\n  - System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)\n  - System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)\n  - System.Reflection.Assembly.PermissionSet\n  - System.Reflection.Assembly.ReflectionOnly\n  - System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n  - System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n  - System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n  - System.Reflection.Assembly.SecurityRuleSet\n  - System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n  - System.Reflection.Assembly.ToString\n  - System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Assembly))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Assembly : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Assembly, System.Runtime.Serialization.ISerializable, System.Security.IEvidenceFactory\n  inheritance:\n  - System.Object\n  implements:\n  - System.Reflection.ICustomAttributeProvider\n  - System.Runtime.InteropServices._Assembly\n  - System.Runtime.Serialization.ISerializable\n  - System.Security.IEvidenceFactory\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.#ctor\n  id: '#ctor'\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Assembly()\n  nameWithType: Assembly.Assembly()\n  fullName: System.Reflection.Assembly.Assembly()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected Assembly ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.CodeBase\n  id: CodeBase\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: CodeBase\n  nameWithType: Assembly.CodeBase\n  fullName: System.Reflection.Assembly.CodeBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string CodeBase { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.CreateInstance(System.String)\n  id: CreateInstance(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: CreateInstance(String)\n  nameWithType: Assembly.CreateInstance(String)\n  fullName: System.Reflection.Assembly.CreateInstance(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public object CreateInstance (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n  id: CreateInstance(System.String,System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: CreateInstance(String,Boolean)\n  nameWithType: Assembly.CreateInstance(String,Boolean)\n  fullName: System.Reflection.Assembly.CreateInstance(String,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public object CreateInstance (string typeName, bool ignoreCase);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  id: CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.Reflection.Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n  id: CreateQualifiedName(System.String,System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: CreateQualifiedName(String,String)\n  nameWithType: Assembly.CreateQualifiedName(String,String)\n  fullName: System.Reflection.Assembly.CreateQualifiedName(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static string CreateQualifiedName (string assemblyName, string typeName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.CustomAttributes\n  id: CustomAttributes\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: CustomAttributes\n  nameWithType: Assembly.CustomAttributes\n  fullName: System.Reflection.Assembly.CustomAttributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData> CustomAttributes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.DefinedTypes\n  id: DefinedTypes\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: DefinedTypes\n  nameWithType: Assembly.DefinedTypes\n  fullName: System.Reflection.Assembly.DefinedTypes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo> DefinedTypes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.EntryPoint\n  id: EntryPoint\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: EntryPoint\n  nameWithType: Assembly.EntryPoint\n  fullName: System.Reflection.Assembly.EntryPoint\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MethodInfo EntryPoint { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Assembly.Equals(Object)\n  fullName: System.Reflection.Assembly.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.EscapedCodeBase\n  id: EscapedCodeBase\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: EscapedCodeBase\n  nameWithType: Assembly.EscapedCodeBase\n  fullName: System.Reflection.Assembly.EscapedCodeBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string EscapedCodeBase { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Evidence\n  id: Evidence\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Evidence\n  nameWithType: Assembly.Evidence\n  fullName: System.Reflection.Assembly.Evidence\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Security.Policy.Evidence Evidence { get; }\n    return:\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.ExportedTypes\n  id: ExportedTypes\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: ExportedTypes\n  nameWithType: Assembly.ExportedTypes\n  fullName: System.Reflection.Assembly.ExportedTypes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<Type> ExportedTypes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.FullName\n  id: FullName\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: FullName\n  nameWithType: Assembly.FullName\n  fullName: System.Reflection.Assembly.FullName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string FullName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetAssembly(System.Type)\n  id: GetAssembly(System.Type)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetAssembly(Type)\n  nameWithType: Assembly.GetAssembly(Type)\n  fullName: System.Reflection.Assembly.GetAssembly(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly GetAssembly (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetCallingAssembly\n  id: GetCallingAssembly\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetCallingAssembly()\n  nameWithType: Assembly.GetCallingAssembly()\n  fullName: System.Reflection.Assembly.GetCallingAssembly()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly GetCallingAssembly ();\n    parameters: []\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: Assembly.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.Assembly.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetCustomAttributes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: Assembly.GetCustomAttributes(Type,Boolean)\n  fullName: System.Reflection.Assembly.GetCustomAttributes(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetCustomAttributes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetCustomAttributesData\n  id: GetCustomAttributesData\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetCustomAttributesData()\n  nameWithType: Assembly.GetCustomAttributesData()\n  fullName: System.Reflection.Assembly.GetCustomAttributesData()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IList<System.Reflection.CustomAttributeData> GetCustomAttributesData ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetEntryAssembly\n  id: GetEntryAssembly\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetEntryAssembly()\n  nameWithType: Assembly.GetEntryAssembly()\n  fullName: System.Reflection.Assembly.GetEntryAssembly()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly GetEntryAssembly ();\n    parameters: []\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetExecutingAssembly\n  id: GetExecutingAssembly\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetExecutingAssembly()\n  nameWithType: Assembly.GetExecutingAssembly()\n  fullName: System.Reflection.Assembly.GetExecutingAssembly()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly GetExecutingAssembly ();\n    parameters: []\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetExportedTypes\n  id: GetExportedTypes\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetExportedTypes()\n  nameWithType: Assembly.GetExportedTypes()\n  fullName: System.Reflection.Assembly.GetExportedTypes()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GetExportedTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetFile(System.String)\n  id: GetFile(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetFile(String)\n  nameWithType: Assembly.GetFile(String)\n  fullName: System.Reflection.Assembly.GetFile(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.IO.FileStream GetFile (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.IO.FileStream\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetFiles\n  id: GetFiles\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetFiles()\n  nameWithType: Assembly.GetFiles()\n  fullName: System.Reflection.Assembly.GetFiles()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.IO.FileStream[] GetFiles ();\n    parameters: []\n    return:\n      type: System.IO.FileStream[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetFiles*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetFiles(System.Boolean)\n  id: GetFiles(System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetFiles(Boolean)\n  nameWithType: Assembly.GetFiles(Boolean)\n  fullName: System.Reflection.Assembly.GetFiles(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.IO.FileStream[] GetFiles (bool getResourceModules);\n    parameters:\n    - id: getResourceModules\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.IO.FileStream[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetFiles*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Assembly.GetHashCode()\n  fullName: System.Reflection.Assembly.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetLoadedModules\n  id: GetLoadedModules\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetLoadedModules()\n  nameWithType: Assembly.GetLoadedModules()\n  fullName: System.Reflection.Assembly.GetLoadedModules()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.Module[] GetLoadedModules ();\n    parameters: []\n    return:\n      type: System.Reflection.Module[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetLoadedModules*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)\n  id: GetLoadedModules(System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetLoadedModules(Boolean)\n  nameWithType: Assembly.GetLoadedModules(Boolean)\n  fullName: System.Reflection.Assembly.GetLoadedModules(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.Module[] GetLoadedModules (bool getResourceModules);\n    parameters:\n    - id: getResourceModules\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Module[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetLoadedModules*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)\n  id: GetManifestResourceInfo(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetManifestResourceInfo(String)\n  nameWithType: Assembly.GetManifestResourceInfo(String)\n  fullName: System.Reflection.Assembly.GetManifestResourceInfo(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);\n    parameters:\n    - id: resourceName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.ManifestResourceInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetManifestResourceNames\n  id: GetManifestResourceNames\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetManifestResourceNames()\n  nameWithType: Assembly.GetManifestResourceNames()\n  fullName: System.Reflection.Assembly.GetManifestResourceNames()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string[] GetManifestResourceNames ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)\n  id: GetManifestResourceStream(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetManifestResourceStream(String)\n  nameWithType: Assembly.GetManifestResourceStream(String)\n  fullName: System.Reflection.Assembly.GetManifestResourceStream(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.IO.Stream GetManifestResourceStream (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.IO.Stream\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetManifestResourceStream*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)\n  id: GetManifestResourceStream(System.Type,System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetManifestResourceStream(Type,String)\n  nameWithType: Assembly.GetManifestResourceStream(Type,String)\n  fullName: System.Reflection.Assembly.GetManifestResourceStream(Type,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.IO.Stream GetManifestResourceStream (Type type, string name);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.IO.Stream\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetManifestResourceStream*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetModule(System.String)\n  id: GetModule(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetModule(String)\n  nameWithType: Assembly.GetModule(String)\n  fullName: System.Reflection.Assembly.GetModule(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.Module GetModule (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetModules\n  id: GetModules\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetModules()\n  nameWithType: Assembly.GetModules()\n  fullName: System.Reflection.Assembly.GetModules()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.Module[] GetModules ();\n    parameters: []\n    return:\n      type: System.Reflection.Module[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetModules*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetModules(System.Boolean)\n  id: GetModules(System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetModules(Boolean)\n  nameWithType: Assembly.GetModules(Boolean)\n  fullName: System.Reflection.Assembly.GetModules(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.Module[] GetModules (bool getResourceModules);\n    parameters:\n    - id: getResourceModules\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Module[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetModules*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetName\n  id: GetName\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetName()\n  nameWithType: Assembly.GetName()\n  fullName: System.Reflection.Assembly.GetName()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.AssemblyName GetName ();\n    parameters: []\n    return:\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetName(System.Boolean)\n  id: GetName(System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetName(Boolean)\n  nameWithType: Assembly.GetName(Boolean)\n  fullName: System.Reflection.Assembly.GetName(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.AssemblyName GetName (bool copiedName);\n    parameters:\n    - id: copiedName\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: Assembly.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Reflection.Assembly.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetReferencedAssemblies\n  id: GetReferencedAssemblies\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetReferencedAssemblies()\n  nameWithType: Assembly.GetReferencedAssemblies()\n  fullName: System.Reflection.Assembly.GetReferencedAssemblies()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.AssemblyName[] GetReferencedAssemblies ();\n    parameters: []\n    return:\n      type: System.Reflection.AssemblyName[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  id: GetSatelliteAssembly(System.Globalization.CultureInfo)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetSatelliteAssembly(CultureInfo)\n  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo)\n  fullName: System.Reflection.Assembly.GetSatelliteAssembly(CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);\n    parameters:\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetSatelliteAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  id: GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetSatelliteAssembly(CultureInfo,Version)\n  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo,Version)\n  fullName: System.Reflection.Assembly.GetSatelliteAssembly(CultureInfo,Version)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);\n    parameters:\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: version\n      type: System.Version\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetSatelliteAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetType(System.String)\n  id: GetType(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetType(String)\n  nameWithType: Assembly.GetType(String)\n  fullName: System.Reflection.Assembly.GetType(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type GetType (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetType*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)\n  id: GetType(System.String,System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetType(String,Boolean)\n  nameWithType: Assembly.GetType(String,Boolean)\n  fullName: System.Reflection.Assembly.GetType(String,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type GetType (string name, bool throwOnError);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: throwOnError\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetType*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)\n  id: GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetType(String,Boolean,Boolean)\n  nameWithType: Assembly.GetType(String,Boolean,Boolean)\n  fullName: System.Reflection.Assembly.GetType(String,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type GetType (string name, bool throwOnError, bool ignoreCase);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: throwOnError\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.GetType*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GetTypes\n  id: GetTypes\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GetTypes()\n  nameWithType: Assembly.GetTypes()\n  fullName: System.Reflection.Assembly.GetTypes()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GetTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.GlobalAssemblyCache\n  id: GlobalAssemblyCache\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: GlobalAssemblyCache\n  nameWithType: Assembly.GlobalAssemblyCache\n  fullName: System.Reflection.Assembly.GlobalAssemblyCache\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool GlobalAssemblyCache { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.HostContext\n  id: HostContext\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: HostContext\n  nameWithType: Assembly.HostContext\n  fullName: System.Reflection.Assembly.HostContext\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual long HostContext { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.ImageRuntimeVersion\n  id: ImageRuntimeVersion\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: ImageRuntimeVersion\n  nameWithType: Assembly.ImageRuntimeVersion\n  fullName: System.Reflection.Assembly.ImageRuntimeVersion\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string ImageRuntimeVersion { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: IsDefined(Type,Boolean)\n  nameWithType: Assembly.IsDefined(Type,Boolean)\n  fullName: System.Reflection.Assembly.IsDefined(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.IsDynamic\n  id: IsDynamic\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: IsDynamic\n  nameWithType: Assembly.IsDynamic\n  fullName: System.Reflection.Assembly.IsDynamic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsDynamic { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.IsFullyTrusted\n  id: IsFullyTrusted\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: IsFullyTrusted\n  nameWithType: Assembly.IsFullyTrusted\n  fullName: System.Reflection.Assembly.IsFullyTrusted\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsFullyTrusted { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Load(System.Byte[])\n  id: Load(System.Byte[])\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Load(Byte[])\n  nameWithType: Assembly.Load(Byte[])\n  fullName: System.Reflection.Assembly.Load(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly Load (byte[] rawAssembly);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n  id: Load(System.Reflection.AssemblyName)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Load(AssemblyName)\n  nameWithType: Assembly.Load(AssemblyName)\n  fullName: System.Reflection.Assembly.Load(AssemblyName)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);\n    parameters:\n    - id: assemblyRef\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Load(System.String)\n  id: Load(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Load(String)\n  nameWithType: Assembly.Load(String)\n  fullName: System.Reflection.Assembly.Load(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly Load (string assemblyString);\n    parameters:\n    - id: assemblyString\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n  id: Load(System.Byte[],System.Byte[])\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Load(Byte[],Byte[])\n  nameWithType: Assembly.Load(Byte[],Byte[])\n  fullName: System.Reflection.Assembly.Load(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rawSymbolStore\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  id: Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Load(AssemblyName,Evidence)\n  nameWithType: Assembly.Load(AssemblyName,Evidence)\n  fullName: System.Reflection.Assembly.Load(AssemblyName,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);\n    parameters:\n    - id: assemblyRef\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n  id: Load(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Load(String,Evidence)\n  nameWithType: Assembly.Load(String,Evidence)\n  fullName: System.Reflection.Assembly.Load(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);\n    parameters:\n    - id: assemblyString\n      type: System.String\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  id: Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Load(Byte[],Byte[],Evidence)\n  nameWithType: Assembly.Load(Byte[],Byte[],Evidence)\n  fullName: System.Reflection.Assembly.Load(Byte[],Byte[],Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rawSymbolStore\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: securityEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n  id: Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Load(Byte[],Byte[],SecurityContextSource)\n  nameWithType: Assembly.Load(Byte[],Byte[],SecurityContextSource)\n  fullName: System.Reflection.Assembly.Load(Byte[],Byte[],SecurityContextSource)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.SecurityContextSource securityContextSource);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rawSymbolStore\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: securityContextSource\n      type: System.Security.SecurityContextSource\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadFile(System.String)\n  id: LoadFile(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadFile(String)\n  nameWithType: Assembly.LoadFile(String)\n  fullName: System.Reflection.Assembly.LoadFile(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly LoadFile (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadFile*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n  id: LoadFile(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadFile(String,Evidence)\n  nameWithType: Assembly.LoadFile(String,Evidence)\n  fullName: System.Reflection.Assembly.LoadFile(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly LoadFile (string path, System.Security.Policy.Evidence securityEvidence);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: securityEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadFile*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadFrom(System.String)\n  id: LoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadFrom(String)\n  nameWithType: Assembly.LoadFrom(String)\n  fullName: System.Reflection.Assembly.LoadFrom(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly LoadFrom (string assemblyFile);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n  id: LoadFrom(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadFrom(String,Evidence)\n  nameWithType: Assembly.LoadFrom(String,Evidence)\n  fullName: System.Reflection.Assembly.LoadFrom(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: securityEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  id: LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadFrom(String,Byte[],AssemblyHashAlgorithm)\n  nameWithType: Assembly.LoadFrom(String,Byte[],AssemblyHashAlgorithm)\n  fullName: System.Reflection.Assembly.LoadFrom(String,Byte[],AssemblyHashAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly LoadFrom (string assemblyFile, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: hashValue\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  id: LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)\n  nameWithType: Assembly.LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)\n  fullName: System.Reflection.Assembly.LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: securityEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: hashValue\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n  id: LoadModule(System.String,System.Byte[])\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadModule(String,Byte[])\n  nameWithType: Assembly.LoadModule(String,Byte[])\n  fullName: System.Reflection.Assembly.LoadModule(String,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);\n    parameters:\n    - id: moduleName\n      type: System.String\n      description: Parameter description to be filled\n    - id: rawModule\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadModule*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n  id: LoadModule(System.String,System.Byte[],System.Byte[])\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadModule(String,Byte[],Byte[])\n  nameWithType: Assembly.LoadModule(String,Byte[],Byte[])\n  fullName: System.Reflection.Assembly.LoadModule(String,Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);\n    parameters:\n    - id: moduleName\n      type: System.String\n      description: Parameter description to be filled\n    - id: rawModule\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rawSymbolStore\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadModule*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadWithPartialName(System.String)\n  id: LoadWithPartialName(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadWithPartialName(String)\n  nameWithType: Assembly.LoadWithPartialName(String)\n  fullName: System.Reflection.Assembly.LoadWithPartialName(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly LoadWithPartialName (string partialName);\n    parameters:\n    - id: partialName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadWithPartialName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n  id: LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: LoadWithPartialName(String,Evidence)\n  nameWithType: Assembly.LoadWithPartialName(String,Evidence)\n  fullName: System.Reflection.Assembly.LoadWithPartialName(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly LoadWithPartialName (string partialName, System.Security.Policy.Evidence securityEvidence);\n    parameters:\n    - id: partialName\n      type: System.String\n      description: Parameter description to be filled\n    - id: securityEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.LoadWithPartialName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Location\n  id: Location\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Location\n  nameWithType: Assembly.Location\n  fullName: System.Reflection.Assembly.Location\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string Location { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.ManifestModule\n  id: ManifestModule\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: ManifestModule\n  nameWithType: Assembly.ManifestModule\n  fullName: System.Reflection.Assembly.ManifestModule\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.Module ManifestModule { get; }\n    return:\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.ModuleResolve\n  id: ModuleResolve\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: ModuleResolve\n  nameWithType: Assembly.ModuleResolve\n  fullName: System.Reflection.Assembly.ModuleResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual event System.Reflection.ModuleResolveEventHandler ModuleResolve;\n    return:\n      type: System.Reflection.ModuleResolveEventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.Modules\n  id: Modules\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: Modules\n  nameWithType: Assembly.Modules\n  fullName: System.Reflection.Assembly.Modules\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.Module> Modules { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Module}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)\n  id: op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: op_Equality(Assembly,Assembly)\n  nameWithType: Assembly.op_Equality(Assembly,Assembly)\n  fullName: System.Reflection.Assembly.op_Equality(Assembly,Assembly)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Assembly left, System.Reflection.Assembly right);\n    parameters:\n    - id: left\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n    - id: right\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)\n  id: op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: op_Inequality(Assembly,Assembly)\n  nameWithType: Assembly.op_Inequality(Assembly,Assembly)\n  fullName: System.Reflection.Assembly.op_Inequality(Assembly,Assembly)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Assembly left, System.Reflection.Assembly right);\n    parameters:\n    - id: left\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n    - id: right\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.PermissionSet\n  id: PermissionSet\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: PermissionSet\n  nameWithType: Assembly.PermissionSet\n  fullName: System.Reflection.Assembly.PermissionSet\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Security.PermissionSet PermissionSet { get; }\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.ReflectionOnly\n  id: ReflectionOnly\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: ReflectionOnly\n  nameWithType: Assembly.ReflectionOnly\n  fullName: System.Reflection.Assembly.ReflectionOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool ReflectionOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n  id: ReflectionOnlyLoad(System.Byte[])\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: ReflectionOnlyLoad(Byte[])\n  nameWithType: Assembly.ReflectionOnlyLoad(Byte[])\n  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly ReflectionOnlyLoad (byte[] rawAssembly);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.ReflectionOnlyLoad*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n  id: ReflectionOnlyLoad(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: ReflectionOnlyLoad(String)\n  nameWithType: Assembly.ReflectionOnlyLoad(String)\n  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly ReflectionOnlyLoad (string assemblyString);\n    parameters:\n    - id: assemblyString\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.Reflection.Assembly.ReflectionOnlyLoad*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n  id: ReflectionOnlyLoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: ReflectionOnlyLoadFrom(String)\n  nameWithType: Assembly.ReflectionOnlyLoadFrom(String)\n  fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly ReflectionOnlyLoadFrom (string assemblyFile);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.SecurityRuleSet\n  id: SecurityRuleSet\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: SecurityRuleSet\n  nameWithType: Assembly.SecurityRuleSet\n  fullName: System.Reflection.Assembly.SecurityRuleSet\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Security.SecurityRuleSet SecurityRuleSet { get; }\n    return:\n      type: System.Security.SecurityRuleSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n  id: System#Runtime#InteropServices#_Assembly#GetType\n  isEii: true\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._Assembly.GetType()\n  nameWithType: Assembly.System.Runtime.InteropServices._Assembly.GetType()\n  fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: Type _Assembly.GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.ToString\n  id: ToString\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Assembly.ToString()\n  fullName: System.Reflection.Assembly.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n  id: UnsafeLoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  langs:\n  - csharp\n  name: UnsafeLoadFrom(String)\n  nameWithType: Assembly.UnsafeLoadFrom(String)\n  fullName: System.Reflection.Assembly.UnsafeLoadFrom(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.Assembly UnsafeLoadFrom (string assemblyFile);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Reflection.Assembly.#ctor\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Assembly()\n  nameWithType: Assembly.Assembly()\n  fullName: System.Reflection.Assembly.Assembly()\n- uid: System.Reflection.Assembly.CodeBase\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CodeBase\n  nameWithType: Assembly.CodeBase\n  fullName: System.Reflection.Assembly.CodeBase\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.CreateInstance(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CreateInstance(String)\n  nameWithType: Assembly.CreateInstance(String)\n  fullName: System.Reflection.Assembly.CreateInstance(String)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CreateInstance(String,Boolean)\n  nameWithType: Assembly.CreateInstance(String,Boolean)\n  fullName: System.Reflection.Assembly.CreateInstance(String,Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.Reflection.Assembly.CreateInstance(String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CreateQualifiedName(String,String)\n  nameWithType: Assembly.CreateQualifiedName(String,String)\n  fullName: System.Reflection.Assembly.CreateQualifiedName(String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.CustomAttributes\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: Assembly.CustomAttributes\n  fullName: System.Reflection.Assembly.CustomAttributes\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<CustomAttributeData>\n  nameWithType: IEnumerable<CustomAttributeData>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>\n- uid: System.Reflection.Assembly.DefinedTypes\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: DefinedTypes\n  nameWithType: Assembly.DefinedTypes\n  fullName: System.Reflection.Assembly.DefinedTypes\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TypeInfo>\n  nameWithType: IEnumerable<TypeInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>\n- uid: System.Reflection.Assembly.EntryPoint\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: EntryPoint\n  nameWithType: Assembly.EntryPoint\n  fullName: System.Reflection.Assembly.EntryPoint\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Reflection.Assembly.Equals(System.Object)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Assembly.Equals(Object)\n  fullName: System.Reflection.Assembly.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Assembly.EscapedCodeBase\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: EscapedCodeBase\n  nameWithType: Assembly.EscapedCodeBase\n  fullName: System.Reflection.Assembly.EscapedCodeBase\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.Evidence\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Evidence\n  nameWithType: Assembly.Evidence\n  fullName: System.Reflection.Assembly.Evidence\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Reflection.Assembly.ExportedTypes\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ExportedTypes\n  nameWithType: Assembly.ExportedTypes\n  fullName: System.Reflection.Assembly.ExportedTypes\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n- uid: System.Reflection.Assembly.FullName\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: FullName\n  nameWithType: Assembly.FullName\n  fullName: System.Reflection.Assembly.FullName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.GetAssembly(System.Type)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetAssembly(Type)\n  nameWithType: Assembly.GetAssembly(Type)\n  fullName: System.Reflection.Assembly.GetAssembly(Type)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Assembly.GetCallingAssembly\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetCallingAssembly()\n  nameWithType: Assembly.GetCallingAssembly()\n  fullName: System.Reflection.Assembly.GetCallingAssembly()\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Assembly.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: Assembly.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.Assembly.GetCustomAttributes(Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: Assembly.GetCustomAttributes(Type,Boolean)\n  fullName: System.Reflection.Assembly.GetCustomAttributes(Type,Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.GetCustomAttributesData\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetCustomAttributesData()\n  nameWithType: Assembly.GetCustomAttributesData()\n  fullName: System.Reflection.Assembly.GetCustomAttributesData()\n- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<CustomAttributeData>\n  nameWithType: IList<CustomAttributeData>\n  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>\n- uid: System.Reflection.Assembly.GetEntryAssembly\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetEntryAssembly()\n  nameWithType: Assembly.GetEntryAssembly()\n  fullName: System.Reflection.Assembly.GetEntryAssembly()\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Assembly.GetExecutingAssembly\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetExecutingAssembly()\n  nameWithType: Assembly.GetExecutingAssembly()\n  fullName: System.Reflection.Assembly.GetExecutingAssembly()\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Assembly.GetExportedTypes\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetExportedTypes()\n  nameWithType: Assembly.GetExportedTypes()\n  fullName: System.Reflection.Assembly.GetExportedTypes()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Assembly.GetFile(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetFile(String)\n  nameWithType: Assembly.GetFile(String)\n  fullName: System.Reflection.Assembly.GetFile(String)\n- uid: System.IO.FileStream\n  parent: System.IO\n  isExternal: false\n  name: FileStream\n  nameWithType: FileStream\n  fullName: System.IO.FileStream\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.GetFiles\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetFiles()\n  nameWithType: Assembly.GetFiles()\n  fullName: System.Reflection.Assembly.GetFiles()\n- uid: System.IO.FileStream\n  parent: System.IO\n  isExternal: false\n  name: FileStream\n  nameWithType: FileStream\n  fullName: System.IO.FileStream[]\n- uid: System.Reflection.Assembly.GetFiles(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetFiles(Boolean)\n  nameWithType: Assembly.GetFiles(Boolean)\n  fullName: System.Reflection.Assembly.GetFiles(Boolean)\n- uid: System.IO.FileStream\n  parent: System.IO\n  isExternal: false\n  name: FileStream\n  nameWithType: FileStream\n  fullName: System.IO.FileStream[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.GetHashCode\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Assembly.GetHashCode()\n  fullName: System.Reflection.Assembly.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Assembly.GetLoadedModules\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetLoadedModules()\n  nameWithType: Assembly.GetLoadedModules()\n  fullName: System.Reflection.Assembly.GetLoadedModules()\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module[]\n- uid: System.Reflection.Assembly.GetLoadedModules(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetLoadedModules(Boolean)\n  nameWithType: Assembly.GetLoadedModules(Boolean)\n  fullName: System.Reflection.Assembly.GetLoadedModules(Boolean)\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.GetManifestResourceInfo(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetManifestResourceInfo(String)\n  nameWithType: Assembly.GetManifestResourceInfo(String)\n  fullName: System.Reflection.Assembly.GetManifestResourceInfo(String)\n- uid: System.Reflection.ManifestResourceInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ManifestResourceInfo\n  nameWithType: ManifestResourceInfo\n  fullName: System.Reflection.ManifestResourceInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.GetManifestResourceNames\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetManifestResourceNames()\n  nameWithType: Assembly.GetManifestResourceNames()\n  fullName: System.Reflection.Assembly.GetManifestResourceNames()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.Reflection.Assembly.GetManifestResourceStream(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetManifestResourceStream(String)\n  nameWithType: Assembly.GetManifestResourceStream(String)\n  fullName: System.Reflection.Assembly.GetManifestResourceStream(String)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetManifestResourceStream(Type,String)\n  nameWithType: Assembly.GetManifestResourceStream(Type,String)\n  fullName: System.Reflection.Assembly.GetManifestResourceStream(Type,String)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.GetModule(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetModule(String)\n  nameWithType: Assembly.GetModule(String)\n  fullName: System.Reflection.Assembly.GetModule(String)\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.GetModules\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetModules()\n  nameWithType: Assembly.GetModules()\n  fullName: System.Reflection.Assembly.GetModules()\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module[]\n- uid: System.Reflection.Assembly.GetModules(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetModules(Boolean)\n  nameWithType: Assembly.GetModules(Boolean)\n  fullName: System.Reflection.Assembly.GetModules(Boolean)\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.GetName\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetName()\n  nameWithType: Assembly.GetName()\n  fullName: System.Reflection.Assembly.GetName()\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Assembly.GetName(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetName(Boolean)\n  nameWithType: Assembly.GetName(Boolean)\n  fullName: System.Reflection.Assembly.GetName(Boolean)\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: Assembly.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Reflection.Assembly.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Reflection.Assembly.GetReferencedAssemblies\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetReferencedAssemblies()\n  nameWithType: Assembly.GetReferencedAssemblies()\n  fullName: System.Reflection.Assembly.GetReferencedAssemblies()\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName[]\n- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetSatelliteAssembly(CultureInfo)\n  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo)\n  fullName: System.Reflection.Assembly.GetSatelliteAssembly(CultureInfo)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetSatelliteAssembly(CultureInfo,Version)\n  nameWithType: Assembly.GetSatelliteAssembly(CultureInfo,Version)\n  fullName: System.Reflection.Assembly.GetSatelliteAssembly(CultureInfo,Version)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Reflection.Assembly.GetType(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetType(String)\n  nameWithType: Assembly.GetType(String)\n  fullName: System.Reflection.Assembly.GetType(String)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetType(String,Boolean)\n  nameWithType: Assembly.GetType(String,Boolean)\n  fullName: System.Reflection.Assembly.GetType(String,Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetType(String,Boolean,Boolean)\n  nameWithType: Assembly.GetType(String,Boolean,Boolean)\n  fullName: System.Reflection.Assembly.GetType(String,Boolean,Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.GetTypes\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetTypes()\n  nameWithType: Assembly.GetTypes()\n  fullName: System.Reflection.Assembly.GetTypes()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Assembly.GlobalAssemblyCache\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GlobalAssemblyCache\n  nameWithType: Assembly.GlobalAssemblyCache\n  fullName: System.Reflection.Assembly.GlobalAssemblyCache\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.HostContext\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: HostContext\n  nameWithType: Assembly.HostContext\n  fullName: System.Reflection.Assembly.HostContext\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Reflection.Assembly.ImageRuntimeVersion\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ImageRuntimeVersion\n  nameWithType: Assembly.ImageRuntimeVersion\n  fullName: System.Reflection.Assembly.ImageRuntimeVersion\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: IsDefined(Type,Boolean)\n  nameWithType: Assembly.IsDefined(Type,Boolean)\n  fullName: System.Reflection.Assembly.IsDefined(Type,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.IsDynamic\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: IsDynamic\n  nameWithType: Assembly.IsDynamic\n  fullName: System.Reflection.Assembly.IsDynamic\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.IsFullyTrusted\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: IsFullyTrusted\n  nameWithType: Assembly.IsFullyTrusted\n  fullName: System.Reflection.Assembly.IsFullyTrusted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.Load(System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(Byte[])\n  nameWithType: Assembly.Load(Byte[])\n  fullName: System.Reflection.Assembly.Load(Byte[])\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(AssemblyName)\n  nameWithType: Assembly.Load(AssemblyName)\n  fullName: System.Reflection.Assembly.Load(AssemblyName)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Assembly.Load(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(String)\n  nameWithType: Assembly.Load(String)\n  fullName: System.Reflection.Assembly.Load(String)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(Byte[],Byte[])\n  nameWithType: Assembly.Load(Byte[],Byte[])\n  fullName: System.Reflection.Assembly.Load(Byte[],Byte[])\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(AssemblyName,Evidence)\n  nameWithType: Assembly.Load(AssemblyName,Evidence)\n  fullName: System.Reflection.Assembly.Load(AssemblyName,Evidence)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(String,Evidence)\n  nameWithType: Assembly.Load(String,Evidence)\n  fullName: System.Reflection.Assembly.Load(String,Evidence)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(Byte[],Byte[],Evidence)\n  nameWithType: Assembly.Load(Byte[],Byte[],Evidence)\n  fullName: System.Reflection.Assembly.Load(Byte[],Byte[],Evidence)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(Byte[],Byte[],SecurityContextSource)\n  nameWithType: Assembly.Load(Byte[],Byte[],SecurityContextSource)\n  fullName: System.Reflection.Assembly.Load(Byte[],Byte[],SecurityContextSource)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.SecurityContextSource\n  parent: System.Security\n  isExternal: false\n  name: SecurityContextSource\n  nameWithType: SecurityContextSource\n  fullName: System.Security.SecurityContextSource\n- uid: System.Reflection.Assembly.LoadFile(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFile(String)\n  nameWithType: Assembly.LoadFile(String)\n  fullName: System.Reflection.Assembly.LoadFile(String)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFile(String,Evidence)\n  nameWithType: Assembly.LoadFile(String,Evidence)\n  fullName: System.Reflection.Assembly.LoadFile(String,Evidence)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Reflection.Assembly.LoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFrom(String)\n  nameWithType: Assembly.LoadFrom(String)\n  fullName: System.Reflection.Assembly.LoadFrom(String)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFrom(String,Evidence)\n  nameWithType: Assembly.LoadFrom(String,Evidence)\n  fullName: System.Reflection.Assembly.LoadFrom(String,Evidence)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFrom(String,Byte[],AssemblyHashAlgorithm)\n  nameWithType: Assembly.LoadFrom(String,Byte[],AssemblyHashAlgorithm)\n  fullName: System.Reflection.Assembly.LoadFrom(String,Byte[],AssemblyHashAlgorithm)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)\n  nameWithType: Assembly.LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)\n  fullName: System.Reflection.Assembly.LoadFrom(String,Evidence,Byte[],AssemblyHashAlgorithm)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadModule(String,Byte[])\n  nameWithType: Assembly.LoadModule(String,Byte[])\n  fullName: System.Reflection.Assembly.LoadModule(String,Byte[])\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadModule(String,Byte[],Byte[])\n  nameWithType: Assembly.LoadModule(String,Byte[],Byte[])\n  fullName: System.Reflection.Assembly.LoadModule(String,Byte[],Byte[])\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.Assembly.LoadWithPartialName(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadWithPartialName(String)\n  nameWithType: Assembly.LoadWithPartialName(String)\n  fullName: System.Reflection.Assembly.LoadWithPartialName(String)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadWithPartialName(String,Evidence)\n  nameWithType: Assembly.LoadWithPartialName(String,Evidence)\n  fullName: System.Reflection.Assembly.LoadWithPartialName(String,Evidence)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Reflection.Assembly.Location\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Location\n  nameWithType: Assembly.Location\n  fullName: System.Reflection.Assembly.Location\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.ManifestModule\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ManifestModule\n  nameWithType: Assembly.ManifestModule\n  fullName: System.Reflection.Assembly.ManifestModule\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Assembly.ModuleResolve\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ModuleResolve\n  nameWithType: Assembly.ModuleResolve\n  fullName: System.Reflection.Assembly.ModuleResolve\n- uid: System.Reflection.ModuleResolveEventHandler\n  parent: System.Reflection\n  isExternal: false\n  name: ModuleResolveEventHandler\n  nameWithType: ModuleResolveEventHandler\n  fullName: System.Reflection.ModuleResolveEventHandler\n- uid: System.Reflection.Assembly.Modules\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Modules\n  nameWithType: Assembly.Modules\n  fullName: System.Reflection.Assembly.Modules\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Module}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Module>\n  nameWithType: IEnumerable<Module>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Module>\n- uid: System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: op_Equality(Assembly,Assembly)\n  nameWithType: Assembly.op_Equality(Assembly,Assembly)\n  fullName: System.Reflection.Assembly.op_Equality(Assembly,Assembly)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: op_Inequality(Assembly,Assembly)\n  nameWithType: Assembly.op_Inequality(Assembly,Assembly)\n  fullName: System.Reflection.Assembly.op_Inequality(Assembly,Assembly)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Assembly.PermissionSet\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: PermissionSet\n  nameWithType: Assembly.PermissionSet\n  fullName: System.Reflection.Assembly.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Reflection.Assembly.ReflectionOnly\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ReflectionOnly\n  nameWithType: Assembly.ReflectionOnly\n  fullName: System.Reflection.Assembly.ReflectionOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ReflectionOnlyLoad(Byte[])\n  nameWithType: Assembly.ReflectionOnlyLoad(Byte[])\n  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(Byte[])\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ReflectionOnlyLoad(String)\n  nameWithType: Assembly.ReflectionOnlyLoad(String)\n  fullName: System.Reflection.Assembly.ReflectionOnlyLoad(String)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ReflectionOnlyLoadFrom(String)\n  nameWithType: Assembly.ReflectionOnlyLoadFrom(String)\n  fullName: System.Reflection.Assembly.ReflectionOnlyLoadFrom(String)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.SecurityRuleSet\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: SecurityRuleSet\n  nameWithType: Assembly.SecurityRuleSet\n  fullName: System.Reflection.Assembly.SecurityRuleSet\n- uid: System.Security.SecurityRuleSet\n  parent: System.Security\n  isExternal: false\n  name: SecurityRuleSet\n  nameWithType: SecurityRuleSet\n  fullName: System.Security.SecurityRuleSet\n- uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: System.Runtime.InteropServices._Assembly.GetType()\n  nameWithType: Assembly.System.Runtime.InteropServices._Assembly.GetType()\n  fullName: System.Reflection.Assembly.System.Runtime.InteropServices._Assembly.GetType()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Assembly.ToString\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ToString()\n  nameWithType: Assembly.ToString()\n  fullName: System.Reflection.Assembly.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: UnsafeLoadFrom(String)\n  nameWithType: Assembly.UnsafeLoadFrom(String)\n  fullName: System.Reflection.Assembly.UnsafeLoadFrom(String)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Assembly.CreateInstance*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.GetCustomAttributes*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.GetFiles*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.GetLoadedModules*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.GetManifestResourceStream*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.GetModules*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.GetName*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.GetSatelliteAssembly*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.GetType*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.Load*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.LoadFile*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.LoadFrom*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.LoadModule*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.LoadWithPartialName*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n- uid: System.Reflection.Assembly.ReflectionOnlyLoad*\n  parent: System.Reflection.Assembly\n  isExternal: false\n  nameWithType: Assembly.\n"}